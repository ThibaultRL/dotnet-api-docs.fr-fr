<Type Name="OdbcDataReader" FullName="System.Data.Odbc.OdbcDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6b3ea52f6abacd488cbf8b66e3ecf78684879e2" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65003924" /></Metadata><TypeSignature Language="C#" Value="public sealed class OdbcDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OdbcDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Fournit un moyen de lire un flux avant uniquement de lignes de données à partir d’une source de données. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour créer un <xref:System.Data.Odbc.OdbcDataReader>, vous devez appeler la <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> méthode de la <xref:System.Data.Odbc.OdbcCommand> objet, au lieu d’utiliser directement un constructeur.  
  
 Alors que le <xref:System.Data.Odbc.OdbcDataReader> est utilisé, associé <xref:System.Data.Odbc.OdbcConnection> est occupé à servir le <xref:System.Data.Odbc.OdbcDataReader>, et aucune autre opération ne peut être effectuée sur la <xref:System.Data.Odbc.OdbcConnection> autre que sa fermeture. C’est le cas jusqu'à ce que le <xref:System.Data.Odbc.OdbcDataReader.Close%2A> méthode de la <xref:System.Data.Odbc.OdbcDataReader> est appelée. Par exemple, vous ne peut pas récupérer les paramètres de sortie jusqu'à une fois que vous appelez <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.  
  
 Modifications apportées à un jeu de résultats par un autre processus ou thread pendant la lecture des données peuvent être visibles par l’utilisateur de la <xref:System.Data.Odbc.OdbcDataReader>. Toutefois, le comportement précis est que le pilote et minutage dépendant.  
  
 <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> et <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> sont les seules propriétés que vous pouvez appeler après la <xref:System.Data.Odbc.OdbcDataReader> est fermé. Parfois, vous devez appeler <xref:System.Data.Odbc.OdbcDataReader.Close%2A> avant de pouvoir appeler <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.Odbc.OdbcConnection>, un <xref:System.Data.Odbc.OdbcCommand>et un <xref:System.Data.Odbc.OdbcDataReader>. L’exemple lit les données, en écrivant dans la console. Enfin, l’exemple ferme le <xref:System.Data.Odbc.OdbcDataReader>, puis le <xref:System.Data.Odbc.OdbcConnection>.  
  
 [!code-csharp[Classic WebData OdbcDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="odbcDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme l'objet <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez appeler explicitement la <xref:System.Data.Odbc.OdbcDataReader.Close%2A> méthode lorsque vous avez terminé à l’aide de la <xref:System.Data.Odbc.OdbcDataReader> à utiliser associé <xref:System.Data.Odbc.OdbcConnection> à d’autres fins.  
  
> [!CAUTION]
>  N’appelez pas `Close` ou `Dispose` sur une connexion, un DataReader ou tout autre objet managé dans le `Finalize` méthode de votre classe. Dans un finaliseur, vous devez libérer uniquement les ressources non managées que votre classe possède directement. Si votre classe ne possède pas de ressource non managée, n'incluez pas une méthode `Finalize` dans la définition de classe. Pour plus d’informations, consultez [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.Odbc.OdbcConnection>, un <xref:System.Data.Odbc.OdbcCommand>et un <xref:System.Data.Odbc.OdbcDataReader>. L’exemple lit les données, en écrivant dans la console. Enfin, l’exemple ferme le <xref:System.Data.Odbc.OdbcDataReader>, puis le <xref:System.Data.Odbc.OdbcConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique la profondeur d’imbrication de la ligne actuelle.</summary>
        <value>Profondeur d'imbrication de la ligne actuelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La profondeur de la table située le plus à l'extérieur est zéro.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="odbcDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de colonnes figurant dans la ligne actuelle.</summary>
        <value>Absence de positionnement dans un jeu d’enregistrements valid, 0 ; Sinon, le nombre de colonnes dans l’enregistrement actif. La valeur par défaut est -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inclut des champs masqués. Utilisez <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> pour exclure les champs masqués.  
  
 Une fois que vous exécutez une requête qui ne retourne pas de lignes, <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A> retourne 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Il n’existe aucune connexion active à une source de données.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OdbcDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OdbcDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="odbcDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permet à l’objet tenter de libérer des ressources et effectuer d’autres opérations de nettoyage avant qu’il ne soit récupéré par le garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="odbcDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une valeur Boolean.</summary>
        <returns>Valeur booléenne qui est la valeur de la colonne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas prise en charge l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="odbcDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</summary>
        <returns>La valeur de la colonne spécifiée sous forme d’octet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="odbcDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <param name="dataIndex">Index figurant dans le champ où l’opération de lecture doit commencer.</param>
        <param name="buffer">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
        <param name="bufferIndex">L’index dans le <paramref name="buffer" /> dans laquelle l’opération d’écriture doit commencer.</param>
        <param name="length">Nombre d'octets à lire.</param>
        <summary>Lit un flux d’octets à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau, en commençant à l’offset de mémoire tampon spécifique.</summary>
        <returns>Nombre réel d'octets lus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> Retourne le nombre d’octets disponibles dans le champ. La plupart du temps il s’agit de la longueur exacte du champ. Toutefois, le nombre retourné peut être inférieure à la longueur réelle du champ si <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> a déjà été utilisé pour obtenir des octets à partir du champ. Cela peut être le cas, par exemple, si le <xref:System.Data.Odbc.OdbcDataReader> lit une structure de données volumineux dans une mémoire tampon. Pour plus d’informations, consultez le `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.  
  
 Si vous passez une mémoire tampon qui est une valeur null, <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> retourne la longueur du champ en octets.  
  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas prise en charge l’appel de méthode échoue.  
  
> [!NOTE]
>  Aucune exception n’est levée si la valeur de `bufferIndex` est en dehors du tableau. Aucune donnée ne sera lue et la méthode retourne 0.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="odbcDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un caractère.</summary>
        <returns>La valeur de la colonne spécifiée comme un caractère.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="odbcDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <param name="dataIndex">Index de la ligne dans laquelle l’opération de lecture doit commencer.</param>
        <param name="buffer">La mémoire tampon dans lequel copier les données.</param>
        <param name="bufferIndex">L’index dans le <paramref name="buffer" /> dans laquelle l’opération d’écriture doit commencer.</param>
        <param name="length">Nombre de caractères à lire.</param>
        <summary>Lit un flux de caractères à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau, en commençant à l’offset de mémoire tampon spécifique.</summary>
        <returns>Nombre réel de caractères lus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> Retourne le nombre de caractères disponibles dans le champ. La plupart du temps il s’agit de la longueur exacte du champ. Toutefois, le nombre retourné peut être inférieure à la longueur réelle du champ si <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> a déjà été utilisé pour obtenir des caractères à partir du champ. Cela peut être le cas, par exemple, si le <xref:System.Data.Odbc.OdbcDataReader> lit une structure de données volumineux dans une mémoire tampon. Pour plus d’informations, consultez le `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.  
  
 Si vous passez une mémoire tampon qui est une valeur null, <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> retourne la longueur du champ en caractères.  
  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas prise en charge l’appel de méthode échoue.  
  
> [!NOTE]
>  Aucune exception n’est levée si la valeur de `bufferIndex` est en dehors du tableau. Aucune donnée ne sera lue et la méthode retourne 0.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="odbcDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Retourne un <see cref="T:System.Data.IDataReader" /> pour le numéro de colonne spécifié.</summary>
        <returns>Le <see cref="T:System.Data.IDataReader" /> du numéro de colonne spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="odbcDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient le nom du type de données source.</summary>
        <returns>Le nom du type de données source.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public DateTime GetDate (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDate(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDate (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDate(int i);" />
      <MemberSignature Language="F#" Value="member this.GetDate : int -&gt; DateTime" Usage="odbcDataReader.GetDate i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
        <returns>La valeur de la colonne spécifiée comme un <see cref="T:System.DateTime" /> objet.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="odbcDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
        <returns>La valeur de la colonne spécifiée comme un <see cref="T:System.DateTime" /> objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas prise en charge l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="odbcDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.Decimal" />.</summary>
        <returns>La valeur de la colonne spécifiée comme un <see cref="T:System.Decimal" /> objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas prise en charge l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 <xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> a une précision maximale de 28. Tentative de récupération des données décimales avec une plus grande précision provoquera une exception. Une solution consisterait à modifier la requête pour effectuer un cast du type décimal en un type de données plus petits ou convertir en chaîne ou binaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="odbcDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante double précision.</summary>
        <returns>La valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante double précision.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="odbcDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien que vous pouvez utiliser cette méthode pour récupérer un énumérateur explicite, dans les langages qui prennent en charge un `foreach` construction, il est plus simple d’utiliser la construction de boucle directement pour effectuer une itération dans les lignes dans le lecteur de données.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="odbcDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient le <see cref="T:System.Type" /> qui est le type de données de l’objet.</summary>
        <returns>Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="odbcDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante simple précision.</summary>
        <returns>La valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante simple précision.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas prise en charge l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="odbcDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un identificateur global unique (GUID).</summary>
        <returns>La valeur de la colonne spécifiée en tant que GUID.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="odbcDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 16 bits.</summary>
        <returns>La valeur de la colonne spécifiée comme un entier signé 16 bits.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="odbcDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</summary>
        <returns>Valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="odbcDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
        <returns>Valeur de la colonne spécifiée sous la forme d’un entier signé 64 bits.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="odbcDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient le nom de la colonne spécifiée.</summary>
        <returns>Chaîne qui est le nom de la colonne spécifiée.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="odbcDataReader.GetOrdinal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nom de la colonne.</param>
        <summary>Obtient la colonne ordinal, étant donné le nom de la colonne.</summary>
        <returns>Numéro de colonne de base zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> effectue d’abord une recherche qui respecte la casse. En cas d’échec, un deuxième non-respect de la casse est recherché. La méthode lève un `IndexOutOfRange` exception si le numéro de colonne de base zéro est introuvable.  
  
 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> est la largeur des caractères kana, non-respect de.  
  
 Étant donné que les recherches basées sur un ordinal sont plus efficaces que les recherches par nom, il est inutile d’appeler <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> dans une boucle. Au lieu de cela, appelez <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> une seule fois et puis affecter les résultats à une variable entière à utilisent dans la boucle.  
  
   
  
## Examples  
 L'exemple suivant décrit comment utiliser la méthode <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>.  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="odbcDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
        <returns><see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A> méthode retourne les métadonnées de chaque colonne dans l’ordre suivant :  
  
|Colonne de DataReader|Description|  
|-----------------------|-----------------|  
|Nom de colonne|Le nom de la colonne ; Cela est peut-être pas unique. Si le nom de colonne ne peut pas être déterminé, une valeur null est retournée. Ce nom reflète toujours le plus récent d’affectation de noms de la colonne dans le texte de commande ou de la vue actuelle.|  
|ColumnOrdinal|Numéro en base zéro de la colonne. Cette colonne ne peut pas contenir une valeur null.|  
|ColumnSize|La longueur maximale possible d’une valeur dans la colonne. Pour les colonnes qui utilisent un type de données de longueur fixe, il s’agit de la taille du type de données.|  
|NumericPrecision|Si <xref:System.Data.DbType> est un type de données numérique, il s’agit la précision maximale de la colonne. La précision dépend de la définition de la colonne. Si <xref:System.Data.DbType> n’est pas des données numériques tapez, n’utilisez pas les données dans cette colonne. Si le pilote ODBC sous-jacent retourne une valeur de précision pour un type de données non numériques, cette valeur est utilisée dans la table du schéma.|  
|NumericScale|Si <xref:System.Data.DbType> est <xref:System.Data.DbType.Decimal>, le nombre de chiffres à droite de la virgule décimale. Sinon, il s’agit d’une valeur null. Si le pilote ODBC sous-jacent retourne une valeur de précision pour un type de données non numériques, cette valeur est utilisée dans la table du schéma.|  
|Type de données|Est mappé au type common language runtime de <xref:System.Data.DbType>.|  
|ProviderType|Le type de pilote sous-jacent.|  
|IsLong|`true` Si la colonne contient un Long objet BLOB (Binary) qui contient des données très longues. La définition de données très longues est spécifique au pilote.|  
|AllowDBNull|`true` Si le consommateur peut définir la colonne à une valeur null ou si le pilote ne peut pas déterminer si le consommateur peut définir la colonne à une valeur null. Sinon, `false`. Une colonne peut contenir des valeurs null, même si elle ne peut pas être définie sur une valeur null.|  
|IsReadOnly|`true` Si la colonne ne peut pas être modifiée ; sinon `false`.|  
|IsRowVersion|Définit si la colonne contient un identificateur de ligne persistant qui ne peut pas être écrits sur et n’a aucune valeur significative, excepté pour identifier la ligne.|  
|IsUnique|`true`: Aucun deux lignes dans la table de base (la table ne retournée dans BaseTableName) peuvent avoir la même valeur dans cette colonne. IsUnique est garanti être `true` si la colonne représente une clé en soi ou s’il existe une contrainte de type UNIQUE qui s’applique uniquement à cette colonne.<br /><br /> `false`: La colonne peut contenir des valeurs dupliquées dans la table de base. La valeur par défaut pour cette colonne est `false`.|  
|IsKey|`true`: La colonne fait partie d’un ensemble de colonnes dans l’ensemble de lignes qui, ensemble, identifient la ligne. La valeur est l’ensemble de colonnes avec IsKey `true` doit identifier de manière unique une ligne dans l’ensemble de lignes. Il n’existe aucune exigence que cet ensemble de colonnes est un ensemble minimal de colonnes. Cet ensemble de colonnes peut-être être généré à partir d’une clé primaire de table de base, une contrainte unique ou un index unique.<br /><br /> `false`: La colonne n’est pas nécessaire pour identifier la ligne.|  
|IsAutoIncrement|`true` Si la colonne assigne des valeurs aux nouvelles lignes selon des incréments fixes ; sinon `false`. La valeur par défaut pour cette colonne est `false`.|  
|BaseSchemaName|Le nom du schéma dans la source de données qui contient la colonne. NULL si le nom du catalogue de base ne peut pas être déterminé. La valeur par défaut pour cette colonne est une valeur null.|  
|BaseCatalogName|Le nom du catalogue dans le magasin de données qui contient la colonne. NULL si le nom du catalogue de base ne peut pas être déterminé. La valeur par défaut pour cette colonne est une valeur null.|  
|BaseTableName|Le nom de la table ou vue dans le magasin de données qui contient la colonne. Une valeur null si le nom de la table de base ne peut pas être déterminé. La valeur par défaut de cette colonne est une valeur null.|  
|BaseColumnName|Le nom de la colonne dans le magasin de données. Cela peut être différent du nom de colonne retourné dans la colonne ColumnName si un alias a été utilisé. Une valeur null si le nom de colonne de base ne peut pas être déterminé ou si la colonne de l’ensemble de lignes est dérivée, mais pas identique à, une colonne dans les données de stocker. La valeur par défaut pour cette colonne est une valeur null.|  
  
 Une ligne est retournée pour chaque colonne dans le jeu de résultats.  
  
 Le fournisseur de données .NET Framework pour ODBC suppose que les informations de métadonnées soient disponibles à partir d’un pilote ODBC après une des **SQLPrepare**, **SQLExecute**, ou **SQLExecuteDirect**fonctions sont appelées. Pour « SchemaOnly » la commande fonctionne correctement, **SQLPrepare** doit retourner les informations de métadonnées requis. Pas tous les pilotes ODBC prennent en charge cette fonction ou retournent des informations de métadonnées. Dans ce cas, tout ou partie des informations de SchemaTable seront manquantes. Après avoir appelé **SQLPrepare**, le fournisseur de données appelle ODBC **SQLColAttribute** pour trouver les informations de métadonnées relatives à chaque colonne dans les résultats de requête (par exemple, IsLong, IsUnique, (fonction) AllowDBNull, BaseTableName, BaseColumnName). Si le pilote sous-jacent ne retourne pas certaines de ces informations, il se peut que les valeurs correspondantes dans SchemaTable ne seront pas définies correctement.  
  
 Le fournisseur de données .NET Framework pour ODBC appelle également **SQLPrimaryKeys** pour récupérer les informations de clé pour chaque table. Si le pilote ODBC sous-jacent ne prend pas en charge cette fonction, le fournisseur de données appelle **SQLStatistics** et choisit un de l’index uniques comme clé primaire pour la table. Cela peut donner pas toujours les résultats que vous souhaitez.  
  
 <xref:System.Data.Odbc.OdbcCommandBuilder> requiert l’identification correcte des clés primaires de la table afin de fonctionner correctement. Si BaseTableName n’est pas retourné pour chaque colonne dans les résultats de requête, le fournisseur de données .NET Framework pour ODBC tente d’analyser l’instruction SQL pour rechercher les noms de table impliquée dans la requête. Cela fonctionne avec UPDATE, INSERT, DELETE et des instructions SELECT simples, mais pas avec les procédures stockées ou des instructions SELECT reposant sur les jointures. Si tout ou partie des informations de schéma sont manquantes dans ce tableau, le <xref:System.Data.Odbc.OdbcCommandBuilder> ne fonctionnera pas correctement, car il a des informations de schéma suffisantes pour générer automatiquement les instructions INSERT, UPDATE ou DELETE correctes.  
  
 Pour vous assurer que les colonnes de métadonnées retournent les informations correctes, vous devez appeler <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> avec le paramètre de comportement défini sur KeyInfo. Sinon, certaines colonnes dans la table du schéma peuvent retourner des données par défaut, null ou incorrectes.  
  
 Lorsque vous utilisez.NET pour Oracle via le pilote ODBC, les colonnes clés d’un alias ne sont pas reconnus en tant que clés. Cela affecte les colonnes IsKey et IsUnique dans la table du schéma de l’OdbcDataReader. Elle affecte également l’OdbcCommandBuilder pour générer la logique de mise à jour. Envisagez d’utiliser ne pas un alias pour une colonne clé primaire.  
  
> [!NOTE]
>  Le pilote Microsoft Jet ODBC retourne toujours l’index unique et des colonnes de clé primaire comme nullable qu’il s’agisse nullables ou non. Le pilote ne retourne pas les informations de clé primaire ; elle renvoie uniquement une liste d’index uniques et leurs colonnes, notamment les colonnes clés primaires, sans les différencier.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.Odbc.OdbcDataReader" /> est fermé.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="odbcDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée comme un <see cref="T:System.String" />.</summary>
        <returns>Valeur de la colonne spécifiée en tant que <see cref="T:System.String" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conversions sont effectuées en fonction des capacités du pilote ODBC sous-jacent. Si la conversion n’est pas pris en charge, l’appel de méthode échoue.  
  
 Appelez <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTime (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTime(int i);" />
      <MemberSignature Language="F#" Value="member this.GetTime : int -&gt; TimeSpan" Usage="odbcDataReader.GetTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.TimeSpan" />.</summary>
        <returns>La valeur de la colonne spécifiée comme un <see cref="T:System.TimeSpan" /> objet.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="odbcDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne au numéro spécifié dans son format natif.</summary>
        <returns>La valeur de retour.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne <xref:System.DBNull> pour les colonnes de la base de données null.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="odbcDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Tableau de type <see cref="T:System.Object" /> dans lequel copier les colonnes d’attributs.</param>
        <summary>Remplit un tableau d’objets avec les valeurs de colonne de la ligne actuelle.</summary>
        <returns>Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la plupart des applications, le <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A> méthode fournit un moyen efficace pour récupérer toutes les colonnes, au lieu de récupérer chaque colonne individuellement.  
  
 Vous pouvez passer un <xref:System.Object> tableau qui contient un nombre inférieur au nombre de colonnes qui sont contenues dans la ligne obtenue. Uniquement la quantité de données le <xref:System.Object> tableau sont copiées dans le tableau. Vous pouvez également passer un <xref:System.Object> tableau dont la longueur est supérieure au nombre de colonnes qui figurent dans la ligne obtenue.  
  
 Cette méthode retourne <xref:System.DBNull> pour les colonnes de la base de données null.  
  
   
  
## Examples  
 [!code-csharp[OdbcDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/odbcdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OdbcDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/odbcdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.Odbc.OdbcDataReader" /> contient une ou plusieurs lignes.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Data.Odbc.OdbcDataReader" /> contient une ou plusieurs lignes ; sinon <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si le <see cref="T:System.Data.Odbc.OdbcDataReader" /> est fermé.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Data.Odbc.OdbcDataReader" /> est fermé ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> et <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> sont les seules propriétés que vous pouvez appeler après la <xref:System.Data.Odbc.OdbcDataReader> est fermé.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="odbcDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne de base zéro.</param>
        <summary>Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
        <returns><see langword="true" /> Si la valeur de colonne spécifiée équivaut à <see cref="T:System.DBNull" />; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour éviter de déclencher une erreur, appelez cette méthode pour rechercher les valeurs de colonne null avant d’appeler typée des méthodes Get (par exemple, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>, et ainsi de suite).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la valeur d’une colonne dans son format natif.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Numéro de colonne.</param>
        <summary>Obtient la valeur de la colonne spécifiée dans son format natif en fonction de l’ordinal de colonne.</summary>
        <value>La valeur de la colonne spécifiée dans son format natif.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string value] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nom de la colonne.</param>
        <summary>Obtient la valeur de la colonne spécifiée dans son format natif en fonction du nom de colonne.</summary>
        <value>La valeur de la colonne spécifiée dans son format natif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une recherche respectant la casse est effectuée en premier. En cas d’échec, un deuxième non-respect de la casse est recherché.  
  
 Cette méthode est la longueur des caractères kana, non-respect de.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Aucune colonne portant le nom spécifié n’a été trouvée.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="odbcDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avance le <see cref="T:System.Data.Odbc.OdbcDataReader" /> au résultat suivant lors de la lecture des résultats d’instructions SQL par lots.</summary>
        <returns><see langword="true" /> s’il existe des jeux de résultats supplémentaires ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisé pour traiter plusieurs résultats qui peuvent être générés en exécutant des instructions SQL par lots.  
  
 Par défaut, le <xref:System.Data.Odbc.OdbcDataReader> est positionné sur le premier résultat.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="odbcDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fait passer le <see cref="T:System.Data.Odbc.OdbcDataReader" /> à l’enregistrement suivant.</summary>
        <returns><see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La position par défaut de la <xref:System.Data.Odbc.OdbcDataReader> est avant le premier enregistrement. Par conséquent, vous devez appeler <xref:System.Data.Odbc.OdbcDataReader.Read%2A> pour commencer à accéder aux données.  
  
 Bien que le <xref:System.Data.Odbc.OdbcDataReader> est utilisé, associé <xref:System.Data.Odbc.OdbcConnection> est occupé à servir jusqu'à ce que vous appel <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.Odbc.OdbcConnection>, un <xref:System.Data.Odbc.OdbcCommand>et un <xref:System.Data.Odbc.OdbcDataReader>. L’exemple lit les données, en écrivant dans la console. Enfin, l’exemple ferme le <xref:System.Data.Odbc.OdbcDataReader>, puis le <xref:System.Data.Odbc.OdbcConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
        <value>Nombre de lignes modifiées, insérées ou supprimées. -1 pour les instructions SELECT ; 0 si aucune ligne n’a été affectée, ou l’instruction a échoué.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> propriété n’est pas définie tant que toutes les lignes sont lues et que vous fermez le <xref:System.Data.Odbc.OdbcDataReader>.  
  
 La valeur de cette propriété est cumulative. Par exemple, si deux enregistrements sont insérés en mode batch, la valeur de <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> sera 2.  
  
 <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> et <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> sont les seules propriétés que vous pouvez appeler après la <xref:System.Data.Odbc.OdbcDataReader> est fermé.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui itère au sein d’une collection.</summary>
        <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>