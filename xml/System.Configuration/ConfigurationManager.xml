<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d91f92c4b242d7fceeaa2cf58c8cc3acdc85852" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006914" /></Metadata><TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1e4f5-101">Fournit un accès aux fichiers de configuration pour les applications clientes.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-101">Provides access to configuration files for client applications.</span></span> <span data-ttu-id="1e4f5-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-103">Le <xref:System.Configuration.ConfigurationManager> classe vous permet aux accès ordinateur, application et les informations de configuration utilisateur.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="1e4f5-104">Cette classe remplace le <xref:System.Configuration.ConfigurationSettings> (classe), qui est déconseillée.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="1e4f5-105">Pour les applications web, utilisez la <xref:System.Web.Configuration.WebConfigurationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="1e4f5-106">Pour utiliser le <xref:System.Configuration.ConfigurationManager> (classe), votre projet doit référencer le `System.Configuration` assembly.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="1e4f5-107">Par défaut, certains modèles de projet, comme Application de Console, ne référencent pas cet assembly afin de vous devez référencer manuellement.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4f5-108">Le nom et l’emplacement du fichier de configuration d’application dépendent hôte de l’application.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="1e4f5-109">Pour plus d’informations, consultez [NIB : Fichiers de Configuration d’application](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-109">For more information, see [NIB: Application Configuration Files](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="1e4f5-110">Vous pouvez utiliser l’intégrée <xref:System.Configuration> types ou dériver d’eux pour gérer les informations de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="1e4f5-111">À l’aide de ces types, vous pouvez travailler directement avec les informations de configuration, et vous pouvez étendre les fichiers de configuration pour inclure des informations personnalisées.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="1e4f5-112">Le <xref:System.Configuration.ConfigurationManager> classe contient des membres qui vous permettent d’effectuer les tâches suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="1e4f5-113">Lire une section d’un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-113">Read a section from a configuration file.</span></span> <span data-ttu-id="1e4f5-114">Pour accéder aux informations de configuration, appelez le <xref:System.Configuration.ConfigurationManager.GetSection%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="1e4f5-115">Pour certaines sections telles que `appSettings` et `connectionStrings`, utilisez le <xref:System.Configuration.ConfigurationManager.AppSettings%2A> et <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="1e4f5-116">Ces membres effectuer des opérations en lecture seule, utilisez une seule instance de mise en cache de la configuration et sont multithread prenant en charge.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="1e4f5-117">Lire et écrire des fichiers de configuration dans sa globalité.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="1e4f5-118">Votre application peut lire et écrire des paramètres de configuration à tout niveau, pour elle-même ou pour d’autres applications ou les ordinateurs, localement ou à distance.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="1e4f5-119">Utilisez une des méthodes fournies par la <xref:System.Configuration.ConfigurationManager> classe pour ouvrir un fichier de configuration tel que SampleApp.exe.config. Ces méthodes retournent un <xref:System.Configuration.Configuration> objet qui à son tour expose des méthodes et propriétés que vous pouvez utiliser pour travailler avec les fichiers de configuration associée.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="1e4f5-120">Les méthodes effectuer en lecture ou les opérations d’écriture et créent les données de configuration chaque fois qu’un fichier est enregistré.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="1e4f5-121">Prend en charge les tâches de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-121">Support configuration tasks.</span></span> <span data-ttu-id="1e4f5-122">Les types suivants sont utilisés pour prendre en charge diverses tâches de configuration :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="1e4f5-123">Outre les informations de configuration existantes, vous pouvez créer et utiliser des éléments de configuration personnalisée en étendant les types de configuration intégrés tels que le <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, et <xref:System.Configuration.ConfigurationSection> classes.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="1e4f5-124">Pour obtenir un exemple montrant comment étendre un type de configuration intégrée par programme, consultez <xref:System.Configuration.ConfigurationSection>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="1e4f5-125">Pour obtenir un exemple montrant comment étendre un type de configuration intégrée qui utilise le modèle basé sur un attribut, consultez <xref:System.Configuration.ConfigurationElement>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-126">Le premier exemple montre une application console simple qui lit les paramètres de l’application, ajoute un nouveau paramètre et met à jour un paramètre existant.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="1e4f5-127">L’exemple précédent suppose que votre projet a un fichier App.config, comme indiqué ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="1e4f5-128">L’exemple suivant montre comment utiliser une chaîne de connexion pour lire les données à partir d’une base de données.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="1e4f5-129">L’exemple précédent suppose que votre projet possède un fichier App.config, comme indiqué ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1e4f5-130">Le <see cref="T:System.Configuration.Configuration" /> classe permet un accès par programme pour modifier les fichiers de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span></span> <span data-ttu-id="1e4f5-131">Vous utilisez une des méthodes ouvertes fournies par <see cref="T:System.Configuration.ConfigurationManager" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span></span> <span data-ttu-id="1e4f5-132">Ces méthodes retournent un <see cref="T:System.Configuration.Configuration" /> objet, qui à son tour fournit les méthodes et propriétés requises pour gérer les fichiers de configuration sous-jacents.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span></span> <span data-ttu-id="1e4f5-133">Vous pouvez accéder à ces fichiers pour lire ou écrire.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-133">You can access these files for reading or writing.</span></span>  
  
<span data-ttu-id="1e4f5-134">Pour lire les fichiers de configuration, utilisez <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> ou <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> pour lire les informations de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="1e4f5-135">L’utilisateur ou le processus qui lit doit disposer des autorisations suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-135">The user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="1e4f5-136">-Autorisation lecture sur le fichier de configuration au niveau de hiérarchie de configuration actuel.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-136">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="1e4f5-137">-Autorisations de lecture sur tous les fichiers de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-137">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="1e4f5-138">Si votre application a besoin d’un accès en lecture seule à sa propre configuration, nous vous recommandons d’utiliser le <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span> <span data-ttu-id="1e4f5-139">Cette méthode permet d’accéder aux valeurs de configuration mises en cache pour l’application actuelle, qui offre de meilleures performances que la <see cref="T:System.Configuration.Configuration" /> classe.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
<span data-ttu-id="1e4f5-140">Pour écrire dans les fichiers de configuration, utilisez une de la <see cref="Overload:System.Configuration.Configuration.Save" /> méthodes.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span> <span data-ttu-id="1e4f5-141">L’utilisateur ou le processus qui écrit doit disposer des autorisations suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-141">The user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="1e4f5-142">-Autorisation en écriture sur le fichier de configuration et le répertoire au niveau de hiérarchie de configuration actuel.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-142">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="1e4f5-143">-Autorisations de lecture sur tous les fichiers de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-143">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <related type="Article" href="~/docs/framework/configure-apps/index.md"><span data-ttu-id="1e4f5-144">Fichiers de configuration</span><span class="sxs-lookup"><span data-stu-id="1e4f5-144">Configuration Files</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e4f5-145">Obtient les données <see cref="T:System.Configuration.AppSettingsSection" /> pour la configuration par défaut de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-145">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="1e4f5-146">Un <see cref="T:System.Collections.Specialized.NameValueCollection" /> objet qui contient le contenu de la <see cref="T:System.Configuration.AppSettingsSection" /> objet pour la configuration par défaut de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-147">Un <xref:System.Configuration.AppSettingsSection> objet contient le contenu du fichier de configuration `appSettings` section.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-147">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-148">Le premier exemple montre une application console simple qui lit les paramètres de l’application, ajoute un nouveau paramètre et met à jour un paramètre existant.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-148">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="1e4f5-149">L’exemple précédent suppose que votre projet a un fichier App.config, comme indiqué ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-149">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-150">Impossible de récupérer un objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> avec les données de paramètres d’application.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-150">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span></span></exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e4f5-151">Obtient les données <see cref="T:System.Configuration.ConnectionStringsSection" /> pour la configuration par défaut de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-151">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="1e4f5-152">Un <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> objet qui contient le contenu de la <see cref="T:System.Configuration.ConnectionStringsSection" /> objet pour la configuration par défaut de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-153">Un <xref:System.Configuration.ConnectionStringsSection> objet contient le contenu du fichier de configuration `connectionStrings` section.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-153">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-154">L’exemple suivant montre comment utiliser une chaîne de connexion pour lire les données à partir d’une base de données.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-154">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="1e4f5-155">L’exemple précédent suppose que votre projet possède un fichier App.config, comme indiqué ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-155">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-156">Impossible d’extraire un objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-156">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span></span></exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="1e4f5-157">Chemin d'accès et nom de la section de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-157">The configuration section path and name.</span></span> <span data-ttu-id="1e4f5-158">Les noms de nœud sont séparés par des barres obliques inverses, par exemple "system.net/mailSettings/smtp".</span><span class="sxs-lookup"><span data-stu-id="1e4f5-158">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span></span></param>
        <summary><span data-ttu-id="1e4f5-159">Récupère une section de configuration spécifiée pour la configuration par défaut de l'application actuelle.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-159">Retrieves a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-160">Objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié, ou <see langword="null" /> si la section n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-160">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-161">Pour les applications clientes, cette méthode récupère un fichier de configuration obtenu par fusion le fichier de configuration d’application, le fichier de configuration d’utilisateur local et le fichier de configuration itinérant.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-161">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="1e4f5-162">Le <xref:System.Configuration.ConfigurationManager.GetSection%2A> méthode accède aux informations de configuration d’exécution qu’il n’est pas modifiable.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-162">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="1e4f5-163">Pour modifier la configuration, vous utilisez la <xref:System.Configuration.Configuration.GetSection%2A> méthode sur le fichier de configuration que vous obtenez à l’aide d’une des méthodes Open suivantes :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-163">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-164">L'exemple suivant illustre l'utilisation de la méthode <xref:System.Configuration.ConfigurationManager.GetSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-164">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="1e4f5-165">L’exemple fait partie d’un exemple plus complet fourni pour la <xref:System.Configuration.ConfigurationManager> classe.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-165">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-166">Nous n’avons pas pu charger un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-166">A configuration file could not be loaded.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1e4f5-167">Vous devez caster la valeur de retour pour le type de configuration attendu.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-167">You must cast the return value to the expected configuration type.</span></span> <span data-ttu-id="1e4f5-168">Pour éviter toute exception de conversion, vous devez utiliser une opération cast conditionnelle, telles que la <see langword="as" /> opérateur dans C# ou [TryCast](~/docs/visual-basic/language-reference/operators/trycast-operator.md) fonction dans Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-168">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the [TryCast](~/docs/visual-basic/language-reference/operators/trycast-operator.md) function in Visual Basic.</span></span></para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4f5-169">Ouvre le fichier de configuration client spécifié en tant qu’objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel"><span data-ttu-id="1e4f5-170"><see cref="T:System.Configuration.ConfigurationUserLevel" /> pour lequel vous ouvrez la configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-170">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="1e4f5-171">Ouvre le fichier de configuration pour l'application actuelle en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-171">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-172">Objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-172">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-173">Les applications clientes utilisent une configuration globale qui s’applique à tous les utilisateurs, des configurations distinctes qui s’appliquent à des utilisateurs individuels et des configurations qui s’appliquent aux utilisateurs itinérants.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-173">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="1e4f5-174">Le `userLevel` paramètre détermine l’emplacement du fichier de configuration qui est ouvert en indiquant s’il n’a aucun niveau d’utilisateur (le fichier de configuration est dans le même répertoire que l’application) ou a un niveau par utilisateur (le fichier de configuration se trouve dans un paramètres du chemin d’accès application déterminé par le niveau de l’utilisateur).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-174">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="1e4f5-175">Spécifiez les valeurs de configuration à obtenir en passant l’une des opérations suivantes pour `userLevel`:</span><span class="sxs-lookup"><span data-stu-id="1e4f5-175">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="1e4f5-176">Pour obtenir le <xref:System.Configuration.Configuration> jeu d’objets qui s’applique à tous les utilisateurs, `userLevel` à <xref:System.Configuration.ConfigurationUserLevel.None>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-176">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="1e4f5-177">Pour obtenir de l’ordinateur local <xref:System.Configuration.Configuration> jeu d’objets qui s’applique à l’utilisateur actuel, `userLevel` à <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-177">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="1e4f5-178">Pour obtenir de l’itinérance <xref:System.Configuration.Configuration> jeu d’objets qui s’applique à l’utilisateur actuel, `userLevel` à <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-178">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1e4f5-179">Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer des autorisations sur tous les fichiers de configuration à partir de laquelle elle hérite des paramètres de lecture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-179">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="1e4f5-180">Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des autorisations d’écriture pour le fichier de configuration et le répertoire dans lequel il se trouve.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-180">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-181">L'exemple de code suivant montre comment utiliser la méthode <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-181">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-182">Un fichier de configuration n'a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-182">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath"><span data-ttu-id="1e4f5-183">Chemin d'accès du fichier exécutable (exe).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-183">The path of the executable (exe) file.</span></span></param>
        <summary><span data-ttu-id="1e4f5-184">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-184">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-185">Objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-185">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-186">Les applications clientes utilisent une configuration globale qui s’applique à tous les utilisateurs, des configurations distinctes qui s’appliquent à des utilisateurs individuels et des configurations qui s’appliquent aux utilisateurs itinérants.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-186">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="1e4f5-187">Le `userLevel` valeur détermine l’emplacement du fichier de configuration en cours d’ouverture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-187">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="1e4f5-188">Cette propriété indique si elle n’a aucun niveau d’utilisateur (le fichier de configuration est dans le même répertoire que l’application) ou a un niveau par utilisateur (le fichier de configuration est dans un chemin d’accès des paramètres d’application déterminé par le type de niveau utilisateur.).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-188">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="1e4f5-189">Appel de cette surcharge de méthode revient à appeler le <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> surcharge avec le `preLoad` paramètre défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-189">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-190">L'exemple de code suivant montre comment utiliser la méthode <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-190">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-191">Un fichier de configuration n'a pas pu être chargé.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-191">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e4f5-192">Ouvre le fichier de configuration machine sur l'ordinateur actuel en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-192">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-193">Objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-193">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-194">Paramètres de configuration machine s’appliquent à l’ensemble de l’ordinateur et toutes les applications qui y résident, sauf substitution pour l’application locale.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-194">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="1e4f5-195">Paramètres de configuration machine sont lus à partir du fichier Machine.config de la version en cours d’exécution du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-195">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="1e4f5-196">Le fichier Machine.config se trouve dans le sous-répertoire suivant :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-196">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="1e4f5-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="1e4f5-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4f5-198">Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer des autorisations sur tous les fichiers de configuration à partir de laquelle elle hérite des paramètres de lecture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-198">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="1e4f5-199">Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des autorisations d’écriture pour le fichier de configuration et le répertoire dans lequel il se trouve.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-199">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="1e4f5-200">Il n’est pas possible d’accéder au fichier Machine.config pour d’autres versions du .NET Framework qui peuvent être installés sur l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-200">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-201">L’exemple de code suivant montre comment utiliser le <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> méthode pour obtenir toutes les sections qui sont contenues dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-201">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-202">Nous n’avons pas pu charger un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-202">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e4f5-203">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-203">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="1e4f5-204">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> qui référence le fichier de configuration à utiliser au lieu du fichier de configuration de l'application par défaut.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-204">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="1e4f5-205">Objet <see cref="T:System.Configuration.ConfigurationUserLevel" /> pour lequel vous ouvrez la configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-205">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="1e4f5-206">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers et le niveau d'utilisateur spécifiés.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-206">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-207">Objet de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-207">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-208">Le <xref:System.Configuration.ConfigurationUserLevel> objet détermine l’emplacement du fichier de configuration en cours d’ouverture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-208">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="1e4f5-209">Il indique si le fichier ne comporte aucun niveau d’utilisateur (le fichier de configuration est dans le même répertoire que l’application) ou a un niveau par utilisateur (le fichier de configuration est dans un chemin d’accès des paramètres d’application déterminé par `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-209">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4f5-210">Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer des autorisations sur tous les fichiers de configuration à partir de laquelle elle hérite des paramètres de lecture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-210">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="1e4f5-211">Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des autorisations d’écriture pour le fichier de configuration et le répertoire dans lequel il se trouve.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-211">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-212">L’exemple de code suivant montre comment utiliser le <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> méthode pour obtenir toutes les sections contenues dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-212">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-213">Nous n’avons pas pu charger un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-213">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preLoad" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="1e4f5-214">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> qui référence le fichier de configuration à utiliser au lieu du fichier de configuration de l'application par défaut.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-214">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="1e4f5-215">Objet <see cref="T:System.Configuration.ConfigurationUserLevel" /> pour lequel vous ouvrez la configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-215">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <param name="preLoad"><span data-ttu-id="1e4f5-216"><see langword="true" /> pour précharger tous les groupes de sections et toutes les sections ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-216"><see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1e4f5-217">Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers, l'option de préchargement et le niveau d'utilisateur spécifiés.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-217">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-218">Objet de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-218">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-219">Le <xref:System.Configuration.ConfigurationUserLevel> objet détermine l’emplacement du fichier de configuration qui est en cours d’ouverture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-219">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="1e4f5-220">Il indique si le fichier ne comporte aucun niveau d’utilisateur (le fichier de configuration est dans le même répertoire que l’application) ou a un niveau par utilisateur (le fichier de configuration est dans un chemin d’accès de paramètres d’application est déterminée par `userLevel`).</span><span class="sxs-lookup"><span data-stu-id="1e4f5-220">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4f5-221">Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer des autorisations sur tous les fichiers de configuration à partir de laquelle elle hérite des paramètres de lecture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-221">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="1e4f5-222">Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des autorisations d’écriture pour le fichier de configuration et le répertoire dans lequel il se trouve.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-222">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="1e4f5-223">Pour obtenir un exemple de code, consultez le <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-223">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-224">Nous n’avons pas pu charger un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-224">A configuration file could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="1e4f5-225">Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> qui référence le fichier de configuration à utiliser au lieu du fichier de configuration de l'application par défaut.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-225">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <summary><span data-ttu-id="1e4f5-226">Ouvre le fichier de configuration machine en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers spécifié.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-226">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span></span></summary>
        <returns><span data-ttu-id="1e4f5-227">Objet <see cref="T:System.Configuration.Configuration" />.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-227">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-228">Paramètres de configuration machine s’appliquent à l’ensemble de l’ordinateur et toutes les applications qui y résident, sauf substitution pour l’application locale.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-228">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="1e4f5-229">Paramètres de configuration machine sont lus à partir du fichier Machine.config de la version en cours d’exécution du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-229">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="1e4f5-230">Le fichier Machine.config se trouve dans le sous-répertoire suivant :</span><span class="sxs-lookup"><span data-stu-id="1e4f5-230">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="1e4f5-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="1e4f5-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e4f5-232">Pour obtenir le <xref:System.Configuration.Configuration> de l’objet d’une ressource, votre code doit disposer des autorisations sur tous les fichiers de configuration à partir de laquelle elle hérite des paramètres de lecture.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-232">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="1e4f5-233">Pour mettre à jour un fichier de configuration, votre code doit en outre avoir des autorisations d’écriture pour le fichier de configuration et le répertoire dans lequel il se trouve.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-233">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="1e4f5-234">Il n’est pas possible d’accéder au fichier Machine.config pour d’autres versions du .NET Framework qui peuvent être installés sur l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-234">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-235">L’exemple de code suivant montre comment utiliser le <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> méthode pour obtenir toutes les sections dans le fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-235">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="1e4f5-236">Nous n’avons pas pu charger un fichier de configuration.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-236">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="1e4f5-237">Nom de section de configuration ou nom de section et de chemin d'accès de configuration de la section à actualiser.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-237">The configuration section name or the configuration path and section name of the section to refresh.</span></span></param>
        <summary><span data-ttu-id="1e4f5-238">Actualise la section nommée de sorte qu'elle soit relue à partir du disque lors de sa prochaine récupération.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-238">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e4f5-239">Cette méthode invalide le cache pour la section de configuration spécifiée sans affecter les autres sections.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-239">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e4f5-240">L’exemple de code suivant montre comment utiliser le <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> méthode pour actualiser la section de configuration d’application paramètres.</span><span class="sxs-lookup"><span data-stu-id="1e4f5-240">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>