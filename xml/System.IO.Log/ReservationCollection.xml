<Type Name="ReservationCollection" FullName="System.IO.Log.ReservationCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0538791316db2eba28cb8bcfa09bf2da24805dea" /><Meta Name="ms.sourcegitcommit" Value="7845f124909a0999a19cc65f40feab5e75cd9b8d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65064886" /></Metadata><TypeSignature Language="C#" Value="public abstract class ReservationCollection : System.Collections.Generic.ICollection&lt;long&gt;, System.Collections.Generic.IEnumerable&lt;long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReservationCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;int64&gt;, class System.Collections.Generic.IEnumerable`1&lt;int64&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.ReservationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReservationCollection&#xA;Implements ICollection(Of Long), IEnumerable(Of Long)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReservationCollection abstract : System::Collections::Generic::ICollection&lt;long&gt;, System::Collections::Generic::IEnumerable&lt;long&gt;" />
  <TypeSignature Language="F#" Value="type ReservationCollection = class&#xA;    interface ICollection&lt;int64&gt;&#xA;    interface seq&lt;int64&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="86363-101">Gère la collection de réservations d'espace faites dans une séquence d'enregistrement.</span><span class="sxs-lookup"><span data-stu-id="86363-101">Manages the collection of space reservations made in a record sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86363-102">La classe représente un jeu des zones de réservation établies dans une séquence d'enregistrements.</span><span class="sxs-lookup"><span data-stu-id="86363-102">This class represents a set of reservation areas that are made in a record sequence.</span></span> <span data-ttu-id="86363-103">L'ajout d'éléments à la collection alloue de nouvelles réservations.</span><span class="sxs-lookup"><span data-stu-id="86363-103">Adding items to the collection allocates new reservations.</span></span> <span data-ttu-id="86363-104">La suppression d’éléments de la collection libère ces réservations.</span><span class="sxs-lookup"><span data-stu-id="86363-104">Removing items from the collection frees those reservations.</span></span>  
  
 <span data-ttu-id="86363-105">Une application réserve l'espace dans le journal lorsqu'elle possède des données à écrire ultérieurement dans le journal, mais ne peut pas les écrire immédiatement.</span><span class="sxs-lookup"><span data-stu-id="86363-105">An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</span></span> <span data-ttu-id="86363-106">Les réservations offrent la garantie que les données pourront être écrites dans le journal lorsqu'elles seront disponibles pour être écrites.</span><span class="sxs-lookup"><span data-stu-id="86363-106">Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</span></span> <span data-ttu-id="86363-107">Lorsque vous utilisez des journaux, les applications réservent souvent un ou plusieurs enregistrements de journal dans une zone de marshaling.</span><span class="sxs-lookup"><span data-stu-id="86363-107">When using logs, applications often reserve one or more log records in a marshaling area.</span></span> <span data-ttu-id="86363-108">Vous devez réserver des enregistrements avant de les ajouter.</span><span class="sxs-lookup"><span data-stu-id="86363-108">You must reserve records prior to appending them.</span></span>  
  
 <span data-ttu-id="86363-109">Les réservations peuvent être utilisées pour garantir qu’une opération peut être effectuée avant que les données soient validées ; si tel n’est pas le cas, les modifications sont restaurées.</span><span class="sxs-lookup"><span data-stu-id="86363-109">Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</span></span> <span data-ttu-id="86363-110">Elles peuvent servir à enregistrer une « opération d'annulation » dans le journal.</span><span class="sxs-lookup"><span data-stu-id="86363-110">It can also be used to record an "undo action" in the log.</span></span> <span data-ttu-id="86363-111">Pendant une opération de restauration, un gestionnaire de ressources de transaction (RM) doit être capable de restaurer son état en cas d’interruption du RM pendant l’opération de restauration.</span><span class="sxs-lookup"><span data-stu-id="86363-111">During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</span></span> <span data-ttu-id="86363-112">En se servant d'une zone de réservation, un RM peut réserver de l'espace dans un journal avant qu'il soit utilisé.</span><span class="sxs-lookup"><span data-stu-id="86363-112">By using a reservation area, an RM can reserve space in a log before it is used.</span></span>  
  
 <span data-ttu-id="86363-113">La méthode <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> peut réserver l'espace, ajouter des données, ou les deux, suivant les paramètres spécifiés au moment de l'appel.</span><span class="sxs-lookup"><span data-stu-id="86363-113">The <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</span></span> <span data-ttu-id="86363-114">À mesure que le travail progresse dans une transaction, une application peut ajouter les informations d'annulation et réserver l'espace pour les enregistrements de compensation.</span><span class="sxs-lookup"><span data-stu-id="86363-114">As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</span></span> <span data-ttu-id="86363-115">Pendant une opération de restauration, les enregistrements de compensation qui sont créés indiquent ce qui a été annulé sur le disque.</span><span class="sxs-lookup"><span data-stu-id="86363-115">During a rollback operation, compensation records that are created indicate what has been undone on the disk.</span></span> <span data-ttu-id="86363-116">Les enregistrements sont ajoutés à l'aide de l'espace préalablement réservé.</span><span class="sxs-lookup"><span data-stu-id="86363-116">The records are appended using space that has been previously reserved.</span></span> <span data-ttu-id="86363-117">Ce système garantit qu'un RM ne manque pas d'espace de journal, ce qui équivaut à une condition fatale, en cours d'opération de restauration.</span><span class="sxs-lookup"><span data-stu-id="86363-117">This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</span></span> <span data-ttu-id="86363-118">Si un journal se remplit complètement pendant une transaction, une application peut restaurer sans risque une transaction sans endommager de données durables.</span><span class="sxs-lookup"><span data-stu-id="86363-118">If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</span></span>  
  
 <span data-ttu-id="86363-119">CLFS est un système de journalisation de type ARIES, conçu pour la journalisation WAL (write-ahead log).</span><span class="sxs-lookup"><span data-stu-id="86363-119">CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</span></span> <span data-ttu-id="86363-120">Dans la journalisation WAL, une application inscrit une opération d'annulation avant de la réaliser, réservant l'espace qu'elle occupe dans le journal pour inscrire un enregistrement de compensation, qui peut servir lors d'une restauration.</span><span class="sxs-lookup"><span data-stu-id="86363-120">In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</span></span> <span data-ttu-id="86363-121">L'espace réservé est ensuite utilisé lorsque l'enregistrement de compensation est effectivement écrit.</span><span class="sxs-lookup"><span data-stu-id="86363-121">Later, the reserved space is used when the compensation record is actually written.</span></span>  
  
 <span data-ttu-id="86363-122">Les applications peuvent soit réserver, soit accéder à, un espace conséquent à tout moment (ces opérations sont mutuellement exclusives).</span><span class="sxs-lookup"><span data-stu-id="86363-122">Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</span></span> <span data-ttu-id="86363-123">Lorsqu’un enregistrement de validation est écrit dans le journal, une application peut libérer les réservations faites pour les enregistrements de compensation.</span><span class="sxs-lookup"><span data-stu-id="86363-123">After a commit record is written to the log, an application can free up the reservations for the compensation records.</span></span> <span data-ttu-id="86363-124">Cette action peut se faire en appelant la méthode <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> ou <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="86363-124">This action can be done by calling either the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> or <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span> <span data-ttu-id="86363-125">Appeler la méthode <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> garantit que l'opération est atomique, ce que ne fait pas la méthode <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>.</span><span class="sxs-lookup"><span data-stu-id="86363-125">Calling the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method guarantees that the operation is atomic, while calling the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> method does not.</span></span>  
  
 <span data-ttu-id="86363-126">Lorsque vous libérez des enregistrements, vous devez libérer les mêmes enregistrements que vous avez réservés ensemble dans un appel précédent à la méthode <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="86363-126">When you free records, you must free the same records that you reserved together in a previous call to the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86363-127">Votre implémentation de <xref:System.IO.Log.IRecordSequence> doit implémenter les méthodes <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> et <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> pour effectuer l'allocation et la désallocation effectives des réservations.</span><span class="sxs-lookup"><span data-stu-id="86363-127">Your implementation of <xref:System.IO.Log.IRecordSequence> must implement the <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> and <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> methods to perform the actual reservation allocation and deallocation.</span></span> <span data-ttu-id="86363-128">De plus, votre implémentation doit également appeler <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> lorsqu'un enregistrement est écrit dans un espace réservé.</span><span class="sxs-lookup"><span data-stu-id="86363-128">In addition, your implementation must also call <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> when a record is written into a reserved space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86363-129">Les réservations peuvent être exécutées de deux manières, comme le montrent les exemples suivants.</span><span class="sxs-lookup"><span data-stu-id="86363-129">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="86363-130">Vous pouvez adopter ces pratiques dans les exemples pour un traitement fiable.</span><span class="sxs-lookup"><span data-stu-id="86363-130">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="86363-131">Notez que cette tâche ne peut être effectuée que lors de l’utilisation de la classe <xref:System.IO.Log.LogRecordSequence> basée sur un système CLFS.</span><span class="sxs-lookup"><span data-stu-id="86363-131">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReservationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86363-132">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="86363-132">Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(long size);" />
      <MemberSignature Language="F#" Value="abstract member Add : int64 -&gt; unit&#xA;override this.Add : int64 -&gt; unit" Usage="reservationCollection.Add size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-133">Taille, en octets, de la réservation demandée.</span><span class="sxs-lookup"><span data-stu-id="86363-133">The size of the requested reservation, in bytes.</span></span></param>
        <summary><span data-ttu-id="86363-134">Alloue une réservation et l’ajoute à la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-134">Allocates a reservation and adds it to the collection.</span></span> <span data-ttu-id="86363-135">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-135">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86363-136">L'exemple suivant décrit la procédure de réservation manuelle.</span><span class="sxs-lookup"><span data-stu-id="86363-136">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="86363-137">Notez que cette tâche ne peut être effectuée que lors de l’utilisation de la classe <xref:System.IO.Log.LogRecordSequence> basée sur un système CLFS.</span><span class="sxs-lookup"><span data-stu-id="86363-137">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="86363-138"><paramref name="archiveTail" /> n'est pas compris entre le numéro de base et le dernier numéro de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-138"><paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="86363-139"><paramref name="size" /> n'est pas valide ou dépasse la taille de réservation maximale.</span><span class="sxs-lookup"><span data-stu-id="86363-139"><paramref name="size" /> is invalid or exceeds maximum reservation size.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="86363-140">Une erreur d'E/S se produit lors de la création de l'instantané de l'archive.</span><span class="sxs-lookup"><span data-stu-id="86363-140">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-141">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-141">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-142">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-142">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-143">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-143">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="86363-144">La séquence d'enregistrement est complète.</span><span class="sxs-lookup"><span data-stu-id="86363-144">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="reservationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86363-145">Libère toutes les réservations dans la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-145">Releases all of the reservations in the collection.</span></span> <span data-ttu-id="86363-146">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-146">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="86363-147"><paramref name="size" /> n'est pas valide ou dépasse la taille de réservation maximale.</span><span class="sxs-lookup"><span data-stu-id="86363-147"><paramref name="size" /> is invalid or exceeds maximum reservation size.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="86363-148">Une erreur d'E/S se produit lors de la création de l'instantané de l'archive.</span><span class="sxs-lookup"><span data-stu-id="86363-148">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-149">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-149">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-150">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-150">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="86363-151">La séquence d'enregistrement est complète.</span><span class="sxs-lookup"><span data-stu-id="86363-151">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-152">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-152">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(long size);" />
      <MemberSignature Language="F#" Value="abstract member Contains : int64 -&gt; bool&#xA;override this.Contains : int64 -&gt; bool" Usage="reservationCollection.Contains size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-153">Taille à localiser dans la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-153">The size to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="86363-154">Détermine si une réservation de la taille spécifiée a été faite.</span><span class="sxs-lookup"><span data-stu-id="86363-154">Determines whether a reservation of the specified size has been made.</span></span> <span data-ttu-id="86363-155">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-155">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="86363-156"><see langword="true" /> si au moins une réservation de la taille spécifiée a été faite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86363-156"><see langword="true" /> if at least one reservation of the specified size has been made; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-157">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-157">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-158">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-158">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-159">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-159">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (long[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int64[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Long(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;long&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int64[] * int -&gt; unit&#xA;override this.CopyTo : int64[] * int -&gt; unit" Usage="reservationCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="86363-160">Tableau de destination de la copie.</span><span class="sxs-lookup"><span data-stu-id="86363-160">The array that is the destination of the copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="86363-161">Index de base zéro dans le tableau au niveau duquel commencer la copie.</span><span class="sxs-lookup"><span data-stu-id="86363-161">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="86363-162">Copie l’ensemble de la collection dans un tableau à une dimension, en démarrant à l’index spécifié du tableau cible.</span><span class="sxs-lookup"><span data-stu-id="86363-162">Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</span></span> <span data-ttu-id="86363-163">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-163">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="86363-164"><paramref name="array" /> ou <paramref name="arrayIndex" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="86363-164"><paramref name="array" /> or <paramref name="arrayIndex" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="86363-165"><paramref name="arrayIndex" /> est inférieur à zéro, ou supérieur ou égal à la longueur de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="86363-165"><paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="86363-166">Il n'y a pas suffisamment d'espace dans le tableau spécifié pour copier les données.</span><span class="sxs-lookup"><span data-stu-id="86363-166">There is not enough space in the specified array to copy the data.</span></span>  
  
<span data-ttu-id="86363-167">ou</span><span class="sxs-lookup"><span data-stu-id="86363-167">-or-</span></span> 
 <span data-ttu-id="86363-168"><paramref name="array" /> n'est pas un tableau unidimensionnel, qui est le seul type de tableau pris en charge pour l'action demandée.</span><span class="sxs-lookup"><span data-stu-id="86363-168"><paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-169">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-169">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-170">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-170">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-171">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-171">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.ReservationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86363-172">Obtient le nombre de réservations dans la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-172">Gets the number of reservations in the collection.</span></span></summary>
        <value><span data-ttu-id="86363-173">Nombre de réservations dans la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-173">The number of reservations in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ReservationCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="reservationCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86363-174">Permet au <see cref="T:System.IO.Log.ReservationCollection" /> de libérer des ressources avant d’être détruit par le garbage collector.</span><span class="sxs-lookup"><span data-stu-id="86363-174">Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeReservation">
      <MemberSignature Language="C#" Value="protected abstract void FreeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FreeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FreeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FreeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member FreeReservation : int64 -&gt; unit" Usage="reservationCollection.FreeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-175">Taille de la réservation à libérer.</span><span class="sxs-lookup"><span data-stu-id="86363-175">The size of the reservation to release.</span></span></param>
        <summary><span data-ttu-id="86363-176">En cas de substitution dans une classe dérivée, libère une réservation de la taille spécifiée.</span><span class="sxs-lookup"><span data-stu-id="86363-176">When overridden in a derived class, releases a reservation of the specified size.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="86363-177">Lorsque vous héritez de <see cref="T:System.IO.Log.ReservationCollection" />, vous devez implémenter cette méthode pour libérer effectivement l’espace dans la séquence d’enregistrement.</span><span class="sxs-lookup"><span data-stu-id="86363-177">When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually release space in the record sequence.</span></span> <span data-ttu-id="86363-178">Vous ne devez pas appeler <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> à la fin de la méthode ; cette logique est prise en charge pour vous.</span><span class="sxs-lookup"><span data-stu-id="86363-178">You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> when this method is complete; that logic is handled for you.</span></span>  
  
<span data-ttu-id="86363-179">Lorsque vous libérez des enregistrements, vous devez libérer les mêmes enregistrements que vous avez réservés ensemble dans un appel précédent à la méthode <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" />.</span><span class="sxs-lookup"><span data-stu-id="86363-179">When you free records, you must free the same records that you reserved together in a previous call to the <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBestMatchingReservation">
      <MemberSignature Language="C#" Value="protected long GetBestMatchingReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 GetBestMatchingReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetBestMatchingReservation (size As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; long GetBestMatchingReservation(long size);" />
      <MemberSignature Language="F#" Value="member this.GetBestMatchingReservation : int64 -&gt; int64" Usage="reservationCollection.GetBestMatchingReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-180">Taille de la réservation qui doit être accommodée.</span><span class="sxs-lookup"><span data-stu-id="86363-180">The size of the reservation that must be fit.</span></span></param>
        <summary><span data-ttu-id="86363-181">En cas de substitution dans une classe dérivée, reçoit la meilleure réservation correspondante pour une taille donnée.</span><span class="sxs-lookup"><span data-stu-id="86363-181">When overridden in a derived class, gets the best matching reservation for a given size.</span></span></summary>
        <returns><span data-ttu-id="86363-182">Une réservation de la collection qui est supérieure ou égale à la taille spécifiée, ou -1 si aucune réservation de ce type n’existe.</span><span class="sxs-lookup"><span data-stu-id="86363-182">A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86363-183">Cette méthode est généralement appelée lors de l'ajout d'un enregistrement d'un espace réservé à une séquence d'enregistrement.</span><span class="sxs-lookup"><span data-stu-id="86363-183">This method is typically called when appending a record from reserved space to a record sequence.</span></span> <span data-ttu-id="86363-184">À son retour, une réservation de la taille retournée a été supprimée de la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-184">When it returns, a reservation of the returned size has been removed from the collection.</span></span> <span data-ttu-id="86363-185">Si, pour quelque raison que ce soit, l'espace réservé n'est pas accédé, la méthode <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> doit être appelée pour s'assurer que <xref:System.IO.Log.ReservationCollection> représente fidèlement l'espace réservé dans la séquence d'enregistrement.</span><span class="sxs-lookup"><span data-stu-id="86363-185">If, for some reason, the reserved space is not actually accessed, the <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> method should be called to ensure that the <xref:System.IO.Log.ReservationCollection> accurately represents the amount of reserved space in the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;long&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;int64&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;long&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;" Usage="reservationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86363-186">Retourne un énumérateur capable d'itérer au sein de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="86363-186">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="86363-187">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-187">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="86363-188">Énumérateur capable d'itérer au sein de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="86363-188">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="86363-189">L'opération n'est pas valide pour l'une des raisons suivantes :</span><span class="sxs-lookup"><span data-stu-id="86363-189">The operation is invalid for one of the following reasons:</span></span> 
<span data-ttu-id="86363-190">- L’énumération est terminée.</span><span class="sxs-lookup"><span data-stu-id="86363-190">-   The enumeration has ended.</span></span>  
  
<span data-ttu-id="86363-191">- La collection a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="86363-191">-   The collection has been modified.</span></span>  
  
<span data-ttu-id="86363-192">- L’énumération n’a pas encore  démarré.</span><span class="sxs-lookup"><span data-stu-id="86363-192">-   The enumeration has not been started.</span></span> <span data-ttu-id="86363-193">Un appel à <see cref="M:System.Collections.IEnumerator.MoveNext" /> doit être fait.</span><span class="sxs-lookup"><span data-stu-id="86363-193">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-194">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-194">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-195">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-195">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-196">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-196">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86363-197">Obtient une valeur qui indique si la collection est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="86363-197">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="86363-198">Cette propriété retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86363-198">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86363-199"><xref:System.IO.Log.ReservationCollection> n'est jamais en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="86363-199">A <xref:System.IO.Log.ReservationCollection> is never read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReservation">
      <MemberSignature Language="C#" Value="protected abstract void MakeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MakeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub MakeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void MakeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member MakeReservation : int64 -&gt; unit" Usage="reservationCollection.MakeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-200">Taille de la réservation à allouer.</span><span class="sxs-lookup"><span data-stu-id="86363-200">The size of the reservation to allocate.</span></span></param>
        <summary><span data-ttu-id="86363-201">En cas de substitution dans une classe dérivée, alloue une réservation de la taille spécifiée.</span><span class="sxs-lookup"><span data-stu-id="86363-201">When overridden in a derived class, allocates a reservation of the specified size.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="86363-202">Lorsque vous héritez de <see cref="T:System.IO.Log.ReservationCollection" />, vous devez implémenter cette méthode pour réserver effectivement l'espace dans la séquence d'enregistrement.</span><span class="sxs-lookup"><span data-stu-id="86363-202">When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually reserve space in the record sequence.</span></span> <span data-ttu-id="86363-203">Vous ne devez pas appeler <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> à la fin de la méthode ; cette logique est prise en charge pour vous.</span><span class="sxs-lookup"><span data-stu-id="86363-203">You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> when this method is complete; that logic is handled for you.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (long item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(int64 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(long item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : int64 -&gt; bool&#xA;override this.Remove : int64 -&gt; bool" Usage="reservationCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="86363-204">Taille de la réservation à libérer.</span><span class="sxs-lookup"><span data-stu-id="86363-204">The size of the reservation to release.</span></span></param>
        <summary><span data-ttu-id="86363-205">Libère une réservation de la taille spécifiée, s’il en existe.</span><span class="sxs-lookup"><span data-stu-id="86363-205">Releases a reservation of the specified size, if one has been made.</span></span> <span data-ttu-id="86363-206">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-206">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="86363-207"><see langword="true" /> si une réservation de la taille spécifiée a été trouvée et supprimée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86363-207"><see langword="true" /> if a reservation of the specified size was found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86363-208">L'exemple suivant décrit la procédure de réservation manuelle.</span><span class="sxs-lookup"><span data-stu-id="86363-208">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="86363-209">Notez que cette tâche ne peut être effectuée que lors de l’utilisation de la classe <xref:System.IO.Log.LogRecordSequence> basée sur un système CLFS.</span><span class="sxs-lookup"><span data-stu-id="86363-209">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="86363-210">Aucune réservation de taille suffisante pour accommoder l’enregistrement fourni ne se trouve dans la collection de réservations spécifiée.</span><span class="sxs-lookup"><span data-stu-id="86363-210">No reservation large enough to fit the provided record can be found in the specified reservation collection.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="86363-211">Une erreur d'E/S se produit lors de la création de l'instantané de l'archive.</span><span class="sxs-lookup"><span data-stu-id="86363-211">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-212">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-212">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-213">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-213">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="86363-214">La séquence d'enregistrement est complète.</span><span class="sxs-lookup"><span data-stu-id="86363-214">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-215">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-215">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservationFreed">
      <MemberSignature Language="C#" Value="protected void ReservationFreed (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationFreed(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationFreed (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationFreed(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationFreed : int64 -&gt; unit" Usage="reservationCollection.ReservationFreed size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-216">Taille de la réservation qui a été libérée.</span><span class="sxs-lookup"><span data-stu-id="86363-216">The size of the reservation that has been released.</span></span></param>
        <summary><span data-ttu-id="86363-217">En cas de substitution dans une classe dérivée, indique qu’une réservation a été libérée.</span><span class="sxs-lookup"><span data-stu-id="86363-217">When overridden in a derived class, indicates that a reservation has been released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86363-218">Lorsque vous héritez de <xref:System.IO.Log.ReservationCollection>, vous devez appeler cette méthode lorsqu'une réservation est libérée pour une raison autre que sa suppression de la collection.</span><span class="sxs-lookup"><span data-stu-id="86363-218">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is released for a reason other than removing it from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservationMade">
      <MemberSignature Language="C#" Value="protected void ReservationMade (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationMade(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationMade (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationMade(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationMade : int64 -&gt; unit" Usage="reservationCollection.ReservationMade size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="86363-219">Taille de la réservation qui a été faite.</span><span class="sxs-lookup"><span data-stu-id="86363-219">The size of the reservation that has been made.</span></span></param>
        <summary><span data-ttu-id="86363-220">En cas de substitution dans une classe dérivée, indique qu'une réservation a été faite.</span><span class="sxs-lookup"><span data-stu-id="86363-220">When overridden in a derived class, indicates that a reservation has been made.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86363-221">Lorsque vous héritez de <xref:System.IO.Log.ReservationCollection>, vous devez appeler cette méthode si une réservation s'effectue sans appel à <xref:System.IO.Log.ReservationCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="86363-221">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is made outside of a call to <xref:System.IO.Log.ReservationCollection.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="86363-222">Retourne un énumérateur capable d'itérer au sein de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="86363-222">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="86363-223">Cette méthode ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="86363-223">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="86363-224">Énumérateur capable d'itérer au sein de <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="86363-224">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="86363-225">L'opération n'est pas valide pour l'une des raisons suivantes :</span><span class="sxs-lookup"><span data-stu-id="86363-225">The operation is invalid for one of the following reasons:</span></span> 
<span data-ttu-id="86363-226">- L’énumération est terminée.</span><span class="sxs-lookup"><span data-stu-id="86363-226">-   The enumeration has ended.</span></span>  
  
<span data-ttu-id="86363-227">- La collection a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="86363-227">-   The collection has been modified.</span></span>  
  
<span data-ttu-id="86363-228">- L’énumération n’a pas encore  démarré.</span><span class="sxs-lookup"><span data-stu-id="86363-228">-   The enumeration has not been started.</span></span> <span data-ttu-id="86363-229">Un appel à <see cref="M:System.Collections.IEnumerator.MoveNext" /> doit être fait.</span><span class="sxs-lookup"><span data-stu-id="86363-229">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="86363-230">La méthode a été appelée après la suppression de la séquence.</span><span class="sxs-lookup"><span data-stu-id="86363-230">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="86363-231">La mémoire disponible n'est pas suffisante pour continuer l'exécution du programme.</span><span class="sxs-lookup"><span data-stu-id="86363-231">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="86363-232">L'accès pour le magasin de journaux spécifié est refusé par le système d'exploitation.</span><span class="sxs-lookup"><span data-stu-id="86363-232">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>