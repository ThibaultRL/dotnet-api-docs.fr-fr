<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cff8fc713682eca41e718108cbb6d328e026325" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004957" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un nœud d’un <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection conserve tous les enfant <xref:System.Windows.Forms.TreeNode> objets attribués au cours <xref:System.Windows.Forms.TreeNode>. Vous pouvez ajouter, supprimer ou cloner un <xref:System.Windows.Forms.TreeNode>; lorsque vous effectuez cette opération, arborescence d’enfant tous les nœuds sont ajoutés, supprimés ou clonés. Chaque <xref:System.Windows.Forms.TreeNode> peut contenir une collection d’autres <xref:System.Windows.Forms.TreeNode> objets. Cela peut rendre difficile de déterminer où vous êtes dans le <xref:System.Windows.Forms.TreeView> lors de l’itération dans la collection. Pour déterminer votre emplacement dans une arborescence, utilisez le <xref:System.Windows.Forms.TreeNode.FullPath%2A> propriété. Le <xref:System.Windows.Forms.TreeNode.FullPath%2A> chaîne peut être analysée à l’aide de la <xref:System.Windows.Forms.TreeView.PathSeparator%2A> valeur de chaîne à déterminer où un <xref:System.Windows.Forms.TreeNode> étiquette commence et se termine.  
  
 Le <xref:System.Windows.Forms.TreeNode> étiquette est définie en définissant le <xref:System.Windows.Forms.TreeNode.Text%2A> propriété explicitement. L’alternative consiste à créer le nœud d’arbre à l’aide d’un de le <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructeurs qui a un paramètre de chaîne qui représente le <xref:System.Windows.Forms.TreeNode.Text%2A> propriété. L’étiquette est affichée à côté du <xref:System.Windows.Forms.TreeNode> de l’image, si affichée.  
  
 Pour afficher des images en regard des nœuds d’arborescence, affecter un <xref:System.Windows.Forms.ImageList> à la <xref:System.Windows.Forms.TreeView.ImageList%2A> propriété du parent <xref:System.Windows.Forms.TreeView> contrôler et affecter un <xref:System.Drawing.Image> en référençant sa valeur d’index dans le <xref:System.Windows.Forms.ImageList> propriété. Définir le <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propriété à la valeur d’index de la <xref:System.Drawing.Image> à afficher lorsque le <xref:System.Windows.Forms.TreeNode> est dans un état désélectionné. De même, définissez le <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> propriété à la valeur d’index de la <xref:System.Drawing.Image> à afficher lorsque le <xref:System.Windows.Forms.TreeNode> est sélectionné.  
  
 Sélection des nœuds d’arbre et l’itération via la <xref:System.Windows.Forms.TreeView.Nodes%2A> collection peut être obtenue en utilisant les valeurs de propriété suivantes : <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Affecter le <xref:System.Windows.Forms.TreeNode> retourné par l’une des propriétés ci-dessus à la <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> propriété pour sélectionner le nœud d’arbre dans le <xref:System.Windows.Forms.TreeView> contrôle.  
  
 Nœuds d’arbre peuvent être développés pour afficher le niveau suivant de nœuds d’arbre enfants. L’utilisateur peut développer la <xref:System.Windows.Forms.TreeNode> en appuyant sur le signe plus (+) situé en regard le <xref:System.Windows.Forms.TreeNode>si un s’affiche, ou vous pouvez développer le <xref:System.Windows.Forms.TreeNode> en appelant le <xref:System.Windows.Forms.TreeNode.Expand%2A> (méthode). Pour développer tous les niveaux de nœud d’arbre enfants dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection, appelez le <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> (méthode). Vous pouvez réduire l’enfant <xref:System.Windows.Forms.TreeNode> niveau en appelant le <xref:System.Windows.Forms.TreeNode.Collapse%2A> (méthode), ou l’utilisateur peut appuyer sur le bouton (-) en regard du <xref:System.Windows.Forms.TreeNode>, si affichée. Vous pouvez également appeler le <xref:System.Windows.Forms.TreeNode.Toggle%2A> méthode à l’autre le <xref:System.Windows.Forms.TreeNode> entre les États réduits et développés.  
  
 Nœuds d’arbre peuvent éventuellement afficher une case à cocher. Pour afficher les cases à cocher, définissez le <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> propriété de la <xref:System.Windows.Forms.TreeView> à `true`. Le <xref:System.Windows.Forms.TreeNode.Checked%2A> propriété est définie sur `true` pour les nœuds d’arbre qui sont dans un état activé.  
  
   
  
## Examples  
 L’exemple de code suivant affiche les informations client dans un <xref:System.Windows.Forms.TreeView> contrôle. Les nœuds d’arbre racine affichent les noms des clients et les nœuds d’arbre enfants affichent les numéros de commande affectés à chaque client. Dans cet exemple, 1 000 clients sont affichés avec 15 commandes. Le redessin du <xref:System.Windows.Forms.TreeView> est supprimée à l’aide de la <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> et <xref:System.Windows.Forms.TreeView.EndUpdate%2A> méthodes et une attente <xref:System.Windows.Forms.Cursor> s’affiche alors que le <xref:System.Windows.Forms.TreeView> crée et peint le <xref:System.Windows.Forms.TreeNode> objets. Cet exemple nécessite que vous avez un `Customer` objet qui peut contenir une collection de `Order` objets. Il requiert également que vous avez créé une instance d’un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/de1b82db-4905-449a-9f59-af271a6b6673">Procédure : ajouter et supprimer des nœuds avec le contrôle TreeView Windows Forms</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un nœud d’arbre racine pour affecter des nœuds d’arbre enfants. Un nœud d’arbre enfant pour chaque `Customer` de l’objet dans un <xref:System.Collections.ArrayList> est ajouté au nœud d’arbre racine ainsi que sur un nœud d’arbre enfant pour chaque `Order` objet assigné à la `Customer` objet. Le `Customer` objet est assigné à la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété et les nœuds d’arborescence représentant `Customer` les objets sont affichés avec <xref:System.Drawing.Color.Orange%2A> texte. Cet exemple nécessite que vous avez un `Customer` et `Order` objet défini, un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>et un <xref:System.Collections.ArrayList> nommé `customerArray` contenant `Customer` objets.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">L’étiquette <see cref="P:System.Windows.Forms.TreeNode.Text" /> du nouveau nœud d’arborescence.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.TreeNode" /> classe avec le texte d’étiquette spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `text` valeur de paramètre est affectée pour le nœud <xref:System.Windows.Forms.TreeNode.Text%2A> propriété et devient l’étiquette du nœud d’arborescence.  
  
   
  
## Examples  
 L’exemple de code suivant affiche les informations client dans un <xref:System.Windows.Forms.TreeView> contrôle. Les nœuds d’arbre racine affichent les noms des clients et les nœuds d’arbre enfants affichent les numéros de commande affectés à chaque client. Dans cet exemple, 1 000 clients sont affichés avec 15 commandes. Le redessin du <xref:System.Windows.Forms.TreeView> est supprimée à l’aide de la <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> et <xref:System.Windows.Forms.TreeView.EndUpdate%2A> méthodes et une attente <xref:System.Windows.Forms.Cursor> s’affiche alors que le <xref:System.Windows.Forms.TreeView> crée et peint le <xref:System.Windows.Forms.TreeNode> objets. Cet exemple nécessite que vous avez un `Customer` objet qui peut contenir une collection de `Order` objets. Il requiert également que vous avez créé une instance d’un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Le <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données à désérialiser la classe.</param>
        <param name="context">Le <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.TreeNode" /> classe à l’aide des informations de sérialisation spécifié et du contexte.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">L’étiquette <see cref="P:System.Windows.Forms.TreeNode.Text" /> du nouveau nœud d’arborescence.</param>
        <param name="children">Tableau d’enfants <see cref="T:System.Windows.Forms.TreeNode" /> objets.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.TreeNode" /> classe avec les nœuds d’arbre de texte et enfants étiquette spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `text` valeur de paramètre est affectée pour le nœud <xref:System.Windows.Forms.TreeNode.Text%2A> propriété et devient l’étiquette du nœud d’arborescence. Les nœuds d’arbre qui sont contenus dans le `children` tableau sont ajoutés à la <xref:System.Windows.Forms.TreeNodeCollection> qui est stocké dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nœud d’arbre racine pour affecter des nœuds d’arbre enfants. Un nœud d’arbre enfant pour chaque `Customer` de l’objet dans un <xref:System.Collections.ArrayList> est ajouté au nœud d’arbre racine ainsi que sur un nœud d’arbre enfant pour chaque `Order` objet assigné à la `Customer` objet. Le `Customer` objet est assigné à la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété et les nœuds d’arborescence représentant `Customer` les objets sont affichés avec <xref:System.Drawing.Color.Orange%2A> texte. Cet exemple nécessite que vous avez un `Customer` et `Order` objet défini, un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>et un <xref:System.Collections.ArrayList> nommé `customerArray` contenant `Customer` objets.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">L’étiquette <see cref="P:System.Windows.Forms.TreeNode.Text" /> du nouveau nœud d’arborescence.</param>
        <param name="imageIndex">La valeur d’index <see cref="T:System.Drawing.Image" /> à afficher lorsque le nœud d’arbre est non sélectionné.</param>
        <param name="selectedImageIndex">La valeur d’index <see cref="T:System.Drawing.Image" /> à afficher quand le nœud d’arbre est sélectionné.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.TreeNode" /> classe avec le texte d’étiquette spécifié et les images à afficher quand le nœud d’arbre est dans un état sélectionné et non sélectionné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `text` valeur de paramètre est affectée pour le nœud <xref:System.Windows.Forms.TreeNode.Text%2A> propriété et devient l’étiquette du nœud d’arborescence. Le `imageIndex` et `selectedImageIndex` les valeurs sont les valeurs d’index d’un <xref:System.Drawing.Image> stockées dans le <xref:System.Windows.Forms.ImageList> affectée à la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propriété. L’image référencée dans le `imageIndex` propriété s’affiche lorsque le nœud d’arborescence n’est pas sélectionné. De même, l’image référencée dans le `selectedImageIndex` propriété s’affiche quand le nœud d’arbre est dans un état sélectionné.  
  
   
  
## Examples  
 L’exemple de code suivant crée et attribue un <xref:System.Windows.Forms.ImageList> à un <xref:System.Windows.Forms.TreeView> contrôle et remplit la <xref:System.Windows.Forms.TreeView> contrôler avec <xref:System.Windows.Forms.TreeNode> objets. Les nœuds d’arborescence sont affectés des images à partir de la <xref:System.Windows.Forms.ImageList> qui s’affiche quand le nœud d’arbre est dans un état sélectionné ou désélectionné. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TreeView>et un <xref:System.Collections.ArrayList> contenant `Customer` objets qui contiennent chacune `Order` objets. Elle requiert également que le `Customer` et `Order` objets sont définis.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">L’étiquette <see cref="P:System.Windows.Forms.TreeNode.Text" /> du nouveau nœud d’arborescence.</param>
        <param name="imageIndex">La valeur d’index <see cref="T:System.Drawing.Image" /> à afficher lorsque le nœud d’arbre est non sélectionné.</param>
        <param name="selectedImageIndex">La valeur d’index <see cref="T:System.Drawing.Image" /> à afficher quand le nœud d’arbre est sélectionné.</param>
        <param name="children">Tableau d’enfants <see cref="T:System.Windows.Forms.TreeNode" /> objets.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.TreeNode" /> classe avec le texte d’étiquette spécifié, les nœuds d’arbre enfants et les images à afficher quand le nœud d’arbre est dans un état sélectionné et.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `text` valeur de paramètre est affectée pour le nœud <xref:System.Windows.Forms.TreeNode.Text%2A> propriété et devient l’étiquette du nœud d’arborescence. Le `imageIndex` et `selectedImageIndex` les valeurs sont les valeurs d’index d’un <xref:System.Drawing.Image> stockées dans le <xref:System.Windows.Forms.ImageList> affectée à la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propriété. L’image référencée dans la `imageIndex` paramètre s’affiche lorsque le nœud d’arborescence n’est pas sélectionné. De même, l’image référencée dans la `selectedImageIndex` paramètre s’affiche quand le nœud d’arbre est dans un état sélectionné. Les nœuds d’arbre qui sont contenus dans le `children` tableau sont ajoutés à la <xref:System.Windows.Forms.TreeNodeCollection> qui est stocké dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant crée et attribue un <xref:System.Windows.Forms.ImageList> à un <xref:System.Windows.Forms.TreeView> contrôle et remplit la <xref:System.Windows.Forms.TreeView> contrôler avec <xref:System.Windows.Forms.TreeNode> objets. Les nœuds d’arborescence sont affectés des images à partir de la <xref:System.Windows.Forms.ImageList> qui s’affiche quand le nœud d’arbre est dans un état sélectionné ou désélectionné. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TreeView>et un <xref:System.Collections.ArrayList> contenant `Customer` objets qui contiennent chacune `Order` objets. Elle requiert également que le `Customer` et `Order` objets sont définis.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur d’arrière-plan du nœud d’arbre.</summary>
        <value>L’arrière-plan <see cref="T:System.Drawing.Color" /> du nœud d’arbre. La valeur par défaut est <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Forms.TreeNode.BackColor%2A> propriété est définie sur <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, le <xref:System.Drawing.Color> utilisé est le <xref:System.Windows.Forms.Control.BackColor%2A> valeur de propriété de la <xref:System.Windows.Forms.TreeView> contrôle auquel le nœud d’arbre est assigné.  
  
   
  
## Examples  
 L’exemple de code suivant met en évidence les <xref:System.Windows.Forms.TreeNode> objets un <xref:System.Windows.Forms.TreeView> contrôle qui a son <xref:System.Windows.Forms.TreeNode.Checked%2A> propriété définie sur `true` en définissant son <xref:System.Windows.Forms.TreeNode.BackColor%2A> propriété <xref:System.Drawing.Color.Yellow%2A>. Ce code nécessite que vous avez un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form> avec une collection de <xref:System.Windows.Forms.TreeNode> objets.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="treeNode.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Démarre la modification de l’étiquette de nœud d’arbre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un scénario classique pour utiliser cette méthode consiste à appeler sur le <xref:System.Windows.Forms.MenuItem.Click> événement d’un <xref:System.Windows.Forms.MenuItem> ou <xref:System.Windows.Forms.ContextMenu>.  
  
> [!NOTE]
>  Cette méthode fonctionne uniquement si le <xref:System.Windows.Forms.TreeView.LabelEdit%2A> propriété de la <xref:System.Windows.Forms.TreeView> est défini sur `true`. Si <xref:System.Windows.Forms.TreeView.LabelEdit%2A> a la valeur `false`, une exception est levée et le nœud d’arbre n’est pas placé dans un état modifiable.  
  
   
  
## Examples  
 L’exemple de code suivant permet à l’utilisateur de modifier des nœuds d’arbre à l’aide un <xref:System.Windows.Forms.ContextMenu>. Quand l’utilisateur clique sur la souris, le <xref:System.Windows.Forms.TreeNode> à cette position est déterminée et stockée dans une variable nommée `mySelectedNode`. Si un nœud d’arbre non racine a été sélectionné, elle est placée dans un état modifiable, ce qui permet de l’utilisateur de modifier l’étiquette du nœud. Une fois que l’utilisateur arrête la modification de l’étiquette du nœud d’arborescence, le nouveau texte d’étiquette est évalué et enregistré. Pour cet exemple, plusieurs caractères sont considérés comme non valides dans le texte d’étiquette. Si un des caractères non valides est dans la chaîne d’étiquette, ou la chaîne est vide, l’utilisateur est averti de l’erreur et l’étiquette est renvoyé à son texte précédent.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.TreeView.LabelEdit" /> a la valeur <see langword="false" />.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.TreeNode.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les limites du nœud d’arbre.</summary>
        <value>Le <see cref="T:System.Drawing.Rectangle" /> qui représente les limites du nœud d’arbre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les coordonnées sont exprimées par rapport à l’angle supérieur gauche de la <xref:System.Windows.Forms.TreeView> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant modifie la taille <xref:System.Windows.Forms.TreeNode.NodeFont%2A> à la taille spécifiée et ajuste le <xref:System.Windows.Forms.TreeView.ItemHeight%2A> parent du nœud de l’arborescence de <xref:System.Windows.Forms.TreeView> contrôle. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TreeView> contrôle avec une collection de <xref:System.Windows.Forms.TreeNode> objets et un <xref:System.Windows.Forms.ComboBox> qui contient les tailles de police.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le nœud d’arbre est dans un état activé.</summary>
        <value><see langword="true" /> Si le nœud d’arbre est dans un état activé ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant met en évidence les <xref:System.Windows.Forms.TreeNode> objets un <xref:System.Windows.Forms.TreeView> contrôle qui a son <xref:System.Windows.Forms.TreeNode.Checked%2A> propriété définie sur `true` en définissant son <xref:System.Windows.Forms.TreeNode.BackColor%2A> propriété <xref:System.Drawing.Color.Yellow%2A>. Ce code nécessite que vous avez un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form> avec une collection de <xref:System.Windows.Forms.TreeNode> objets.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copie le nœud d’arbre et l’ensemble du sous-arbre rattaché à ce nœud d’arbre.</summary>
        <returns>Le <see cref="T:System.Object" /> qui représente le cloné <see cref="T:System.Windows.Forms.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La structure d’arborescence à partir du nœud d’arborescence en cours de clonage et en dessous est copiée. N’importe quel nœuds d’arbre enfants assignés à la <xref:System.Windows.Forms.TreeNode> cloné sont inclus dans le nouveau nœud d’arbre et sous-arbre.  
  
 Le <xref:System.Windows.Forms.TreeNode.Clone%2A> méthode effectue une copie superficielle du nœud. Si la valeur de la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété est un type référence, la copie d’origine et clonée pointera vers la même instance unique de la <xref:System.Windows.Forms.TreeNode.Tag%2A> valeur.  
  
   
  
## Examples  
 L’exemple de code suivant clone le dernier nœud d’arbre enfant du dernier nœud d’arbre racine et insère le clone en tant que premier nœud d’arbre racine dans le `TreeNodeCollection`. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form> qui contient une collection de <xref:System.Windows.Forms.TreeNode> objets et un <xref:System.Windows.Forms.Button>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Réduit la <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Réduit le nœud d’arbre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.Collapse%2A> méthode réduit actuel <xref:System.Windows.Forms.TreeNode> et ses nœuds enfants. Si vous voulez réduire uniquement actuel <xref:System.Windows.Forms.TreeNode>, utilisez le <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType> surcharge, en passant `true` pour ignorer ses nœuds enfants.  
  
> [!NOTE]
>  L’état d’un <xref:System.Windows.Forms.TreeNode> est rendu persistant. Par exemple, si le niveau suivant de nœuds enfants n’est pas réduit précédemment, lorsque le <xref:System.Windows.Forms.TreeNode.Expand%2A> est appelée, les nœuds enfants apparaissent dans leur état précédemment développé.  
  
   
  
## Examples  
 L’exemple de code suivant affiche le nœud sélectionné lorsqu’un clic est effectué. Si le nœud sélectionné est réduit, il est développé, si elle est développée en appelant le <xref:System.Windows.Forms.TreeNode.Expand%2A> (méthode), il est réduit en appelant le <xref:System.Windows.Forms.TreeNode.Collapse%2A> (méthode). Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui possède au moins un <xref:System.Windows.Forms.TreeNode> au moins un enfant <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberSignature Language="F#" Value="member this.Collapse : bool -&gt; unit" Usage="treeNode.Collapse ignoreChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren"><see langword="true" /> Pour laisser les nœuds enfants dans leur état actuel ; <see langword="false" /> pour réduire les nœuds enfants.</param>
        <summary>Réduit la <see cref="T:System.Windows.Forms.TreeNode" /> et réduit éventuellement ses enfants.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.TreeNode.Collapse%2A> méthode, en passant `true`, lorsque vous souhaitez réduire un nœud, mais souhaitez laisser ses nœuds enfants dans leur état développé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le menu contextuel associé à ce nœud d’arbre.</summary>
        <value>Le <see cref="T:System.Windows.Forms.ContextMenu" /> qui est associé au nœud d’arborescence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La meilleure façon d’associer un menu contextuel à un nœud d’arbre est avec le <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le menu contextuel associé à ce nœud d’arbre.</summary>
        <value>Le <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associé au nœud d’arborescence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le menu contextuel s’affiche quand l’utilisateur clique sur le nœud d’arbre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Deserialize (serializationInfo, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui décrit <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Le <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique l’état du flux pendant la désérialisation.</param>
        <summary>Charge l’état de la <see cref="T:System.Windows.Forms.TreeNode" /> à partir du spécifié <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : bool -&gt; unit" Usage="treeNode.EndEdit cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><see langword="true" /> Si la modification du texte d’étiquette de nœud arborescence a été annulée sans être enregistrée ; Sinon, <see langword="false" />.</param>
        <summary>Termine la modification de l’étiquette de nœud d’arbre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant permet à l’utilisateur de modifier des nœuds d’arbre à l’aide un <xref:System.Windows.Forms.ContextMenu>. Lorsque l’utilisateur clique le bouton droit la souris, le <xref:System.Windows.Forms.TreeNode> à cette position est déterminée et stockée dans une variable nommée `mySelectedNode`. Si un nœud d’arbre non racine a été sélectionné, elle est placée dans un état modifiable, ce qui permet de l’utilisateur de modifier l’étiquette du nœud. Une fois que l’utilisateur arrête la modification de l’étiquette du nœud d’arborescence, le nouveau texte d’étiquette est évalué et enregistré. Pour cet exemple, plusieurs caractères sont considérés comme non valides dans le texte d’étiquette. Si un des caractères non valides est dans la chaîne d’étiquette, ou la chaîne est vide, l’utilisateur est averti de l’erreur et l’étiquette est renvoyé à son texte précédent.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="treeNode.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Garantit que le nœud d’arbre est visible, en développant les nœuds d’arbre et en faisant défiler le contrôle arborescence en fonction des besoins.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A> est appelée, l’arborescence est développée et défile pour vous assurer que le nœud d’arbre en cours est visible dans le <xref:System.Windows.Forms.TreeView>. Cette méthode est utile si vous sélectionnez un nœud d’arbre dans le code en fonction de certains critères. En appelant cette méthode une fois que vous sélectionnez le nœud, l’utilisateur peut voir et interagir avec le nœud sélectionné.  
  
> [!NOTE]
>  Si le <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType> propriété est définie sur une valeur qui est supérieure à la hauteur du contrôle tree view, appel de cette méthode a des résultats inattendus.  
  
   
  
## Examples  
 L’exemple de code suivant affiche le dernier enfant du nœud d’arbre racine dernier nœud d’arbre dans l’arborescence lorsqu’un clic est effectué. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form> qui contient une collection de <xref:System.Windows.Forms.TreeNode> objets et un <xref:System.Windows.Forms.Button>. Il doit être suffisamment nœuds d’arbre afin qu’ils ne soient pas toutes visibles dans le contrôle arborescence.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Développe le nœud d’arbre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.Expand%2A> méthode développe actuel <xref:System.Windows.Forms.TreeNode> jusqu’au niveau suivant de nœuds.  
  
> [!NOTE]
>  L’état d’un <xref:System.Windows.Forms.TreeNode> est rendu persistant. Par exemple, si le niveau suivant de nœuds enfants n’est pas réduit précédemment, lorsque le <xref:System.Windows.Forms.TreeNode.Expand%2A> est appelée, les nœuds enfants apparaissent dans leur état précédemment développé.  
  
   
  
## Examples  
 L’exemple de code suivant affiche le nœud sélectionné lorsqu’un clic est effectué. Si le nœud sélectionné est réduit, il est développé, si elle est développée en appelant le <xref:System.Windows.Forms.TreeNode.Expand%2A> (méthode), il est réduit en appelant le <xref:System.Windows.Forms.TreeNode.Collapse%2A> (méthode). Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui possède au moins un <xref:System.Windows.Forms.TreeNode> au moins un enfant <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Développe tous les nœuds d’arbre enfants.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> méthode développe tous les nœuds d’arbre enfants affectés à la <xref:System.Windows.Forms.TreeNode.Nodes%2A> collection.  
  
> [!NOTE]
>  L’état d’un <xref:System.Windows.Forms.TreeNode> est rendu persistant. Par exemple, si le niveau suivant de nœuds enfants n’est pas réduit précédemment, lorsque le <xref:System.Windows.Forms.TreeNode.Expand%2A> est appelée, les nœuds enfants apparaissent dans leur état précédemment développé.  
  
   
  
## Examples  
 L’exemple de code suivant développe tous les nœuds d’arbre dans un <xref:System.Windows.Forms.TreeView> contrôler quand un <xref:System.Windows.Forms.CheckBox> est activée et réduit le <xref:System.Windows.Forms.TreeNode.FirstNode%2A> lorsque le <xref:System.Windows.Forms.CheckBox> est désactivée. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.CheckBox>et un <xref:System.Windows.Forms.TreeView> contrôler avec un <xref:System.Windows.Forms.TreeNodeCollection> qui dispose de plusieurs <xref:System.Windows.Forms.TreeNode> objets (de préférence avec trois niveaux ou plus).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FirstNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le premier enfant de nœud d’arbre dans la collection de nœuds d’arborescence.</summary>
        <value>Le premier enfant <see cref="T:System.Windows.Forms.TreeNode" /> dans le <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.FirstNode%2A> est le premier enfant <xref:System.Windows.Forms.TreeNode> dans le <xref:System.Windows.Forms.TreeNodeCollection> stockés dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété du nœud d’arbre en cours. Si le <xref:System.Windows.Forms.TreeNode> n’a aucun nœud d’arbre enfant, la <xref:System.Windows.Forms.TreeNode.FirstNode%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur de premier plan du nœud d’arbre.</summary>
        <value>Premier plan <see cref="T:System.Drawing.Color" /> du nœud d’arbre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `null`, le <xref:System.Drawing.Color> utilisé est le <xref:System.Windows.Forms.Control.ForeColor%2A> valeur de propriété de la <xref:System.Windows.Forms.TreeView> contrôle auquel le nœud d’arbre est assigné.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nœud d’arbre racine pour affecter des nœuds d’arbre enfants. Un nœud d’arbre enfant pour chaque `Customer` de l’objet dans un <xref:System.Collections.ArrayList> est ajouté au nœud d’arbre racine ainsi que sur un nœud d’arbre enfant pour chaque `Order` objet assigné à la `Customer` objet. Le `Customer` objet est assigné à la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété et les nœuds d’arborescence représentant `Customer` les objets sont affichés avec <xref:System.Drawing.Color.Orange%2A> texte. Cet exemple nécessite que vous avez un `Customer` et `Order` objet défini, un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>et un <xref:System.Collections.ArrayList> nommé `customerArray` contenant `Customer` objets.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : System.Windows.Forms.TreeView * nativeint -&gt; System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FromHandle (tree, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree">Le <see cref="T:System.Windows.Forms.TreeView" /> qui contient le nœud d’arbre.</param>
        <param name="handle">Le handle du nœud d’arbre.</param>
        <summary>Retourne le nœud d’arbre avec la valeur gérer et affectée à l’arborescence spécifié afficher le contrôle.</summary>
        <returns>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le nœud d’arbre assigné spécifié <see cref="T:System.Windows.Forms.TreeView" /> contrôle associé au handle spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un nœud est ajouté à la <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType> collection, le <xref:System.Windows.Forms.TreeView> contrôle envoie une notification NM_CUSTOMDRAW avant que le handle du nœud est disponible. Si vous remplacez le <xref:System.Windows.Forms.Control.WndProc%2A> méthode de la <xref:System.Windows.Forms.TreeView> pour fournir un dessin personnalisé en réponse à cette notification, vous devez toujours vérifier la valeur de retour de cette méthode pour `null` avant de tenter d’accéder au nœud.  
  
   
  
## Examples  
 Le code suivant exemple obtient le <xref:System.Windows.Forms.TreeNode> qui a été réduit et en crée une copie à l’aide de son <xref:System.Windows.Forms.TreeNode.Handle%2A> propriété. La version d’origine <xref:System.Windows.Forms.TreeNode> est supprimé de la <xref:System.Windows.Forms.TreeNodeCollection>, et la copie est ajoutée à la collection. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle dessus. Le <xref:System.Windows.Forms.TreeView> contrôle doit comporter au moins deux nœuds racine, chacun possédant au moins un nœud enfant.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.Windows.Forms.TreeNode.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le chemin d’accès à partir du nœud d’arbre racine au nœud d’arbre en cours.</summary>
        <value>Le chemin d’accès à partir du nœud d’arbre racine au nœud d’arbre en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chemin d’accès se compose des étiquettes de tous les nœuds d’arbre qui doivent être explorés afin d’atteindre ce nœud d’arbre, en commençant à un nœud d’arbre racine. Les étiquettes de nœud sont séparés par le caractère délimiteur spécifié dans le <xref:System.Windows.Forms.TreeView.PathSeparator%2A> propriété de la <xref:System.Windows.Forms.TreeView> contrôle qui contient ce nœud. Par exemple, si le caractère délimiteur du contrôle TreeView nommé « Location » est définie à la barre oblique inverse (\\), la <xref:System.Windows.Forms.TreeNode.FullPath%2A> valeur de propriété est « Country\Region\State ».  
  
   
  
## Examples  
 Le code suivant exemple définit le <xref:System.Windows.Forms.TreeView.PathSeparator%2A> propriété d’un <xref:System.Windows.Forms.TreeView> et affiche le nombre de nœuds d’arbre enfants contenus dans le <xref:System.Windows.Forms.TreeNodeCollection> de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Le pourcentage de nœud d’arbre enfant pour les nœuds d’arbre total dans le contrôle arborescence s’affiche également. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.Button>et un <xref:System.Windows.Forms.TreeView> contrôler avec un <xref:System.Windows.Forms.TreeNodeCollection> qui dispose de plusieurs <xref:System.Windows.Forms.TreeNode> objets (de préférence avec trois niveaux ou plus).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le nœud n’est pas contenu dans un <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeNode.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees"><see langword="true" /> Si le décompte obtenu inclut tous les nœuds d’arbre indirectement rattachés à ce nœud d’arbre ; Sinon, <see langword="false" />.</param>
        <summary>Retourne le nombre de nœuds d’arbre enfants.</summary>
        <returns>Le nombre de nœuds d’arbre enfants assignés à la <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple définit le <xref:System.Windows.Forms.TreeView.PathSeparator%2A> propriété d’un <xref:System.Windows.Forms.TreeView> et affiche le nombre de nœuds d’arbre enfants contenus dans le <xref:System.Windows.Forms.TreeNodeCollection> de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A>. Le pourcentage de nœud d’arbre enfant pour les nœuds d’arbre total dans le contrôle arborescence s’affiche également. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.Button>et un <xref:System.Windows.Forms.TreeView> contrôler avec un <xref:System.Windows.Forms.TreeNodeCollection> qui dispose de plusieurs <xref:System.Windows.Forms.TreeNode> objets (de préférence avec trois niveaux ou plus).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TreeNode.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le handle du nœud d’arbre.</summary>
        <value>Le handle de nœud d’arborescence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un handle n’est déjà créé lorsque le <xref:System.Windows.Forms.TreeNode.Handle%2A> propriété est référencée, elle est créée.  
  
   
  
## Examples  
 Le code suivant exemple obtient le <xref:System.Windows.Forms.TreeNode> qui a été réduit et en crée une copie à l’aide de son <xref:System.Windows.Forms.TreeNode.Handle%2A> propriété. La version d’origine <xref:System.Windows.Forms.TreeNode> est supprimé de la <xref:System.Windows.Forms.TreeNodeCollection>, et la copie est ajoutée à la collection. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle dessus. Le <xref:System.Windows.Forms.TreeView> contrôle doit comporter au moins deux nœuds racine, chacun possédant au moins un nœud enfant.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur d’index de liste de l’image affichée quand le nœud d’arbre est dans un état désélectionné.</summary>
        <value>Une valeur d’index de base zéro qui représente la position de l’image dans le texte affecté <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> valeur est la valeur d’index d’un <xref:System.Drawing.Image> stockés dans le <xref:System.Windows.Forms.ImageList> affectée à la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propriété.  
  
> [!NOTE]
>  La valeur par défaut de la <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propriété est identique à la <xref:System.Windows.Forms.TreeView.ImageIndex%2A> propriété de la <xref:System.Windows.Forms.TreeView> contrôler qui le <xref:System.Windows.Forms.TreeNode> est affecté à.  
  
 Le <xref:System.Windows.Forms.TreeNode.ImageKey%2A> et <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propriétés s’excluent mutuellement ; par conséquent, si une propriété est définie, l’autre est ignorée. Si vous définissez la <xref:System.Windows.Forms.TreeNode.ImageKey%2A> propriété, le <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propriété est automatiquement définie sur -1. Vous pouvez également, si vous définissez <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> est automatiquement définie sur une chaîne vide (« »).  
  
   
  
## Examples  
 L’exemple de code suivant crée et attribue un <xref:System.Windows.Forms.ImageList> à un <xref:System.Windows.Forms.TreeView> contrôle et remplit la <xref:System.Windows.Forms.TreeView> contrôler avec <xref:System.Windows.Forms.TreeNode> objets. Les nœuds d’arborescence sont affectés des images à partir de la <xref:System.Windows.Forms.ImageList> qui s’affiche quand le nœud d’arbre est dans un état sélectionné ou désélectionné. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TreeView>et un <xref:System.Collections.ArrayList> contenant `Customer` objets qui contiennent chacune `Order` objets. Elle requiert également que le `Customer` et `Order` objets sont définis.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la clé pour l’image associée à ce nœud d’arbre lorsque le nœud est dans un état désélectionné.</summary>
        <value>La clé pour l’image associée à ce nœud d’arbre lorsque le nœud est dans un état désélectionné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clé d’image retournée par cette propriété est contenue dans le <xref:System.Windows.Forms.TreeView.ImageList%2A> propriété du contenant <xref:System.Windows.Forms.TreeView> contrôle.  
  
 Le <xref:System.Windows.Forms.TreeNode.ImageKey%2A> respecte la casse.  
  
 Le <xref:System.Windows.Forms.TreeNode.ImageKey%2A> et <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propriétés s’excluent mutuellement ; si une propriété est définie, l’autre est ignorée. Si vous définissez la <xref:System.Windows.Forms.TreeNode.ImageKey%2A> propriété, le <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> propriété est automatiquement définie sur -1. Vous pouvez également, si vous définissez <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> est automatiquement définie sur une chaîne vide (« »).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.TreeNode.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la position du nœud d’arbre dans la collection de nœuds d’arborescence.</summary>
        <value>Une valeur d’index de base zéro qui représente la position du nœud d’arbre dans le <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple affiche le <xref:System.Windows.Forms.TreeNode.Text%2A> et <xref:System.Windows.Forms.TreeNode.Index%2A> les valeurs de propriété de la <xref:System.Windows.Forms.TreeNode> représenté par le <xref:System.Windows.Forms.TreeNode.Parent%2A> propriété de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle dessus. Le <xref:System.Windows.Forms.TreeView> doit comporter au moins deux nœuds racine, chacun possédant au moins un nœud enfant.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditing : bool" Usage="System.Windows.Forms.TreeNode.IsEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le nœud d’arbre est dans un état modifiable.</summary>
        <value><see langword="true" /> Si le nœud d’arbre est dans l’état modifiable ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant permet à l’utilisateur de modifier des nœuds d’arbre à l’aide un <xref:System.Windows.Forms.ContextMenu>. Lorsque l’utilisateur clique le bouton droit la souris, le <xref:System.Windows.Forms.TreeNode> à cette position est déterminée et stockée dans une variable nommée `mySelectedNode`. Si un nœud d’arbre non racine a été sélectionné, elle est placée dans un état modifiable, laissant l’utilisateur modifier l’étiquette du nœud. Une fois que l’utilisateur arrête la modification de l’étiquette du nœud d’arborescence, le nouveau texte d’étiquette est évalué et enregistré. Pour cet exemple, plusieurs caractères sont considérés comme non valides dans le texte d’étiquette. Si un des caractères non valides est dans la chaîne d’étiquette, ou la chaîne est vide, l’utilisateur est averti de l’erreur et l’étiquette est renvoyé à son texte précédent.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool" Usage="System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le nœud d’arbre est dans l’état développé.</summary>
        <value><see langword="true" /> Si le nœud d’arbre est dans l’état développé ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche le nœud sélectionné lorsqu’un clic est effectué. Si le nœud sélectionné est réduit, il est développé, si elle est développée en appelant le <xref:System.Windows.Forms.TreeNode.Expand%2A> (méthode), il est réduit en appelant le <xref:System.Windows.Forms.TreeNode.Collapse%2A> (méthode). Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui possède au moins un <xref:System.Windows.Forms.TreeNode> au moins un enfant <xref:System.Windows.Forms.TreeNode>.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Windows.Forms.TreeNode.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le nœud d’arbre est dans l’état sélectionné.</summary>
        <value><see langword="true" /> Si le nœud d’arbre est dans l’état sélectionné ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> contenant plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.Forms.TreeNode.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le nœud d’arbre est visible ou partiellement visible.</summary>
        <value><see langword="true" /> Si le nœud d’arbre est visible ou partiellement ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche le dernier enfant du nœud d’arbre racine dernier nœud d’arbre dans l’arborescence lorsqu’un clic est effectué. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form> qui contient une collection de <xref:System.Windows.Forms.TreeNode> objets et un <xref:System.Windows.Forms.Button>. Il doit être suffisamment nœuds d’arbre afin qu’ils ne soient pas toutes visibles dans le contrôle arborescence.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.LastNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dernier enfant de nœud d’arbre.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le dernier nœud d’arborescence enfant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.LastNode%2A> est le dernier enfant <xref:System.Windows.Forms.TreeNode> dans le <xref:System.Windows.Forms.TreeNodeCollection> stockés dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété du nœud d’arbre en cours. Si le <xref:System.Windows.Forms.TreeNode> n’a aucun nœud d’arbre enfant, la <xref:System.Windows.Forms.TreeNode.LastNode%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="System.Windows.Forms.TreeNode.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la profondeur de base zéro du nœud d’arbre dans le <see cref="T:System.Windows.Forms.TreeView" /> contrôle.</summary>
        <value>La profondeur de base zéro du nœud d’arbre dans le <see cref="T:System.Windows.Forms.TreeView" /> contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour le <xref:System.Windows.Forms.TreeNode.Level%2A> propriété, le nœud racine est considéré comme le premier niveau d’imbrication et retourne 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.TreeNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du nœud d’arbre.</summary>
        <value>Un <see cref="T:System.String" /> qui représente le nom du nœud d’arbre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.Name%2A> d’un <xref:System.Windows.Forms.TreeNode> est également la clé du nœud, lorsque le nœud fait partie d’un <xref:System.Windows.Forms.TreeNodeCollection>. Si le nœud n’a pas un nom, <xref:System.Windows.Forms.TreeNode.Name%2A> retourne une chaîne vide ( » »).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le frère suivant de nœud d’arbre.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le nœud d’arbre frère suivant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.NextNode%2A> est le frère suivant <xref:System.Windows.Forms.TreeNode> dans le <xref:System.Windows.Forms.TreeNodeCollection> stockés dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété parent du nœud de l’arborescence de <xref:System.Windows.Forms.TreeNode>. S’il n’existe aucun nœud d’arbre suivant, la <xref:System.Windows.Forms.TreeNode.NextNode%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nœud d’arbre visible suivant.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le nœud d’arbre visible suivant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> peut être un enfant, un frère ou un nœud d’arborescence à partir d’une autre branche. S’il n’existe aucun nœud d’arbre suivant, la <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.TreeNode.NodeFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la police utilisée pour afficher le texte sur l’étiquette de nœud d’arborescence.</summary>
        <value>Le <see cref="T:System.Drawing.Font" /> qui est utilisé pour afficher le texte sur l’étiquette de nœud d’arborescence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `null`, le <xref:System.Drawing.Font> utilisé est le <xref:System.Windows.Forms.Control.Font%2A> valeur de propriété de la <xref:System.Windows.Forms.TreeView> contrôle associé à ce nœud.  
  
> [!NOTE]
>  Si la police du nœud est supérieure à la <xref:System.Windows.Forms.Control.Font%2A> valeur de propriété qui est définie dans le <xref:System.Windows.Forms.TreeView> contrôle, le texte d’étiquette de nœud arborescence est découpé.  
  
   
  
## Examples  
 L’exemple de code suivant modifie la taille de <xref:System.Windows.Forms.TreeNode.NodeFont%2A> à la taille spécifiée et ajuste le <xref:System.Windows.Forms.TreeView.ItemHeight%2A> parent du nœud de l’arborescence de <xref:System.Windows.Forms.TreeView> contrôle. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui contient une collection de <xref:System.Windows.Forms.TreeNode> objets et un <xref:System.Windows.Forms.ComboBox> qui contient les tailles de police.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeNode.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de <see cref="T:System.Windows.Forms.TreeNode" /> objets assignés au nœud d’arbre en cours.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNodeCollection" /> qui représente les nœuds d’arbre assignés au nœud d’arbre en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété peut contenir une collection d’autres <xref:System.Windows.Forms.TreeNode> objets. Chaque nœud d’arbre dans la collection a une <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété pouvant contenir ses propres <xref:System.Windows.Forms.TreeNodeCollection>. Cette imbrication de nœuds d’arbre peut rendre difficile naviguer d’une structure arborescente. Le <xref:System.Windows.Forms.TreeNode.FullPath%2A> propriété rend plus facile de déterminer votre position dans une arborescence.  
  
   
  
## Examples  
 L’exemple de code suivant supprime le nœud d’arbre sélectionné à partir d’un <xref:System.Windows.Forms.TreeView> et l’ajoute à un autre si les deux collections de nœuds d’arborescence ne sont pas en lecture seule. Lorsqu’un <xref:System.Windows.Forms.Button> est activé, le <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> est supprimé d’un <xref:System.Windows.Forms.TreeView> à l’aide de la <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> (méthode) et ajouté à l’autre <xref:System.Windows.Forms.TreeView> à l’aide de la <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> (méthode). Cet exemple nécessite que vous avez deux <xref:System.Windows.Forms.TreeView> contrôles nommés `treeView1` et `treeView2`et un <xref:System.Windows.Forms.Button> sur un <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le parent de nœud d’arborescence du nœud d’arbre en cours.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le parent du nœud d’arbre en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le nœud d’arbre est au niveau racine, le <xref:System.Windows.Forms.TreeNode.Parent%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 Le code suivant exemple affiche le <xref:System.Windows.Forms.TreeNode.Text%2A> et <xref:System.Windows.Forms.TreeNode.Index%2A> les valeurs de propriété de la <xref:System.Windows.Forms.TreeNode> représenté par le <xref:System.Windows.Forms.TreeNode.Parent%2A> propriété de la <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle dessus. Le <xref:System.Windows.Forms.TreeView> doit comporter au moins deux nœuds racine, chacun possédant au moins un nœud enfant.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le frère précédent de nœud d’arbre.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le nœud d’arbre frère précédent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.PrevNode%2A> est le frère précédent <xref:System.Windows.Forms.TreeNode> dans le <xref:System.Windows.Forms.TreeNodeCollection> stockés dans le <xref:System.Windows.Forms.TreeNode.Nodes%2A> propriété parent du nœud de l’arborescence de <xref:System.Windows.Forms.TreeNode>. S’il n’existe aucun nœud d’arbre précédent, la <xref:System.Windows.Forms.TreeNode.PrevNode%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nœud d’arbre visible précédent.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeNode" /> qui représente le nœud d’arbre visible précédent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> peut être un enfant, un frère ou un nœud d’arborescence à partir d’une autre branche. S’il n’existe aucun nœud d’arbre précédent, la <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> retourne de la propriété `null`.  
  
   
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="treeNode.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime le nœud d’arbre en cours dans le contrôle arborescence.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Windows.Forms.TreeNode.Remove%2A> méthode est appelée, le nœud d’arbre et les nœuds d’arbre enfants assignés à la <xref:System.Windows.Forms.TreeNode>, sont supprimés de la <xref:System.Windows.Forms.TreeView>. Les nœuds enfants supprimés sont supprimés de la <xref:System.Windows.Forms.TreeView> mais restent attachées à ce nœud d’arbre.  
  
   
  
## Examples  
 Le code suivant exemple supprime un <xref:System.Windows.Forms.TreeNode> lorsque l’utilisateur clique sur la souris dessus et fait passer l’état à partir de développé à l’état réduit lorsque l’utilisateur clique dessus avec la roulette de souris. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle dessus. Le <xref:System.Windows.Forms.TreeView> doit comporter deux ou plusieurs nœuds d’arbre racine, chacun possédant au moins un nœud enfant.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur d’index de liste de l’image qui s’affiche quand le nœud d’arbre est dans l’état sélectionné.</summary>
        <value>Une valeur d’index de base zéro qui représente la position de l’image dans un <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> valeur est la valeur d’index d’un <xref:System.Drawing.Image> stockés dans le <xref:System.Windows.Forms.ImageList> affectée à la <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> propriété.  
  
> [!NOTE]
>  La valeur par défaut de la <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> propriété est identique à la <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> propriété de la <xref:System.Windows.Forms.TreeView> contrôler qui le <xref:System.Windows.Forms.TreeNode> est affecté à.  
  
   
  
## Examples  
 L’exemple de code suivant crée et attribue un <xref:System.Windows.Forms.ImageList> à un <xref:System.Windows.Forms.TreeView> contrôle et remplit la <xref:System.Windows.Forms.TreeView> contrôler avec <xref:System.Windows.Forms.TreeNode> objets. Les nœuds d’arborescence sont affectés des images à partir de la <xref:System.Windows.Forms.ImageList> qui s’affiche quand le nœud d’arbre est dans un état sélectionné ou désélectionné. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> contenant un <xref:System.Windows.Forms.TreeView>et un <xref:System.Collections.ArrayList> contenant `Customer` objets qui contiennent chacune `Order` objets. Elle requiert également que le `Customer` et `Order` objets sont définis.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la clé de l’image affichée dans le nœud d’arbre lorsqu’il est dans un état sélectionné.</summary>
        <value>La clé de l’image affichée quand le nœud d’arbre est dans un état sélectionné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clé d’image retournée par cette propriété est contenue dans le <xref:System.Windows.Forms.TreeView.ImageList%2A> propriété du parent <xref:System.Windows.Forms.TreeView> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Serialize (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="si"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui décrit <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Le <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique l’état du flux pendant la sérialisation</param>
        <summary>Enregistre l’état de la <see cref="T:System.Windows.Forms.TreeNode" /> spécifié <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les services de sérialisation. Énumération associée : <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’index de l’image qui est utilisée pour indiquer l’état de la <see cref="T:System.Windows.Forms.TreeNode" /> lorsque le parent <see cref="T:System.Windows.Forms.TreeView" /> a son <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> propriété définie sur <see langword="false" />.</summary>
        <value>L’index de l’image qui est utilisé pour indiquer l’état de la <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’index d’image qui est retourné par cette propriété est contenue dans le <xref:System.Windows.Forms.TreeView.StateImageList%2A> propriété du parent <xref:System.Windows.Forms.TreeView> contrôle.  
  
 Si le parent <xref:System.Windows.Forms.TreeView> a des cases à cocher est activées, le <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> est ignoré et le nœud affiche la première ou deuxième image dans le <xref:System.Windows.Forms.TreeView.StateImageList%2A> définie sur le parent <xref:System.Windows.Forms.TreeView> pour indiquer un état activé ou désactivé, respectivement. Activation/désactivation du <xref:System.Windows.Forms.TreeNode.Checked%2A> propriété n’affecte pas la valeur de la <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>.  
  
 Le <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> retourne -1 lorsque ne pas défini. Le <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> et <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propriétés s’excluent mutuellement, ce qui signifie que si elle est définie, l’autre est ignorée. Si vous définissez la <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> propriété, le <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propriété est automatiquement définie sur -1. Vous pouvez également, si vous définissez <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> est automatiquement définie sur une chaîne vide (« »).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L’index spécifié est inférieur à -1 ou supérieur à 14.</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la clé de l’image qui est utilisé pour indiquer l’état de la <see cref="T:System.Windows.Forms.TreeNode" /> lorsque le parent <see cref="T:System.Windows.Forms.TreeView" /> a son <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> propriété définie sur <see langword="false" />.</summary>
        <value>La clé de l’image qui est utilisé pour indiquer l’état de la <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clé de l’image qui est retournée par cette propriété est contenue dans le <xref:System.Windows.Forms.TreeView.StateImageList%2A> propriété du parent <xref:System.Windows.Forms.TreeView> contrôle.  
  
 Si le parent <xref:System.Windows.Forms.TreeView> a des cases à cocher est activées, le <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> est ignoré et le nœud affiche la première ou deuxième image dans le <xref:System.Windows.Forms.TreeView.StateImageList%2A> définie sur le parent <xref:System.Windows.Forms.TreeView> pour indiquer un état activé ou désactivé, respectivement. Activation/désactivation du <xref:System.Windows.Forms.TreeNode.Checked%2A> propriété n’affecte pas la valeur de la <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>.  
  
 Le <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> et <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propriétés s’excluent mutuellement, ce qui signifie que si elle est définie, l’autre est ignorée. Si vous définissez la <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> propriété, le <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> propriété est automatiquement définie sur -1. Vous pouvez également, si vous définissez <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> est automatiquement définie sur une chaîne vide (« »). Vous devez définir le <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> à une image avec un index correspondant entre 0 et 14. Vous pouvez définir le <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> à une image avec un index supérieur à 14 (une exception ne sera pas levée), mais l’image de la valeur ne s’affichent pas  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">Un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données à sérialiser le <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <param name="context">Un <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient les informations de destination de cette sérialisation.</param>
        <summary>Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les services de sérialisation. Énumération associée : <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.TreeNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’objet qui contient des données sur le nœud d’arbre.</summary>
        <value>Un <see cref="T:System.Object" /> qui contient les données sur le nœud d’arbre. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 N’importe quel <xref:System.Object> type dérivé peut être assignée à cette propriété. Si cette propriété est définie par le biais du Concepteur Windows Forms, vous pouvez assigner que du texte.  
  
> [!CAUTION]
>  Le <xref:System.Windows.Forms.TreeNode.Clone%2A> méthode effectue une copie superficielle du nœud. Si la valeur de la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété est un type référence, la copie d’origine et clonée pointera vers la même instance unique de la <xref:System.Windows.Forms.TreeNode.Tag%2A> valeur.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nœud d’arbre racine pour affecter des nœuds d’arbre enfants. Un nœud d’arbre enfant pour chaque `Customer` de l’objet dans un <xref:System.Collections.ArrayList> est ajouté au nœud d’arbre racine ainsi que sur un nœud d’arbre enfant pour chaque `Order` objet assigné à la `Customer` objet. Le `Customer` objet est assigné à la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété et les nœuds d’arborescence représentant `Customer` les objets sont affichés avec <xref:System.Drawing.Color.Orange%2A> texte. Cet exemple nécessite que vous avez un `Customer` et `Order` objet défini, un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>et un <xref:System.Collections.ArrayList> nommé `customerArray` contenant `Customer` objets.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte affiché dans l’étiquette du nœud d’arbre.</summary>
        <value>Le texte affiché dans l’étiquette du nœud d’arbre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nombre maximal de caractères qui un <xref:System.Windows.Forms.TreeNode> peut afficher est fixé à 259. Si un <xref:System.String> qui a plus de 259 caractères est assigné à cette propriété, seuls les 259 premiers caractères sont affichés.  
  
 Cette propriété ne peut pas être définie par l’utilisateur si le <xref:System.Windows.Forms.TreeView.LabelEdit%2A> propriété du parent <xref:System.Windows.Forms.TreeView> est défini sur `false`. L’alternative à définir explicitement cette propriété consiste à créer le nœud d’arbre en utilisant l’une de le <xref:System.Windows.Forms.TreeNode.%23ctor%2A> constructeurs qui a un paramètre de chaîne qui représente le <xref:System.Windows.Forms.TreeNode.Text%2A> propriété. L’étiquette est affichée à côté du <xref:System.Windows.Forms.TreeNode> de l’image, si affichée.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nœud d’arbre racine pour affecter des nœuds d’arbre enfants. Un nœud d’arbre enfant pour chaque `Customer` de l’objet dans un <xref:System.Collections.ArrayList> est ajouté au nœud d’arbre racine ainsi que sur un nœud d’arbre enfant pour chaque `Order` objet assigné à la `Customer` objet. Le `Customer` objet est assigné à la <xref:System.Windows.Forms.TreeNode.Tag%2A> propriété et les nœuds d’arborescence représentant `Customer` les objets sont affichés avec <xref:System.Drawing.Color.Orange%2A> texte. Cet exemple nécessite que vous avez un `Customer` et `Order` objet défini, un <xref:System.Windows.Forms.TreeView> control sur un <xref:System.Windows.Forms.Form>et un <xref:System.Collections.ArrayList> nommé `customerArray` contenant `Customer` objets.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberSignature Language="F#" Value="member this.Toggle : unit -&gt; unit" Usage="treeNode.Toggle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Active ou désactive le nœud d’arbre soit l’état développé ou réduit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nœud d’arbre est activé ou désactivé à l’état opposé à son état actuel, développé ou réduit.  
  
> [!NOTE]
>  L’état d’un <xref:System.Windows.Forms.TreeNode> est rendu persistant. Par exemple, si le niveau suivant de nœuds enfants n’est pas réduit précédemment, lorsque le <xref:System.Windows.Forms.TreeNode.Expand%2A> est appelée, les nœuds enfants apparaissent dans leur état précédemment développé.  
  
   
  
## Examples  
 Le code suivant exemple supprime un <xref:System.Windows.Forms.TreeNode> lorsque l’utilisateur clique sur la souris dessus et fait passer l’état à partir de développé à l’état réduit lorsque l’utilisateur clique dessus avec la roulette de souris. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle dessus. Le <xref:System.Windows.Forms.TreeView> doit comporter deux ou plusieurs nœuds d’arbre racine, chacun possédant au moins un nœud enfant.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte qui apparaît lorsque le pointeur de la souris pointe sur un <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>Obtient le texte qui apparaît lorsque le pointeur de la souris pointe sur un <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez définir le <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> propriété du parent <xref:System.Windows.Forms.TreeView> à `true` pour le <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> soit visible au moment de l’exécution.  
  
 Si le <xref:System.Windows.Forms.TreeView> contrôle a une info-bulle et contient également un <xref:System.Windows.Forms.TreeNode> qui a un <xref:System.Windows.Forms.ToolTip>, seule la <xref:System.Windows.Forms.ToolTip> pour le nœud s’affichera.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> et <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> propriétés. Pour exécuter cet exemple, collez le code suivant dans un Windows Form et appelez `InitializeTreeViewWithToolTips` à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> Gestionnaire d’événements.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une chaîne qui représente l'objet actuel.</summary>
        <returns>Chaîne qui représente l'objet actuel.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreeView : System.Windows.Forms.TreeView" Usage="System.Windows.Forms.TreeNode.TreeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le parent arborescence que le nœud d’arbre est assigné.</summary>
        <value>Un <see cref="T:System.Windows.Forms.TreeView" /> qui représente l’arborescence parente qui le nœud d’arbre est assigné, ou <see langword="null" /> si le nœud n’a pas été assigné à une arborescence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant sélectionne le texte approprié <xref:System.Windows.Forms.TreeNode> après avoir déterminé si le <xref:System.Windows.Forms.TreeNode> passé dans est sélectionné et qui <xref:System.Windows.Forms.TreeNode> à sélectionner. Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> contrôle qui a un <xref:System.Windows.Forms.TreeNodeCollection> qui contient plusieurs <xref:System.Windows.Forms.TreeNode> objets. Elle nécessite également que vous avez un <xref:System.Windows.Forms.ComboBox> avec les éléments suivants : « Précédent », « PreviousVisible », « Suivant », « NextVisible », « Première » et « Dernier ».  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>