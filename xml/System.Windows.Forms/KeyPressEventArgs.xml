<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a38a98d5a3fecae47017c953aa00e26641afa2a" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015531" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.KeyPressEventArgs> Spécifie le caractère qui est composé lorsque l’utilisateur appuie sur une touche. Par exemple, lorsque l’utilisateur appuie sur MAJ + K, le <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> propriété retourne un k en majuscule.  
  
 Un <xref:System.Windows.Forms.Control.KeyPress> événement se produit lorsque l’utilisateur appuie sur une touche. Deux événements sont étroitement liées à la <xref:System.Windows.Forms.Control.KeyPress> événement sont <xref:System.Windows.Forms.Control.KeyUp> et <xref:System.Windows.Forms.Control.KeyDown>. Le <xref:System.Windows.Forms.Control.KeyDown> événement précède chaque <xref:System.Windows.Forms.Control.KeyPress> événement lorsque l’utilisateur appuie sur une touche et un <xref:System.Windows.Forms.Control.KeyUp> événement se produit lorsque l’utilisateur relâche une touche. Lorsque l’utilisateur appuie sur une touche enfoncée, dupliquer <xref:System.Windows.Forms.Control.KeyDown> et <xref:System.Windows.Forms.Control.KeyPress> se produisent chaque fois que le caractère se répète. Un seul <xref:System.Windows.Forms.Control.KeyUp> événement est généré dès son lancement.  
  
 Avec chaque <xref:System.Windows.Forms.Control.KeyPress> événement, un <xref:System.Windows.Forms.KeyPressEventArgs> est passé. Un <xref:System.Windows.Forms.KeyEventArgs> est passée avec chaque <xref:System.Windows.Forms.Control.KeyDown> et <xref:System.Windows.Forms.Control.KeyUp> événement. Un <xref:System.Windows.Forms.KeyEventArgs> Spécifie si des touches de modification (MAJ, CTRL ou ALT) ont été enfoncées en même temps que d’une autre clé. (Informations de ce modificateur peuvent également être obtenues via la <xref:System.Windows.Forms.Control.ModifierKeys%2A> propriété de la <xref:System.Windows.Forms.Control> classe.)  
  
 Définissez <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> à `true` pour annuler le `KeyPress` événement. Cela permet de conserver le contrôle de traiter la touche enfoncée.  
  
> [!NOTE]
>  Certains contrôles traiteront des séquences de touches sur <xref:System.Windows.Forms.Control.KeyDown>. Par exemple, <xref:System.Windows.Forms.RichTextBox> traite la touche entrée avant <xref:System.Windows.Forms.Control.KeyPress> est appelée. Dans ce cas, vous ne pouvez pas annuler la <xref:System.Windows.Forms.Control.KeyPress> événement et vous devez annuler la séquence de touches de <xref:System.Windows.Forms.Control.KeyDown> à la place.  
  
 Pour plus d’informations sur le modèle d’événement, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple suivant illustre l’utilisation de la <xref:System.Windows.Forms.KeyPressEventArgs> pour compter les touches dès qu’elles sont activées et pour afficher les résultats après chaque appui sur une touche. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> puis la valeur True pour conserver le système d’exploitation à partir d’autres traite la clé. L’exemple suppose un formulaire avec un <xref:System.Windows.Forms.TextBox> placé dessus.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 Vous devez créer une nouvelle instance de cette classe. Vous devez également définir le Gestionnaire d’événements. Ce faire, dans le constructeur pour votre classe.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 Lorsque l’événement spécifié est déclenché dans le contrôle, la méthode attachée est appelée et l’application peut exécuter du code en réponse à l’événement.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">Le caractère ASCII correspondant à la clé de l’utilisateur a appuyé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.KeyPressEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> propriété à obtenir l’état actuel des touches de modification.  
  
   
  
## Examples  
 L’exemple suivant affiche une boîte de message qui affiche l’état actuel de la touche MAJ ENFONCÉE.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le <see cref="E:System.Windows.Forms.Control.KeyPress" /> événement a été géré.</summary>
        <value><see langword="true" /> Si l’événement est géré ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’événement n’est pas géré, il sera envoyé au système d’exploitation pour le traitement de la valeur par défaut. Définissez <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> à `true` pour annuler le `KeyPress` événement.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Forms.TextBox> contrôle. Le `keypressed` méthode utilise le <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> propriété à vérifier si la touche entrée est enfoncée. Si la touche entrée est enfoncée, le <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> propriété est définie sur `true`, ce qui indique l’événement est géré.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le caractère correspondant à la touche activée.</summary>
        <value>Caractère ASCII composé. Par exemple, si l'utilisateur appuie sur les touches Maj + K, cette propriété retourne la lettre K en majuscule.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> propriété aux séquences de touches exemple en cours d’exécution et de modifier des séquences de touches dans des circonstances particulières moment de l’exécution. Par exemple, vous pouvez utiliser <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> pour désactiver les pressions sur les touches non numériques lorsque l’utilisateur entre un code postal, modifier toute activation de touche alphabétique en majuscule dans un champ d’entrée de données, ou contrôler le clavier ou tout autre périphérique d’entrée clé pour les combinaisons de touches spécifiques.  
  
 Vous pouvez obtenir ou définir les clés suivantes :  
  
-   a-z, A-Z.  
  
-   CTRL.  
  
-   Signes de ponctuation.  
  
-   Nombre de clés, à la fois dans la partie supérieure du clavier et sur le pavé numérique.  
  
-   ENTREZ.  
  
 Vous ne pouvez pas obtenir ou définir les clés suivantes :  
  
-   Touche Tabulation.  
  
-   INSERT et DELETE.  
  
-   PAGE D’ACCUEIL.  
  
-   FIN.  
  
-   Pg préc et Pg suiv.  
  
-   F1-F2.  
  
-   ALT.  
  
-   Touches de direction.  
  
> [!NOTE]
>  Pour plus d’informations sur la façon de détecter toutes les clés de caractère non mentionnées ci-dessus, consultez la <xref:System.Windows.Forms.KeyEventArgs> classe.  
  
-  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Forms.TextBox> contrôle. Le `keypressed` méthode utilise le <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> propriété à vérifier si la touche entrée est enfoncée. Si la touche entrée est enfoncée, le <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> propriété est définie sur `true`, ce qui indique l’événement est géré.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>