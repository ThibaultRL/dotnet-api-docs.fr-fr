<Type Name="Application" FullName="System.Windows.Forms.Application">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5e030aa8a8801c2db61e3fbd8cbc521c6e064615" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65016206" /></Metadata><TypeSignature Language="C#" Value="public sealed class Application" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Application extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Application" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Application" />
  <TypeSignature Language="C++ CLI" Value="public ref class Application sealed" />
  <TypeSignature Language="F#" Value="type Application = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="efd02-101">Fournit des propriétés et des méthodes <see langword="static" /> pour gérer une application, comme des méthodes permettant de démarrer et d'arrêter une application et de traiter des messages Windows, et des propriétés permettant d'obtenir des informations sur une application.</span><span class="sxs-lookup"><span data-stu-id="efd02-101">Provides <see langword="static" /> methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application.</span></span> <span data-ttu-id="efd02-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="efd02-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-103">Le <xref:System.Windows.Forms.Application> classe a des méthodes pour démarrer et arrêter des applications et des threads et pour traiter les messages Windows, comme suit :</span><span class="sxs-lookup"><span data-stu-id="efd02-103">The <xref:System.Windows.Forms.Application> class has methods to start and stop applications and threads, and to process Windows messages, as follows:</span></span>  
  
-   <span data-ttu-id="efd02-104"><xref:System.Windows.Forms.Application.Run%2A> démarre une boucle de messages d’application sur le thread actuel et, éventuellement, affiche un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-104"><xref:System.Windows.Forms.Application.Run%2A> starts an application message loop on the current thread and, optionally, makes a form visible.</span></span>  
  
-   <span data-ttu-id="efd02-105"><xref:System.Windows.Forms.Application.Exit%2A> ou <xref:System.Windows.Forms.Application.ExitThread%2A> s’arrête une boucle de message.</span><span class="sxs-lookup"><span data-stu-id="efd02-105"><xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> stops a message loop.</span></span>  
  
-   <span data-ttu-id="efd02-106"><xref:System.Windows.Forms.Application.DoEvents%2A> traite les messages pendant que votre programme est dans une boucle.</span><span class="sxs-lookup"><span data-stu-id="efd02-106"><xref:System.Windows.Forms.Application.DoEvents%2A> processes messages while your program is in a loop.</span></span>  
  
-   <span data-ttu-id="efd02-107"><xref:System.Windows.Forms.Application.AddMessageFilter%2A> Ajoute un filtre de messages à la pompe de messages d’application pour surveiller les messages Windows.</span><span class="sxs-lookup"><span data-stu-id="efd02-107"><xref:System.Windows.Forms.Application.AddMessageFilter%2A> adds a message filter to the application message pump to monitor Windows messages.</span></span>  
  
-   <span data-ttu-id="efd02-108"><xref:System.Windows.Forms.IMessageFilter> vous permet d’empêcher un événement d’être déclenchés ou effectuer des opérations spéciales avant d’appeler un gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="efd02-108"><xref:System.Windows.Forms.IMessageFilter> lets you stop an event from being raised or perform special operations before invoking an event handler.</span></span>  
  
 <span data-ttu-id="efd02-109">Cette classe a <xref:System.Windows.Forms.Application.CurrentCulture%2A> et <xref:System.Windows.Forms.Application.CurrentInputLanguage%2A> propriétés pour obtenir ou définir les informations de culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="efd02-109">This class has <xref:System.Windows.Forms.Application.CurrentCulture%2A> and <xref:System.Windows.Forms.Application.CurrentInputLanguage%2A> properties to get or set culture information for the current thread.</span></span>  
  
 <span data-ttu-id="efd02-110">Vous ne pouvez pas créer une instance de cette classe.</span><span class="sxs-lookup"><span data-stu-id="efd02-110">You cannot create an instance of this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-111">L’exemple de code suivant répertorie les numéros dans une zone de liste sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-111">The following code example lists numbers in a list box on a form.</span></span> <span data-ttu-id="efd02-112">Chaque fois que vous cliquez sur `button1`, l’application ajoute un autre numéro à la liste.</span><span class="sxs-lookup"><span data-stu-id="efd02-112">Each time you click `button1`, the application adds another number to the list.</span></span>  
  
 <span data-ttu-id="efd02-113">Le `Main` les appels de méthode <xref:System.Windows.Forms.Application.Run%2A> pour démarrer l’application, ce qui crée le formulaire, `listBox1` et `button1`.</span><span class="sxs-lookup"><span data-stu-id="efd02-113">The `Main` method calls <xref:System.Windows.Forms.Application.Run%2A> to start the application, which creates the form, `listBox1` and `button1`.</span></span> <span data-ttu-id="efd02-114">Lorsque l’utilisateur clique sur `button1`, le `button1_Click` méthode affiche une <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-114">When the user clicks `button1`, the `button1_Click` method displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="efd02-115">Si l’utilisateur clique sur `No` sur le <xref:System.Windows.Forms.MessageBox>, le `button1_Click` méthode ajoute un nombre à la liste.</span><span class="sxs-lookup"><span data-stu-id="efd02-115">If the user clicks `No` on the <xref:System.Windows.Forms.MessageBox>, the `button1_Click` method adds a number to the list.</span></span> <span data-ttu-id="efd02-116">Si l’utilisateur clique sur `Yes`, l’application appelle <xref:System.Windows.Forms.Application.Exit%2A> pour traiter tous les messages restants dans la file d’attente, puis s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="efd02-116">If the user clicks `Yes`, the application calls <xref:System.Windows.Forms.Application.Exit%2A> to process all remaining messages in the queue and then to quit.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-117">L’appel à <xref:System.Windows.Forms.Application.Exit%2A> échouera avec une confiance partielle.</span><span class="sxs-lookup"><span data-stu-id="efd02-117">The call to <xref:System.Windows.Forms.Application.Exit%2A> will fail in partial trust.</span></span>  
  
 [!code-cpp[Classic Application Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application Example/CS/source.cs#1)]
 [!code-vb[Classic Application Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMessageFilter">
      <MemberSignature Language="C#" Value="public static void AddMessageFilter (System.Windows.Forms.IMessageFilter value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMessageFilter(class System.Windows.Forms.IMessageFilter value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMessageFilter (value As IMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMessageFilter(System::Windows::Forms::IMessageFilter ^ value);" />
      <MemberSignature Language="F#" Value="static member AddMessageFilter : System.Windows.Forms.IMessageFilter -&gt; unit" Usage="System.Windows.Forms.Application.AddMessageFilter value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.IMessageFilter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="efd02-118">Implémentation de l'interface <see cref="T:System.Windows.Forms.IMessageFilter" /> que vous souhaitez installer.</span><span class="sxs-lookup"><span data-stu-id="efd02-118">The implementation of the <see cref="T:System.Windows.Forms.IMessageFilter" /> interface you want to install.</span></span></param>
        <summary><span data-ttu-id="efd02-119">Ajoute un filtre de messages permettant de surveiller les messages Windows lors de leur routage vers leur destination.</span><span class="sxs-lookup"><span data-stu-id="efd02-119">Adds a message filter to monitor Windows messages as they are routed to their destinations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-120">Utiliser un filtre de messages pour empêcher le déclenchement des événements spécifiques ou pour effectuer des opérations spéciales pour un événement avant d’être passé au gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="efd02-120">Use a message filter to prevent specific events from being raised or to perform special operations for an event before it is passed to an event handler.</span></span> <span data-ttu-id="efd02-121">Filtres de messages sont propres à un thread spécifique.</span><span class="sxs-lookup"><span data-stu-id="efd02-121">Message filters are unique to a specific thread.</span></span>  
  
 <span data-ttu-id="efd02-122">Pour empêcher un message d’être distribués, le `value` instance de paramètre que vous passez à cette méthode doit substituer la <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> méthode par le code pour gérer le message.</span><span class="sxs-lookup"><span data-stu-id="efd02-122">To prevent a message from being dispatched, the `value` parameter instance that you pass to this method must override the <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> method with the code to handle the message.</span></span> <span data-ttu-id="efd02-123">La méthode doit retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="efd02-123">The method must return `false`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-124">Ajout de filtres de message à la pompe de messages pour une application peut dégrader les performances.</span><span class="sxs-lookup"><span data-stu-id="efd02-124">Adding message filters to the message pump for an application can degrade performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-125">L’exemple de code suivant crée un filtre de messages appelé `TestMessageFilter`.</span><span class="sxs-lookup"><span data-stu-id="efd02-125">The following code example creates a message filter called `TestMessageFilter`.</span></span> <span data-ttu-id="efd02-126">Ce filtre bloque tous les messages relatifs au bouton gauche de la souris.</span><span class="sxs-lookup"><span data-stu-id="efd02-126">This filter blocks all messages relating to the left mouse button.</span></span> <span data-ttu-id="efd02-127">Avant de pouvoir utiliser un filtre de messages, vous devez fournir une implémentation pour le <xref:System.Windows.Forms.IMessageFilter> interface.</span><span class="sxs-lookup"><span data-stu-id="efd02-127">Before you can use a message filter, you must provide an implementation for the <xref:System.Windows.Forms.IMessageFilter> interface.</span></span>  
  
 [!code-cpp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CS/source.cs#1)]
 [!code-vb[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-128">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="efd02-128">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="efd02-129">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="efd02-129">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AllowQuit">
      <MemberSignature Language="C#" Value="public static bool AllowQuit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AllowQuit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.AllowQuit" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AllowQuit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AllowQuit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowQuit : bool" Usage="System.Windows.Forms.Application.AllowQuit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-130">Obtient une valeur indiquant si l'appelant peut quitter cette application.</span><span class="sxs-lookup"><span data-stu-id="efd02-130">Gets a value indicating whether the caller can quit this application.</span></span></summary>
        <value><span data-ttu-id="efd02-131"><see langword="true" /> si l'appelant peut quitter cette application ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-131"><see langword="true" /> if the caller can quit this application; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-132">Cette propriété retourne `false` si elle est appelée à partir d’un <xref:System.Windows.Forms.Control> hébergé dans un navigateur Web.</span><span class="sxs-lookup"><span data-stu-id="efd02-132">This property returns `false` if it is called from a <xref:System.Windows.Forms.Control> being hosted within a Web browser.</span></span> <span data-ttu-id="efd02-133">Par conséquent, le <xref:System.Windows.Forms.Control> ne peut pas quitter le <xref:System.Windows.Forms.Application>.</span><span class="sxs-lookup"><span data-stu-id="efd02-133">Thus, the <xref:System.Windows.Forms.Control> cannot quit the <xref:System.Windows.Forms.Application>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationExit">
      <MemberSignature Language="C#" Value="public static event EventHandler ApplicationExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ApplicationExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Application.ApplicationExit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ApplicationExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ApplicationExit;" />
      <MemberSignature Language="F#" Value="member this.ApplicationExit : EventHandler " Usage="member this.ApplicationExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-134">Se produit lorsque l'application est sur le point de s'arrêter.</span><span class="sxs-lookup"><span data-stu-id="efd02-134">Occurs when the application is about to shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-135">Vous devez attacher les gestionnaires d’événements pour le `ApplicationExit` événement effectuer non prise en charge, les tâches requises avant l’arrêt de l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-135">You must attach the event handlers to the `ApplicationExit` event to perform unhandled, required tasks before the application stops running.</span></span> <span data-ttu-id="efd02-136">Vous pouvez fermer les fichiers ouverts par cette application, ou supprimez les objets que le garbage collection n’a pas récupéré.</span><span class="sxs-lookup"><span data-stu-id="efd02-136">You can close files opened by this application, or dispose of objects that garbage collection did not reclaim.</span></span>  
  
 <span data-ttu-id="efd02-137">Comme il s’agit d’un événement statique, vous devez détacher les gestionnaires d’événements associés à cet événement dans le `ApplicationExit` Gestionnaire d’événements lui-même.</span><span class="sxs-lookup"><span data-stu-id="efd02-137">Because this is a static event, you must detach any event handlers attached to this event in the `ApplicationExit` event handler itself.</span></span> <span data-ttu-id="efd02-138">Si vous ne détachez pas ces gestionnaires, ils seront restent attachées à l’événement et continuent de consommer de mémoire.</span><span class="sxs-lookup"><span data-stu-id="efd02-138">If you do not detach these handlers, they will remain attached to the event and continue to consume memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-139">L’exemple de code suivant affiche deux formulaires et quitte l’application lorsque les deux formes sont fermés.</span><span class="sxs-lookup"><span data-stu-id="efd02-139">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="efd02-140">Lorsque l’application démarre et s’arrête, la position de chaque formulaire est mémorisée.</span><span class="sxs-lookup"><span data-stu-id="efd02-140">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="efd02-141">Cet exemple montre comment utiliser le `ApplicationExit` événement savoir lorsque les positions de formulaire doivent être persistante dans le fichier et lorsque le `FileStream` doit être fermé.</span><span class="sxs-lookup"><span data-stu-id="efd02-141">This example demonstrates using the `ApplicationExit` event to know when the form positions should be persisted to the file, and when the `FileStream` should be closed.</span></span>  
  
 <span data-ttu-id="efd02-142">La classe `MyApplicationContext` hérite <xref:System.Windows.Forms.ApplicationContext> et effectue le suivi de chaque formulaire est fermé, puis quitte le thread actuel lorsque les deux sont.</span><span class="sxs-lookup"><span data-stu-id="efd02-142">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track of when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="efd02-143">La classe mémorise la position de chaque formulaire lorsqu’il est fermé.</span><span class="sxs-lookup"><span data-stu-id="efd02-143">The class remembers the position of each form when it is closed.</span></span> <span data-ttu-id="efd02-144">Lorsque le `ApplicationExit` événement se produit, la classe écrit les positions de chacun d’eux pour l’utilisateur dans le fichier.</span><span class="sxs-lookup"><span data-stu-id="efd02-144">When the `ApplicationExit` event occurs, the class writes the positions of each for the user to the file.</span></span> <span data-ttu-id="efd02-145">Les données de position du formulaire sont stockées dans un fichier intitulé `appdata.txt` qui est créé à l’emplacement déterminé par <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-145">The form position data is stored in a file titled `appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span> <span data-ttu-id="efd02-146">Le `Main` les appels de méthode `Application.Run(context)` pour démarrer l’application étant donnée le <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="efd02-146">The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 <span data-ttu-id="efd02-147">Ce code est un extrait de l’exemple illustré dans la <xref:System.Windows.Forms.ApplicationContext> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="efd02-147">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="efd02-148">Consultez <xref:System.Windows.Forms.ApplicationContext> pour obtenir la liste de l’ensemble du code.</span><span class="sxs-lookup"><span data-stu-id="efd02-148">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#5)]
 [!code-csharp[Application#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#5)]
 [!code-vb[Application#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="CommonAppDataPath">
      <MemberSignature Language="C#" Value="public static string CommonAppDataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CommonAppDataPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.CommonAppDataPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CommonAppDataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CommonAppDataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommonAppDataPath : string" Usage="System.Windows.Forms.Application.CommonAppDataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-149">Obtient le chemin des données d’application partagé par tous les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="efd02-149">Gets the path for the application data that is shared among all users.</span></span></summary>
        <value><span data-ttu-id="efd02-150">Chemin des données d’application partagé par tous les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="efd02-150">The path for the application data that is shared among all users.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-151">Si un chemin d’accès n’existe pas, un est créé dans le format suivant :</span><span class="sxs-lookup"><span data-stu-id="efd02-151">If a path does not exist, one is created in the following format:</span></span>  
  
 <span data-ttu-id="efd02-152">*Chemin d’accès de base*\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span><span class="sxs-lookup"><span data-stu-id="efd02-152">*Base Path*\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span></span>  
  
 <span data-ttu-id="efd02-153"><xref:System.Windows.Forms.Application.ProductVersion%2A> Détermine si l’assembly contenant le fichier exécutable principal a d’abord le `AssemblyInformationalVersion` attribut dessus.</span><span class="sxs-lookup"><span data-stu-id="efd02-153"><xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it.</span></span> <span data-ttu-id="efd02-154">Si cet attribut existe, il est utilisé pour les deux <xref:System.Windows.Forms.Application.ProductVersion%2A> et <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-154">If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</span></span> <span data-ttu-id="efd02-155">Si cet attribut n’existe pas, les deux propriétés utilisent la version du fichier exécutable à la place.</span><span class="sxs-lookup"><span data-stu-id="efd02-155">If this attribute does not exist, both properties use the version of the executable file instead.</span></span>  
  
 <span data-ttu-id="efd02-156">Le chemin d’accès sera différent selon que l’application Windows Forms est déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-156">The path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <span data-ttu-id="efd02-157">les applications sont stockées dans un cache d’application par utilisateur dans le C:\Documents and Settings\\*nom d’utilisateur* directory.</span><span class="sxs-lookup"><span data-stu-id="efd02-157">applications are stored in a per-user application cache in the C:\Documents and Settings\\*username* directory.</span></span> <span data-ttu-id="efd02-158">Pour plus d’informations, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span><span class="sxs-lookup"><span data-stu-id="efd02-158">For more information, see [Accessing Local and Remote Data in ClickOnce Applications](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Application.CommonAppDataRegistry" />
      </Docs>
    </Member>
    <Member MemberName="CommonAppDataRegistry">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey CommonAppDataRegistry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Win32.RegistryKey CommonAppDataRegistry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.CommonAppDataRegistry" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CommonAppDataRegistry As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Win32::RegistryKey ^ CommonAppDataRegistry { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommonAppDataRegistry : Microsoft.Win32.RegistryKey" Usage="System.Windows.Forms.Application.CommonAppDataRegistry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-159">Obtient la clé de Registre des données d'application partagées entre tous les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="efd02-159">Gets the registry key for the application data that is shared among all users.</span></span></summary>
        <value><span data-ttu-id="efd02-160"><see cref="T:Microsoft.Win32.RegistryKey" /> représentant la clé de Registre des données d'application partagées entre tous les utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="efd02-160">A <see cref="T:Microsoft.Win32.RegistryKey" /> representing the registry key of the application data that is shared among all users.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-161">Si la clé n’existe pas, il est créé dans le format suivant :</span><span class="sxs-lookup"><span data-stu-id="efd02-161">If the key does not exist, it is created in the following format:</span></span>  
  
 <span data-ttu-id="efd02-162">LocalMachine\Software\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span><span class="sxs-lookup"><span data-stu-id="efd02-162">LocalMachine\Software\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public static string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Windows.Forms.Application.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-163">Obtient le nom de la société associée à l'application.</span><span class="sxs-lookup"><span data-stu-id="efd02-163">Gets the company name associated with the application.</span></span></summary>
        <value><span data-ttu-id="efd02-164">Nom de la société.</span><span class="sxs-lookup"><span data-stu-id="efd02-164">The company name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efd02-165">L’exemple de code suivant obtient cette propriété et affiche sa valeur dans une zone de texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-165">The following code example gets this property and displays its value in a text box.</span></span> <span data-ttu-id="efd02-166">L’exemple exige que `textBox1` a été placé sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-166">The example requires that `textBox1` has been placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.CompanyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.CompanyName Example/CS/source.cs#1)]
 [!code-vb[Classic Application.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.CompanyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Application.ProductName" />
        <altmember cref="P:System.Windows.Forms.Application.ProductVersion" />
        <altmember cref="T:System.Reflection.AssemblyCompanyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Forms.Application.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-167">Obtient ou définit les informations sur la culture du thread en cours.</span><span class="sxs-lookup"><span data-stu-id="efd02-167">Gets or sets the culture information for the current thread.</span></span></summary>
        <value><span data-ttu-id="efd02-168"><see cref="T:System.Globalization.CultureInfo" /> représentant les informations sur la culture du thread en cours.</span><span class="sxs-lookup"><span data-stu-id="efd02-168">A <see cref="T:System.Globalization.CultureInfo" /> representing the culture information for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efd02-169">L’exemple de code suivant obtient cette propriété et affiche sa valeur dans une zone de texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-169">The following code example gets this property and displays its value in a text box.</span></span> <span data-ttu-id="efd02-170">L’exemple exige que `textBox1` a été placé sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-170">The example requires that `textBox1` has been placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.CurrentCulture Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.CurrentCulture Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.CurrentCulture Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.CurrentCulture Example/CS/source.cs#1)]
 [!code-vb[Classic Application.CurrentCulture Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.CurrentCulture Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="efd02-171">pour toutes les fenêtres définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="efd02-171">for all windows to set this property.</span></span> <span data-ttu-id="efd02-172">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="efd02-172">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInputLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.InputLanguage CurrentInputLanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.InputLanguage CurrentInputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.CurrentInputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentInputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::InputLanguage ^ CurrentInputLanguage { System::Windows::Forms::InputLanguage ^ get(); void set(System::Windows::Forms::InputLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInputLanguage : System.Windows.Forms.InputLanguage with get, set" Usage="System.Windows.Forms.Application.CurrentInputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-173">Obtient ou définit le langage d'entrée actuel du thread en cours.</span><span class="sxs-lookup"><span data-stu-id="efd02-173">Gets or sets the current input language for the current thread.</span></span></summary>
        <value><span data-ttu-id="efd02-174"><see cref="T:System.Windows.Forms.InputLanguage" /> représentant le langage d'entrée actuel du thread en cours.</span><span class="sxs-lookup"><span data-stu-id="efd02-174">An <see cref="T:System.Windows.Forms.InputLanguage" /> representing the current input language for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efd02-175">L’exemple de code suivant obtient cette propriété et affiche sa valeur dans une zone de texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-175">The following code example gets this property and displays its value in a text box.</span></span> <span data-ttu-id="efd02-176">L’exemple exige que `textBox1` a été placé sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-176">The example requires that `textBox1` has been placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.CurrentInputLanguage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.CurrentInputLanguage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.CurrentInputLanguage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.CurrentInputLanguage Example/CS/source.cs#1)]
 [!code-vb[Classic Application.CurrentInputLanguage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.CurrentInputLanguage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-177">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="efd02-177">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="efd02-178">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="efd02-178">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
    <Member MemberName="DoEvents">
      <MemberSignature Language="C#" Value="public static void DoEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DoEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.DoEvents" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DoEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DoEvents();" />
      <MemberSignature Language="F#" Value="static member DoEvents : unit -&gt; unit" Usage="System.Windows.Forms.Application.DoEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-179">Traite tous les messages Windows présents dans la file d'attente de messages.</span><span class="sxs-lookup"><span data-stu-id="efd02-179">Processes all Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-180">Lorsque vous exécutez un formulaire Windows, il crée le nouveau formulaire, puis attend des événements à gérer.</span><span class="sxs-lookup"><span data-stu-id="efd02-180">When you run a Windows Form, it creates the new form, which then waits for events to handle.</span></span> <span data-ttu-id="efd02-181">Chaque fois que le formulaire gère un événement, il traite tout le code associé à cet événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-181">Each time the form handles an event, it processes all the code associated with that event.</span></span> <span data-ttu-id="efd02-182">Tous les autres événements attendent dans la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="efd02-182">All other events wait in the queue.</span></span> <span data-ttu-id="efd02-183">Pendant que votre code gère l’événement, votre application ne répond pas.</span><span class="sxs-lookup"><span data-stu-id="efd02-183">While your code handles the event, your application does not respond.</span></span> <span data-ttu-id="efd02-184">Par exemple, la fenêtre ne repeint pas si une autre fenêtre est déplacée en haut.</span><span class="sxs-lookup"><span data-stu-id="efd02-184">For example, the window does not repaint if another window is dragged on top.</span></span>  
  
 <span data-ttu-id="efd02-185">Si vous appelez <xref:System.Windows.Forms.Application.DoEvents%2A> dans votre code, votre application peut gérer les autres événements.</span><span class="sxs-lookup"><span data-stu-id="efd02-185">If you call <xref:System.Windows.Forms.Application.DoEvents%2A> in your code, your application can handle the other events.</span></span> <span data-ttu-id="efd02-186">Par exemple, si vous disposez d’un formulaire qui ajoute des données à un <xref:System.Windows.Forms.ListBox> et ajoutez <xref:System.Windows.Forms.Application.DoEvents%2A> à votre code, votre formulaire se repeint lorsqu’une autre fenêtre est déplacée sur celui-ci.</span><span class="sxs-lookup"><span data-stu-id="efd02-186">For example, if you have a form that adds data to a <xref:System.Windows.Forms.ListBox> and add <xref:System.Windows.Forms.Application.DoEvents%2A> to your code, your form repaints when another window is dragged over it.</span></span> <span data-ttu-id="efd02-187">Si vous supprimez <xref:System.Windows.Forms.Application.DoEvents%2A> à partir de votre code, votre formulaire se repeint pas jusqu'à la fin du Gestionnaire d’événements click du bouton de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="efd02-187">If you remove <xref:System.Windows.Forms.Application.DoEvents%2A> from your code, your form will not repaint until the click event handler of the button is finished executing.</span></span> <span data-ttu-id="efd02-188">Pour plus d’informations sur la messagerie, consultez [entrée d’utilisateur dans les Windows Forms](~/docs/framework/winforms/user-input-in-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="efd02-188">For more information on messaging, see [User Input in Windows Forms](~/docs/framework/winforms/user-input-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="efd02-189">Contrairement à Visual Basic 6.0, le <xref:System.Windows.Forms.Application.DoEvents%2A> méthode n’appelle pas le <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="efd02-189">Unlike Visual Basic 6.0, the <xref:System.Windows.Forms.Application.DoEvents%2A> method does not call the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="efd02-190">En règle générale, vous utilisez cette méthode dans une boucle pour traiter les messages.</span><span class="sxs-lookup"><span data-stu-id="efd02-190">Typically, you use this method in a loop to process messages.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-191">Appeler cette méthode provoque le thread actuel est suspendu pendant le traitement de tous les messages de fenêtre en attente.</span><span class="sxs-lookup"><span data-stu-id="efd02-191">Calling this method causes the current thread to be suspended while all waiting window messages are processed.</span></span> <span data-ttu-id="efd02-192">Si un message provoque un événement à déclencher, autres zones du code de votre application peuvent s’exécuter.</span><span class="sxs-lookup"><span data-stu-id="efd02-192">If a message causes an event to be triggered, then other areas of your application code may execute.</span></span> <span data-ttu-id="efd02-193">Cela peut entraîner de votre application à présenter des comportements inattendus qui sont difficiles à déboguer.</span><span class="sxs-lookup"><span data-stu-id="efd02-193">This can cause your application to exhibit unexpected behaviors that are difficult to debug.</span></span> <span data-ttu-id="efd02-194">Si vous effectuez des opérations ou des calculs qui prennent un certain temps, il est souvent préférable d’effectuer ces opérations sur un nouveau thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-194">If you perform operations or computations that take a long time, it is often preferable to perform those operations on a new thread.</span></span> <span data-ttu-id="efd02-195">Pour plus d’informations sur la programmation asynchrone, consultez [modèle de programmation asynchrone (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="efd02-195">For more information about asynchronous programming, see [Asynchronous Programming Model (APM)](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-196">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Application.DoEvents%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="efd02-196">The following code example demonstrates using the <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span> <span data-ttu-id="efd02-197">Lorsque l’exemple s’exécute, un utilisateur peut sélectionner des fichiers graphiques à partir d’un <xref:System.Windows.Forms.OpenFileDialog>.</span><span class="sxs-lookup"><span data-stu-id="efd02-197">When the example runs, a user can select graphics files from an <xref:System.Windows.Forms.OpenFileDialog>.</span></span> <span data-ttu-id="efd02-198">Les fichiers sélectionnés sont affichés sous la forme.</span><span class="sxs-lookup"><span data-stu-id="efd02-198">The selected files are displayed in the form.</span></span> <span data-ttu-id="efd02-199">Le <xref:System.Windows.Forms.Application.DoEvents%2A> méthode force à repeindre l’écran pour chaque fichier graphique ouvert.</span><span class="sxs-lookup"><span data-stu-id="efd02-199">The <xref:System.Windows.Forms.Application.DoEvents%2A> method forces a repaint of the form for each graphics file opened.</span></span> <span data-ttu-id="efd02-200">Pour exécuter cet exemple, collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.PictureBox> nommé `PictureBox1`, un <xref:System.Windows.Forms.OpenFileDialog> nommé `OpenFileDialog1`et un bouton nommé `fileButton`.</span><span class="sxs-lookup"><span data-stu-id="efd02-200">To run this example, paste the following code in a form containing a <xref:System.Windows.Forms.PictureBox> named `PictureBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, and a button named `fileButton`.</span></span> <span data-ttu-id="efd02-201">Appelez le `InitializePictureBox` et `InitializeOpenFileDialog` méthodes à partir du constructeur du formulaire ou `Load` (méthode).</span><span class="sxs-lookup"><span data-stu-id="efd02-201">Call the `InitializePictureBox` and `InitializeOpenFileDialog` methods from the form's constructor or `Load` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-202">Dans Visual Studio, si vous ajoutez un <xref:System.Windows.Forms.OpenFileDialog> à votre formulaire à l’aide d’une opération glisser, vous devrez modifier les éléments suivants `InitializeOpenFileDialog` méthode en supprimant la ligne qui crée une nouvelle instance de <xref:System.Windows.Forms.OpenFileDialog>.</span><span class="sxs-lookup"><span data-stu-id="efd02-202">In Visual Studio, if you add an <xref:System.Windows.Forms.OpenFileDialog> to your form by using a drag operation, you will have to modify the following `InitializeOpenFileDialog` method by removing the line that creates a new instance of <xref:System.Windows.Forms.OpenFileDialog>.</span></span>  
  
 <span data-ttu-id="efd02-203">L’exemple exige également que le <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> événements de la <xref:System.Windows.Forms.Button> contrôle et le <xref:System.Windows.Forms.FileDialog.FileOk> événements de la <xref:System.Windows.Forms.OpenFileDialog> sont connectés aux gestionnaires d’événements définis dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="efd02-203">The example also requires that the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event of the <xref:System.Windows.Forms.Button> control and the <xref:System.Windows.Forms.FileDialog.FileOk> event of the <xref:System.Windows.Forms.OpenFileDialog> are connected to the event handlers defined in the example.</span></span> <span data-ttu-id="efd02-204">Lorsque l’exemple est en cours d’exécution, afficher la boîte de dialogue en cliquant sur le bouton.</span><span class="sxs-lookup"><span data-stu-id="efd02-204">When the example is running, display the dialog box by clicking the button.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#1)]
 [!code-csharp[System.Windows.Forms.FileDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#1)]
 [!code-vb[System.Windows.Forms.FileDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Application.ExitThread" />
        <altmember cref="M:System.Windows.Forms.Application.Run" />
      </Docs>
    </Member>
    <Member MemberName="EnableVisualStyles">
      <MemberSignature Language="C#" Value="public static void EnableVisualStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableVisualStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.EnableVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableVisualStyles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableVisualStyles();" />
      <MemberSignature Language="F#" Value="static member EnableVisualStyles : unit -&gt; unit" Usage="System.Windows.Forms.Application.EnableVisualStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-205">Active les styles visuels pour l'application.</span><span class="sxs-lookup"><span data-stu-id="efd02-205">Enables visual styles for the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-206">Cette méthode active les styles visuels pour l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-206">This method enables visual styles for the application.</span></span> <span data-ttu-id="efd02-207">Styles visuels sont les couleurs, polices et autres éléments visuels qui forment un thème du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="efd02-207">Visual styles are the colors, fonts, and other visual elements that form an operating system theme.</span></span> <span data-ttu-id="efd02-208">Si le contrôle et le système d’exploitation prennent en charge, les contrôles sont dessinés avec des styles visuels.</span><span class="sxs-lookup"><span data-stu-id="efd02-208">Controls will draw with visual styles if the control and the operating system support it.</span></span> <span data-ttu-id="efd02-209">Pour avoir un effet, <xref:System.Windows.Forms.Application.EnableVisualStyles> doit être appelée avant la création de contrôles dans l’application ; en règle générale, <xref:System.Windows.Forms.Application.EnableVisualStyles> est la première ligne dans le `Main` (fonction).</span><span class="sxs-lookup"><span data-stu-id="efd02-209">To have an effect, <xref:System.Windows.Forms.Application.EnableVisualStyles> must be called before creating any controls in the application; typically, <xref:System.Windows.Forms.Application.EnableVisualStyles> is the first line in the `Main` function.</span></span> <span data-ttu-id="efd02-210">Un manifeste distinct n’est pas nécessaire pour activer des styles visuels lors de l’appel <xref:System.Windows.Forms.Application.EnableVisualStyles>.</span><span class="sxs-lookup"><span data-stu-id="efd02-210">A separate manifest is not required to enable visual styles when calling <xref:System.Windows.Forms.Application.EnableVisualStyles>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-211">Avant le .NET Framework 2.0, le `FlatStyle` propriété de certains contrôles, tels que les contrôles qui dérivent de <xref:System.Windows.Forms.ButtonBase>, devaient être définie sur <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> afin que les contrôles à dessiner avec des styles visuels.</span><span class="sxs-lookup"><span data-stu-id="efd02-211">Prior to the .NET Framework 2.0, the `FlatStyle` property of some controls, such as controls that derive from <xref:System.Windows.Forms.ButtonBase>, had to be set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> in order for the controls to be drawn with visual styles.</span></span> <span data-ttu-id="efd02-212">Dans les applications écrites avec .NET Framework 2.0, cela n’est plus nécessaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-212">In applications written with the .NET Framework 2.0, this is no longer necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-213">Cette méthode n’a aucun effet pour les contrôles hébergés dans Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="efd02-213">This method will have no effect for controls hosted in Internet Explorer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-214">L’exemple de code suivant montre l’appel <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> dans le `Main` (fonction) pour activer des styles visuels pour l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-214">The following code example demonstrates calling <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> in the `Main` function to enable visual styles for the application.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Application.EnableVisualStyles#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Application.EnableVisualStyles/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Application.EnableVisualStyles#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Application.EnableVisualStyles/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Application.EnableVisualStyles#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Application.EnableVisualStyles/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Application.RenderWithVisualStyles" />
        <altmember cref="P:System.Windows.Forms.Application.VisualStyleState" />
        <altmember cref="T:System.Windows.Forms.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler EnterThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Application.EnterThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EnterThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EnterThreadModal;" />
      <MemberSignature Language="F#" Value="member this.EnterThreadModal : EventHandler " Usage="member this.EnterThreadModal : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-215">Se produit lorsque l'application est sur le point d'activer l'état modal.</span><span class="sxs-lookup"><span data-stu-id="efd02-215">Occurs when the application is about to enter a modal state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-216">S'agissant d'un événement statique, vous devez détacher vos gestionnaires d’événements lorsque votre application est supprimée, faute de quoi des fuites mémoire vont se produire.</span><span class="sxs-lookup"><span data-stu-id="efd02-216">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-217">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="efd02-217">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="efd02-218">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Application.EnterThreadModal> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-218">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.EnterThreadModal> event.</span></span> <span data-ttu-id="efd02-219">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="efd02-219">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="efd02-220">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-220">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="efd02-221">Pour exécuter l’exemple de code, collez-le dans un formulaire Windows et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Application.EnterThreadModal> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-221">To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <xref:System.Windows.Forms.Application.EnterThreadModal> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#3)]
 [!code-vb[System.Windows.Forms.EventExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-222">Requiert <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> autorisation d’écouter l’événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-222">Requires <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> permission to listen to the event.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ExecutablePath">
      <MemberSignature Language="C#" Value="public static string ExecutablePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExecutablePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.ExecutablePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExecutablePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ExecutablePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutablePath : string" Usage="System.Windows.Forms.Application.ExecutablePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-223">Obtient le chemin d’accès au fichier exécutable ayant démarré l’application, y compris le nom de l’exécutable.</span><span class="sxs-lookup"><span data-stu-id="efd02-223">Gets the path for the executable file that started the application, including the executable name.</span></span></summary>
        <value><span data-ttu-id="efd02-224">Chemin d’accès et nom du fichier exécutable ayant démarré l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-224">The path and executable name for the executable file that started the application.</span></span>  
  
<span data-ttu-id="efd02-225">Ce chemin d’accès sera différent selon que l’application Windows Forms est déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-225">This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <span data-ttu-id="efd02-226">les applications sont stockées dans un cache d’application par utilisateur dans le C:\Documents and Settings\\*nom d’utilisateur* directory.</span><span class="sxs-lookup"><span data-stu-id="efd02-226">applications are stored in a per-user application cache in the C:\Documents and Settings\\*username* directory.</span></span> <span data-ttu-id="efd02-227">Pour plus d’informations, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span><span class="sxs-lookup"><span data-stu-id="efd02-227">For more information, see [Accessing Local and Remote Data in ClickOnce Applications](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="efd02-228">Pour obtenir le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="efd02-228">for getting the path.</span></span> <span data-ttu-id="efd02-229">Énumération associée : <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="efd02-229">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efd02-230">Informe toutes les pompes de messages qu'elles doivent se terminer, puis ferme toutes les fenêtres d'application une fois les messages traités.</span><span class="sxs-lookup"><span data-stu-id="efd02-230">Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public static void Exit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Exit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.Exit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Exit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Exit();" />
      <MemberSignature Language="F#" Value="static member Exit : unit -&gt; unit" Usage="System.Windows.Forms.Application.Exit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-231">Informe toutes les pompes de messages qu'elles doivent se terminer, puis ferme toutes les fenêtres d'application une fois les messages traités.</span><span class="sxs-lookup"><span data-stu-id="efd02-231">Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-232">Le <xref:System.Windows.Forms.Application.Exit%2A> méthode s’arrête en cours d’exécution toutes les boucles de messages sur tous les threads et ferme toutes les fenêtres de l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-232">The <xref:System.Windows.Forms.Application.Exit%2A> method stops all running message loops on all threads and closes all windows of the application.</span></span> <span data-ttu-id="efd02-233">Cette méthode ne force pas nécessairement la fermeture de l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-233">This method does not necessarily force the application to exit.</span></span> <span data-ttu-id="efd02-234">Le <xref:System.Windows.Forms.Application.Exit%2A> (méthode) est généralement appelée dans une boucle de messages et force <xref:System.Windows.Forms.Application.Run%2A> à retourner.</span><span class="sxs-lookup"><span data-stu-id="efd02-234">The <xref:System.Windows.Forms.Application.Exit%2A> method is typically called from within a message loop, and forces <xref:System.Windows.Forms.Application.Run%2A> to return.</span></span> <span data-ttu-id="efd02-235">Pour quitter une boucle de message pour le thread actuel uniquement, appelez <xref:System.Windows.Forms.Application.ExitThread%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-235">To exit a message loop for the current thread only, call <xref:System.Windows.Forms.Application.ExitThread%2A>.</span></span>  
  
 <span data-ttu-id="efd02-236"><xref:System.Windows.Forms.Application.Exit%2A> déclenche les événements suivants et exécute les opérations conditionnelles associées :</span><span class="sxs-lookup"><span data-stu-id="efd02-236"><xref:System.Windows.Forms.Application.Exit%2A> raises the following events and performs the associated conditional actions:</span></span>  
  
-   <span data-ttu-id="efd02-237">Un <xref:System.Windows.Forms.Form.FormClosing> événement est déclenché pour chaque formulaire représenté par la <xref:System.Windows.Forms.Application.OpenForms%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="efd02-237">A <xref:System.Windows.Forms.Form.FormClosing> event is raised for every form represented by the <xref:System.Windows.Forms.Application.OpenForms%2A> property.</span></span> <span data-ttu-id="efd02-238">Cet événement peut être annulé en définissant le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de leurs <xref:System.Windows.Forms.FormClosingEventArgs> paramètre `true`.</span><span class="sxs-lookup"><span data-stu-id="efd02-238">This event can be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of their <xref:System.Windows.Forms.FormClosingEventArgs> parameter to `true`.</span></span>  
  
-   <span data-ttu-id="efd02-239">Si un ou plusieurs des gestionnaires annule l’événement, puis <xref:System.Windows.Forms.Application.Exit%2A> retourne sans aucune autre action.</span><span class="sxs-lookup"><span data-stu-id="efd02-239">If one of more of the handlers cancels the event, then <xref:System.Windows.Forms.Application.Exit%2A> returns without further action.</span></span> <span data-ttu-id="efd02-240">Sinon, un <xref:System.Windows.Forms.Form.FormClosed> événement est déclenché pour chaque formulaire ouvert, puis toutes les boucles de messages et des formulaires en cours d’exécution sont fermés.</span><span class="sxs-lookup"><span data-stu-id="efd02-240">Otherwise, a <xref:System.Windows.Forms.Form.FormClosed> event is raised for every open form, then all running message loops and forms are closed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-241">Le <xref:System.Windows.Forms.Application.Exit%2A> méthode ne déclenche pas le <xref:System.Windows.Forms.Form.Closed> et <xref:System.Windows.Forms.Form.Closing> événements, qui sont obsolètes à partir de [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-241">The <xref:System.Windows.Forms.Application.Exit%2A> method does not raise the <xref:System.Windows.Forms.Form.Closed> and <xref:System.Windows.Forms.Form.Closing> events, which are obsolete as of [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-242">L’exemple de code suivant répertorie les numéros dans une zone de liste sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-242">The following code example lists numbers in a list box on a form.</span></span> <span data-ttu-id="efd02-243">Chaque fois que vous cliquez sur `button1`, l’application ajoute un autre numéro à la liste.</span><span class="sxs-lookup"><span data-stu-id="efd02-243">Each time you click `button1`, the application adds another number to the list.</span></span>  
  
 <span data-ttu-id="efd02-244">Le `Main` les appels de méthode <xref:System.Windows.Forms.Application.Run%2A> pour démarrer l’application, ce qui crée le formulaire, `listBox1`, et `button1`.</span><span class="sxs-lookup"><span data-stu-id="efd02-244">The `Main` method calls <xref:System.Windows.Forms.Application.Run%2A> to start the application, which creates the form, `listBox1`, and `button1`.</span></span> <span data-ttu-id="efd02-245">Lorsque l’utilisateur clique sur `button1`, le `button1_Click` méthode ajoute un à trois à la zone de liste de nombres et affiche un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-245">When the user clicks `button1`, the `button1_Click` method adds numbers one to three to the list box, and displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="efd02-246">Si l’utilisateur clique sur **non** sur le <xref:System.Windows.Forms.MessageBox>, le `button1_Click` méthode ajoute un autre numéro à la liste.</span><span class="sxs-lookup"><span data-stu-id="efd02-246">If the user clicks **No** on the <xref:System.Windows.Forms.MessageBox>, the `button1_Click` method adds another number to the list.</span></span> <span data-ttu-id="efd02-247">Si l’utilisateur clique sur **Oui**, l’application appelle <xref:System.Windows.Forms.Application.Exit%2A>, pour traiter tous les messages restants dans la file d’attente, puis s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="efd02-247">If the user clicks **Yes**, the application calls <xref:System.Windows.Forms.Application.Exit%2A>, to process all remaining messages in the queue and then to quit.</span></span>  
  
 <span data-ttu-id="efd02-248">L’exemple exige que `listBox1` et `button1` ont été instancié et placé dans un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-248">The example requires that `listBox1` and `button1` have been instantiated and placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.Exit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.Exit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.Exit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.Exit Example/CS/source.cs#1)]
 [!code-vb[Classic Application.Exit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.Exit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-249">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="efd02-249">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="efd02-250">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="efd02-250">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.ExitThread" />
        <altmember cref="M:System.Windows.Forms.Application.Run" />
        <altmember cref="P:System.Windows.Forms.Application.OpenForms" />
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public static void Exit (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Exit(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Exit (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Exit(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="static member Exit : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="System.Windows.Forms.Application.Exit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="efd02-251">Spécifie par retour si tout <see cref="T:System.Windows.Forms.Form" /> dans l'application a annulé la sortie.</span><span class="sxs-lookup"><span data-stu-id="efd02-251">Returns whether any <see cref="T:System.Windows.Forms.Form" /> within the application cancelled the exit.</span></span></param>
        <summary><span data-ttu-id="efd02-252">Informe toutes les pompes de messages qu'elles doivent se terminer, puis ferme toutes les fenêtres d'application une fois les messages traités.</span><span class="sxs-lookup"><span data-stu-id="efd02-252">Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityException"><span data-ttu-id="efd02-253">Autorisation de mettre fin à une exécution de thread d’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-253">For permission to terminate a running application thread.</span></span> <span data-ttu-id="efd02-254">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="efd02-254">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public static void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExitThread();" />
      <MemberSignature Language="F#" Value="static member ExitThread : unit -&gt; unit" Usage="System.Windows.Forms.Application.ExitThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-255">Quitte la boucle de messages du thread en cours et ferme toutes les fenêtres du thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-255">Exits the message loop on the current thread and closes all windows on the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-256">Utilisez cette méthode pour quitter la boucle de messages du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="efd02-256">Use this method to exit the message loop of the current thread.</span></span> <span data-ttu-id="efd02-257">Cette méthode provoque l’appel à <xref:System.Windows.Forms.Application.Run%2A> pour le thread actuel à retourner.</span><span class="sxs-lookup"><span data-stu-id="efd02-257">This method causes the call to <xref:System.Windows.Forms.Application.Run%2A> for the current thread to return.</span></span> <span data-ttu-id="efd02-258">Pour quitter l’application entière, appeler <xref:System.Windows.Forms.Application.Exit%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-258">To exit the entire application, call <xref:System.Windows.Forms.Application.Exit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-259">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="efd02-259">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="efd02-260">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="efd02-260">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
      </Docs>
    </Member>
    <Member MemberName="FilterMessage">
      <MemberSignature Language="C#" Value="public static bool FilterMessage (ref System.Windows.Forms.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FilterMessage(valuetype System.Windows.Forms.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.FilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FilterMessage (ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool FilterMessage(System::Windows::Forms::Message % message);" />
      <MemberSignature Language="F#" Value="static member FilterMessage :  -&gt; bool" Usage="System.Windows.Forms.Application.FilterMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="efd02-261">Message d'événement Windows à filtrer.</span><span class="sxs-lookup"><span data-stu-id="efd02-261">The Windows event message to filter.</span></span></param>
        <summary><span data-ttu-id="efd02-262">Applique tous les filtres à un message de fenêtre et retourne une copie du message modifié.</span><span class="sxs-lookup"><span data-stu-id="efd02-262">Runs any filters against a window message, and returns a copy of the modified message.</span></span></summary>
        <returns><span data-ttu-id="efd02-263"><see langword="true" /> si les filtres ont été traités ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-263"><see langword="true" /> if the filters were processed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighDpiMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.HighDpiMode HighDpiMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.HighDpiMode HighDpiMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.HighDpiMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HighDpiMode As HighDpiMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::HighDpiMode HighDpiMode { System::Windows::Forms::HighDpiMode get(); };" />
      <MemberSignature Language="F#" Value="member this.HighDpiMode : System.Windows.Forms.HighDpiMode" Usage="System.Windows.Forms.Application.HighDpiMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HighDpiMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public static event EventHandler Idle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Idle" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Application.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Idle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ Idle;" />
      <MemberSignature Language="F#" Value="member this.Idle : EventHandler " Usage="member this.Idle : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-264">Se produit lorsque l'application termine le traitement et est sur le point de passer à l'état inactif.</span><span class="sxs-lookup"><span data-stu-id="efd02-264">Occurs when the application finishes processing and is about to enter the idle state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-265">Si vous avez des tâches que vous devez effectuer avant que le thread ne devienne inactif, attachez-les à cet événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-265">If you have tasks that you must perform before the thread becomes idle, attach them to this event.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-266">S'agissant d'un événement statique, vous devez détacher vos gestionnaires d’événements lorsque votre application est supprimée, faute de quoi des fuites mémoire vont se produire.</span><span class="sxs-lookup"><span data-stu-id="efd02-266">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-267">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="efd02-267">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="efd02-268">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Application.Idle> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-268">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.Idle> event.</span></span> <span data-ttu-id="efd02-269">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="efd02-269">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="efd02-270">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-270">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="efd02-271">Pour exécuter l’exemple de code, collez-le dans un formulaire Windows et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Application.Idle> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-271">To run the example code, paste it into a Windows Form and make sure that the event handler is associated with the <xref:System.Windows.Forms.Application.Idle> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#2)]
 [!code-vb[System.Windows.Forms.EventExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler LeaveThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Application.LeaveThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LeaveThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LeaveThreadModal;" />
      <MemberSignature Language="F#" Value="member this.LeaveThreadModal : EventHandler " Usage="member this.LeaveThreadModal : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-272">Se produit lorsque l'application est sur le point de quitter l'état modal.</span><span class="sxs-lookup"><span data-stu-id="efd02-272">Occurs when the application is about to leave a modal state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-273">S'agissant d'un événement statique, vous devez détacher vos gestionnaires d’événements lorsque votre application est supprimée, faute de quoi des fuites mémoire vont se produire.</span><span class="sxs-lookup"><span data-stu-id="efd02-273">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-274">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="efd02-274">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="efd02-275">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Application.LeaveThreadModal> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-275">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.LeaveThreadModal> event.</span></span> <span data-ttu-id="efd02-276">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="efd02-276">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="efd02-277">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-277">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="efd02-278">Pour exécuter l’exemple de code, collez-le dans un formulaire Windows et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Application.LeaveThreadModal> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-278">To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <xref:System.Windows.Forms.Application.LeaveThreadModal> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#4)]
 [!code-vb[System.Windows.Forms.EventExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalUserAppDataPath">
      <MemberSignature Language="C#" Value="public static string LocalUserAppDataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LocalUserAppDataPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.LocalUserAppDataPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LocalUserAppDataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LocalUserAppDataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalUserAppDataPath : string" Usage="System.Windows.Forms.Application.LocalUserAppDataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-279">Obtient le chemin d’accès aux données d’application d’un utilisateur local non itinérant.</span><span class="sxs-lookup"><span data-stu-id="efd02-279">Gets the path for the application data of a local, non-roaming user.</span></span></summary>
        <value><span data-ttu-id="efd02-280">Chemin d’accès aux données d’application d’un utilisateur local non itinérant.</span><span class="sxs-lookup"><span data-stu-id="efd02-280">The path for the application data of a local, non-roaming user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-281">Un utilisateur local est un utilisateur dont le profil est stocké sur le système sur lequel l’utilisateur connecté.</span><span class="sxs-lookup"><span data-stu-id="efd02-281">A local user is one whose user profile is stored on the system on which the user logged on.</span></span> <span data-ttu-id="efd02-282">Si un chemin d’accès n’existe pas, un est créé dans le format suivant :</span><span class="sxs-lookup"><span data-stu-id="efd02-282">If a path does not exist, one is created in the following format:</span></span>  
  
 <span data-ttu-id="efd02-283">*Chemin d’accès de base*\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span><span class="sxs-lookup"><span data-stu-id="efd02-283">*Base Path*\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span></span>   
  
 <span data-ttu-id="efd02-284">Un chemin d’accès de base par défaut est C:\Documents and Settings\\*nom d’utilisateur*\Local Settings\Application données.</span><span class="sxs-lookup"><span data-stu-id="efd02-284">A typical base path is C:\Documents and Settings\\*username*\Local Settings\Application Data.</span></span> <span data-ttu-id="efd02-285">Ce chemin d’accès sera différent, toutefois, si l’application Windows Forms est déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-285">This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <span data-ttu-id="efd02-286">crée son propre répertoire de données d’application qui est isolée de toutes les autres applications.</span><span class="sxs-lookup"><span data-stu-id="efd02-286">creates its own application data directory that is isolated from all other applications.</span></span> <span data-ttu-id="efd02-287">Pour plus d’informations, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span><span class="sxs-lookup"><span data-stu-id="efd02-287">For more information, see [Accessing Local and Remote Data in ClickOnce Applications](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-288">L’exemple de code suivant affiche deux formulaires et quitte l’application lorsque les deux formes sont fermés.</span><span class="sxs-lookup"><span data-stu-id="efd02-288">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="efd02-289">Lorsque l’application démarre et s’arrête, la position de chaque formulaire est mémorisée.</span><span class="sxs-lookup"><span data-stu-id="efd02-289">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="efd02-290">Bien que cet exemple montre comment utiliser le <xref:System.Windows.Forms.Application.UserAppDataPath%2A> propriété pour stocker les données d’application pour l’utilisateur, le <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> peut être utilisé à la place.</span><span class="sxs-lookup"><span data-stu-id="efd02-290">Although this example demonstrates using the <xref:System.Windows.Forms.Application.UserAppDataPath%2A> property to store application data for the user, the <xref:System.Windows.Forms.Application.LocalUserAppDataPath%2A> can be used instead.</span></span>  
  
 <span data-ttu-id="efd02-291">Le `MyApplicationContext` hérite de la classe <xref:System.Windows.Forms.ApplicationContext> et assure le suivi lorsque chaque formulaire est fermé, puis quitte le thread actuel lorsque les deux sont.</span><span class="sxs-lookup"><span data-stu-id="efd02-291">The `MyApplicationContext` class inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="efd02-292">La classe stocke les positions de chaque formulaire pour l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-292">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="efd02-293">Les données de position du formulaire sont stockées dans un fichier intitulé `Appdata.txt` qui est créé à l’emplacement déterminé par <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-293">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span> <span data-ttu-id="efd02-294">Le `Main` les appels de méthode `Application.Run(context)` pour démarrer l’application étant donnée le <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="efd02-294">The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 <span data-ttu-id="efd02-295">Ce code est un extrait de l’exemple illustré dans la <xref:System.Windows.Forms.ApplicationContext> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="efd02-295">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="efd02-296">Du code n’est pas affiché à des fins de concision.</span><span class="sxs-lookup"><span data-stu-id="efd02-296">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="efd02-297">Consultez <xref:System.Windows.Forms.ApplicationContext> pour obtenir la liste de l’ensemble du code.</span><span class="sxs-lookup"><span data-stu-id="efd02-297">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#5)]
 [!code-csharp[Application#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#5)]
 [!code-vb[Application#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageLoop">
      <MemberSignature Language="C#" Value="public static bool MessageLoop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MessageLoop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.MessageLoop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MessageLoop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool MessageLoop { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageLoop : bool" Usage="System.Windows.Forms.Application.MessageLoop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-298">Obtient une valeur indiquant si une boucle de messages existe sur ce thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-298">Gets a value indicating whether a message loop exists on this thread.</span></span></summary>
        <value><span data-ttu-id="efd02-299"><see langword="true" /> si une boucle de messages existe ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-299"><see langword="true" /> if a message loop exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-300">Lors de l’hébergement de Windows Forms dans d’autres environnements, tels que les applications non managées, cette propriété retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="efd02-300">When hosting Windows Forms in other environments, such as unmanaged applications, this property will always return `false`.</span></span> <span data-ttu-id="efd02-301">Utilisez <xref:System.Windows.Forms.Application.RegisterMessageLoop%2A> pour indiquer à Windows Forms si l’environnement d’hébergement a toujours une boucle de messages actifs.</span><span class="sxs-lookup"><span data-stu-id="efd02-301">Use <xref:System.Windows.Forms.Application.RegisterMessageLoop%2A> to instruct Windows Forms if the hosting environment still has an active message loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OleRequired">
      <MemberSignature Language="C#" Value="public static System.Threading.ApartmentState OleRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.ApartmentState OleRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.OleRequired" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OleRequired () As ApartmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ApartmentState OleRequired();" />
      <MemberSignature Language="F#" Value="static member OleRequired : unit -&gt; System.Threading.ApartmentState" Usage="System.Windows.Forms.Application.OleRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ApartmentState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-302">Initialise OLE sur le thread en cours.</span><span class="sxs-lookup"><span data-stu-id="efd02-302">Initializes OLE on the current thread.</span></span></summary>
        <returns><span data-ttu-id="efd02-303">Une des valeurs de <see cref="T:System.Threading.ApartmentState" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-303">One of the <see cref="T:System.Threading.ApartmentState" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-304">Appelez cette méthode avant d’appeler une `Microsoft.Win32` méthode nécessitant OLE.</span><span class="sxs-lookup"><span data-stu-id="efd02-304">Call this method before calling any `Microsoft.Win32` method that requires OLE.</span></span> <span data-ttu-id="efd02-305"><xref:System.Windows.Forms.Application.OleRequired%2A> tout d’abord vérifie pour voir si OLE a été initialisé sur le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="efd02-305"><xref:System.Windows.Forms.Application.OleRequired%2A> first checks to see if OLE has been initialized on the current thread.</span></span> <span data-ttu-id="efd02-306">Si ce n’est pas le cas, il initialise le thread d’OLE.</span><span class="sxs-lookup"><span data-stu-id="efd02-306">If not, it initializes the thread for OLE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-307">Sauf si un thread appelle directement les méthodes OLE, vous n’avez pas besoin d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="efd02-307">Unless a thread calls OLE methods directly, you do not need to call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThreadException">
      <MemberSignature Language="C#" Value="public static void OnThreadException (Exception t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnThreadException(class System.Exception t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.OnThreadException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub OnThreadException (t As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void OnThreadException(Exception ^ t);" />
      <MemberSignature Language="F#" Value="static member OnThreadException : Exception -&gt; unit" Usage="System.Windows.Forms.Application.OnThreadException t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="efd02-308"><see cref="T:System.Exception" /> représentant l'exception qui a été levée.</span><span class="sxs-lookup"><span data-stu-id="efd02-308">An <see cref="T:System.Exception" /> that represents the exception that was thrown.</span></span></param>
        <summary><span data-ttu-id="efd02-309">Déclenche l'événement <see cref="E:System.Windows.Forms.Application.ThreadException" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-309">Raises the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-310">Appelez <xref:System.Windows.Forms.Application.OnThreadException%2A> pour lever une exception qui arrêtera le traitement de l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-310">Call <xref:System.Windows.Forms.Application.OnThreadException%2A> to raise an exception that will halt processing of the application.</span></span>  
  
 <span data-ttu-id="efd02-311">Le <xref:System.Windows.Forms.Application> classe a un <xref:System.Windows.Forms.Application.ThreadException> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-311">The <xref:System.Windows.Forms.Application> class has a <xref:System.Windows.Forms.Application.ThreadException> event.</span></span> <span data-ttu-id="efd02-312">Vous pouvez attacher un gestionnaire d’événements à cet événement pour effectuer le traitement personnalisé que vous avez besoin pour les exceptions non gérées.</span><span class="sxs-lookup"><span data-stu-id="efd02-312">You can attach an event handler to this event to do whatever custom processing you need for unhandled exceptions.</span></span> <span data-ttu-id="efd02-313">Si vous n’attachez pas un gestionnaire d’événements, <xref:System.Windows.Forms.Application.OnThreadException%2A> exécutera le comportement par défaut, ce qui implique l’affichage d’une boîte de dialogue pour informer l’utilisateur qu’il y a eu une erreur.</span><span class="sxs-lookup"><span data-stu-id="efd02-313">If you do not attach an event handler, <xref:System.Windows.Forms.Application.OnThreadException%2A> will execute the default behavior, which involves displaying a dialog box to inform the user that there has been an error.</span></span>  
  
 <span data-ttu-id="efd02-314"><xref:System.Windows.Forms.Application.OnThreadException%2A> implémente uniquement le comportement d’exception par défaut pour les exceptions non gérées qui se produisent sur les threads détenus par les Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-314"><xref:System.Windows.Forms.Application.OnThreadException%2A> only implements default exception behavior for unhandled exceptions that occur on threads owned by Windows Forms.</span></span> <span data-ttu-id="efd02-315">Les exceptions non gérées sur d’autres threads sont gérées par le <xref:System.AppDomain.UnhandledException> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-315">Unhandled exceptions on other threads are handled by the <xref:System.AppDomain.UnhandledException> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenForms">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.FormCollection OpenForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.FormCollection OpenForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.OpenForms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OpenForms As FormCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::FormCollection ^ OpenForms { System::Windows::Forms::FormCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenForms : System.Windows.Forms.FormCollection" Usage="System.Windows.Forms.Application.OpenForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-316">Obtient une collection de formulaires ouverts possédée par l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-316">Gets a collection of open forms owned by the application.</span></span></summary>
        <value><span data-ttu-id="efd02-317"><see cref="T:System.Windows.Forms.FormCollection" /> qui contient tous les formulaires actuellement ouverts appartenant à cette application.</span><span class="sxs-lookup"><span data-stu-id="efd02-317">A <see cref="T:System.Windows.Forms.FormCollection" /> containing all the currently open forms owned by this application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-318">Le <xref:System.Windows.Forms.Application.OpenForms%2A> propriété représente une collection en lecture seule de formulaires appartenant à l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-318">The <xref:System.Windows.Forms.Application.OpenForms%2A> property represents a read-only collection of forms owned by the application.</span></span> <span data-ttu-id="efd02-319">Cette collection peut être recherchée par la position d’index ou par le <xref:System.Windows.Forms.Control.Name%2A> de la <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="efd02-319">This collection can be searched by index position or by the <xref:System.Windows.Forms.Control.Name%2A> of the <xref:System.Windows.Forms.Form>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="efd02-320">L’appelant doit être autorisé à accéder à toutes les fenêtres, tel que défini par le <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> valeur de la <see cref="T:System.Security.Permissions.UIPermissionWindow" /> énumération.</span><span class="sxs-lookup"><span data-stu-id="efd02-320">Caller must have permission to access all windows, as defined by the <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> value of the <see cref="T:System.Security.Permissions.UIPermissionWindow" /> enumeration.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="T:System.Windows.Forms.FormCollection" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public static string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Windows.Forms.Application.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-321">Obtient le nom du produit associé à cette application.</span><span class="sxs-lookup"><span data-stu-id="efd02-321">Gets the product name associated with this application.</span></span></summary>
        <value><span data-ttu-id="efd02-322">Nom du produit.</span><span class="sxs-lookup"><span data-stu-id="efd02-322">The product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-323">`ProductName` est extrait des métadonnées de l’assembly contenant le formulaire principal de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="efd02-323">`ProductName` is taken from the metadata of the assembly containing the main form of the current application.</span></span> <span data-ttu-id="efd02-324">Vous pouvez la définir en définissant <xref:System.Reflection.AssemblyProductAttribute> à l’intérieur de votre manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="efd02-324">You can set it by setting <xref:System.Reflection.AssemblyProductAttribute> inside of your assembly manifest.</span></span> <span data-ttu-id="efd02-325">Pour plus d’informations, consultez [Manifeste d’assembly](~/docs/framework/app-domains/assembly-manifest.md).</span><span class="sxs-lookup"><span data-stu-id="efd02-325">For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-326">L’exemple de code suivant obtient cette propriété et affiche sa valeur dans une zone de texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-326">The following code example gets this property and displays its value in a text box.</span></span> <span data-ttu-id="efd02-327">L’exemple exige que `textBox1` a été placé sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-327">The example requires that `textBox1` has been placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ProductName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ProductName Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ProductName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Application.ProductVersion" />
        <altmember cref="P:System.Windows.Forms.Application.CompanyName" />
        <altmember cref="T:System.Reflection.AssemblyProductAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public static string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Windows.Forms.Application.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-328">Obtient la version du produit associé à cette application.</span><span class="sxs-lookup"><span data-stu-id="efd02-328">Gets the product version associated with this application.</span></span></summary>
        <value><span data-ttu-id="efd02-329">Version du produit.</span><span class="sxs-lookup"><span data-stu-id="efd02-329">The product version.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-330">En règle générale, un numéro de version s’affiche en tant que *numéro principal*. *mineure nombre*. *numéro de build*. *numéro de référence privé*.</span><span class="sxs-lookup"><span data-stu-id="efd02-330">Typically, a version number displays as *major number*.*minor number*.*build number*.*private part number*.</span></span> <span data-ttu-id="efd02-331">Vous pouvez le définir explicitement en définissant la version d’assembly dans votre manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="efd02-331">You can set it explicitly by setting the assembly version within your assembly manifest.</span></span> <span data-ttu-id="efd02-332">Pour plus d’informations, consultez [Manifeste d’assembly](~/docs/framework/app-domains/assembly-manifest.md).</span><span class="sxs-lookup"><span data-stu-id="efd02-332">For more information, see [Assembly Manifest](~/docs/framework/app-domains/assembly-manifest.md).</span></span>  
  
 <span data-ttu-id="efd02-333"><xref:System.Windows.Forms.Application.ProductVersion%2A> Détermine si l’assembly contenant le fichier exécutable principal a d’abord le `AssemblyInformationalVersion` attribut dessus.</span><span class="sxs-lookup"><span data-stu-id="efd02-333"><xref:System.Windows.Forms.Application.ProductVersion%2A> first looks to see if the assembly containing the main executable has the `AssemblyInformationalVersion` attribute on it.</span></span> <span data-ttu-id="efd02-334">Si cet attribut existe, il est utilisé pour les deux <xref:System.Windows.Forms.Application.ProductVersion%2A> et <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-334">If this attribute exists, it is used for both <xref:System.Windows.Forms.Application.ProductVersion%2A> and <xref:System.Windows.Forms.Application.CommonAppDataPath%2A>.</span></span> <span data-ttu-id="efd02-335">Si cet attribut n’existe pas, les deux propriétés utilisent la version du fichier exécutable à la place.</span><span class="sxs-lookup"><span data-stu-id="efd02-335">If this attribute does not exist, both properties use the version of the executable file instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-336">L’exemple de code suivant obtient cette propriété et affiche sa valeur dans une zone de texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-336">The following code example gets this property and displays its value in a text box.</span></span> <span data-ttu-id="efd02-337">L’exemple exige que `textBox1` a été placé sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-337">The example requires that `textBox1` has been placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ProductVersion Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ProductVersion Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ProductVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Application.ProductName" />
        <altmember cref="P:System.Windows.Forms.Application.CompanyName" />
        <altmember cref="T:System.Reflection.AssemblyVersionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RaiseIdle">
      <MemberSignature Language="C#" Value="public static void RaiseIdle (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseIdle(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.RaiseIdle(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseIdle (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseIdle(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="static member RaiseIdle : EventArgs -&gt; unit" Usage="System.Windows.Forms.Application.RaiseIdle e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="efd02-338">Objets <see cref="T:System.EventArgs" /> à passer à l'événement <see cref="E:System.Windows.Forms.Application.Idle" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-338">The <see cref="T:System.EventArgs" /> objects to pass to the <see cref="E:System.Windows.Forms.Application.Idle" /> event.</span></span></param>
        <summary><span data-ttu-id="efd02-339">Déclenche l'événement <see cref="E:System.Windows.Forms.Application.Idle" /> dans les scénarios hébergés.</span><span class="sxs-lookup"><span data-stu-id="efd02-339">Raises the <see cref="E:System.Windows.Forms.Application.Idle" /> event in hosted scenarios.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-340">Cette méthode est utilisée lors de l’hébergement de Windows Forms dans un autre environnement, tel qu’une application non managée.</span><span class="sxs-lookup"><span data-stu-id="efd02-340">This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</span></span> <span data-ttu-id="efd02-341">Vous devez appeler <xref:System.Windows.Forms.Application.RaiseIdle%2A> lorsque l’application d’hébergement entre dans un état inactif.</span><span class="sxs-lookup"><span data-stu-id="efd02-341">You should call <xref:System.Windows.Forms.Application.RaiseIdle%2A> when the hosting application enters an idle state.</span></span> <span data-ttu-id="efd02-342">Ainsi, certains composants pour effectuer des tâches d’arrière-plan importantes pendant que l’utilisateur n’interagit pas avec l’application et les contrôles Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-342">This enables some Windows Forms controls and components to do important background work while the user is not interacting with the application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Application.Idle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterMessageLoop">
      <MemberSignature Language="C#" Value="public static void RegisterMessageLoop (System.Windows.Forms.Application.MessageLoopCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterMessageLoop(class System.Windows.Forms.Application/MessageLoopCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterMessageLoop (callback As Application.MessageLoopCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterMessageLoop(System::Windows::Forms::Application::MessageLoopCallback ^ callback);" />
      <MemberSignature Language="F#" Value="static member RegisterMessageLoop : System.Windows.Forms.Application.MessageLoopCallback -&gt; unit" Usage="System.Windows.Forms.Application.RegisterMessageLoop callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Windows.Forms.Application+MessageLoopCallback" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="efd02-343">Méthode à appeler lorsque les Windows Forms doivent vérifier si l'environnement d'hébergement envoie encore des messages.</span><span class="sxs-lookup"><span data-stu-id="efd02-343">The method to call when Windows Forms needs to check if the hosting environment is still sending messages.</span></span></param>
        <summary><span data-ttu-id="efd02-344">Enregistre un rappel pour vérifier si la boucle de message s'exécute dans des environnements hébergés.</span><span class="sxs-lookup"><span data-stu-id="efd02-344">Registers a callback for checking whether the message loop is running in hosted environments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-345">Cette méthode est utilisée lors de l’hébergement de Windows Forms dans un autre environnement, tel qu’une application non managée.</span><span class="sxs-lookup"><span data-stu-id="efd02-345">This method is used when hosting Windows Forms in another environment, such as an unmanaged application.</span></span> <span data-ttu-id="efd02-346">Dans les environnements hébergés, la <xref:System.Windows.Forms.Application.MessageLoop%2A> propriété retournera toujours la valeur false si Windows Forms ne traite pas les messages.</span><span class="sxs-lookup"><span data-stu-id="efd02-346">In hosted environments, the <xref:System.Windows.Forms.Application.MessageLoop%2A> property will always return false if Windows Forms is not processing messages.</span></span> <span data-ttu-id="efd02-347">Utilisez ce rappel pour indiquer à Windows Forms si l’environnement d’hébergement traite encore des messages.</span><span class="sxs-lookup"><span data-stu-id="efd02-347">Use this callback to tell Windows Forms if the hosting environment is still processing messages.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Application.MessageLoopCallback" />
      </Docs>
    </Member>
    <Member MemberName="RemoveMessageFilter">
      <MemberSignature Language="C#" Value="public static void RemoveMessageFilter (System.Windows.Forms.IMessageFilter value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMessageFilter(class System.Windows.Forms.IMessageFilter value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.RemoveMessageFilter(System.Windows.Forms.IMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMessageFilter (value As IMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMessageFilter(System::Windows::Forms::IMessageFilter ^ value);" />
      <MemberSignature Language="F#" Value="static member RemoveMessageFilter : System.Windows.Forms.IMessageFilter -&gt; unit" Usage="System.Windows.Forms.Application.RemoveMessageFilter value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.IMessageFilter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="efd02-348">Implémentation de <see cref="T:System.Windows.Forms.IMessageFilter" /> à enlever de l'application.</span><span class="sxs-lookup"><span data-stu-id="efd02-348">The implementation of the <see cref="T:System.Windows.Forms.IMessageFilter" /> to remove from the application.</span></span></param>
        <summary><span data-ttu-id="efd02-349">Enlève un filtre de messages de la pompe de messages de l'application.</span><span class="sxs-lookup"><span data-stu-id="efd02-349">Removes a message filter from the message pump of the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-350">Vous pouvez supprimer un filtre de messages lorsque vous ne souhaitez plus capturer les messages de Windows avant qu’ils soient distribués.</span><span class="sxs-lookup"><span data-stu-id="efd02-350">You can remove a message filter when you no longer want to capture Windows messages before they are dispatched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-351">Avant de pouvoir utiliser un filtre de messages, vous devez fournir une implémentation pour le <xref:System.Windows.Forms.IMessageFilter> interface.</span><span class="sxs-lookup"><span data-stu-id="efd02-351">Before you can use a message filter, you must provide an implementation for the <xref:System.Windows.Forms.IMessageFilter> interface.</span></span> <span data-ttu-id="efd02-352">La classe suivante crée un filtre de messages appelé `TestMessageFilter`.</span><span class="sxs-lookup"><span data-stu-id="efd02-352">The following class creates a message filter called `TestMessageFilter`.</span></span> <span data-ttu-id="efd02-353">Ce filtre bloque tous les messages relatifs au bouton gauche de la souris.</span><span class="sxs-lookup"><span data-stu-id="efd02-353">This filter blocks all messages relating to the left mouse button.</span></span>  
  
 [!code-cpp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/CS/source.cs#1)]
 [!code-vb[Classic Application.RemoveMessageFilter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.RemoveMessageFilter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderWithVisualStyles">
      <MemberSignature Language="C#" Value="public static bool RenderWithVisualStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RenderWithVisualStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.RenderWithVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RenderWithVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RenderWithVisualStyles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderWithVisualStyles : bool" Usage="System.Windows.Forms.Application.RenderWithVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-354">Obtient une valeur qui spécifie si l'application actuelle dessine des contrôles avec des styles visuels.</span><span class="sxs-lookup"><span data-stu-id="efd02-354">Gets a value specifying whether the current application is drawing controls with visual styles.</span></span></summary>
        <value><span data-ttu-id="efd02-355"><see langword="true" /> si les styles visuels sont activés pour les contrôles dans la zone cliente des fenêtres d'application ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-355"><see langword="true" /> if visual styles are enabled for controls in the client area of application windows; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-356">Si vous dessinez un contrôle personnalisé, utilisez cette propriété pour décider s’il faut dessiner le contrôle avec ou sans styles visuels, afin que son apparence est cohérente avec d’autres contrôles dans l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-356">If you are drawing a custom control, use this property to decide whether to draw the control with or without visual styles, so that its appearance is consistent with other controls in the application.</span></span>  
  
 <span data-ttu-id="efd02-357">Le tableau suivant présente les quatre conditions qui doivent exister pour <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A> pour retourner `true`.</span><span class="sxs-lookup"><span data-stu-id="efd02-357">The following table shows the four conditions that must exist for <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A> to return `true`.</span></span>  
  
|<span data-ttu-id="efd02-358">Condition</span><span class="sxs-lookup"><span data-stu-id="efd02-358">Condition</span></span>|<span data-ttu-id="efd02-359">Description</span><span class="sxs-lookup"><span data-stu-id="efd02-359">Description</span></span>|  
|---------------|-----------------|  
|<span data-ttu-id="efd02-360">Le système d’exploitation prend en charge les styles visuels</span><span class="sxs-lookup"><span data-stu-id="efd02-360">The operating system supports visual styles</span></span>|<span data-ttu-id="efd02-361">Pour vérifier cette condition séparément, utilisez la propriété <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> de la classe <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> .</span><span class="sxs-lookup"><span data-stu-id="efd02-361">To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.</span></span>|  
|<span data-ttu-id="efd02-362">L’utilisateur a activé des styles visuels dans le système d’exploitation</span><span class="sxs-lookup"><span data-stu-id="efd02-362">The user has enabled visual styles in the operating system</span></span>|<span data-ttu-id="efd02-363">Pour vérifier cette condition séparément, utilisez la propriété <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> de la classe <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> .</span><span class="sxs-lookup"><span data-stu-id="efd02-363">To verify this condition separately, use the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser%2A> property of the <xref:System.Windows.Forms.VisualStyles.VisualStyleInformation> class.</span></span>|  
|<span data-ttu-id="efd02-364">Styles visuels sont activés dans l’application</span><span class="sxs-lookup"><span data-stu-id="efd02-364">Visual styles are enabled in the application</span></span>|<span data-ttu-id="efd02-365">Les styles visuels peuvent être activés dans une application en appelant la méthode <xref:System.Windows.Forms.Application.EnableVisualStyles> ou un utilisant un manifeste d’application qui spécifie que ComCtl32.dll version 6 ou ultérieure doit être utilisé pour dessiner les contrôles.</span><span class="sxs-lookup"><span data-stu-id="efd02-365">Visual styles can be enabled in an application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles> method or by using an application manifest that specifies that ComCtl32.dll version 6 or later will be used to draw controls.</span></span>|  
|<span data-ttu-id="efd02-366">Styles visuels sont utilisés pour dessiner la zone cliente des fenêtres d’application</span><span class="sxs-lookup"><span data-stu-id="efd02-366">Visual styles are being used to draw the client area of application windows</span></span>|<span data-ttu-id="efd02-367">Pour vérifier cette condition séparément, utilisez la propriété <xref:System.Windows.Forms.Application.VisualStyleState%2A> de la classe <xref:System.Windows.Forms.Application>, et vérifiez qu’elle a la valeur <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType><xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="efd02-367">To verify this condition separately, use the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property of the <xref:System.Windows.Forms.Application> class and verify that it has the value <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled?displayProperty=nameWithType> or <xref:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public static void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Restart();" />
      <MemberSignature Language="F#" Value="static member Restart : unit -&gt; unit" Usage="System.Windows.Forms.Application.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-368">Ferme l'application et lance immédiatement une nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="efd02-368">Shuts down the application and starts a new instance immediately.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-369">La raison la plus courante d’appeler `Restart` consiste à démarrer une nouvelle version de l’application que vous avez téléchargé via [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] à l’aide de la `Update` ou `UpdateAsync` (méthode).</span><span class="sxs-lookup"><span data-stu-id="efd02-369">The most common reason for calling `Restart` is to start a new version of the application that you have downloaded through [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] using the `Update` or `UpdateAsync` method.</span></span>  
  
 <span data-ttu-id="efd02-370">Les applications sont redémarrées dans le contexte dans lequel ils ont été initialement exécutés.</span><span class="sxs-lookup"><span data-stu-id="efd02-370">Applications are restarted in the context in which they were initially run.</span></span> <span data-ttu-id="efd02-371">Si votre application a été démarrée à l’aide d’une URL qui pointe directement vers le fichier exécutable principal de l’application, elle est redémarrée à l’aide de la même URL.</span><span class="sxs-lookup"><span data-stu-id="efd02-371">If your application was started using a URL pointing directly to the application's main executable file, it will be restarted using the same URL.</span></span> <span data-ttu-id="efd02-372">Si votre application est un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, celui-ci est redémarré à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-372">If your application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, it will be restarted using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span>  
  
 <span data-ttu-id="efd02-373">Si votre application a été fourni à l’origine des options de ligne de commande lors de sa première exécution, <xref:System.Windows.Forms.Application.Restart%2A> lancera l’application en utilisant les mêmes options.</span><span class="sxs-lookup"><span data-stu-id="efd02-373">If your application was originally supplied command-line options when it first executed, <xref:System.Windows.Forms.Application.Restart%2A> will launch the application again with the same options.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="efd02-374">Votre code n’est pas une application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-374">Your code is not a Windows Forms application.</span></span> <span data-ttu-id="efd02-375">Vous ne pouvez pas appeler cette méthode dans ce contexte.</span><span class="sxs-lookup"><span data-stu-id="efd02-375">You cannot call this method in this context.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-376">Requiert <see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /> autorisation.</span><span class="sxs-lookup"><span data-stu-id="efd02-376">Requires <see cref="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" /> permission.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efd02-377">Commence à exécuter une boucle de messages d'application standard sur le thread en cours.</span><span class="sxs-lookup"><span data-stu-id="efd02-377">Begins running a standard application message loop on the current thread.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.Run" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run();" />
      <MemberSignature Language="F#" Value="static member Run : unit -&gt; unit" Usage="System.Windows.Forms.Application.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-378">Commence à exécuter une boucle de messages d'application standard sur le thread en cours, sans formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-378">Begins running a standard application message loop on the current thread, without a form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-379">Dans un Win32 ou Windows Forms application, une boucle de message est une routine dans le code qui traite les événements de l’utilisateur, telles que les clics de souris et les frappes au clavier.</span><span class="sxs-lookup"><span data-stu-id="efd02-379">In a Win32-based or Windows Forms application, a message loop is a routine in code that processes user events, such as mouse clicks and keyboard strokes.</span></span> <span data-ttu-id="efd02-380">Chaque application basée sur Windows en cours d’exécution requiert une boucle de messages actifs, appelée la boucle de messages principale.</span><span class="sxs-lookup"><span data-stu-id="efd02-380">Every running Windows-based application requires an active message loop, called the main message loop.</span></span> <span data-ttu-id="efd02-381">Lorsque la boucle de messages principale est fermée, l’application se ferme.</span><span class="sxs-lookup"><span data-stu-id="efd02-381">When the main message loop is closed, the application exits.</span></span> <span data-ttu-id="efd02-382">Dans les Windows Forms, cette boucle est fermée lorsque le <xref:System.Windows.Forms.Application.Exit%2A> méthode est appelée, ou lorsque le <xref:System.Windows.Forms.Application.ExitThread%2A> méthode est appelée sur le thread qui exécute la boucle de messages principale.</span><span class="sxs-lookup"><span data-stu-id="efd02-382">In Windows Forms, this loop is closed when the <xref:System.Windows.Forms.Application.Exit%2A> method is called, or when the <xref:System.Windows.Forms.Application.ExitThread%2A> method is called on the thread that is running the main message loop.</span></span>  
  
 <span data-ttu-id="efd02-383">La plupart des développeurs Windows Forms ne devrez pas utiliser cette version de la méthode.</span><span class="sxs-lookup"><span data-stu-id="efd02-383">Most Windows Forms developers will not need to use this version of the method.</span></span> <span data-ttu-id="efd02-384">Vous devez utiliser le <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> surcharge pour démarrer une application avec un formulaire principal, afin que l’application se termine lorsque le formulaire principal est fermé.</span><span class="sxs-lookup"><span data-stu-id="efd02-384">You should use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.Form%29> overload to start an application with a main form, so that the application terminates when the main form is closed.</span></span> <span data-ttu-id="efd02-385">Pour toutes les autres situations, utilisez la <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> de surcharge, qui prend en charge en fournissant un <xref:System.Windows.Forms.ApplicationContext> objet pour mieux contrôler la durée de vie de l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-385">For all other situations, use the <xref:System.Windows.Forms.Application.Run%28System.Windows.Forms.ApplicationContext%29> overload, which supports supplying an <xref:System.Windows.Forms.ApplicationContext> object for better control over the lifetime of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd02-386">Une boucle de messages principale est déjà en cours d’exécution sur ce thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-386">A main message loop is already running on this thread.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Application.ExitThread" />
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Windows.Forms.ApplicationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Windows.Forms.ApplicationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.Run(System.Windows.Forms.ApplicationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (context As ApplicationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Windows::Forms::ApplicationContext ^ context);" />
      <MemberSignature Language="F#" Value="static member Run : System.Windows.Forms.ApplicationContext -&gt; unit" Usage="System.Windows.Forms.Application.Run context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.ApplicationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="efd02-387"><see cref="T:System.Windows.Forms.ApplicationContext" /> dans lequel l'application est exécutée.</span><span class="sxs-lookup"><span data-stu-id="efd02-387">An <see cref="T:System.Windows.Forms.ApplicationContext" /> in which the application is run.</span></span></param>
        <summary><span data-ttu-id="efd02-388">Commence à exécuter une boucle de messages d'application standard sur le thread en cours, avec <see cref="T:System.Windows.Forms.ApplicationContext" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-388">Begins running a standard application message loop on the current thread, with an <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-389">La boucle de messages s’exécute jusqu'à ce que <xref:System.Windows.Forms.Application.Exit%2A> ou <xref:System.Windows.Forms.Application.ExitThread%2A> est appelée ou la <xref:System.Windows.Forms.Application.ThreadExit> événement est déclenché sur l’objet de contexte.</span><span class="sxs-lookup"><span data-stu-id="efd02-389">The message loop runs until <xref:System.Windows.Forms.Application.Exit%2A> or <xref:System.Windows.Forms.Application.ExitThread%2A> is called or the <xref:System.Windows.Forms.Application.ThreadExit> event is raised on the context object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-390">L’exemple affiche deux formulaires et quitte l’application lorsque les deux formes sont fermés.</span><span class="sxs-lookup"><span data-stu-id="efd02-390">The example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="efd02-391">Lorsque l’application démarre et s’arrête, la position de chaque formulaire est mémorisée.</span><span class="sxs-lookup"><span data-stu-id="efd02-391">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="efd02-392">Cet exemple montre comment utiliser un <xref:System.Windows.Forms.ApplicationContext>, ainsi que le `Application.Run(context)` (méthode), pour afficher plusieurs formulaires lorsque l’application démarre.</span><span class="sxs-lookup"><span data-stu-id="efd02-392">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="efd02-393">La classe `MyApplicationContext` hérite <xref:System.Windows.Forms.ApplicationContext> et assure le suivi lorsque chaque formulaire est fermé, puis quitte le thread actuel lorsque les deux sont.</span><span class="sxs-lookup"><span data-stu-id="efd02-393">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="efd02-394">La classe stocke les positions de chaque formulaire pour l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-394">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="efd02-395">Les données de position du formulaire sont stockées dans un fichier intitulé `Appdata.txt` qui est créé à l’emplacement déterminé par <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-395">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span> <span data-ttu-id="efd02-396">Le `Main` les appels de méthode `Application.Run(context)` pour démarrer l’application étant donnée le <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="efd02-396">The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 <span data-ttu-id="efd02-397">Le code pour le `AppForm1` et `AppForm2` forms n’est pas indiqué pour des raisons de concision.</span><span class="sxs-lookup"><span data-stu-id="efd02-397">The code for the `AppForm1` and `AppForm2` forms is not shown for the purpose of brevity.</span></span> <span data-ttu-id="efd02-398">Consultez le <xref:System.Windows.Forms.ApplicationContext> vue d’ensemble de la classe pour obtenir la liste de l’ensemble du code.</span><span class="sxs-lookup"><span data-stu-id="efd02-398">See the <xref:System.Windows.Forms.ApplicationContext> class overview for the whole code listing.</span></span>  
  
 [!code-cpp[Application#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#2)]
 [!code-csharp[Application#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#2)]
 [!code-vb[Application#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd02-399">Une boucle de messages principale est déjà en cours d’exécution sur ce thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-399">A main message loop is already running on this thread.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Application.ExitThread" />
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.Run(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Windows::Forms::Form ^ mainForm);" />
      <MemberSignature Language="F#" Value="static member Run : System.Windows.Forms.Form -&gt; unit" Usage="System.Windows.Forms.Application.Run mainForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm"><span data-ttu-id="efd02-400"><see cref="T:System.Windows.Forms.Form" /> représentant le formulaire à afficher.</span><span class="sxs-lookup"><span data-stu-id="efd02-400">A <see cref="T:System.Windows.Forms.Form" /> that represents the form to make visible.</span></span></param>
        <summary><span data-ttu-id="efd02-401">Commence à exécuter une boucle de messages d'application standard sur le thread en cours et affiche le formulaire spécifié.</span><span class="sxs-lookup"><span data-stu-id="efd02-401">Begins running a standard application message loop on the current thread, and makes the specified form visible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-402">En règle générale, la fonction principale d’une application appelle cette méthode et lui passe la fenêtre principale de l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-402">Typically, the main function of an application calls this method and passes to it the main window of the application.</span></span>  
  
 <span data-ttu-id="efd02-403">Cette méthode ajoute un gestionnaire d’événements pour le `mainForm` paramètre pour le <xref:System.Windows.Forms.Form.Closed> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-403">This method adds an event handler to the `mainForm` parameter for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="efd02-404">Le Gestionnaire d’événements appelle <xref:System.Windows.Forms.Application.ExitThread%2A> pour nettoyer l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-404">The event handler calls <xref:System.Windows.Forms.Application.ExitThread%2A> to clean up the application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-405">Le <xref:System.Windows.Forms.Control.Dispose%2A> méthode de la <xref:System.Windows.Forms.Form> classe sera appelée avant le retour de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="efd02-405">The <xref:System.Windows.Forms.Control.Dispose%2A> method of the <xref:System.Windows.Forms.Form> class will be called prior to the return of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-406">L’exemple de code suivant répertorie les numéros dans une zone de liste sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-406">The following code example lists numbers in a list box on a form.</span></span> <span data-ttu-id="efd02-407">Chaque fois que vous cliquez sur `button1`, l’application ajoute un autre numéro à la liste.</span><span class="sxs-lookup"><span data-stu-id="efd02-407">Each time you click `button1`, the application adds another number to the list.</span></span>  
  
 <span data-ttu-id="efd02-408">Le `Main` les appels de méthode <xref:System.Windows.Forms.Application.Run%2A> pour démarrer l’application, ce qui crée le formulaire, `listBox1`, et `button1`.</span><span class="sxs-lookup"><span data-stu-id="efd02-408">The `Main` method calls <xref:System.Windows.Forms.Application.Run%2A> to start the application, which creates the form, `listBox1`, and `button1`.</span></span> <span data-ttu-id="efd02-409">Lorsque l’utilisateur clique sur `button1`, le `button1_Click` méthode ajoute un à trois à la zone de liste de nombres et affiche un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-409">When the user clicks `button1`, the `button1_Click` method adds numbers one to three to the list box, and displays a <xref:System.Windows.Forms.MessageBox>.</span></span> <span data-ttu-id="efd02-410">Si l’utilisateur clique sur **non** sur le <xref:System.Windows.Forms.MessageBox>, le `button1_Click` méthode ajoute un autre numéro à la liste.</span><span class="sxs-lookup"><span data-stu-id="efd02-410">If the user clicks **No** on the <xref:System.Windows.Forms.MessageBox>, the `button1_Click` method adds another number to the list.</span></span> <span data-ttu-id="efd02-411">Si l’utilisateur clique sur **Oui**, l’application appelle <xref:System.Windows.Forms.Application.Exit%2A> pour traiter tous les messages restants dans la file d’attente, puis s’arrêter.</span><span class="sxs-lookup"><span data-stu-id="efd02-411">If the user clicks **Yes**, the application calls <xref:System.Windows.Forms.Application.Exit%2A> to process all remaining messages in the queue and then to quit.</span></span>  
  
 <span data-ttu-id="efd02-412">L’exemple exige que `listBox1` et `button1` ont été créés et placés dans un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-412">The example requires that `listBox1` and `button1` have been created and placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.Exit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.Exit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.Exit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.Exit Example/CS/source.cs#1)]
 [!code-vb[Classic Application.Exit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.Exit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd02-413">Une boucle de messages principale est déjà en cours d’exécution sur le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="efd02-413">A main message loop is already running on the current thread.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Application.ExitThread" />
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
      </Docs>
    </Member>
    <Member MemberName="SafeTopLevelCaptionFormat">
      <MemberSignature Language="C#" Value="public static string SafeTopLevelCaptionFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string SafeTopLevelCaptionFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.SafeTopLevelCaptionFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SafeTopLevelCaptionFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SafeTopLevelCaptionFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeTopLevelCaptionFormat : string with get, set" Usage="System.Windows.Forms.Application.SafeTopLevelCaptionFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-414">Obtient ou définit la chaîne de format à appliquer aux titres des fenêtres de niveau supérieur lorsqu'ils s'affichent avec une bannière d'avertissement.</span><span class="sxs-lookup"><span data-stu-id="efd02-414">Gets or sets the format string to apply to top-level window captions when they are displayed with a warning banner.</span></span></summary>
        <value><span data-ttu-id="efd02-415">Chaîne de format à appliquer aux titres des fenêtres de niveau supérieur.</span><span class="sxs-lookup"><span data-stu-id="efd02-415">The format string to apply to top-level window captions.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="efd02-416">pour toutes les fenêtres définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="efd02-416">for all windows to set this property.</span></span> <span data-ttu-id="efd02-417">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="efd02-417">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetCompatibleTextRenderingDefault">
      <MemberSignature Language="C#" Value="public static void SetCompatibleTextRenderingDefault (bool defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCompatibleTextRenderingDefault(bool defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCompatibleTextRenderingDefault (defaultValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCompatibleTextRenderingDefault(bool defaultValue);" />
      <MemberSignature Language="F#" Value="static member SetCompatibleTextRenderingDefault : bool -&gt; unit" Usage="System.Windows.Forms.Application.SetCompatibleTextRenderingDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="efd02-418">Valeur par défaut à utiliser pour les nouveaux contrôles.</span><span class="sxs-lookup"><span data-stu-id="efd02-418">The default value to use for new controls.</span></span> <span data-ttu-id="efd02-419">Si <see langword="true" />, les nouveaux contrôles qui prennent en charge <c>UseCompatibleTextRendering</c> utilisent [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] basé sur la classe <see cref="T:System.Drawing.Graphics" /> pour le rendu de texte ; si <see langword="false" />, les nouveaux contrôles utilisent [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] basé sur la classe <see cref="T:System.Windows.Forms.TextRenderer" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-419">If <see langword="true" />, new controls that support <c>UseCompatibleTextRendering</c> use the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <see cref="T:System.Drawing.Graphics" /> class for text rendering; if <see langword="false" />, new controls use the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <see cref="T:System.Windows.Forms.TextRenderer" /> class.</span></span></param>
        <summary><span data-ttu-id="efd02-420">Définit la valeur par défaut à l’échelle de l’application destinée à la propriété <c>UseCompatibleTextRendering</c> définie sur certains contrôles.</span><span class="sxs-lookup"><span data-stu-id="efd02-420">Sets the application-wide default for the <c>UseCompatibleTextRendering</c> property defined on certain controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-421">Certains contrôles Windows Forms peuvent restituer leur texte à l’aide la <xref:System.Windows.Forms.TextRenderer> (classe), qui est basée sur le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bibliothèque de graphiques, ou le <xref:System.Drawing.Graphics> (classe), qui est basée sur le [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] bibliothèque de graphiques.</span><span class="sxs-lookup"><span data-stu-id="efd02-421">Certain Windows Forms controls can render their text using either the <xref:System.Windows.Forms.TextRenderer> class, which is based on the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] graphics library, or the <xref:System.Drawing.Graphics> class, which is based on the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] graphics library.</span></span> <span data-ttu-id="efd02-422">Cette modification a été apportée dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] en raison de problèmes de performance et de localisation avec [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-422">This change was made in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] because of performance and localization issues with [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span></span> <span data-ttu-id="efd02-423">Utilisez <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> pour définir la valeur par défaut de la `UseCompatibleTextRendering` propriété pour les contrôles qui prennent en charge.</span><span class="sxs-lookup"><span data-stu-id="efd02-423">Use <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> to set the default value of the `UseCompatibleTextRendering` property for controls that support it.</span></span>  
  
 <span data-ttu-id="efd02-424">Le `UseCompatibleTextRendering` propriété vise à assurer la compatibilité visuelle entre les contrôles Windows Forms ce texte rendu à l’aide du <xref:System.Windows.Forms.TextRenderer> classe et [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] et [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] les applications qui effectuent le rendu de texte personnalisé à l’aide de la <xref:System.Drawing.Graphics>classe.</span><span class="sxs-lookup"><span data-stu-id="efd02-424">The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class.</span></span> <span data-ttu-id="efd02-425">Dans la plupart des cas, si votre application n’est pas mis à niveau à partir de [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] ou [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], il est recommandé de laisser `UseCompatibleTextRendering` la valeur par défaut de `false`.</span><span class="sxs-lookup"><span data-stu-id="efd02-425">In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.</span></span>  
  
 <span data-ttu-id="efd02-426">Le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] en <xref:System.Windows.Forms.TextRenderer> classe a été introduite dans le [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] pour améliorer les performances, rendre du texte améliorer l’aspect et la prise en charge des polices internationales.</span><span class="sxs-lookup"><span data-stu-id="efd02-426">The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts.</span></span> <span data-ttu-id="efd02-427">Dans les versions antérieures de la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], le [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] basé <xref:System.Drawing.Graphics> classe a été utilisée pour effectuer le rendu du texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-427">In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering.</span></span> [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <span data-ttu-id="efd02-428">calcule l’espacement des caractères et habillage différemment à partir de word [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-428">calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span></span> <span data-ttu-id="efd02-429">Dans une application Windows Forms qui utilise le <xref:System.Drawing.Graphics> class pour restituer le texte, cela peut entraîner le texte pour les contrôles qui utilisent <xref:System.Windows.Forms.TextRenderer> différente du reste du texte dans l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-429">In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application.</span></span> <span data-ttu-id="efd02-430">Pour résoudre cette incompatibilité, vous pouvez définir le `UseCompatibleTextRendering` propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="efd02-430">To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true`.</span></span> <span data-ttu-id="efd02-431">Pour définir `UseCompatibleTextRendering` à `true` pour tous les contrôles pris en charge dans l’application, appelez le <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> méthode avec un paramètre de `true`.</span><span class="sxs-lookup"><span data-stu-id="efd02-431">To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> method with a parameter of `true`.</span></span>  
  
 <span data-ttu-id="efd02-432">Vous ne devez jamais appeler cette méthode si votre code Windows Forms est hébergé dans une autre application, tel qu’Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="efd02-432">You should never call this method if your Windows Forms code is hosted in another application, such as Internet Explorer.</span></span> <span data-ttu-id="efd02-433">Appelez uniquement cette méthode dans les applications Windows Forms autonomes.</span><span class="sxs-lookup"><span data-stu-id="efd02-433">Only call this method in stand-alone Windows Forms applications.</span></span>  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <span data-ttu-id="efd02-434">Pour définir la valeur par défaut `UseCompatibleTextRendering` dans [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] ou version ultérieure, consultez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="efd02-434">To set the default value for `UseCompatibleTextRendering` in [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] or later, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="efd02-435">Dans [!INCLUDE[csprcslong](~/includes/csprcslong-md.md)] ou version ultérieure, un appel à <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> est généré automatiquement dans le fichier Program.cs.</span><span class="sxs-lookup"><span data-stu-id="efd02-435">In [!INCLUDE[csprcslong](~/includes/csprcslong-md.md)] or later, a call to <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A> is automatically generated in the Program.cs file.</span></span> <span data-ttu-id="efd02-436">Pour modifier la valeur par défaut du rendu de texte, modifiez le code généré.</span><span class="sxs-lookup"><span data-stu-id="efd02-436">To change the text rendering default, modify the generated code.</span></span>  
  
```scr  
static class Program  
{  
    /// <summary>  
    /// The main entry point for the application.  
    /// </summary>  
    [STAThread]  
    static void Main()  
    {  
        Application.EnableVisualStyles();  
        Application.SetCompatibleTextRenderingDefault(false);  
        Application.Run(new Form1());  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd02-437">Vous pouvez uniquement appeler cette méthode avant que la première fenêtre est créée par votre application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-437">You can only call this method before the first window is created by your Windows Forms application.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering" />
        <altmember cref="P:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering" />
        <altmember cref="P:System.Windows.Forms.GroupBox.UseCompatibleTextRendering" />
        <altmember cref="P:System.Windows.Forms.Label.UseCompatibleTextRendering" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
        <altmember cref="P:System.Windows.Forms.PropertyGrid.UseCompatibleTextRendering" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
        <altmember cref="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetHighDpiMode">
      <MemberSignature Language="C#" Value="public static bool SetHighDpiMode (System.Windows.Forms.HighDpiMode highDpiMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetHighDpiMode(valuetype System.Windows.Forms.HighDpiMode highDpiMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.SetHighDpiMode(System.Windows.Forms.HighDpiMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetHighDpiMode(System::Windows::Forms::HighDpiMode highDpiMode);" />
      <MemberSignature Language="F#" Value="static member SetHighDpiMode : System.Windows.Forms.HighDpiMode -&gt; bool" Usage="System.Windows.Forms.Application.SetHighDpiMode highDpiMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highDpiMode" Type="System.Windows.Forms.HighDpiMode" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="highDpiMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSuspendState">
      <MemberSignature Language="C#" Value="public static bool SetSuspendState (System.Windows.Forms.PowerState state, bool force, bool disableWakeEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetSuspendState(valuetype System.Windows.Forms.PowerState state, bool force, bool disableWakeEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.SetSuspendState(System.Windows.Forms.PowerState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetSuspendState (state As PowerState, force As Boolean, disableWakeEvent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetSuspendState(System::Windows::Forms::PowerState state, bool force, bool disableWakeEvent);" />
      <MemberSignature Language="F#" Value="static member SetSuspendState : System.Windows.Forms.PowerState * bool * bool -&gt; bool" Usage="System.Windows.Forms.Application.SetSuspendState (state, force, disableWakeEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.PowerState" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="force" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="disableWakeEvent" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="efd02-438"><see cref="T:System.Windows.Forms.PowerState" /> qui indique le mode d'alimentation vers lequel basculer.</span><span class="sxs-lookup"><span data-stu-id="efd02-438">A <see cref="T:System.Windows.Forms.PowerState" /> indicating the power activity mode to which to transition.</span></span></param>
        <param name="force"><span data-ttu-id="efd02-439"><see langword="true" /> pour forcer immédiatement le mode suspendu ; <see langword="false" /> pour que Windows envoie une demande de suspension à chaque application.</span><span class="sxs-lookup"><span data-stu-id="efd02-439"><see langword="true" /> to force the suspended mode immediately; <see langword="false" /> to cause Windows to send a suspend request to every application.</span></span></param>
        <param name="disableWakeEvent"><span data-ttu-id="efd02-440"><see langword="true" /> pour désactiver la restauration de l'activation de l'état d'alimentation du système sur un événement de sortie de veille, <see langword="false" /> pour activer la restauration de l'activation de l'état d'alimentation du système sur un événement de sortie de veille.</span><span class="sxs-lookup"><span data-stu-id="efd02-440"><see langword="true" /> to disable restoring the system's power status to active on a wake event, <see langword="false" /> to enable restoring the system's power status to active on a wake event.</span></span></param>
        <summary><span data-ttu-id="efd02-441">Suspend ou met en veille prolongée le système, ou demande que le système soit suspendu ou mis en veille prolongée.</span><span class="sxs-lookup"><span data-stu-id="efd02-441">Suspends or hibernates the system, or requests that the system be suspended or hibernated.</span></span></summary>
        <returns><span data-ttu-id="efd02-442"><see langword="true" /> si le système est en cours de suspension ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-442"><see langword="true" /> if the system is being suspended, otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-443">Si une application ne répond pas à une demande de suspension dans les 20 secondes, Windows détermine qu’il est dans un état non réactif, et que l’application peut être mise en veille ou s’est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="efd02-443">If an application does not respond to a suspend request within 20 seconds, Windows determines that it is in a non-responsive state, and that the application can either be put to sleep or terminated.</span></span> <span data-ttu-id="efd02-444">Une fois une application répond à une demande de suspension, toutefois, il peut prendre le temps nécessaire pour nettoyer les ressources et arrêter les processus actifs.</span><span class="sxs-lookup"><span data-stu-id="efd02-444">Once an application responds to a suspend request, however, it can take whatever time it needs to clean up resources and shut down active processes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.PowerState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetUnhandledExceptionMode">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efd02-445">Indique à l'application comment répondre aux exceptions non gérées.</span><span class="sxs-lookup"><span data-stu-id="efd02-445">Instructs the application how to respond to unhandled exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efd02-446">L’exemple de code suivant définit des gestionnaires d’événements pour les exceptions qui se produisent sur les threads Windows Forms et les exceptions qui se produisent sur d’autres threads.</span><span class="sxs-lookup"><span data-stu-id="efd02-446">The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</span></span> <span data-ttu-id="efd02-447">Il définit <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> afin que toutes les exceptions soient gérées par l’application, quels que soient les paramètres dans le fichier de configuration de l’application utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-447">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="efd02-448">Il utilise l'événement <xref:System.Windows.Forms.Application.ThreadException> pour gérer les exceptions de thread d’interface utilisateur et l'événement <xref:System.AppDomain.UnhandledException> pour gérer les exceptions issues de threads autres que celui de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-448">It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions.</span></span> <span data-ttu-id="efd02-449">Dans la mesure où <xref:System.AppDomain.UnhandledException> ne peut pas empêcher une application de se terminer, l’exemple enregistre simplement l’erreur dans le journal des événements d’application avant l’arrêt.</span><span class="sxs-lookup"><span data-stu-id="efd02-449">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</span></span>  
  
 <span data-ttu-id="efd02-450">Cet exemple suppose que vous avez défini deux contrôles <xref:System.Windows.Forms.Button>, `button1` et `button2`, dans votre classe <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="efd02-450">This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetUnhandledExceptionMode">
      <MemberSignature Language="C#" Value="public static void SetUnhandledExceptionMode (System.Windows.Forms.UnhandledExceptionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetUnhandledExceptionMode(valuetype System.Windows.Forms.UnhandledExceptionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetUnhandledExceptionMode (mode As UnhandledExceptionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode mode);" />
      <MemberSignature Language="F#" Value="static member SetUnhandledExceptionMode : System.Windows.Forms.UnhandledExceptionMode -&gt; unit" Usage="System.Windows.Forms.Application.SetUnhandledExceptionMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Forms.UnhandledExceptionMode" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="efd02-451">Valeur <see cref="T:System.Windows.Forms.UnhandledExceptionMode" /> décrivant comment l'application doit se comporter si une exception est levée sans être interceptée.</span><span class="sxs-lookup"><span data-stu-id="efd02-451">An <see cref="T:System.Windows.Forms.UnhandledExceptionMode" /> value describing how the application should behave if an exception is thrown without being caught.</span></span></param>
        <summary><span data-ttu-id="efd02-452">Indique à l'application comment répondre aux exceptions non gérées.</span><span class="sxs-lookup"><span data-stu-id="efd02-452">Instructs the application how to respond to unhandled exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-453">Il est souvent possible d’intercepter toutes les exceptions levées par les Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-453">It is often not feasible to catch all of the exceptions thrown by Windows Forms.</span></span> <span data-ttu-id="efd02-454">À l’aide de cette méthode, vous pouvez demander à votre application si elle doit intercepter des exceptions non gérées levées par des composants Windows Forms et continuer à fonctionner, ou s’il doit les exposer à l’utilisateur et arrêter l’exécution.</span><span class="sxs-lookup"><span data-stu-id="efd02-454">Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</span></span>  
  
 <span data-ttu-id="efd02-455">Appelez <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> avant d’instancier le formulaire principal de votre application à l’aide de la <xref:System.Windows.Forms.Application.Run%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="efd02-455">Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.</span></span>  
  
 <span data-ttu-id="efd02-456">Pour intercepter les exceptions qui se produisent dans les threads non créés et détenus par Windows Forms, utilisez l'événement <xref:System.AppDomain.UnhandledException>.</span><span class="sxs-lookup"><span data-stu-id="efd02-456">To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-457">L’exemple de code suivant définit des gestionnaires d’événements pour les exceptions qui se produisent sur les threads Windows Forms et les exceptions qui se produisent sur d’autres threads.</span><span class="sxs-lookup"><span data-stu-id="efd02-457">The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</span></span> <span data-ttu-id="efd02-458">Il définit <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> afin que toutes les exceptions soient gérées par l’application, quels que soient les paramètres dans le fichier de configuration de l’application utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-458">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="efd02-459">Il utilise l'événement <xref:System.Windows.Forms.Application.ThreadException> pour gérer les exceptions de thread d’interface utilisateur et l'événement <xref:System.AppDomain.UnhandledException> pour gérer les exceptions issues de threads autres que celui de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-459">It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions.</span></span> <span data-ttu-id="efd02-460">Dans la mesure où <xref:System.AppDomain.UnhandledException> ne peut pas empêcher une application de se terminer, l’exemple enregistre simplement l’erreur dans le journal des événements d’application avant l’arrêt.</span><span class="sxs-lookup"><span data-stu-id="efd02-460">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</span></span>  
  
 <span data-ttu-id="efd02-461">Cet exemple suppose que vous avez défini deux contrôles <xref:System.Windows.Forms.Button>, `button1` et `button2`, dans votre classe <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="efd02-461">This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd02-462">Impossible de définir le mode d’exceptions après que l’application a créé sa première fenêtre.</span><span class="sxs-lookup"><span data-stu-id="efd02-462">You cannot set the exception mode after the application has created its first window.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.UnhandledExceptionMode" />
      </Docs>
    </Member>
    <Member MemberName="SetUnhandledExceptionMode">
      <MemberSignature Language="C#" Value="public static void SetUnhandledExceptionMode (System.Windows.Forms.UnhandledExceptionMode mode, bool threadScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetUnhandledExceptionMode(valuetype System.Windows.Forms.UnhandledExceptionMode mode, bool threadScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetUnhandledExceptionMode (mode As UnhandledExceptionMode, threadScope As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode mode, bool threadScope);" />
      <MemberSignature Language="F#" Value="static member SetUnhandledExceptionMode : System.Windows.Forms.UnhandledExceptionMode * bool -&gt; unit" Usage="System.Windows.Forms.Application.SetUnhandledExceptionMode (mode, threadScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Forms.UnhandledExceptionMode" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="threadScope" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="efd02-463">Valeur <see cref="T:System.Windows.Forms.UnhandledExceptionMode" /> décrivant comment l'application doit se comporter si une exception est levée sans être interceptée.</span><span class="sxs-lookup"><span data-stu-id="efd02-463">An <see cref="T:System.Windows.Forms.UnhandledExceptionMode" /> value describing how the application should behave if an exception is thrown without being caught.</span></span></param>
        <param name="threadScope"><span data-ttu-id="efd02-464"><see langword="true" /> pour définir le mode d'exceptions du thread ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-464"><see langword="true" /> to set the thread exception mode; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="efd02-465">Indique à l'application comment répondre aux exceptions non gérées, en appliquant éventuellement un comportement spécifique au thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-465">Instructs the application how to respond to unhandled exceptions, optionally applying thread-specific behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-466">Il est souvent possible d’intercepter toutes les exceptions levées par les Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-466">It is often not feasible to catch all of the exceptions thrown by Windows Forms.</span></span> <span data-ttu-id="efd02-467">À l’aide de cette méthode, vous pouvez demander à votre application si elle doit intercepter des exceptions non gérées levées par des composants Windows Forms et continuer à fonctionner, ou s’il doit les exposer à l’utilisateur et arrêter l’exécution.</span><span class="sxs-lookup"><span data-stu-id="efd02-467">Using this method, you can instruct your application whether it should catch all unhandled exceptions thrown by Windows Forms components and continue operating, or whether it should expose them to the user and halt execution.</span></span>  
  
 <span data-ttu-id="efd02-468">Appelez <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> avant d’instancier le formulaire principal de votre application à l’aide de la <xref:System.Windows.Forms.Application.Run%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="efd02-468">Call <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> before you instantiate the main form of your application using the <xref:System.Windows.Forms.Application.Run%2A> method.</span></span>  
  
 <span data-ttu-id="efd02-469">Lorsque `threadScope` est `true`, le mode d’exception de thread est défini.</span><span class="sxs-lookup"><span data-stu-id="efd02-469">When `threadScope` is `true`, the thread exception mode is set.</span></span> <span data-ttu-id="efd02-470">Le mode d’exceptions du thread remplace le mode d’exceptions application si `mode` n’a pas la valeur <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic>.</span><span class="sxs-lookup"><span data-stu-id="efd02-470">The thread exception mode overrides the application exception mode if `mode` is not set to <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic>.</span></span>  
  
 <span data-ttu-id="efd02-471">Lorsque `threadScope` est `false`, le mode d’exception application est défini.</span><span class="sxs-lookup"><span data-stu-id="efd02-471">When `threadScope` is `false`, the application exception mode is set.</span></span> <span data-ttu-id="efd02-472">Mode d’exception de l’application est utilisé pour tous les threads qui ont le <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic> mode.</span><span class="sxs-lookup"><span data-stu-id="efd02-472">The application exception mode is used for all threads that have the <xref:System.Windows.Forms.UnhandledExceptionMode.Automatic> mode.</span></span> <span data-ttu-id="efd02-473">Définition du mode d’exception application n’affecte pas le paramètre du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="efd02-473">Setting the application exception mode does not affect the setting of the current thread.</span></span>  
  
 <span data-ttu-id="efd02-474">Pour intercepter les exceptions qui se produisent dans les threads non créés et détenus par Windows Forms, utilisez l'événement <xref:System.AppDomain.UnhandledException>.</span><span class="sxs-lookup"><span data-stu-id="efd02-474">To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-475">L’exemple de code suivant définit des gestionnaires d’événements pour les exceptions qui se produisent sur les threads Windows Forms et les exceptions qui se produisent sur d’autres threads.</span><span class="sxs-lookup"><span data-stu-id="efd02-475">The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</span></span> <span data-ttu-id="efd02-476">Il définit <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> afin que toutes les exceptions soient gérées par l’application, quels que soient les paramètres dans le fichier de configuration de l’application utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-476">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="efd02-477">Il utilise l'événement <xref:System.Windows.Forms.Application.ThreadException> pour gérer les exceptions de thread d’interface utilisateur et l'événement <xref:System.AppDomain.UnhandledException> pour gérer les exceptions issues de threads autres que celui de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-477">It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions.</span></span> <span data-ttu-id="efd02-478">Dans la mesure où <xref:System.AppDomain.UnhandledException> ne peut pas empêcher une application de se terminer, l’exemple enregistre simplement l’erreur dans le journal des événements d’application avant l’arrêt.</span><span class="sxs-lookup"><span data-stu-id="efd02-478">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</span></span>  
  
 <span data-ttu-id="efd02-479">Cet exemple suppose que vous avez défini deux contrôles <xref:System.Windows.Forms.Button>, `button1` et `button2`, dans votre classe <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="efd02-479">This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd02-480">Impossible de définir le mode d’exceptions après que l’application a créé sa première fenêtre.</span><span class="sxs-lookup"><span data-stu-id="efd02-480">You cannot set the exception mode after the application has created its first window.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public static string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string StartupPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StartupPath : string" Usage="System.Windows.Forms.Application.StartupPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-481">Obtient le chemin d’accès au fichier exécutable ayant démarré l’application, sans le nom de l’exécutable.</span><span class="sxs-lookup"><span data-stu-id="efd02-481">Gets the path for the executable file that started the application, not including the executable name.</span></span></summary>
        <value><span data-ttu-id="efd02-482">Chemin d’accès au fichier exécutable ayant démarré l’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-482">The path for the executable file that started the application.</span></span>  
  
<span data-ttu-id="efd02-483">Ce chemin d’accès sera différent selon que l’application Windows Forms est déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-483">This path will be different depending on whether the Windows Forms application is deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <span data-ttu-id="efd02-484">les applications sont stockées dans un cache d’application par utilisateur dans le C:\Documents and Settings\\*nom d’utilisateur* directory.</span><span class="sxs-lookup"><span data-stu-id="efd02-484">applications are stored in a per-user application cache in the C:\Documents and Settings\\*username* directory.</span></span> <span data-ttu-id="efd02-485">Pour plus d’informations, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span><span class="sxs-lookup"><span data-stu-id="efd02-485">For more information, see [Accessing Local and Remote Data in ClickOnce Applications](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="efd02-486">L’exemple de code suivant obtient cette propriété et affiche sa valeur dans une zone de texte.</span><span class="sxs-lookup"><span data-stu-id="efd02-486">The following code example gets this property and displays its value in a text box.</span></span> <span data-ttu-id="efd02-487">L’exemple exige que `textBox1` a été placé sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="efd02-487">The example requires that `textBox1` has been placed on a form.</span></span>  
  
 [!code-cpp[Classic Application.StartupPath Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.StartupPath Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.StartupPath Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.StartupPath Example/CS/source.cs#1)]
 [!code-vb[Classic Application.StartupPath Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.StartupPath Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="efd02-488">Pour obtenir le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="efd02-488">for getting the path.</span></span> <span data-ttu-id="efd02-489">Énumération associée : <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="efd02-489">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadException">
      <MemberSignature Language="C#" Value="public static event System.Threading.ThreadExceptionEventHandler ThreadException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Threading.ThreadExceptionEventHandler ThreadException" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Application.ThreadException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadException As ThreadExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Threading::ThreadExceptionEventHandler ^ ThreadException;" />
      <MemberSignature Language="F#" Value="member this.ThreadException : System.Threading.ThreadExceptionEventHandler " Usage="member this.ThreadException : System.Threading.ThreadExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-490">Se produit lorsqu'une exception non gérée est levée sur un thread.</span><span class="sxs-lookup"><span data-stu-id="efd02-490">Occurs when an untrapped thread exception is thrown.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-491">Cet événement permet à votre application Windows Forms de gérer les exceptions non prises en charge qui se produisent dans les threads de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="efd02-491">This event allows your Windows Forms application to handle otherwise unhandled exceptions that occur in Windows Forms threads.</span></span> <span data-ttu-id="efd02-492">Attachez vos gestionnaires d’événements à l'événement <xref:System.Windows.Forms.Application.ThreadException> pour traiter ces exceptions, qui laisseront votre application dans un état indeterminé.</span><span class="sxs-lookup"><span data-stu-id="efd02-492">Attach your event handlers to the <xref:System.Windows.Forms.Application.ThreadException> event to deal with these exceptions, which will leave your application in an unknown state.</span></span> <span data-ttu-id="efd02-493">Dans la mesure du possible, les exceptions doivent être gérées localement par un bloc structuré de gestion des exceptions.</span><span class="sxs-lookup"><span data-stu-id="efd02-493">Where possible, exceptions should be handled by a structured exception handling block.</span></span>  
  
 <span data-ttu-id="efd02-494">Vous pouvez choisir si ce rappel doit être utilisé pour les exceptions Windows Forms non gérées en définissant <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-494">You can change whether this callback is used for unhandled Windows Forms thread exceptions by setting <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</span></span> <span data-ttu-id="efd02-495">Pour intercepter les exceptions qui se produisent dans les threads non créés et détenus par Windows Forms, utilisez l'événement <xref:System.AppDomain.UnhandledException>.</span><span class="sxs-lookup"><span data-stu-id="efd02-495">To catch exceptions that occur in threads not created and owned by Windows Forms, use the <xref:System.AppDomain.UnhandledException> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd02-496">Pour garantir qu’aucune activation de cet événement ne soit manquée, vous devez attacher un gestionnaire avant d’appeler <xref:System.Windows.Application.Run%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="efd02-496">To guarantee that no activations of this event are missed, you must attach a handler before you call <xref:System.Windows.Application.Run%2A?displayProperty=nameWithType>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-497">S'agissant d'un événement statique, vous devez détacher vos gestionnaires d’événements lorsque votre application est supprimée, faute de quoi des fuites mémoire vont se produire.</span><span class="sxs-lookup"><span data-stu-id="efd02-497">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-498">L’exemple de code suivant définit des gestionnaires d’événements pour les exceptions qui se produisent sur les threads Windows Forms et les exceptions qui se produisent sur d’autres threads.</span><span class="sxs-lookup"><span data-stu-id="efd02-498">The following code example sets event handlers for exceptions that occur on Windows Forms threads and exceptions that occur on other threads.</span></span> <span data-ttu-id="efd02-499">Il définit <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> afin que toutes les exceptions soient gérées par l’application, quels que soient les paramètres dans le fichier de configuration de l’application utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-499">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all exceptions are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="efd02-500">Il utilise l'événement <xref:System.Windows.Forms.Application.ThreadException> pour gérer les exceptions de thread d’interface utilisateur et l'événement <xref:System.AppDomain.UnhandledException> pour gérer les exceptions issues de threads autres que celui de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-500">It uses the <xref:System.Windows.Forms.Application.ThreadException> event to handle UI thread exceptions, and the <xref:System.AppDomain.UnhandledException> event to handle non-UI thread exceptions.</span></span> <span data-ttu-id="efd02-501">Dans la mesure où <xref:System.AppDomain.UnhandledException> ne peut pas empêcher une application de se terminer, l’exemple enregistre simplement l’erreur dans le journal des événements d’application avant l’arrêt.</span><span class="sxs-lookup"><span data-stu-id="efd02-501">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the application event log before termination.</span></span>  
  
 <span data-ttu-id="efd02-502">Cet exemple suppose que vous avez défini deux contrôles <xref:System.Windows.Forms.Button>, `button1` et `button2`, dans votre classe <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="efd02-502">This example assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="efd02-503">à l’appelant immédiat d’appeler du code non managé lors de l’ajout d’un gestionnaire à cet événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-503">for the immediate caller to call unmanaged code when adding a handler to this event.</span></span> <span data-ttu-id="efd02-504">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="efd02-504">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public static event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Application.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ThreadExit;" />
      <MemberSignature Language="F#" Value="member this.ThreadExit : EventHandler " Usage="member this.ThreadExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-505">Se produit lorsqu'un thread est sur le point de s'arrêter.</span><span class="sxs-lookup"><span data-stu-id="efd02-505">Occurs when a thread is about to shut down.</span></span> <span data-ttu-id="efd02-506">Lorsque le principal thread d'une application est sur le point de s'arrêter, cet événement commence par se déclencher, suivi d'un événement <see cref="E:System.Windows.Forms.Application.ApplicationExit" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-506">When the main thread for an application is about to be shut down, this event is raised first, followed by an <see cref="E:System.Windows.Forms.Application.ApplicationExit" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-507">Vous devez attacher les gestionnaires d’événements pour le <xref:System.Windows.Forms.Application.ThreadExit> événement pour effectuer les non prise en charge, les tâches requises avant que le thread s’arrête en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="efd02-507">You must attach the event handlers to the <xref:System.Windows.Forms.Application.ThreadExit> event to perform any unhandled, required tasks before the thread stops running.</span></span> <span data-ttu-id="efd02-508">Fermez les fichiers ouverts par ce thread, ou supprimez les objets que le garbage collector n’a pas récupéré.</span><span class="sxs-lookup"><span data-stu-id="efd02-508">Close files opened by this thread, or dispose of objects that the garbage collector did not reclaim.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="efd02-509">S'agissant d'un événement statique, vous devez détacher vos gestionnaires d’événements lorsque votre application est supprimée, faute de quoi des fuites mémoire vont se produire.</span><span class="sxs-lookup"><span data-stu-id="efd02-509">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-510">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="efd02-510">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="efd02-511">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Application.ThreadExit> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-511">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Application.ThreadExit> event.</span></span> <span data-ttu-id="efd02-512">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="efd02-512">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="efd02-513">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="efd02-513">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="efd02-514">Pour exécuter l’exemple de code, collez-le dans un formulaire Windows et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Application.ThreadExit> événement.</span><span class="sxs-lookup"><span data-stu-id="efd02-514">To run the example code, paste it into a Windows Forms and ensure that the event handler is associated with the <xref:System.Windows.Forms.Application.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#6)]
 [!code-vb[System.Windows.Forms.EventExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.ExitThread" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterMessageLoop">
      <MemberSignature Language="C#" Value="public static void UnregisterMessageLoop ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterMessageLoop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Application.UnregisterMessageLoop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterMessageLoop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterMessageLoop();" />
      <MemberSignature Language="F#" Value="static member UnregisterMessageLoop : unit -&gt; unit" Usage="System.Windows.Forms.Application.UnregisterMessageLoop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd02-515">Annule l'enregistrement du rappel de boucle de message réalisé avec <see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-515">Unregisters the message loop callback made with <see cref="M:System.Windows.Forms.Application.RegisterMessageLoop(System.Windows.Forms.Application.MessageLoopCallback)" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAppDataPath">
      <MemberSignature Language="C#" Value="public static string UserAppDataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserAppDataPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.UserAppDataPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserAppDataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserAppDataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAppDataPath : string" Usage="System.Windows.Forms.Application.UserAppDataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-516">Obtient le chemin d’accès aux données d’application d’un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-516">Gets the path for the application data of a user.</span></span></summary>
        <value><span data-ttu-id="efd02-517">Chemin d'accès aux données d'application d'un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-517">The path for the application data of a user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-518">Si un chemin d’accès n’existe pas, un est créé dans le format suivant :</span><span class="sxs-lookup"><span data-stu-id="efd02-518">If a path does not exist, one is created in the following format:</span></span>  
  
 <span data-ttu-id="efd02-519">*Chemin d’accès de base*\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span><span class="sxs-lookup"><span data-stu-id="efd02-519">*Base Path*\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span></span>  
  
 <span data-ttu-id="efd02-520">Données stockées dans ce chemin d’accès fait partie du profil utilisateur itinérant.</span><span class="sxs-lookup"><span data-stu-id="efd02-520">Data stored in this path is part of user profile that is enabled for roaming.</span></span> <span data-ttu-id="efd02-521">Un utilisateur itinérant fonctionne sur plusieurs ordinateurs dans un réseau.</span><span class="sxs-lookup"><span data-stu-id="efd02-521">A roaming user works on more than one computer in a network.</span></span> <span data-ttu-id="efd02-522">Le profil utilisateur pour un utilisateur itinérant est conservé sur un serveur sur le réseau et est chargé sur un système lorsque l’utilisateur ouvre une session.</span><span class="sxs-lookup"><span data-stu-id="efd02-522">The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</span></span> <span data-ttu-id="efd02-523">Pour un profil utilisateur à prendre en compte pour l’itinérance, le système d’exploitation doit prendre en charge les profils itinérants et il doit être activé.</span><span class="sxs-lookup"><span data-stu-id="efd02-523">For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</span></span>  
  
 <span data-ttu-id="efd02-524">Un chemin d’accès de base par défaut est C:\Documents and Settings\\*nom d’utilisateur*\Application Data.</span><span class="sxs-lookup"><span data-stu-id="efd02-524">A typical base path is C:\Documents and Settings\\*username*\Application Data.</span></span> <span data-ttu-id="efd02-525">Ce chemin d’accès sera différent, toutefois, si l’application Windows Forms est déployée à l’aide de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span><span class="sxs-lookup"><span data-stu-id="efd02-525">This path will be different, however, if the Windows Forms application is deployed by using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] <span data-ttu-id="efd02-526">crée son propre répertoire de données d’application qui est isolée de toutes les autres applications.</span><span class="sxs-lookup"><span data-stu-id="efd02-526">creates its own application data directory that is isolated from all other applications.</span></span> <span data-ttu-id="efd02-527">Pour plus d’informations, consultez [l’accès aux données locales et distantes dans les Applications ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span><span class="sxs-lookup"><span data-stu-id="efd02-527">For more information, see [Accessing Local and Remote Data in ClickOnce Applications](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-528">L’exemple de code suivant affiche deux formulaires et quitte l’application lorsque les deux formes sont fermés.</span><span class="sxs-lookup"><span data-stu-id="efd02-528">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="efd02-529">Lorsque l’application démarre et s’arrête, la position de chaque formulaire est mémorisée.</span><span class="sxs-lookup"><span data-stu-id="efd02-529">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="efd02-530">Cet exemple montre comment utiliser le <xref:System.Windows.Forms.Application.UserAppDataPath%2A> propriété pour stocker les données d’application pour l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-530">This example demonstrates using the <xref:System.Windows.Forms.Application.UserAppDataPath%2A> property to store application data for the user.</span></span>  
  
 <span data-ttu-id="efd02-531">La classe `MyApplicationContext` hérite <xref:System.Windows.Forms.ApplicationContext> et assure le suivi lorsque chaque formulaire est fermé, puis quitte le thread actuel lorsque les deux sont.</span><span class="sxs-lookup"><span data-stu-id="efd02-531">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="efd02-532">La classe stocke les positions de chaque formulaire pour l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-532">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="efd02-533">Les données de position du formulaire sont stockées dans un fichier intitulé `Appdata.txt` qui est créé à l’emplacement déterminé par <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="efd02-533">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span> <span data-ttu-id="efd02-534">Le `Main` les appels de méthode `Application.Run(context)` pour démarrer l’application étant donnée le <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="efd02-534">The `Main` method calls `Application.Run(context)` to start the application given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 <span data-ttu-id="efd02-535">Ce code est un extrait de l’exemple illustré dans la <xref:System.Windows.Forms.ApplicationContext> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="efd02-535">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="efd02-536">Du code n’est pas affiché à des fins de concision.</span><span class="sxs-lookup"><span data-stu-id="efd02-536">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="efd02-537">Consultez <xref:System.Windows.Forms.ApplicationContext> pour obtenir la liste de l’ensemble du code.</span><span class="sxs-lookup"><span data-stu-id="efd02-537">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#5)]
 [!code-csharp[Application#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#5)]
 [!code-vb[Application#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Application.UserAppDataRegistry" />
      </Docs>
    </Member>
    <Member MemberName="UserAppDataRegistry">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey UserAppDataRegistry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Win32.RegistryKey UserAppDataRegistry" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.UserAppDataRegistry" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserAppDataRegistry As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Win32::RegistryKey ^ UserAppDataRegistry { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAppDataRegistry : Microsoft.Win32.RegistryKey" Usage="System.Windows.Forms.Application.UserAppDataRegistry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-538">Obtient la clé de Registre pour les données d'application d'un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-538">Gets the registry key for the application data of a user.</span></span></summary>
        <value><span data-ttu-id="efd02-539"><see cref="T:Microsoft.Win32.RegistryKey" /> représentant la clé de Registre pour les données d'application propres à l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="efd02-539">A <see cref="T:Microsoft.Win32.RegistryKey" /> representing the registry key for the application data specific to the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-540">Si la clé n’existe pas, il est créé dans le format suivant :</span><span class="sxs-lookup"><span data-stu-id="efd02-540">If the key does not exist, it is created in the following format:</span></span>  
  
 <span data-ttu-id="efd02-541">CurrentUser\Software\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span><span class="sxs-lookup"><span data-stu-id="efd02-541">CurrentUser\Software\\<xref:System.Windows.Forms.Application.CompanyName%2A>\\<xref:System.Windows.Forms.Application.ProductName%2A>\\<xref:System.Windows.Forms.Application.ProductVersion%2A></span></span>   
  
 <span data-ttu-id="efd02-542">Données stockées dans cette clé fait partie du profil utilisateur itinérant.</span><span class="sxs-lookup"><span data-stu-id="efd02-542">Data stored in this key is part of user profile that is enabled for roaming.</span></span> <span data-ttu-id="efd02-543">Un utilisateur itinérant fonctionne sur plusieurs ordinateurs dans un réseau.</span><span class="sxs-lookup"><span data-stu-id="efd02-543">A roaming user works on more than one computer in a network.</span></span> <span data-ttu-id="efd02-544">Le profil utilisateur pour un utilisateur itinérant est conservé sur un serveur sur le réseau et est chargé sur un système lorsque l’utilisateur ouvre une session.</span><span class="sxs-lookup"><span data-stu-id="efd02-544">The user profile for a roaming user is kept on a server on the network and is loaded onto a system when the user logs on.</span></span> <span data-ttu-id="efd02-545">Pour un profil utilisateur à prendre en compte pour l’itinérance, le système d’exploitation doit prendre en charge les profils itinérants et il doit être activé.</span><span class="sxs-lookup"><span data-stu-id="efd02-545">For a user profile to be considered for roaming, the operating system must support roaming profiles and it must be enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
      </Docs>
    </Member>
    <Member MemberName="UseVisualStyles">
      <MemberSignature Language="C#" Value="public static bool UseVisualStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseVisualStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.UseVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UseVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseVisualStyles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseVisualStyles : bool" Usage="System.Windows.Forms.Application.UseVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWaitCursor">
      <MemberSignature Language="C#" Value="public static bool UseWaitCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseWaitCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.UseWaitCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseWaitCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseWaitCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseWaitCursor : bool with get, set" Usage="System.Windows.Forms.Application.UseWaitCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-546">Obtient ou définit si le curseur d'attente est utilisé pour tous les formulaires ouverts de l'application.</span><span class="sxs-lookup"><span data-stu-id="efd02-546">Gets or sets whether the wait cursor is used for all open forms of the application.</span></span></summary>
        <value><span data-ttu-id="efd02-547"><see langword="true" /> si le curseur d'attente est utilisé pour tous les formulaires ouverts ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-547"><see langword="true" /> is the wait cursor is used for all open forms; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-548">Lorsque cette propriété a la valeur `true`, le <xref:System.Windows.Forms.Control.UseWaitCursor%2A> propriété de tous les formulaires ouverts dans l’application est définie `true`.</span><span class="sxs-lookup"><span data-stu-id="efd02-548">When this property is set to `true`, the <xref:System.Windows.Forms.Control.UseWaitCursor%2A> property of all open forms in the application will be set to `true`.</span></span> <span data-ttu-id="efd02-549">Cet appel ne retournera pas jusqu'à ce que cette propriété a été définie sur tous les formulaires.</span><span class="sxs-lookup"><span data-stu-id="efd02-549">This call will not return until this property has been set on all forms.</span></span> <span data-ttu-id="efd02-550">Utilisez cette propriété lorsque vous avez une opération longue, pour indiquer de tous les formulaires de l’application que l’opération traite toujours.</span><span class="sxs-lookup"><span data-stu-id="efd02-550">Use this property when you have a long-running operation, and want to indicate in all application forms that the operation is still processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStyleState">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleState VisualStyleState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.VisualStyles.VisualStyleState VisualStyleState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Application.VisualStyleState" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property VisualStyleState As VisualStyleState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::VisualStyles::VisualStyleState VisualStyleState { System::Windows::Forms::VisualStyles::VisualStyleState get(); void set(System::Windows::Forms::VisualStyles::VisualStyleState value); };" />
      <MemberSignature Language="F#" Value="member this.VisualStyleState : System.Windows.Forms.VisualStyles.VisualStyleState with get, set" Usage="System.Windows.Forms.Application.VisualStyleState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd02-551">Obtient une valeur qui spécifie l'application de styles visuels aux fenêtres d'application.</span><span class="sxs-lookup"><span data-stu-id="efd02-551">Gets a value that specifies how visual styles are applied to application windows.</span></span></summary>
        <value><span data-ttu-id="efd02-552">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" />.</span><span class="sxs-lookup"><span data-stu-id="efd02-552">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd02-553">Cela <xref:System.Windows.Forms.Application.VisualStyleState%2A> propriété détermine si les styles visuels sont activés dans les zones clientes ou non cliente des fenêtres d’application.</span><span class="sxs-lookup"><span data-stu-id="efd02-553">This <xref:System.Windows.Forms.Application.VisualStyleState%2A> property determines whether visual styles are enabled in client areas or nonclient areas of application windows.</span></span> <span data-ttu-id="efd02-554">En règle générale, cette propriété doit être définie dans le constructeur du formulaire principal ou <xref:System.Windows.Forms.Form.Load> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="efd02-554">Generally, this property should be set within the main form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd02-555">Le code suivant exemple définit le <xref:System.Windows.Forms.Application.VisualStyleState%2A> propriété de la <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType> valeurs au sein de la <xref:System.Windows.Forms.Control.Click> Gestionnaire d’événements pour un <xref:System.Windows.Forms.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="efd02-555">The following code example sets the <xref:System.Windows.Forms.Application.VisualStyleState%2A> property to one of the <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType> values within the <xref:System.Windows.Forms.Control.Click> event handler for a <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="efd02-556">Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType> énumération.</span><span class="sxs-lookup"><span data-stu-id="efd02-556">This code example is part of a larger example provided for the <xref:System.Windows.Forms.VisualStyles.VisualStyleState?displayProperty=nameWithType> enumeration.</span></span>  
  
 [!code-cpp[System.Windows.Forms.VisualStyles.VisualStyleState#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleState/cpp/visualstylestate.cpp#10)]
 [!code-csharp[System.Windows.Forms.VisualStyles.VisualStyleState#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleState/CS/visualstylestate.cs#10)]
 [!code-vb[System.Windows.Forms.VisualStyles.VisualStyleState#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.VisualStyles.VisualStyleState/VB/visualstylestate.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>