<Type Name="ToolStripItem" FullName="System.Windows.Forms.ToolStripItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1652f571e9db1f755a59e60fa0b418e49efc66b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65005114" /></Metadata><TypeSignature Language="C#" Value="public abstract class ToolStripItem : System.ComponentModel.Component, IDisposable, System.Windows.Forms.IDropTarget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolStripItem extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Windows.Forms.IDropTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolStripItem&#xA;Inherits Component&#xA;Implements IDisposable, IDropTarget" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripItem abstract : System::ComponentModel::Component, IDisposable, System::Windows::Forms::IDropTarget" />
  <TypeSignature Language="F#" Value="type ToolStripItem = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDropTarget</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolStripItemDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolStripItemDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la classe de base abstraite qui gère les événements et la disposition de tous les éléments qui un <see cref="T:System.Windows.Forms.ToolStrip" /> ou <see cref="T:System.Windows.Forms.ToolStripDropDown" /> peut contenir.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.ToolStripItem> est un élément tel qu’un bouton, une zone de liste déroulante, une zone de texte ou une étiquette qui peut être contenu dans un <xref:System.Windows.Forms.ToolStrip> contrôle ou un <xref:System.Windows.Forms.ToolStripDropDown> contrôle, qui est similaire à un menu contextuel de Windows. Le <xref:System.Windows.Forms.ToolStrip> classe gère la peinture et entrée clavier et souris, y compris de glisser-déplacer de d’entrée, pour ces éléments et la <xref:System.Windows.Forms.ToolStripItem> classe gère les événements et la disposition au sein des éléments eux-mêmes.  
  
 <xref:System.Windows.Forms.ToolStripItem> les classes qui héritent directement de <xref:System.Windows.Forms.ToolStripItem>, ou dont ils héritent indirectement <xref:System.Windows.Forms.ToolStripItem> via <xref:System.Windows.Forms.ToolStripControlHost> ou <xref:System.Windows.Forms.ToolStripDropDownItem>.  
  
 <xref:System.Windows.Forms.ToolStripItem> les contrôles doivent être contenus dans un <xref:System.Windows.Forms.ToolStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.StatusStrip>, ou <xref:System.Windows.Forms.ContextMenuStrip> et ne peut pas être ajouté directement à un formulaire. Les différentes classes de conteneur sont conçues pour contenir un sous-ensemble approprié de <xref:System.Windows.Forms.ToolStripItem> contrôles.  
  
 **Remarque** A compte tenu de <xref:System.Windows.Forms.ToolStripItem> ne peut pas avoir plusieurs parents <xref:System.Windows.Forms.ToolStrip>. Vous devez copier de la <xref:System.Windows.Forms.ToolStripItem> et l’ajouter à d’autres <xref:System.Windows.Forms.ToolStrip> contrôles.  
  
 Le tableau suivant présente les éléments qui dérivent de la <xref:System.Windows.Forms.ToolStripItem> classe et qui par conséquent peut être hébergé dans un <xref:System.Windows.Forms.ToolStrip> ou <xref:System.Windows.Forms.ToolStripDropDown>.  
  
|Élément|Description|  
|-------------|-----------------|  
|<xref:System.Windows.Forms.ToolStripButton>|Un bouton de barre d’outils qui prend en charge des images et du texte.|  
|<xref:System.Windows.Forms.ToolStripLabel>|Une étiquette de texte généralement utilisée dans une barre d’état ou <xref:System.Windows.Forms.ToolStrip> comme un commentaire ou le titre.|  
|<xref:System.Windows.Forms.ToolStripSeparator>|Un espace non sélectionnable ou un espace avec une barre verticale qui groupe visuellement des éléments.|  
|<xref:System.Windows.Forms.ToolStripControlHost>|Un <xref:System.Windows.Forms.ToolStripItem> qui héberge un <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, <xref:System.Windows.Forms.ToolStripProgressBar>, d’autres contrôles Windows Forms ou des contrôles personnalisés.<br /><br /> Un <xref:System.Windows.Forms.ToolStripComboBox> est une zone de texte dans laquelle l’utilisateur peut entrer du texte, avec une liste à partir de laquelle l’utilisateur peut sélectionner le texte pour remplir la zone de texte.<br /><br /> Un <xref:System.Windows.Forms.ToolStripTextBox> permet à l’utilisateur d’entrer du texte.<br /><br /> Un <xref:System.Windows.Forms.ToolStripProgressBar> représente un contrôle de barre de progression Windows contenu dans un <xref:System.Windows.Forms.StatusStrip>.|  
|<xref:System.Windows.Forms.ToolStripDropDownItem>|Un <xref:System.Windows.Forms.ToolStripItem> qui héberge un <xref:System.Windows.Forms.ToolStripMenuItem>, <xref:System.Windows.Forms.ToolStripSplitButton>, et <xref:System.Windows.Forms.ToolStripDropDownButton>.<br /><br /> Un <xref:System.Windows.Forms.ToolStripMenuItem> est une option sélectionnable affichée dans un menu ou un menu contextuel.<br /><br /> Un <xref:System.Windows.Forms.ToolStripSplitButton> est une combinaison d’un bouton normal et un bouton de liste déroulante.<br /><br /> Un <xref:System.Windows.Forms.ToolStripDropDownButton> est un bouton qui prend en charge les fonctionnalités de liste déroulante.|  
|<xref:System.Windows.Forms.ToolStripStatusLabel>|Un panneau dans un <xref:System.Windows.Forms.StatusStrip> contrôle.|  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter un <xref:System.Windows.Forms.ToolStripItem> contrôle.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStrip" />
    <altmember cref="T:System.Windows.Forms.ToolStripButton" />
    <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
    <altmember cref="T:System.Windows.Forms.ToolStripSeparator" />
    <altmember cref="T:System.Windows.Forms.ToolStripControlHost" />
    <altmember cref="T:System.Windows.Forms.ToolStripComboBox" />
    <altmember cref="T:System.Windows.Forms.ToolStripTextBox" />
    <altmember cref="T:System.Windows.Forms.ToolStripDropDownItem" />
    <altmember cref="T:System.Windows.Forms.ToolStripMenuItem" />
    <altmember cref="T:System.Windows.Forms.ToolStripSplitButton" />
    <altmember cref="T:System.Windows.Forms.ToolStripDropDownButton" />
    <related type="Article" href="https://msdn.microsoft.com/library/e5ef455a-e049-429c-8005-30c93132fb79">ToolStrip, contrôle (Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolStripItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolStripItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolStripItem (string text, System.Drawing.Image image, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolStripItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripItem : string * System.Drawing.Image * EventHandler -&gt; System.Windows.Forms.ToolStripItem" Usage="new System.Windows.Forms.ToolStripItem (text, image, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text">Un <see cref="T:System.String" /> représentant le nom de la <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <param name="image"><see cref="T:System.Drawing.Image" /> à afficher dans le <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <param name="onClick">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> lorsque l'utilisateur clique sur <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.ToolStripItem" /> classe avec le Gestionnaire d’événements, l’image et nom spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolStripItem (string text, System.Drawing.Image image, EventHandler onClick, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, class System.EventHandler onClick, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.#ctor(System.String,System.Drawing.Image,System.EventHandler,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolStripItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripItem : string * System.Drawing.Image * EventHandler * string -&gt; System.Windows.Forms.ToolStripItem" Usage="new System.Windows.Forms.ToolStripItem (text, image, onClick, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <param name="image">L’Image à afficher sur le <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <param name="onClick">Le Gestionnaire d’événements pour le <see cref="E:System.Windows.Forms.ToolStripItem.Click" /> événement.</param>
        <param name="name">Nom du <see cref="T:System.Windows.Forms.ToolStripItem" />.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.ToolStripItem" /> classe avec le texte d’affichage spécifié, une image, un gestionnaire d’événements et un nom.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.ToolStripItem.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</summary>
        <value>Le <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle ; si aucun <see cref="T:System.Windows.Forms.AccessibleObject" /> est actuellement assigné au contrôle, une nouvelle instance est créée lors du premier accès de cette propriété</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir ou définir la propriété <xref:System.Windows.Forms.ToolStripItem.AccessibilityObject%2A>, vous devez ajouter une référence à l'assembly d'accessibilité installé avec le .NET Framework.  
  
 Pour plus d’informations sur les objets accessibles, consultez la [Active Accessibility](/windows/desktop/winauto/microsoft-active-accessibility) section de la documentation.
  
 Pour obtenir des exemples, consultez la <xref:System.Windows.Forms.AccessibleObject> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDefaultActionDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDefaultActionDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDefaultActionDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDefaultActionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDefaultActionDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDefaultActionDescription : string with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la description d'action par défaut du contrôle destinée aux applications clientes d'accessibilité.</summary>
        <value>Description de l'action par défaut du contrôle destinée aux applications d'accessibilité.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 D’un objet <xref:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription%2A> propriété décrit la principale méthode de manipulation de point de vue de l’utilisateur. Cette propriété doit être un verbe ou une phrase verbale courte.  
  
> [!NOTE]
>  Pas tous les objets ont des actions par défaut et certains peuvent avoir une action par défaut qui est associée à son <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> propriété, comme dans les exemples suivants :  
  
-   Cette case à cocher a une action par défaut « Désactiver » et la valeur « Activée ».  
  
-   Une case à cocher désactivée a une action par défaut de « Vérifier » et la valeur « Désactivé ».  
  
-   Un bouton intitulé **impression** a une action par défaut de « Press », sans valeur.  
  
-   Une étiquette ou un contrôle de zone de texte qui affiche **imprimante** n’a aucune action par défaut, mais la valeur « France ».  
  
 Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](/windows/desktop/winauto/content-of-descriptive-properties).  
  
 Pour obtenir des exemples, consultez la <xref:System.Windows.Forms.AccessibleObject> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDescription : string with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la description qui sera indiquée aux applications d'accessibilité.</summary>
        <value>Description du contrôle utilisée par les applications clientes d'accessibilité. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 D’un objet <xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A> propriété fournit une description textuelle sur l’apparence visuelle d’un objet. La description est principalement utilisée pour fournir plus de contexte pour les utilisateurs malvoyants ou non-voyants, mais peut également être utilisée pour la recherche de contexte ou d’autres applications.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A> propriété est nécessaire si la description n’est pas évident, ou si elle n’est pas redondante sur l’objet <xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A>, <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, et <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriétés. Par exemple, un bouton intitulé **OK** n'aurait pas besoin d’informations supplémentaires, contrairement à un bouton qui affiche l’image d’un cactus. Le <xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A> et <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A> et éventuellement, <xref:System.Windows.Forms.AccessibleObject.Help%2A?displayProperty=nameWithType> propriétés du bouton cactus décrivent sa fonction, mais la <xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A> propriété fournit des informations moins significatives, par exemple « Bouton qui affiche l’image d’un cactus. »  
  
 Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](/windows/desktop/winauto/content-of-descriptive-properties).  
  
 Pour obtenir des exemples, consultez la <xref:System.Windows.Forms.AccessibleObject> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleName">
      <MemberSignature Language="C#" Value="public string AccessibleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleName : string with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du contrôle pour une utilisation par des applications d'accessibilité.</summary>
        <value>Nom du contrôle pour une utilisation par des applications d'accessibilité. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A> propriété est une étiquette qui décrit brièvement et identifie l’objet dans son conteneur, telles que le texte dans un <xref:System.Windows.Forms.ToolStripButton>, le nom du serveur d’un <xref:System.Windows.Forms.ToolStripMenuItem>, ou l’étiquette affichée en regard un <xref:System.Windows.Forms.ToolStripTextBox> contrôle.  
  
 Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](/windows/desktop/winauto/content-of-descriptive-properties).  
  
 Pour obtenir des exemples, consultez la <xref:System.Windows.Forms.AccessibleObject> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleRole">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole AccessibleRole" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleRole As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleRole AccessibleRole { System::Windows::Forms::AccessibleRole get(); void set(System::Windows::Forms::AccessibleRole value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleRole : System.Windows.Forms.AccessibleRole with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le rôle accessible du contrôle qui spécifie le type d'élément d'interface utilisateur du contrôle.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.AccessibleRole" />. La valeur par défaut est <see cref="F:System.Windows.Forms.AccessibleRole.PushButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A> précise à quel type d'élément d'interface utilisateur correspond un objet. Si le rôle du contrôle ne peut pas être déterminé, la propriété <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A> prend la valeur <xref:System.Windows.Forms.AccessibleRole.PushButton?displayProperty=nameWithType>.  
  
 Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](/windows/desktop/winauto/content-of-descriptive-properties).  
  
 Pour obtenir des exemples, consultez la <xref:System.Windows.Forms.AccessibleObject> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.AccessibleRole" />.</exception>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ToolStripItemAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemAlignment Alignment { System::Windows::Forms::ToolStripItemAlignment get(); void set(System::Windows::Forms::ToolStripItemAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ToolStripItemAlignment with get, set" Usage="System.Windows.Forms.ToolStripItem.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si l’élément est aligné le début ou la fin de la <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripItemAlignment" />. La valeur par défaut est <see cref="F:System.Windows.Forms.ToolStripItemAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans une disposition de dépassement de capacité de pile, utilisez le <xref:System.Windows.Forms.ToolStripItem.Alignment%2A> propriété avec le <xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=nameWithType> propriété pour contrôler la fin à laquelle les éléments sont alignés dans un <xref:System.Windows.Forms.ToolStrip>, ou pour déterminer la fin auquel ils sont déjà alignés.  
  
 Si le <xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=nameWithType> propriété est <xref:System.Windows.Forms.RightToLeft.No>, les éléments marqués comme <xref:System.Windows.Forms.ToolStripItemAlignment.Left> sont alignés à gauche de la <xref:System.Windows.Forms.ToolStrip> et les éléments marqués comme <xref:System.Windows.Forms.ToolStripItemAlignment.Right> sont alignés à droite.  
  
 Si le <xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=nameWithType> propriété est <xref:System.Windows.Forms.RightToLeft.Yes>, les éléments marqués comme <xref:System.Windows.Forms.ToolStripItemAlignment.Left> sont alignés à droite de la <xref:System.Windows.Forms.ToolStrip> et les éléments marqués comme <xref:System.Windows.Forms.ToolStripItemAlignment.Right> sont alignés à gauche.  
  
> [!NOTE]
>  Dans les dispositions de tableaux et des flux, le <xref:System.Windows.Forms.ToolStripItem.Alignment%2A> propriété est ignorée. Dans la disposition de flux ou une table, utilisez le <xref:System.Windows.Forms.ToolStripItem.Dock%2A> ou <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> propriété pour aligner les éléments dans la cellule de la ligne ou la table.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Alignment%2A> propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.ToolStripItemAlignment" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public virtual bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le glisser-déposer et la réorganisation des éléments sont gérés par l’intermédiaire d’événements que vous implémentez.</summary>
        <value><see langword="true" /> si les opérations de glisser-déplacer sont autorisées dans le contrôle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir le <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> propriété `true` et définir le <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> propriété `false` pour répondre à un comportement de glisser-déplacer vous avez défini dans le <xref:System.Windows.Forms.ToolStripItem.DragEnter?displayProperty=nameWithType>, <xref:System.Windows.Forms.ToolStripItem.DragLeave?displayProperty=nameWithType>, et <xref:System.Windows.Forms.ToolStripItem.DragDrop?displayProperty=nameWithType> événements.  
  
 Définir le <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> propriété `false` et définir le <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> propriété `true` pour provoquer la <xref:System.Windows.Forms.ToolStripItem> classe gère le glisser-déplacer et la réorganisation des éléments en privé.  
  
 Définition des deux valeurs le <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> et <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> propriétés à `true` lève une exception.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.ToolStripItem.AllowDrop" /> et <see cref="P:System.Windows.Forms.ToolStrip.AllowItemReorder" /> ont toutes les deux la valeur <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.ToolStripItem.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les bords du conteneur auquel un <see cref="T:System.Windows.Forms.ToolStripItem" /> est lié et détermine comment un <see cref="T:System.Windows.Forms.ToolStripItem" /> est redimensionné avec son parent.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.AnchorStyles" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> propriété pour définir comment un <xref:System.Windows.Forms.ToolStripItem> est automatiquement redimensionnée en son contrôle parent est redimensionné. Ancrage d’un contrôle à son contrôle parent garantit que les bords ancrés dans la même position par rapport aux bords du contrôle parent lorsque le contrôle parent est redimensionné.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> et <xref:System.Windows.Forms.ToolStripItem.Dock%2A> propriétés s’excluent mutuellement. Une seule peut être définie à la fois, et la dernière est prioritaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.AnchorStyles" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si l'élément est automatiquement dimensionné.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Windows.Forms.ToolStripItem" /> est automatiquement dimensionné ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir le <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> propriété `true` pour provoquer la <xref:System.Windows.Forms.ToolStripItem> pour ajuster sa hauteur ou la largeur, selon l’orientation de la <xref:System.Windows.Forms.ToolStrip>, pour vous assurer que le <xref:System.Windows.Forms.ToolStripItem> utilise uniquement la quantité d’espace requise.  
  
 Un <xref:System.Windows.Forms.ToolStripItem> a une taille minimale si la <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> propriété est `true`. Définir le <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> propriété `false` si vous souhaitez un <xref:System.Windows.Forms.ToolStripItem> être inférieure à la taille minimale définie par le système ou d’avoir un <xref:System.Windows.Forms.ToolStripItem> taille égale à zéro.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, et <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> propriétés et handle le <xref:System.Windows.Forms.ToolStripItem.Click> événement. Pour exécuter cet exemple, collez le code suivant dans un formulaire qui contient un <xref:System.Windows.Forms.ToolStrip> nommé `movingToolStrip` et appelez `InitializeMovingToolStrip` dans le constructeur du formulaire ou `Load` Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTip">
      <MemberSignature Language="C#" Value="public bool AutoToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AutoToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoToolTip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoToolTip { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoToolTip : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.AutoToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant s’il faut utiliser le <see cref="P:System.Windows.Forms.ToolStripItem.Text" /> propriété ou le <see cref="P:System.Windows.Forms.ToolStripItem.ToolTipText" /> propriété pour le <see cref="T:System.Windows.Forms.ToolStripItem" /> info-bulle.</summary>
        <value><see langword="true" /> Pour utiliser le <see cref="P:System.Windows.Forms.ToolStripItem.Text" /> propriété pour l’info-bulle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem> utilise le <xref:System.Windows.Forms.ToolStripItem.Text%2A> propriété comme source par défaut pour le <xref:System.Windows.Forms.ToolTip> contenu. Définissez <xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A> à `false` à utiliser <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A> comme source pour <xref:System.Windows.Forms.ToolTip> contenu.  
  
 Pour utiliser cette propriété, vous devez également définir <xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A> à `true`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> pour un <xref:System.Windows.Forms.ToolStripItem>. En outre, il montre comment définir et afficher une info-bulle personnalisée pour l’élément.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public bool Available { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Available" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Available" />
      <MemberSignature Language="VB.NET" Value="Public Property Available As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Available { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Available : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le <see cref="T:System.Windows.Forms.ToolStripItem" /> doivent être placés sur un <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Windows.Forms.ToolStripItem" /> est placé sur un <see cref="T:System.Windows.Forms.ToolStrip" />; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.Available%2A> propriété diffère de la <xref:System.Windows.Forms.ToolStripItem.Visible%2A> propriété dans qui <xref:System.Windows.Forms.ToolStripItem.Available%2A> indique si le <xref:System.Windows.Forms.ToolStripItem> est affiché, alors que <xref:System.Windows.Forms.ToolStripItem.Visible%2A> indique si le <xref:System.Windows.Forms.ToolStripItem> et son parent sont affichés. Paramètre <xref:System.Windows.Forms.ToolStripItem.Available%2A> ou <xref:System.Windows.Forms.ToolStripItem.Visible%2A> à `true` ou `false` définit l’autre propriété `true` ou `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.AvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AvailableChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.AvailableChanged : EventHandler " Usage="member this.AvailableChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripItem.Available" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.AvailableChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.AvailableChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#98](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#98)]
 [!code-vb[System.Windows.Forms.EventExamples#98](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#98)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripItem.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur d'arrière-plan de l'élément.</summary>
        <value>Un <see cref="T:System.Drawing.Color" /> qui représente la couleur d’arrière-plan de l’élément. La valeur par défaut est la valeur de la propriété <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> propriété ne prend pas en charge les couleurs transparents, sauf si le `SupportsTransparentBackColor` valeur <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> est défini sur `true`.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> propriété est une propriété ambiante. Une propriété ambiante est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent. Par exemple, un <xref:System.Windows.Forms.Button> a les mêmes <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut. Pour plus d’informations sur les propriétés ambiantes, consultez la <xref:System.Windows.Forms.AmbientProperties> classe ou le <xref:System.Windows.Forms.Control> vue d’ensemble de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> propriété pour le rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#21)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché si le <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.BackColorChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.BackColorChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.BackColorChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#99](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#99)]
 [!code-vb[System.Windows.Forms.EventExamples#99](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ToolStripItem.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'image d'arrière-plan affichée dans l'élément.</summary>
        <value>Un <see cref="T:System.Drawing.Image" /> qui représente l’image à afficher à l’arrière-plan de l’élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.BackgroundImage%2A> propriété à placer une image graphique sur un élément.  
  
> [!NOTE]
>  Images avec des couleurs translucides ou transparents ne sont pas pris en charge par les contrôles Windows Forms en tant qu’images d’arrière-plan.  
>   
>  Cette propriété n’est pas pris en charge sur les contrôles enfants dont <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> propriété est `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ToolStripItem.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la disposition d’image d’arrière-plan utilisée pour le <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ImageLayout" />. La valeur par défaut est <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.BackgroundImageLayout%2A> propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolStripItem.Bounds" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Layout.IArrangedElement.Bounds</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille et l'emplacement de l'élément.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> qui représente la taille et l'emplacement de <see cref="T:System.Windows.Forms.ToolStripItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.Bounds%2A> propriété afin de déterminer la taille et l’emplacement d’un <xref:System.Windows.Forms.ToolStripItem>.  
  
 Contrairement à d’autres contrôles, un <xref:System.Windows.Forms.ToolStripItem> n’a aucune propriété qui vous permet de définir le coin supérieur gauche d’un <xref:System.Windows.Forms.ToolStripItem> par rapport à l’angle supérieur gauche de la <xref:System.Windows.Forms.ToolStrip>. Si vous devez définir la position absolue d’un <xref:System.Windows.Forms.ToolStripItem>, vous devez substituer la <xref:System.Windows.Forms.ToolStrip> et définir une implémentation personnalisée de la <xref:System.Windows.Forms.ToolStrip.SetItemLocation%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Height" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Width" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" />
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public virtual bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.ToolStripItem.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'élément peut être sélectionné.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Windows.Forms.ToolStripItem" /> peut être sélectionné ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit suite à un clic sur <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.Click> événement passe une <xref:System.EventArgs> à son gestionnaire d’événements, par conséquent, il indique uniquement qu’un clic s’est produite. Si vous avez besoin des informations plus spécifiques de la souris (bouton, le nombre de clics, rotation de la roulette ou emplacement), utilisez le <xref:System.Windows.Forms.ToolStripItem.MouseDown> et <xref:System.Windows.Forms.ToolStripItem.MouseUp> les événements qui passent un <xref:System.Windows.Forms.MouseEventArgs> au gestionnaire d’événements.  
  
 Un double-clic est déterminé par les paramètres de la souris du système d’exploitation de l’utilisateur. L'utilisateur peut définir le délai qui détermine si les clics effectués sur un bouton de souris sont considérés comme un double-clic ou comme deux clics. Le <xref:System.Windows.Forms.ToolStripItem.Click> événement est déclenché chaque fois qu’un double-clic est effectué sur un contrôle. Par exemple, si vous avez deux gestionnaires d’événements pour le <xref:System.Windows.Forms.ToolStripItem.Click> et <xref:System.Windows.Forms.ToolStripItem.DoubleClick> événements d’un <xref:System.Windows.Forms.Form>, le <xref:System.Windows.Forms.ToolStripItem.Click> et <xref:System.Windows.Forms.ToolStripItem.DoubleClick> sont déclenchés lorsqu’un double-clic est effectué sur le formulaire et les deux méthodes sont appelées. Si un double-clic est effectué sur un élément qui ne prend pas en charge la <xref:System.Windows.Forms.ToolStripItem.DoubleClick> événement, le <xref:System.Windows.Forms.ToolStripItem.Click> peut être déclenché deux fois.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, et <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> propriétés et handle le <xref:System.Windows.Forms.ToolStripItem.Click> événement. Pour exécuter cet exemple, collez le code suivant dans un formulaire qui contient un <xref:System.Windows.Forms.ToolStrip> nommé `movingToolStrip` et appelez `InitializeMovingToolStrip` dans le constructeur du formulaire ou `Load` Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ContentRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ContentRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ContentRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ContentRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolStripItem.ContentRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la zone où le contenu, tel que le texte et des icônes, peut être placé dans un <see cref="T:System.Windows.Forms.ToolStripItem" /> sans substituer les bordures d’arrière-plan.</summary>
        <value>Un <see cref="T:System.Drawing.Rectangle" /> contenant quatre entiers qui représentent l’emplacement et la taille de <see cref="T:System.Windows.Forms.ToolStripItem" /> contenu, à l’exclusion de sa bordure.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.ContentRectangle%2A> propriété pour effectuer une peinture personnalisée d’un <xref:System.Windows.Forms.ToolStripItem>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.ContentRectangle%2A> propriété pour le rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="toolStripItem.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet d’accessibilité pour <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <returns>Nouveau <see cref="T:System.Windows.Forms.AccessibleObject" /> pour le <see cref="T:System.Windows.Forms.ToolStripItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAutoToolTip">
      <MemberSignature Language="C#" Value="protected virtual bool DefaultAutoToolTip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultAutoToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultAutoToolTip" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultAutoToolTip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DefaultAutoToolTip { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAutoToolTip : bool" Usage="System.Windows.Forms.ToolStripItem.DefaultAutoToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant s'il faut afficher le <see cref="T:System.Windows.Forms.ToolTip" /> qui est défini comme valeur par défaut.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDisplayStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ToolStripItemDisplayStyle DefaultDisplayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DefaultDisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultDisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultDisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ToolStripItemDisplayStyle DefaultDisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDisplayStyle : System.Windows.Forms.ToolStripItemDisplayStyle" Usage="System.Windows.Forms.ToolStripItem.DefaultDisplayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant ce qui est affiché sur le <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripItemDisplayStyle" />. La valeur par défaut est <see cref="F:System.Windows.Forms.ToolStripItemDisplayStyle.ImageAndText" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStripItem.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la marge par défaut d'un élément.</summary>
        <value><see cref="T:System.Windows.Forms.Padding" /> représentant la marge.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Remplacer le <xref:System.Windows.Forms.ToolStripItem.DefaultMargin%2A> propriété pour configurer une marge par défaut pour un <xref:System.Windows.Forms.ToolStripItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStripItem.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les caractéristiques d'espacement interne de l'élément.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.Padding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez remplacer le <xref:System.Windows.Forms.ToolStripItem.DefaultPadding%2A> propriété pour configurer une taille par défaut pour un <xref:System.Windows.Forms.ToolStripItem>. Cela est plus efficace que la définition de la taille dans le constructeur de la <xref:System.Windows.Forms.ToolStripItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ToolStripItem.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille par défaut de l'élément.</summary>
        <value><see cref="T:System.Drawing.Size" /> par défaut de <see cref="T:System.Windows.Forms.ToolStripItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStrip.DefaultSize%2A> propriété représente le <xref:System.Drawing.Size> de la <xref:System.Windows.Forms.ToolStripItem> lorsqu’il est initialement créé. Si le <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> propriété est `true`, le <xref:System.Windows.Forms.ToolStripItem> est dimensionné automatiquement en fonction de la <xref:System.Windows.Forms.ToolStrip> l’orientation. Vous pouvez ajuster manuellement la taille de la <xref:System.Windows.Forms.ToolStripItem> en définissant son <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> valeur de propriété à `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.ToolStrip.DefaultSize" /> propriété dans une classe dérivée, il est préférable de retourner un <see cref="T:System.Drawing.Size" /> de l’objet avec les dimensions voulues, plutôt que de substituer toute l’implémentation.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClicked">
      <MemberSignature Language="C#" Value="protected internal virtual bool DismissWhenClicked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DismissWhenClicked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DismissWhenClicked" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DismissWhenClicked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool DismissWhenClicked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DismissWhenClicked : bool" Usage="System.Windows.Forms.ToolStripItem.DismissWhenClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si les éléments sur un <see cref="T:System.Windows.Forms.ToolStripDropDown" /> sont masqués après que l'utilisateur a cliqué dessus.</summary>
        <value><see langword="true" /> Si l’élément est masqué après dessus. Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripItemDisplayStyle DisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); void set(System::Windows::Forms::ToolStripItemDisplayStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayStyle : System.Windows.Forms.ToolStripItemDisplayStyle with get, set" Usage="System.Windows.Forms.ToolStripItem.DisplayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si le texte et les images sont affichés sur un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripItemDisplayStyle" />. La valeur par défaut est <see cref="F:System.Windows.Forms.ToolStripItemDisplayStyle.ImageAndText" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> pour définir les valeurs de propriétés de texte et l’Image d’un élément tout en affichant uniquement ce que vous souhaitez. Cela sert généralement à modifier le style d’affichage lors de l’affichage du même élément dans un contexte différent.  
  
   
  
## Examples  
 L’exemple de code suivant montre le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , et <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> propriétés pour un <xref:System.Windows.Forms.ToolStripButton>. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripButton> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DisplayStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayStyleChanged : EventHandler " Usage="member this.DisplayStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand <see cref="P:System.Windows.Forms.ToolStripItem.DisplayStyle" /> a été modifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#101](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#101)]
 [!code-vb[System.Windows.Forms.EventExamples#101](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="toolStripItem.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.ToolStripItem" /> et libère éventuellement les ressources managées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le public `Dispose` (méthode) et le <xref:System.Object.Finalize%2A> (méthode). `Dispose` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`. <xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.  
  
 Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Windows.Forms.ToolStripItem>. Cette méthode appelle la méthode `Dispose` de chaque objet référencé.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets. Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.ToolStripItem.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les bordures <see cref="T:System.Windows.Forms.ToolStripItem" /> qui sont ancrées à son contrôle parent et détermine le redimensionnement de <see cref="T:System.Windows.Forms.ToolStripItem" /> avec son parent.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.DockStyle" />. La valeur par défaut est <see cref="F:System.Windows.Forms.DockStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété s’applique uniquement aux dispositions du flux.  
  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.Dock%2A> propriété pour définir comment un <xref:System.Windows.Forms.ToolStripItem> est automatiquement redimensionnée en son contrôle parent est redimensionné. Par exemple, la définition <xref:System.Windows.Forms.ToolStripItem.Dock%2A> à <xref:System.Windows.Forms.DockStyle.Left> provoque la <xref:System.Windows.Forms.ToolStripItem> s’aligne avec le bord gauche de son contrôle parent et pour redimensionner le contrôle parent est redimensionné. Les contrôles sont ancrés dans leur ordre de plan, qui est la superposition visuelle des contrôles sur un formulaire sur l’axe z (profondeur).  
  
 Un contrôle peut être ancré à un bord de son conteneur parent ou peut être ancré sur tous les bords et remplissage le conteneur parent.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> et <xref:System.Windows.Forms.ToolStripItem.Dock%2A> propriétés s’excluent mutuellement. Une seule peut être définie à la fois, et la dernière est prioritaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.DockStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DragDropEffects DoDragDrop(object data, valuetype System.Windows.Forms.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoDragDrop (data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DragDropEffects DoDragDrop(System::Object ^ data, System::Windows::Forms::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="member this.DoDragDrop : obj * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragDropEffects" Usage="toolStripItem.DoDragDrop (data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">L’objet à faire glisser.</param>
        <param name="allowedEffects">Opérations glisser qui peuvent se produire.</param>
        <summary>Démarre une opération glisser-déposer.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DragDropEffects" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’opération glisser doit interagir avec des applications dans un autre processus, le `data` paramètre doit être une classe managée de base (tel que <xref:System.String?displayProperty=nameWithType>, <xref:System.Drawing.Bitmap?displayProperty=nameWithType>, ou <xref:System.Drawing.Imaging.Metafile?displayProperty=nameWithType>), un objet qui implémente <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, ou un objet qui implémente <xref:System.Windows.Forms.IDataObject>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit après un double-clic de la souris sur l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un double-clic est déterminé par les paramètres de la souris du système d’exploitation de l’utilisateur. L'utilisateur peut définir le délai qui détermine si les clics effectués sur un bouton de souris sont considérés comme un double-clic ou comme deux clics. Le <xref:System.Windows.Forms.ToolStripItem.Click> événement est déclenché chaque fois qu’un double-clic est effectué sur un contrôle. Par exemple, si vous avez deux gestionnaires d’événements pour le <xref:System.Windows.Forms.ToolStripItem.Click> et <xref:System.Windows.Forms.ToolStripItem.DoubleClick> événements d’un <xref:System.Windows.Forms.Form>, le <xref:System.Windows.Forms.ToolStripItem.Click> et <xref:System.Windows.Forms.ToolStripItem.DoubleClick> sont déclenchés lorsqu’un double-clic est effectué sur le formulaire et les deux méthodes sont appelées. Si un double-clic est effectué sur un élément qui ne prend pas en charge la <xref:System.Windows.Forms.ToolStripItem.DoubleClick> événement, le <xref:System.Windows.Forms.ToolStripItem.Click> peut être déclenché deux fois.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.DoubleClick> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.DoubleClick> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#102](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#102)]
 [!code-vb[System.Windows.Forms.EventExamples#102](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClickEnabled">
      <MemberSignature Language="C#" Value="public bool DoubleClickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleClickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DoubleClickEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DoubleClickEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoubleClickEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleClickEnabled : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.DoubleClickEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le <see cref="T:System.Windows.Forms.ToolStripItem" /> peut être activé en double-cliquant sur la souris.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Windows.Forms.ToolStripItem" /> peut être activé en double-cliquant sur la souris ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur fait glisser un élément et qu'il relâche le bouton de la souris, indiquant que l'élément doit être déposé dans cet élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés de la <xref:System.Windows.Forms.DragEventArgs> sont en coordonnées d’écran, pas les coordonnées clientes. Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment convertir le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés à un client <xref:System.Drawing.Point>. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripRenderer> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/CS/GridStrip.cs#3)]
 [!code-vb[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/VB/GridStrip.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur fait glisser un élément dans la zone cliente de cet élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.DragEnter> événement est déclenché lorsque l’utilisateur tout d’abord fait glisser le curseur de la souris sur l’élément pendant une opération de glisser-déplacer.  
  
 Les notes suivantes décrivent comment et quand les événements liés aux opérations de glisser-déplacer sont déclenchés.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> méthode détermine l’élément sous l’emplacement du curseur. Elle vérifie ensuite si l’élément est une cible de dépôt valide.  
  
 Si l’élément est une cible de dépôt valide, le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié. Pour obtenir la liste des effets de glisser-déposer, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Les modifications de la position du curseur de la souris, état du clavier et état du bouton de la souris sont suivies de la manière suivante :  
  
-   Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.ToolStripItem.DragLeave> est déclenché.  
  
-   Si la souris entre dans un autre élément, le <xref:System.Windows.Forms.ToolStripItem.DragEnter> pour ce contrôle est déclenché.  
  
-   Si la souris se déplace uniquement dans le même élément, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché.  
  
 S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Continue>, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée. Pour obtenir la liste des effets de dépôt valides, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DragOver> et <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris, comme suit :  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Drop>, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Cancel>, le <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement est déclenché.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés de la <xref:System.Windows.Forms.DragEventArgs> sont en coordonnées d’écran, pas les coordonnées clientes.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment convertir le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés à un client <xref:System.Drawing.Point>. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripRenderer> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/CS/GridStrip.cs#3)]
 [!code-vb[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/VB/GridStrip.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur fait glisser un élément et que le pointeur de la souris n'est plus sur la zone cliente de cet élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement est déclenché lorsque l’utilisateur fait glisser le curseur hors du contrôle ou de l’utilisateur annule l’opération de glisser-déplacer en cours.  
  
 Les notes suivantes décrivent comment et quand les événements liés aux opérations de glisser-déplacer sont déclenchés.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> méthode détermine l’élément sous l’emplacement du curseur. Elle vérifie ensuite si l’élément est une cible de dépôt valide.  
  
 Si l’élément est une cible de dépôt valide, le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié. Pour obtenir la liste des effets de glisser-déposer, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Les modifications de la position du curseur de la souris, état du clavier et état du bouton de la souris sont suivies de la manière suivante :  
  
-   Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.ToolStripItem.DragLeave> est déclenché.  
  
-   Si la souris entre dans un autre élément, le <xref:System.Windows.Forms.ToolStripItem.DragEnter> pour ce contrôle est déclenché.  
  
-   Si la souris se déplace uniquement dans le même élément, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché.  
  
 S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Continue>, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée. Pour obtenir la liste des effets de dépôt valides, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DragOver> et <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris, comme suit :  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Drop>, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Cancel>, le <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement est déclenché.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#106](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#106)]
 [!code-vb[System.Windows.Forms.EventExamples#106](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur fait glisser un élément sur la zone cliente de cet élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché lorsque le curseur de souris se déplace dans les limites du contrôle durant une opération de glisser-déplacer.  
  
 Les notes suivantes décrivent comment et quand les événements liés aux opérations de glisser-déplacer sont déclenchés.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> méthode détermine l’élément sous l’emplacement du curseur. Elle vérifie ensuite si l’élément est une cible de dépôt valide.  
  
 Si l’élément est une cible de dépôt valide, le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié. Pour obtenir la liste des effets de glisser-déposer, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Les modifications de la position du curseur de la souris, état du clavier et état du bouton de la souris sont suivies de la manière suivante :  
  
-   Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.ToolStripItem.DragLeave> est déclenché.  
  
-   Si la souris entre dans un autre élément, le <xref:System.Windows.Forms.ToolStripItem.DragEnter> pour ce contrôle est déclenché.  
  
-   Si la souris se déplace uniquement dans le même élément, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché.  
  
 S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Continue>, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée. Pour obtenir la liste des effets de dépôt valides, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DragOver> et <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris, comme suit :  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Drop>, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Cancel>, le <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement est déclenché.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.DragOver> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.DragOver> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#105](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#105)]
 [!code-vb[System.Windows.Forms.EventExamples#105](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle parent de la <see cref="T:System.Windows.Forms.ToolStripItem" /> est activé.</summary>
        <value><see langword="true" /> Si le contrôle parent de la <see cref="T:System.Windows.Forms.ToolStripItem" /> est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de propriété <see cref="P:System.Windows.Forms.ToolStripItem.Enabled" /> a été modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché si le <xref:System.Windows.Forms.ToolStripItem.Enabled%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.EnabledChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.EnabledChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.EnabledChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#107](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#107)]
 [!code-vb[System.Windows.Forms.EventExamples#107](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.ToolStripItem.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la police du texte de l'élément.</summary>
        <value>Le <see cref="T:System.Drawing.Font" /> à appliquer au texte affiché par le <see cref="T:System.Windows.Forms.ToolStripItem" />. La valeur par défaut est la valeur de la propriété <see cref="P:System.Windows.Forms.Control.DefaultFont" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.Font%2A> propriété à obtenir ou définir la police qui sera être utilisée par défaut pour la peinture et le texte dans le <xref:System.Windows.Forms.ToolStripItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripItem.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur de premier plan de l'élément.</summary>
        <value>Premier plan <see cref="T:System.Drawing.Color" /> de l’élément. La valeur par défaut est la valeur de la propriété <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.ForeColor%2A> propriété pour le rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripItem.ForeColor" /> est modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché si le <xref:System.Windows.Forms.ToolStripItem.ForeColor%2A> propriété est modifiée par la suite d’une modification par programmation ou via l’interaction.  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.ForeColorChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.ForeColorChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.ForeColorChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#108](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#108)]
 [!code-vb[System.Windows.Forms.EventExamples#108](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStrip GetCurrentParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ToolStrip GetCurrentParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.GetCurrentParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentParent () As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ToolStrip ^ GetCurrentParent();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentParent : unit -&gt; System.Windows.Forms.ToolStrip" Usage="toolStripItem.GetCurrentParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le <see cref="T:System.Windows.Forms.ToolStrip" /> qui représente le conteneur d’actuel <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <returns>Un <see cref="T:System.Windows.Forms.ToolStrip" /> qui représente le conteneur d’actuel <see cref="T:System.Windows.Forms.ToolStripItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.GetCurrentParent%2A> est un accesseur en lecture seule à la <xref:System.Windows.Forms.ToolStripItem.Parent%2A> propriété. Un parent est différent d’un propriétaire dénote actuel retourné <xref:System.Windows.Forms.ToolStrip> dans lequel l’élément est affiché, qui peut être dans la zone de débordement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="toolStripItem.GetPreferredSize constrainingSize" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(System.Drawing.Size)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize">Zone de taille personnalisée pour un contrôle.</param>
        <summary>Récupère la taille d'une zone rectangulaire qui peut contenir un contrôle.</summary>
        <returns>Un <see cref="T:System.Drawing.Size" /> représentant la largeur et la hauteur d’un rectangle paire ordonnée.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit pendant une opération glisser.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché lorsqu’une opération de glisser-déplacer commence. Le <xref:System.Windows.Forms.Control.GiveFeedback> événement permet à la source d’un événement glisser de modifier l’apparence du pointeur de la souris pour fournir une rétroaction visuelle pendant une opération de glisser-déplacer.  
  
 Les notes suivantes décrivent comment et quand les événements liés aux opérations de glisser-déplacer sont déclenchés.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> méthode détermine l’élément sous l’emplacement du curseur. Elle vérifie ensuite si l’élément est une cible de dépôt valide.  
  
 Si l’élément est une cible de dépôt valide, le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié. Pour obtenir la liste des effets de glisser-déposer, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Les modifications de la position du curseur de la souris, état du clavier et état du bouton de la souris sont suivies de la manière suivante :  
  
-   Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.ToolStripItem.DragLeave> est déclenché.  
  
-   Si la souris entre dans un autre élément, le <xref:System.Windows.Forms.ToolStripItem.DragEnter> pour ce contrôle est déclenché.  
  
-   Si la souris se déplace uniquement dans le même élément, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché.  
  
 S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Continue>, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée. Pour obtenir la liste des effets de dépôt valides, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DragOver> et <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris, comme suit :  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Drop>, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est <xref:System.Windows.Forms.DragAction.Cancel>, le <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement est déclenché.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#109](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#109)]
 [!code-vb[System.Windows.Forms.EventExamples#109](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.ToolStripItem.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la hauteur, en pixels, d’un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Un <see cref="T:System.Int32" /> représentant la hauteur, en pixels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ToolStripItem.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’image qui est affichée sur un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Le <see cref="T:System.Drawing.Image" /> à afficher.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propriétés relatives à divers aspects de la gestion des images. Utiliser des images dans <xref:System.Windows.Forms.ToolStrip> contrôles en définissant ces propriétés directement ou en définissant l’exécution uniquement au moment du <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propriété.  
  
 Mise à l’échelle de l’image est déterminé par l’interaction des propriétés dans les deux <xref:System.Windows.Forms.ToolStrip> et <xref:System.Windows.Forms.ToolStripItem>, comme suit :  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> échelle de l’image finale, tel que déterminé par la combinaison de l’image <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> paramètre et du conteneur <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> paramètre.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `true` (la valeur par défaut) et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, aucune image mise à l’échelle se produit et le <xref:System.Windows.Forms.ToolStrip> taille est celle de l’élément plus grand, ou une taille minimale recommandée.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `false` et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, aucune image ni <xref:System.Windows.Forms.ToolStrip> mise à l’échelle se produit.  
  
   
  
## Examples  
 L’exemple de code suivant montre le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , et <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> propriétés pour un <xref:System.Windows.Forms.ToolStripButton>. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripButton> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.ImageAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’alignement de l’image sur un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Drawing.ContentAlignment" />. La valeur par défaut est <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A> propriété à obtenir ou définir l’alignement de l’image sur un <xref:System.Windows.Forms.ToolStripItem>. Utilisez le <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> propriété à obtenir ou définir l’alignement du texte sur un <xref:System.Windows.Forms.ToolStripItem>.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propriétés relatives à divers aspects de la gestion des images. Utiliser des images dans <xref:System.Windows.Forms.ToolStrip> contrôles en définissant ces propriétés directement ou en définissant l’exécution uniquement au moment du <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propriété.  
  
 Mise à l’échelle de l’image est déterminé par l’interaction des propriétés dans les deux <xref:System.Windows.Forms.ToolStrip> et <xref:System.Windows.Forms.ToolStripItem>, comme suit :  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> échelle de l’image finale, tel que déterminé par la combinaison de l’image <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> paramètre et du conteneur <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> paramètre.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `true` (la valeur par défaut) et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, aucune image mise à l’échelle se produit et le <xref:System.Windows.Forms.ToolStrip> taille est celle de l’élément plus grand, ou une taille minimale recommandée.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `false` et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, aucune image ni <xref:System.Windows.Forms.ToolStrip> mise à l’échelle se produit.  
  
   
  
## Examples  
 L’exemple de code suivant montre le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , et <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> propriétés pour un <xref:System.Windows.Forms.ToolStripButton>. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripButton> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Drawing.ContentAlignment" />.</exception>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.TextAlign" />
        <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("Owner.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur d'index de l'image qui s'affiche sur l'élément.</summary>
        <value>Index de base zéro de l’image dans le <see cref="P:System.Windows.Forms.ToolStrip.ImageList" /> qui s’affiche pour l’élément. La valeur par défaut est -1, ce qui signifie que la liste d'images est vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A> propriété spécifie la position de l’image dans la liste d’images. Le <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A> propriété spécifie l’image elle-même.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propriétés relatives à divers aspects de la gestion des images. Utiliser des images dans <xref:System.Windows.Forms.ToolStrip> contrôles en définissant ces propriétés directement ou en définissant l’exécution uniquement au moment du <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propriété.  
  
 Mise à l’échelle de l’image est déterminé par l’interaction des propriétés dans les deux <xref:System.Windows.Forms.ToolStrip> et <xref:System.Windows.Forms.ToolStripItem>, comme suit :  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> échelle de l’image finale, tel que déterminé par la combinaison de l’image <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> paramètre et du conteneur <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> paramètre.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `true` (la valeur par défaut) et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, aucune image mise à l’échelle se produit et le <xref:System.Windows.Forms.ToolStrip> taille est celle de l’élément plus grand, ou une taille minimale recommandée.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `false` et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, aucune image ni <xref:System.Windows.Forms.ToolStrip> mise à l’échelle se produit.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur spécifiée est inférieure à -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("Owner.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’accesseur de clé pour l’image dans le <see cref="P:System.Windows.Forms.ToolStrip.ImageList" /> qui s’affiche sur un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Chaîne représentant la clé de l'image.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A> propriété spécifie la position de l’image dans la liste d’images. Le <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A> propriété spécifie l’image elle-même.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propriétés relatives à divers aspects de la gestion des images. Utiliser des images dans <xref:System.Windows.Forms.ToolStrip> contrôles en définissant ces propriétés directement ou en définissant l’exécution uniquement au moment du <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propriété.  
  
 Mise à l’échelle de l’image est déterminé par l’interaction des propriétés dans les deux <xref:System.Windows.Forms.ToolStrip> et <xref:System.Windows.Forms.ToolStripItem>, comme suit :  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> échelle de l’image finale, tel que déterminé par la combinaison de l’image <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> paramètre et du conteneur <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> paramètre.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `true` (la valeur par défaut) et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, aucune image mise à l’échelle se produit et le <xref:System.Windows.Forms.ToolStrip> taille est celle de l’élément plus grand, ou une taille minimale recommandée.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `false` et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, aucune image ni <xref:System.Windows.Forms.ToolStrip> mise à l’échelle se produit.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A> propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScaling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemImageScaling ImageScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemImageScaling ImageScaling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageScaling As ToolStripItemImageScaling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemImageScaling ImageScaling { System::Windows::Forms::ToolStripItemImageScaling get(); void set(System::Windows::Forms::ToolStripItemImageScaling value); };" />
      <MemberSignature Language="F#" Value="member this.ImageScaling : System.Windows.Forms.ToolStripItemImageScaling with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemImageScaling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une image sur un <see cref="T:System.Windows.Forms.ToolStripItem" /> est automatiquement redimensionnée pour contenir dans un conteneur.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripItemImageScaling" />. La valeur par défaut est <see cref="F:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> propriétés relatives à divers aspects de la gestion des images. Utiliser des images dans <xref:System.Windows.Forms.ToolStrip> contrôles en définissant ces propriétés directement ou en définissant l’exécution uniquement au moment du <xref:System.Windows.Forms.ToolStrip.ImageList%2A> propriété.  
  
 Mise à l’échelle de l’image est déterminé par l’interaction des propriétés dans les deux <xref:System.Windows.Forms.ToolStrip> et <xref:System.Windows.Forms.ToolStripItem>, comme suit :  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> échelle de l’image finale, tel que déterminé par la combinaison de l’image <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> paramètre et du conteneur <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> paramètre.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `true` (la valeur par défaut) et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, aucune image mise à l’échelle se produit et le <xref:System.Windows.Forms.ToolStrip> taille est celle de l’élément plus grand, ou une taille minimale recommandée.  
  
    -   Si <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> est `false` et <xref:System.Windows.Forms.ToolStripItemImageScaling> est <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, aucune image ni <xref:System.Windows.Forms.ToolStrip> mise à l’échelle se produit.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> pour un <xref:System.Windows.Forms.ToolStripItem>. En outre, il montre comment définir et afficher une info-bulle personnalisée pour l’élément.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la couleur à traiter comme transparente dans une <see cref="T:System.Windows.Forms.ToolStripItem" /> image.</summary>
        <value>Une des valeurs de <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> pour un <xref:System.Windows.Forms.ToolStripItem>. En outre, il montre comment définir et afficher une info-bulle personnalisée pour l’élément.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Invalide une partie ou la totalité de la surface de la <see cref="T:System.Windows.Forms.ToolStripItem" /> et oblige ce dernier à être redessiné.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="toolStripItem.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalide la surface totale de la <see cref="T:System.Windows.Forms.ToolStripItem" /> et oblige ce dernier à être redessiné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.Invalidate%2A> procédé de rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (r As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="toolStripItem.Invalidate r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><see cref="T:System.Drawing.Rectangle" /> qui représente la région à invalider.</param>
        <summary>Invalide la région spécifiée du <see cref="T:System.Windows.Forms.ToolStripItem" /> en l’ajoutant à la région de mise à jour de la <see cref="T:System.Windows.Forms.ToolStripItem" />, qui est la zone qui sera repeinte lors de la prochaine opération de peinture et provoque un message de peinture à envoyer à la <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Forms.ToolStripItem.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet a été supprimé.</summary>
        <value><see langword="true" /> si le contrôle a été supprimé ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member IsInputChar : char -&gt; bool&#xA;override this.IsInputChar : char -&gt; bool" Usage="toolStripItem.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Caractère à tester.</param>
        <summary>Détermine si un caractère est un caractère d'entrée que l'élément reconnaît.</summary>
        <returns><see langword="true" /> si le caractère doit être envoyé directement à l'élément sans être prétraité ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pendant le prétraitement d’un message de fenêtre pour déterminer si le caractère d’entrée donné doit être prétraité ou envoyé directement à la <xref:System.Windows.Forms.ToolStripItem>. Si le <xref:System.Windows.Forms.Control.IsInputChar%2A> retourne de la méthode `true`, le caractère spécifié est envoyé directement à la <xref:System.Windows.Forms.ToolStripItem>. Toutefois, si la méthode retourne `false`, le caractère est prétraité et uniquement envoyé à le <xref:System.Windows.Forms.ToolStripItem> si elle n’est pas consommée par la phase de prétraitement. Le prétraitement d’un caractère inclut le contrôle si le caractère est un caractère mnémonique d’un autre contrôle.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode. Énumération associée : le <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> valeur de <see cref="T:System.Security.Permissions.UIPermissionWindow" /></permission>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.IsInputKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member IsInputKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="toolStripItem.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Une des valeurs de <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Détermine si la touche spécifiée est une touche de saisie normale ou une touche spéciale nécessitant un prétraitement.</summary>
        <returns><see langword="true" /> si la touche spécifiée est une touche de saisie standard ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez le <xref:System.Windows.Forms.Control.IsInputChar%2A> méthode pendant le prétraitement des messages de fenêtre pour déterminer si la clé spécifiée est une touche de saisie normale qui doit être envoyée directement à la <xref:System.Windows.Forms.ToolStripItem> ou une touche spéciale (par exemple, les touches Pg préc, Pg suiv, entrée, ÉCHAP, onglet ou flèche) qui doit être prétraité. Dans ce cas, la clé est envoyée à la <xref:System.Windows.Forms.ToolStripItem> uniquement si elle n’est pas consommée par la phase de prétraitement.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode. Énumération associée : le <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> valeur de <see cref="T:System.Security.Permissions.UIPermissionWindow" /></permission>
        <altmember cref="T:System.Windows.Forms.Keys" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnDropDown">
      <MemberSignature Language="C#" Value="public bool IsOnDropDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnDropDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.IsOnDropDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnDropDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnDropDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnDropDown : bool" Usage="System.Windows.Forms.ToolStripItem.IsOnDropDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le conteneur d’actuel <see cref="T:System.Windows.Forms.Control" /> est un <see cref="T:System.Windows.Forms.ToolStripDropDown" />.</summary>
        <value><see langword="true" /> Si le conteneur d’actuel <see cref="T:System.Windows.Forms.Control" /> est un <see cref="T:System.Windows.Forms.ToolStripDropDown" />; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.IsOnDropDown%2A> propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOnOverflow">
      <MemberSignature Language="C#" Value="public bool IsOnOverflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnOverflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.IsOnOverflow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnOverflow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnOverflow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnOverflow : bool" Usage="System.Windows.Forms.ToolStripItem.IsOnOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le <see cref="P:System.Windows.Forms.ToolStripItem.Placement" /> propriété est définie sur <see cref="F:System.Windows.Forms.ToolStripItemPlacement.Overflow" />.</summary>
        <value><see langword="true" /> si la propriété <see cref="P:System.Windows.Forms.ToolStripItem.Placement" /> a la valeur <see cref="F:System.Windows.Forms.ToolStripItemPlacement.Overflow" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l’emplacement d’un <see cref="T:System.Windows.Forms.ToolStripItem" /> est mis à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché si la <xref:System.Windows.Forms.ToolStripItem> est mis à jour par suite d’une modification par programmation ou via l’interaction.  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.LocationChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.LocationChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.LocationChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#110](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#110)]
 [!code-vb[System.Windows.Forms.EventExamples#110](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ToolStripItem.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace entre l'élément et les éléments adjacents.</summary>
        <value>Un <see cref="T:System.Windows.Forms.Padding" /> représentant l’espace entre l’élément et les éléments adjacents.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAction">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MergeAction MergeAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MergeAction MergeAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.MergeAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeAction As MergeAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MergeAction MergeAction { System::Windows::Forms::MergeAction get(); void set(System::Windows::Forms::MergeAction value); };" />
      <MemberSignature Language="F#" Value="member this.MergeAction : System.Windows.Forms.MergeAction with get, set" Usage="System.Windows.Forms.ToolStripItem.MergeAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MergeAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit comment les menus enfants sont fusionnés avec les menus parents.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.MergeAction" />. La valeur par défaut est <see cref="F:System.Windows.Forms.MergeAction.MatchOnly" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.MergeAction" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeIndex">
      <MemberSignature Language="C#" Value="public int MergeIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.MergeIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MergeIndex : int with get, set" Usage="System.Windows.Forms.ToolStripItem.MergeIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la position d’un élément fusionné dans actuel <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <value>Entier représentant l’index de l’élément fusionné, si une correspondance est trouvée ou -1 si aucune correspondance n’est trouvée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.MergeIndex%2A> propriété à obtenir ou définir l’index d’un <xref:System.Windows.Forms.ToolStripMenuItem> afin que vous pouvez y accéder pour les opérations de fusion de menus.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Windows.Forms.ToolStripItem.MergeIndex%2A> propriété pour insérer un élément fusionné <xref:System.Windows.Forms.ToolStripMenuItem> dans un emplacement spécifique. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripManager> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le pointeur de la souris se trouve sur l'élément et qu'un bouton de la souris est enfoncé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les événements de souris se produisent dans l'ordre suivant :  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> ou <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.MouseDown> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.MouseDown> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#111](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#111)]
 [!code-vb[System.Windows.Forms.EventExamples#111](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#111)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le pointeur de la souris entre dans l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les événements de souris se produisent dans l'ordre suivant :  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> ou <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.MouseEnter> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.MouseEnter> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#112](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#112)]
 [!code-vb[System.Windows.Forms.EventExamples#112](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la souris pointe sur l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les événements de souris se produisent dans l'ordre suivant :  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> ou <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.MouseHover> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.MouseHover> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#114](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#114)]
 [!code-vb[System.Windows.Forms.EventExamples#114](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#114)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le pointeur de la souris quitte l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les événements de souris se produisent dans l'ordre suivant :  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> ou <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.MouseLeave> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.MouseLeave> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#113](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#113)]
 [!code-vb[System.Windows.Forms.EventExamples#113](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le pointeur de la souris est placé sur l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les événements de souris se produisent dans l'ordre suivant :  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> ou <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.MouseMove> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.MouseMove> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#115](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#115)]
 [!code-vb[System.Windows.Forms.EventExamples#115](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#115)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le pointeur de la souris se trouve sur l'élément et qu'un bouton de la souris est relâché.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les événements de souris se produisent dans l'ordre suivant :  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> ou <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.MouseUp> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.MouseUp> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#116](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#116)]
 [!code-vb[System.Windows.Forms.EventExamples#116](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ToolStripItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'élément.</summary>
        <value>Chaîne représentant le nom. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.Name%2A> propriété peut être utilisée comme clé dans le <xref:System.Windows.Forms.ToolStripItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAvailableChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAvailableChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAvailableChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnAvailableChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAvailableChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAvailableChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAvailableChanged : EventArgs -&gt; unit&#xA;override this.OnAvailableChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnAvailableChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement AvailableChanged.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnAvailableChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.OnAvailableChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.OnAvailableChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.BackColorChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnBackColorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnBackColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnBackColorChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBoundsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBoundsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBoundsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBoundsChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnBoundsChanged : unit -&gt; unit&#xA;override this.OnBoundsChanged : unit -&gt; unit" Usage="toolStripItem.OnBoundsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se produit quand la propriété <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnBoundsChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="toolStripItem.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.Click" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnClick%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.ToolStripItem.OnClick%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnClick(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnClick(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDisplayStyleChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnDisplayStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DisplayStyleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : EventArgs -&gt; unit&#xA;override this.OnDoubleClick : EventArgs -&gt; unit" Usage="toolStripItem.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DoubleClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnDoubleClick%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.ToolStripItem.OnDoubleClick%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#14)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnDoubleClick(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnDoubleClick(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (dragEvent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="toolStripItem.OnDragDrop dragEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnDragDrop%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (dragEvent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="toolStripItem.OnDragEnter dragEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragEnter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnDragEnter%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="toolStripItem.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnDragLeave%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnDragLeave(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnDragLeave(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (dragEvent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="toolStripItem.OnDragOver dragEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragOver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnDragOver%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnDragOver(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnDragOver(System.Windows.Forms.DragEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.EnabledChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnEnabledChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnEnabledChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnEnabledChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFontChanged : EventArgs -&gt; unit&#xA;override this.OnFontChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.Control.FontChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnFontChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnFontChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnFontChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.ForeColorChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnForeColorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnForeColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnForeColorChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs giveFeedbackEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs giveFeedbackEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (giveFeedbackEvent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ giveFeedbackEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="toolStripItem.OnGiveFeedback giveFeedbackEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="giveFeedbackEvent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="giveFeedbackEvent"><see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.GiveFeedback" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnGiveFeedback%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit&#xA;override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="toolStripItem.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.LayoutEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnLayout%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.LocationChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnLocationChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnLocationChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnLocationChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStripItem.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnMouseDown%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : EventArgs -&gt; unit&#xA;override this.OnMouseEnter : EventArgs -&gt; unit" Usage="toolStripItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnMouseEnter%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.ToolStripItem.OnMouseEnter%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseEnter(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseEnter(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : EventArgs -&gt; unit&#xA;override this.OnMouseHover : EventArgs -&gt; unit" Usage="toolStripItem.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnMouseHover%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseHover(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseHover(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : EventArgs -&gt; unit&#xA;override this.OnMouseLeave : EventArgs -&gt; unit" Usage="toolStripItem.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnMouseLeave%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.ToolStripItem.OnMouseLeave%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#16)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseLeave(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseLeave(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs mea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs mea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (mea As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ mea);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStripItem.OnMouseMove mea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mea" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mea"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnMouseMove%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStripItem.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnMouseUp%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOwnerChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnOwnerChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOwnerChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnOwnerChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOwnerChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOwnerChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOwnerChanged : EventArgs -&gt; unit&#xA;override this.OnOwnerChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnOwnerChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.OwnerChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnOwnerChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOwnerFontChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnOwnerFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnOwnerFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnOwnerFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnOwnerFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOwnerFontChanged : EventArgs -&gt; unit&#xA;override this.OnOwnerFontChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnOwnerFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche la <see cref="E:System.Windows.Forms.Control.FontChanged" /> événement lorsque la <see cref="P:System.Windows.Forms.ToolStripItem.Font" /> propriété a changé sur le parent de la <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged%2A> méthode pour notifier les héritiers de la <xref:System.Windows.Forms.ToolStripItem.Font%2A> propriété que la police a été modifié.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStripItem.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.Paint" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnPaint%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.ToolStripItem.OnPaint%2A> procédé de rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnPaint(System.Windows.Forms.PaintEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnPaint(System.Windows.Forms.PaintEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.BackColorChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged (System.Windows.Forms.ToolStrip oldParent, System.Windows.Forms.ToolStrip newParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged(class System.Windows.Forms.ToolStrip oldParent, class System.Windows.Forms.ToolStrip newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged (oldParent As ToolStrip, newParent As ToolStrip)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged(System::Windows::Forms::ToolStrip ^ oldParent, System::Windows::Forms::ToolStrip ^ newParent);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; unit&#xA;override this.OnParentChanged : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; unit" Usage="toolStripItem.OnParentChanged (oldParent, newParent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="newParent" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="oldParent">Parent d’origine de l’élément.</param>
        <param name="newParent">Nouveau parent de l’élément.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnParentChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentEnabledChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnParentEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnParentEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnParentEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnParentEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnParentEnabledChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche la <see cref="E:System.Windows.Forms.ToolStripItem.EnabledChanged" /> événement lorsque la <see cref="P:System.Windows.Forms.ToolStripItem.Enabled" /> valeur de propriété de modifications de l’élément conteneur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentForeColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.ForeColorChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnParentRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnParentRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnParentRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnParentRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnParentRightToLeftChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.RightToLeftChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs queryContinueDragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs queryContinueDragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (queryContinueDragEvent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ queryContinueDragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="toolStripItem.OnQueryContinueDrag queryContinueDragEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryContinueDragEvent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="queryContinueDragEvent"><see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.QueryContinueDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.RightToLeftChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.TextChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnTextChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnTextChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnTextChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.VisibleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.OnVisibleChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.ToolStripItem.OnVisibleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.ToolStripItem.OnVisibleChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Overflow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemOverflow Overflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemOverflow Overflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Overflow" />
      <MemberSignature Language="VB.NET" Value="Public Property Overflow As ToolStripItemOverflow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemOverflow Overflow { System::Windows::Forms::ToolStripItemOverflow get(); void set(System::Windows::Forms::ToolStripItemOverflow value); };" />
      <MemberSignature Language="F#" Value="member this.Overflow : System.Windows.Forms.ToolStripItemOverflow with get, set" Usage="System.Windows.Forms.ToolStripItem.Overflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemOverflow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si l’élément est attaché à la <see cref="T:System.Windows.Forms.ToolStrip" /> ou <see cref="T:System.Windows.Forms.ToolStripOverflowButton" /> ou peut flotter entre les deux.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripItemOverflow" />. La valeur par défaut est <see cref="F:System.Windows.Forms.ToolStripItemOverflow.AsNeeded" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> propriété dans les dispositions de pile. Dans les dispositions de tableaux et des flux, le <xref:System.Windows.Forms.ToolStrip> bouton de dépassement de capacité n’est pas restitué et par conséquent le <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> propriété est ignorée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, et <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> propriétés et handle le <xref:System.Windows.Forms.ToolStripItem.Click> événement. Pour exécuter cet exemple, collez le code suivant dans un formulaire qui contient un <xref:System.Windows.Forms.ToolStrip> nommé `movingToolStrip` et appelez `InitializeMovingToolStrip` dans le constructeur du formulaire ou `Load` Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.ToolStripItemOverflow" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStrip Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStrip Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStrip ^ Owner { System::Windows::Forms::ToolStrip ^ get(); void set(System::Windows::Forms::ToolStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.ToolStrip with get, set" Usage="System.Windows.Forms.ToolStripItem.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le propriétaire de cet élément.</summary>
        <value>Le <see cref="T:System.Windows.Forms.ToolStrip" /> qui possède ou qui doit posséder le <see cref="T:System.Windows.Forms.ToolStripItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.Owner%2A> Retourne le <xref:System.Windows.Forms.ToolStrip> dont la collection Items contient actuel <xref:System.Windows.Forms.ToolStripItem>. Ceci est le meilleur moyen pour faire référence à <xref:System.Windows.Forms.ToolStrip.ImageList%2A> ou d’autres propriétés dans le niveau supérieur <xref:System.Windows.Forms.ToolStrip> sans écrire de code spécial pour gérer le dépassement de capacité.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.Owner%2A> reste le même, même si l’élément se trouve dans le <xref:System.Windows.Forms.ToolStripOverflow>. Le <xref:System.Windows.Forms.ToolStripItem.Owner%2A> peut être `null` pour certains des éléments qui se trouvent dans le <xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A> collection, mais pas dans le <xref:System.Windows.Forms.ToolStrip.Items%2A> collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.Owner%2A> propriété pour le rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler OwnerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OwnerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.OwnerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OwnerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OwnerChanged;" />
      <MemberSignature Language="F#" Value="member this.OwnerChanged : EventHandler " Usage="member this.OwnerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la propriété <see cref="P:System.Windows.Forms.ToolStripItem.Owner" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.OwnerChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.OwnerChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.OwnerChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#117](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#117)]
 [!code-vb[System.Windows.Forms.EventExamples#117](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem OwnerItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem OwnerItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.OwnerItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ OwnerItem { System::Windows::Forms::ToolStripItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerItem : System.Windows.Forms.ToolStripItem" Usage="System.Windows.Forms.ToolStripItem.OwnerItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le parent <see cref="T:System.Windows.Forms.ToolStripItem" /> de ce <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Le parent <see cref="T:System.Windows.Forms.ToolStripItem" /> de ce <see cref="T:System.Windows.Forms.ToolStripItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par exemple, le <xref:System.Windows.Forms.ToolStripItem.OwnerItem%2A> d’un **Open** <xref:System.Windows.Forms.ToolStripMenuItem> serait généralement un **fichier**<xref:System.Windows.Forms.ToolStripMenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ToolStripItem.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espacement interne, en pixels, entre le contenu de l'élément et ses bords.</summary>
        <value>Un <see cref="T:System.Windows.Forms.Padding" /> représentant l’espacement interne de l’élément, en pixels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'élément est redessiné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.Paint> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.Paint> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#118](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#118)]
 [!code-vb[System.Windows.Forms.EventExamples#118](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Forms.ToolStrip Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStrip Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property Parent As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Forms::ToolStrip ^ Parent { System::Windows::Forms::ToolStrip ^ get(); void set(System::Windows::Forms::ToolStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.ToolStrip with get, set" Usage="System.Windows.Forms.ToolStripItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le conteneur parent de la <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Un <see cref="T:System.Windows.Forms.ToolStrip" /> qui est le conteneur parent de la <see cref="T:System.Windows.Forms.ToolStripItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.GetCurrentParent%2A> est un accesseur en lecture seule à la <xref:System.Windows.Forms.ToolStripItem.Parent%2A> propriété. Un parent est différent d’un propriétaire dénote actuel retourné <xref:System.Windows.Forms.ToolStrip> dans lequel l’élément est affiché, qui peut être dans la zone de débordement.  
  
 Le parent <xref:System.Windows.Forms.ToolStrip> déclenche des événements de peinture et ainsi de suite, pendant le propriétaire <xref:System.Windows.Forms.ToolStrip> contient des données partagées telles que des listes d’images. En règle générale, le <xref:System.Windows.Forms.ToolStripItem.Parent%2A> propriété est définie par le Gestionnaire de disposition sur le <xref:System.Windows.Forms.ToolStrip>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="toolStripItem.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Génère un événement <see langword="Click" /> pour un <see langword="ToolStripItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemPlacement Placement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemPlacement Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Placement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Placement As ToolStripItemPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemPlacement Placement { System::Windows::Forms::ToolStripItemPlacement get(); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Forms.ToolStripItemPlacement" Usage="System.Windows.Forms.ToolStripItem.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la disposition actuelle de l'élément.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripItemPlacement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inspecter le <xref:System.Windows.Forms.ToolStripItem.Placement%2A> propriété dans un <xref:System.Windows.Forms.ToolStrip.LayoutCompleted> événement pour déterminer si un élément a été placé sur le principal <xref:System.Windows.Forms.ToolStrip>, le dépassement de capacité <xref:System.Windows.Forms.ToolStrip>, ou si elle ne s’affichent pas du tout. Les raisons courantes pour lesquelles un élément n’est pas affiché sont que l’élément ne tiennent pas sur le principal <xref:System.Windows.Forms.ToolStrip> et son <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> propriété a été définie sur <xref:System.Windows.Forms.ToolStripItemOverflow.Never>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.Placement%2A> propriété pour le rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#22)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pressed">
      <MemberSignature Language="C#" Value="public virtual bool Pressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Pressed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Pressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Pressed : bool" Usage="System.Windows.Forms.ToolStripItem.Pressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l’état de l’élément est enfoncé.</summary>
        <value><see langword="true" /> Si l’état de l’élément est enfoncé ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="toolStripItem.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m"><see cref="T:System.Windows.Forms.Message" />, passé par référence, qui représente le message de fenêtre à traiter.</param>
        <param name="keyData">Une des valeurs <see cref="T:System.Windows.Forms.Keys" /> qui représente la touche à traiter.</param>
        <summary>Traite une touche de commande.</summary>
        <returns><see langword="false" /> dans tous les cas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pendant le prétraitement du message pour gérer les touches de commande. Touches de commande sont des clés qui ont toujours priorité sur les touches d’entrée standards. Accélérateurs et des raccourcis de menu sont des exemples de touches de commande. La méthode doit retourner `true` pour indiquer qu’il a traité la touche de commande, ou `false` pour indiquer que la clé n’est pas une touche de commande.  
  
 L’implémentation de classe de base de <xref:System.Windows.Forms.ToolStripItem.ProcessCmdKey%2A> retourne de la méthode `false` dans tous les cas.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour l’appelant immédiat et les classes qui héritent d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.ToolStripItem.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> méthode dans une classe dérivée, la substitution de méthode doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Classes dérivées rarement, voire jamais, devez substituer cette méthode.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="toolStripItem.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Une des valeurs <see cref="T:System.Windows.Forms.Keys" /> qui représente la touche à traiter.</param>
        <summary>Traite une touche de boîte de dialogue.</summary>
        <returns><see langword="true" /> si la touche a été traitée par l'élément ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pendant le prétraitement du message pour gérer les touches entrée et espace afin de déclencher le <xref:System.Windows.Forms.ToolStripItem.Click> événement. Cette méthode est appelée uniquement si la <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode indique que l’élément ne traite pas de la clé.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode. Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</permission>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.ToolStripItem.ProcessDialogKey(System.Windows.Forms.Keys)" /> méthode dans une classe dérivée, l’implémentation de substitution doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Classes dérivées rarement, voire jamais, devez substituer cette méthode.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMnemonic : char -&gt; bool&#xA;override this.ProcessMnemonic : char -&gt; bool" Usage="toolStripItem.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Caractère à traiter.</param>
        <summary>Traite un caractère mnémonique.</summary>
        <returns><see langword="true" /> dans tous les cas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pour permettre à un élément de traiter un caractère mnémonique. La méthode doit déterminer si l’élément est dans un état à traiter les mnémoniques et si le caractère donné représente un mnémonique. Si, par conséquent, la méthode doit effectuer l’action associée au mnémonique et retourner `true`. Si non, la méthode doit retourner `false`.  
  
 Cette implémentation de classe de base s’appuie sur l’ordinateur hôte <xref:System.Windows.Forms.ToolStrip> contrôle pour appeler le <xref:System.Windows.Forms.Control.IsMnemonic%2A> méthode pour déterminer si le caractère donné correspond à un caractère mnémonique dans le texte de l’élément. Dans ce cas, la méthode déclenche la <xref:System.Windows.Forms.ToolStripItem.Click> événement et retourne `true`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode. Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu’une application d’accessibilité appelle l’aide pour le <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez utiliser le <xref:System.Windows.Forms.HelpProvider> classe pour permettre aux utilisateurs d’appeler l’aide sur votre objet accessible en appuyant sur la touche F1. À l’aide de la <xref:System.Windows.Forms.HelpProvider> vous fournit des informations complètes dans le <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs> objet.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.QueryAccessibilityHelp> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.QueryAccessibilityHelp> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#120)]
 [!code-vb[System.Windows.Forms.EventExamples#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit pendant une opération glisser-déplacer et permet à la source de cette opération de déterminer si l'opération doit être annulée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement est déclenché en cas d’une modification dans l’état du bouton de souris ou le clavier pendant une opération de glisser-déplacer. Le <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement permet à la source de glissement déterminer si l’opération de glisser-déplacer doit être annulée.  
  
 Les notes suivantes décrivent comment et quand les événements liés aux opérations de glisser-déplacer sont déclenchés.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> méthode détermine l’élément sous l’emplacement du curseur. Elle vérifie ensuite si l’élément est une cible de dépôt valide.  
  
 Si l’élément est une cible de dépôt valide, le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié. Pour obtenir la liste des effets de glisser-déposer, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Les modifications de la position du curseur de la souris, état du clavier et état du bouton de la souris sont suivies de la manière suivante :  
  
-   Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.ToolStripItem.DragLeave> est déclenché.  
  
-   Si la souris entre dans un autre élément, le <xref:System.Windows.Forms.ToolStripItem.DragEnter> pour ce contrôle est déclenché.  
  
-   Si la souris se déplace uniquement dans le même élément, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché.  
  
 S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Si la valeur de <xref:System.Windows.Forms.DragAction> est `Continue`, le <xref:System.Windows.Forms.ToolStripItem.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée. Pour obtenir la liste des effets de dépôt valides, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
 Le <xref:System.Windows.Forms.ToolStripItem.DragOver> et <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris, comme suit :  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.  
  
-   Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.ToolStripItem.DragLeave> événement est déclenché.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#119](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#119)]
 [!code-vb[System.Windows.Forms.EventExamples#119](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public virtual void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetBackColor : unit -&gt; unit&#xA;override this.ResetBackColor : unit -&gt; unit" Usage="toolStripItem.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDisplayStyle">
      <MemberSignature Language="C#" Value="public virtual void ResetDisplayStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetDisplayStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetDisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetDisplayStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetDisplayStyle();" />
      <MemberSignature Language="F#" Value="abstract member ResetDisplayStyle : unit -&gt; unit&#xA;override this.ResetDisplayStyle : unit -&gt; unit" Usage="toolStripItem.ResetDisplayStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFont">
      <MemberSignature Language="C#" Value="public virtual void ResetFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetFont" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetFont();" />
      <MemberSignature Language="F#" Value="abstract member ResetFont : unit -&gt; unit&#xA;override this.ResetFont : unit -&gt; unit" Usage="toolStripItem.ResetFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public virtual void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetForeColor : unit -&gt; unit&#xA;override this.ResetForeColor : unit -&gt; unit" Usage="toolStripItem.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetImage">
      <MemberSignature Language="C#" Value="public virtual void ResetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetImage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetImage();" />
      <MemberSignature Language="F#" Value="abstract member ResetImage : unit -&gt; unit&#xA;override this.ResetImage : unit -&gt; unit" Usage="toolStripItem.ResetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMargin">
      <MemberSignature Language="C#" Value="public void ResetMargin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMargin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetMargin" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMargin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMargin();" />
      <MemberSignature Language="F#" Value="member this.ResetMargin : unit -&gt; unit" Usage="toolStripItem.ResetMargin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPadding">
      <MemberSignature Language="C#" Value="public void ResetPadding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPadding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetPadding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPadding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPadding();" />
      <MemberSignature Language="F#" Value="member this.ResetPadding : unit -&gt; unit" Usage="toolStripItem.ResetPadding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRightToLeft">
      <MemberSignature Language="C#" Value="public virtual void ResetRightToLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRightToLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetRightToLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetRightToLeft();" />
      <MemberSignature Language="F#" Value="abstract member ResetRightToLeft : unit -&gt; unit&#xA;override this.ResetRightToLeft : unit -&gt; unit" Usage="toolStripItem.ResetRightToLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTextDirection">
      <MemberSignature Language="C#" Value="public virtual void ResetTextDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTextDirection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetTextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetTextDirection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetTextDirection();" />
      <MemberSignature Language="F#" Value="abstract member ResetTextDirection : unit -&gt; unit&#xA;override this.ResetTextDirection : unit -&gt; unit" Usage="toolStripItem.ResetTextDirection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode ne s'applique pas à cette classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne s'applique pas à cette classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.ToolStripItem.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les éléments doivent être placés de droite à gauche et si le texte doit être écrit de droite à gauche.</summary>
        <value><see langword="true" /> Si les éléments doivent être placés de droite à gauche et le texte doit être écrit de droite à gauche ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftAutoMirrorImage">
      <MemberSignature Language="C#" Value="public bool RightToLeftAutoMirrorImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftAutoMirrorImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.RightToLeftAutoMirrorImage" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeftAutoMirrorImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeftAutoMirrorImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftAutoMirrorImage : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.RightToLeftAutoMirrorImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Met automatiquement en miroir le <see cref="T:System.Windows.Forms.ToolStripItem" /> de l’image lorsque le <see cref="P:System.Windows.Forms.ToolStripItem.RightToLeft" /> propriété est définie sur <see cref="F:System.Windows.Forms.RightToLeft.Yes" />.</summary>
        <value><see langword="true" /> pour refléter l’image ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant illustre la syntaxe pour le paramètre commun <xref:System.Windows.Forms.ToolStripItem> propriétés, y compris le <xref:System.Windows.Forms.ToolStripItem.RightToLeftAutoMirrorImage%2A> propriété.  
  
 [!code-csharp[System.Windows.Forms.ToolStripStatusLabel.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripStatusLabel.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripStatusLabel.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripStatusLabel.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripItem.RightToLeft" /> est modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#121](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#121)]
 [!code-vb[System.Windows.Forms.EventExamples#121](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="toolStripItem.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sélectionne l'élément.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Windows.Forms.ToolStripItem.Select%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool" Usage="System.Windows.Forms.ToolStripItem.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'élément est sélectionné.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Windows.Forms.ToolStripItem" /> est sélectionné ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ToolStripItem.Selected%2A> propriété pour le rendu personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ToolStripItem> classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#22)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="protected internal virtual void SetBounds (System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetBounds(valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.SetBounds(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetBounds (bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetBounds(System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="abstract member SetBounds : System.Drawing.Rectangle -&gt; unit&#xA;override this.SetBounds : System.Drawing.Rectangle -&gt; unit" Usage="toolStripItem.SetBounds bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bounds">Un <see cref="T:System.Drawing.Rectangle" /> qui représente la taille et l’emplacement de la <see cref="T:System.Windows.Forms.ToolStripItem" /></param>
        <summary>Définit la taille et l'emplacement de l'élément.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected virtual void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetVisibleCore(bool visible);" />
      <MemberSignature Language="F#" Value="abstract member SetVisibleCore : bool -&gt; unit&#xA;override this.SetVisibleCore : bool -&gt; unit" Usage="toolStripItem.SetVisibleCore visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible"><see langword="true" /> Pour rendre le <see cref="T:System.Windows.Forms.ToolStripItem" /> visible ; sinon, <see langword="false" />.</param>
        <summary>Affecte l’état visible spécifié à <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Généralement, vous substituez cette méthode pour modifier le comportement de visibilité du contrôle.  
  
> [!NOTE]
>  Lors de la substitution <xref:System.Windows.Forms.ToolStripItem.SetVisibleCore%2A> dans une classe dérivée, veillez à appeler la classe de base <xref:System.Windows.Forms.ToolStripItem.SetVisibleCore%2A> méthode pour forcer la visibilité du contrôle à modifier.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowKeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowKeyboardCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowKeyboardCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboardCues : bool" Usage="System.Windows.Forms.ToolStripItem.ShowKeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant s'il faut afficher ou masquer les touches de raccourci.</summary>
        <value><see langword="true" /> Pour afficher les touches de raccourci ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Touches de raccourci, tels que CTRL + C pour copier, fournissent des alternatives de clavier à la sélection d’une commande avec une souris ou autre dispositif de pointage.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ToolStripItem.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille de l'élément.</summary>
        <value>Un <see cref="T:System.Drawing.Size" />, représentant la largeur et la hauteur d’un rectangle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragDrop">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragDrop(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragDrop (dragEvent As DragEventArgs) Implements IDropTarget.OnDragDrop" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEvent) = System::Windows::Forms::IDropTarget::OnDragDrop;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragDrop%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragEnter">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragEnter(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragEnter (dragEvent As DragEventArgs) Implements IDropTarget.OnDragEnter" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEvent) = System::Windows::Forms::IDropTarget::OnDragEnter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragEnter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragEnter%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragLeave">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragLeave (e As EventArgs) Implements IDropTarget.OnDragLeave" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs ^ e) = System::Windows::Forms::IDropTarget::OnDragLeave;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripItem.DragLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragLeave%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragOver">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragOver(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragOver (dragEvent As DragEventArgs) Implements IDropTarget.OnDragOver" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEvent) = System::Windows::Forms::IDropTarget::OnDragOver;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see langword="DragOver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragOver%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolStripItem.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet qui contient les données relatives à l'élément.</summary>
        <value><see cref="T:System.Object" /> qui contient les données relatives au contrôle. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant montre l’exemple un <xref:System.Windows.Forms.ToolStripLabel> avec son <xref:System.Windows.Forms.ToolStripItem.Tag%2A> propriété définie sur un lien actif.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ToolStripItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte qui doit être affiché sur l'élément.</summary>
        <value>Chaîne représentant le texte de l'élément. La valeur par défaut est la chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez créer une clé d’accès à l’élément en ajoutant une esperluette (« & ») devant une lettre dans la valeur de texte. Pour plus d'informations, voir [Procédure : Créer des clés d’accès pour les contrôles de Windows Forms](~/docs/framework/winforms/controls/how-to-create-access-keys-for-windows-forms-controls.md).  
  
 <xref:System.Windows.Forms.ToolStripItem> utilise le <xref:System.Windows.Forms.ToolStripItem.Text%2A> propriété comme source par défaut pour le <xref:System.Windows.Forms.ToolTip> contenu. Définissez <xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A> à `false` à utiliser <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A> comme source pour <xref:System.Windows.Forms.ToolTip> contenu.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, et <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> propriétés et handle le <xref:System.Windows.Forms.ToolStripItem.Click> événement. Pour exécuter cet exemple, collez le code suivant dans un formulaire qui contient un <xref:System.Windows.Forms.ToolStrip> nommé `movingToolStrip` et appelez `InitializeMovingToolStrip` dans le constructeur du formulaire ou `Load` Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ToolStripItem.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’alignement du texte sur un <see cref="T:System.Windows.Forms.ToolStripLabel" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Drawing.ContentAlignment" />. La valeur par défaut est <see cref="F:System.Drawing.ContentAlignment.MiddleRight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> propriété à obtenir ou définir l’alignement du texte sur un <xref:System.Windows.Forms.ToolStripItem>. Utilisez le <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A> propriété à obtenir ou définir l’alignement de l’image sur un <xref:System.Windows.Forms.ToolStripItem>.  
  
   
  
## Examples  
 L’exemple de code suivant montre le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , et <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> propriétés pour un <xref:System.Windows.Forms.ToolStripButton>. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripButton> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Drawing.ContentAlignment" />.</exception>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.ImageAlign" />
        <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripItem.Text" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.TextChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.TextChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.TextChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#122](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#122)]
 [!code-vb[System.Windows.Forms.EventExamples#122](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripTextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripTextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextDirection As ToolStripTextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripTextDirection TextDirection { System::Windows::Forms::ToolStripTextDirection get(); void set(System::Windows::Forms::ToolStripTextDirection value); };" />
      <MemberSignature Language="F#" Value="member this.TextDirection : System.Windows.Forms.ToolStripTextDirection with get, set" Usage="System.Windows.Forms.ToolStripItem.TextDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripTextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’orientation du texte utilisée sur un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripTextDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, et <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> propriétés et handle le <xref:System.Windows.Forms.ToolStripItem.Click> événement. Pour exécuter cet exemple, collez le code suivant dans un formulaire qui contient un <xref:System.Windows.Forms.ToolStrip> nommé `movingToolStrip` et appelez `InitializeMovingToolStrip` dans le constructeur du formulaire ou `Load` Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberSignature Language="F#" Value="member this.TextImageRelation : System.Windows.Forms.TextImageRelation with get, set" Usage="System.Windows.Forms.ToolStripItem.TextImageRelation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la position de <see cref="T:System.Windows.Forms.ToolStripItem" /> text et image par rapport aux autres.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.TextImageRelation" />. La valeur par défaut est <see cref="F:System.Windows.Forms.TextImageRelation.ImageBeforeText" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripItem.TextImageRelation%2A> propriété pour définir ou déterminer le positionnement relatif de l’image en ce qui concerne le texte sur un <xref:System.Windows.Forms.ToolStripItem>. Les éléments qui ne disposent pas d’une image, texte ou les deux sont traités comme des cas spéciaux afin que le <xref:System.Windows.Forms.ToolStripItem> n’affiche pas un emplacement vide pour l’ou les éléments manquants.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.ToolStripItem.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte qui apparaît comme un <see cref="T:System.Windows.Forms.ToolTip" /> pour un contrôle.</summary>
        <value>Chaîne représentant le texte d'info-bulle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A> fonctionne uniquement si <xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A> est défini sur `true`. Si <xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A> a la valeur `true`, le <xref:System.Windows.Forms.Control.Text%2A> propriété pour l’élément est utilisée comme le <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, et <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> pour un <xref:System.Windows.Forms.ToolStripItem>. En outre, il montre comment définir et afficher une info-bulle personnalisée pour l’élément.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="toolStripItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un. Cette méthode ne doit pas être remplacée.</summary>
        <returns><see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> est sans nom.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si l'élément est affiché.</summary>
        <value><see langword="true" /> Si l’élément est affiché ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripItem.Visible" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Modification la <xref:System.Windows.Forms.Control.Enabled%2A> propriété d’un <xref:System.Windows.Forms.ToolStrip> ne déclenche pas le <xref:System.Windows.Forms.ToolStripItem.VisibleChanged> événement. Déclenchez cet événement avec les paramètres de propriété spécifiques.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripItem.VisibleChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.ToolStripItem>, comme un <xref:System.Windows.Forms.ToolStripButton> ou <xref:System.Windows.Forms.ToolStripMenuItem>. Ensuite, nommez l’instance `ToolStripItem1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripItem.VisibleChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#123](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#123)]
 [!code-vb[System.Windows.Forms.EventExamples#123](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.ToolStripItem.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la largeur en pixels d’un <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
        <value><see cref="T:System.Int32" /> représentant la largeur en pixels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>