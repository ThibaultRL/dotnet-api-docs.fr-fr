<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a92c9e0f9881d11f1c52bc1f21e7a3d690b4f4e" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006058" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des informations utilisées par les applications d’accessibilité pour adapter l’interface utilisateur d’une application aux personnes présentant un handicap.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les applications d’accessibilité peuvent ajuster des fonctionnalités de l’application pour améliorer la convivialité pour les utilisateurs présentant un handicap.  
  
 Pour les utilisateurs malvoyants, vous pouvez ajuster les fonctionnalités de logiciels et de système d’exploitation pour répondre à leurs besoins. Par exemple, vous pouvez agrandir le texte et images et les afficher avec un contraste. En outre, vous pouvez satisfaire color-blindness avec l’utilisation appropriée des couleurs. Pour les utilisateurs gravement malvoyants, les ordinateurs sont accessibles à l’aide d’Assistants qui se traduire à l’écran texte en parole ou à un affichage Braille dynamique et actualisable,.  
  
 Pour les utilisateurs qui sont malentendants, vous pouvez concevoir des programmes qui utilisent des signaux visuels, tels que d’une barre d’outils clignotant ; ou vous pouvez afficher les messages prononcés en tant que texte. Par exemple, lorsque sous tension, le `SoundSentry` fonctionnalité, une option d’accessibilité dans le panneau de configuration, fournit un avertissement visuel chaque fois que le système émet une alarme sonore.  
  
 Pour les utilisateurs présentant un handicap de mouvement, vous pouvez concevoir des contrôles qui restreignent ou éliminent l’utilisation du clavier et de la souris, ce qui améliore l’accessibilité d’ordinateur. Le panneau de configuration offre une assistance. Par exemple, une autre solution consiste à utiliser le pavé numérique au lieu de la souris pour la navigation. Une autre option, appelée `StickyKeys`, permet aux utilisateurs qui ne peut pas contenir deux ou plusieurs touches enfoncées à la fois (par exemple, CTRL + P) pour obtenir le même résultat en tapant une seule clé à la fois.  
  
 Pour les utilisateurs avec cognitive et un handicap de langage, vous pouvez concevoir des programmes afin de mieux répondre à leurs besoins. Par exemple, à l’aide de séquencement apparent ou signalisé, écrans, moins de mots et un niveau de lecture ciblé scolaire peut constituer un avantage ces utilisateurs.  
  
 Pour les utilisateurs souffrant d’épilepsie, vous pouvez concevoir des logiciels qui éliminent préhension.  
  
 Pour plus d’informations sur l’accessibilité, notamment des informations sur les applications d’accessibilité, consultez la documentation de Microsoft Accessibility dans MSDN library ou sur le site Web de Microsoft.  
  
> [!NOTE]
>  Pour utiliser le <xref:System.Windows.Forms.AccessibleObject>, vous devez ajouter une référence à la `Accessibility` assembly installé avec le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Windows Forms prend uniquement en charge Active Accessibility 2.0.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Étant donné que la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Lorsque vous héritez de cette classe, vous pouvez remplacer tous les membres.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, lorsque vous utilisez cette méthode pour créer un objet accessible, vous fournissez vos propres implémentations des propriétés et méthodes de la classe pour fournir des fonctionnalités spécifiques à votre application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d’interfaces enfants qui appartiennent à cet objet. Pour obtenir une description de ce membre, consultez <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
        <value>Le nombre d’objets accessibles aux enfants qui appartiennent à cet objet. Si l’objet n’a aucuns objets enfants, cette valeur est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">L’ID enfant dans la  <see cref="T:Accessibility.IAccessible" /> /paire interface qui représente l’objet accessible.</param>
        <summary>Effectue l’action par défaut de l’objet spécifié. Les objets n'ont pas tous une action par défaut. Pour obtenir une description de ce membre, consultez <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’objet qui a le focus clavier. Pour obtenir une description de ce membre, consultez <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
        <value>L’objet qui a le focus clavier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le type de valeur de retour de la <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> propriété dépend de l’objet qui a le focus clavier. Le tableau suivant décrit l’objet de types que le <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> retourne de la propriété.  
  
|Type|Description|  
|----------|-----------------|  
|`null`|Cet objet n’a pas le focus clavier lui-même et ne contient-elle pas un de ses enfants a le focus clavier.|  
|entiers|0 si l’objet actuel a le focus clavier ; Sinon, l’ID enfant de l’objet accessible enfant ayant le focus clavier.|  
|<xref:Accessibility.IAccessible>|L’objet accessible enfant qui a le focus clavier.|  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Coordonnée horizontale.</param>
        <param name="yTop">Coordonnée verticale.</param>
        <summary>Obtient l’objet enfant situé aux coordonnées d’écran spécifiées. Pour obtenir une description de ce membre, consultez <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
        <returns>L’objet accessible au point spécifié par <paramref name="xLeft" /> et <paramref name="yTop" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant décrit l’objet de types que le <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> méthode peut retourner.  
  
|Type|Description|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|L’objet accessible dans la direction spécifiée.|  
|entiers|0 si le point spécifié est à l’objet actuel ou à l’extérieur des limites de l’objet ; Sinon, l’ID enfant qui identifie l’objet accessible dans la direction spécifiée.|  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">Quand cette méthode est retournée, contient l’abscisse (x) du bord gauche de l’objet. Ce paramètre est passé sans être initialisé.</param>
        <param name="pyTop">Quand cette méthode est retournée, contient l’ordonnée (y) du bord supérieur de l’objet. Ce paramètre est passé sans être initialisé.</param>
        <param name="pcxWidth">Lorsque cette méthode est retournée, contient la largeur de l’objet. Ce paramètre est passé sans être initialisé.</param>
        <param name="pcyHeight">Lorsque cette méthode est retournée, contient la hauteur de l’objet. Ce paramètre est passé sans être initialisé.</param>
        <param name="childID">Numéro d’identification de l’objet accessible. Ce paramètre est 0 pour obtenir l’emplacement de l’objet ou un ID enfant pour obtenir l’emplacement d’un des objets enfants de l’objet.</param>
        <summary>Obtient l’emplacement d’affichage actuel de l’objet. Pour obtenir une description de ce membre, consultez <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Parmi les <see cref="T:System.Windows.Forms.AccessibleNavigation" /> énumérations qui spécifie la direction vers laquelle naviguer.</param>
        <param name="childID">Numéro d’identification de l’objet accessible. Ce paramètre est 0 pour démarrer à partir de l’objet ou un ID enfant pour démarrer à partir d’un des objets enfants de l’objet.</param>
        <summary>Navigue vers un objet accessible relatif à l’objet actuel. Pour obtenir une description de ce membre, consultez <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
        <returns>L’objet accessible positionné à la valeur spécifiée par <paramref name="navDir" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant décrit l’objet de types que le <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> méthode peut retourner.  
  
|Type|Description|  
|----------|-----------------|  
|`null`|Il y n'est pas un objet accessible dans la direction spécifiée.|  
|<xref:Accessibility.IAccessible>|L’objet accessible dans la direction spécifiée.|  
|entiers|L’ID enfant qui identifie l’objet accessible dans la direction spécifiée. Utiliser le parent <xref:Accessibility.IAccessible> et l’ID enfant pour accéder à l’objet accessible.|  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le parent un objet accessible de cet objet. Pour obtenir une description de ce membre, consultez <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
        <value>Un <see cref="T:Accessibility.IAccessible" /> qui représente le parent de l’objet accessible, ou <see langword="null" /> s’il n’existe aucun objet parent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.AccessibleSelection" />.</param>
        <param name="childID">Numéro d'ID de l'objet accessible sur lequel changer la sélection. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Modifie la sélection ou déplace le focus clavier de l’objet accessible. Pour obtenir une description de ce membre, consultez <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La section suivante décrit ce qui <xref:System.Windows.Forms.AccessibleSelection> valeurs à spécifier lors de l’appel `Select` pour effectuer des opérations de sélection complexes.  
  
|Opération|Combinaison d’indicateurs|  
|---------------|----------------------|  
|Pour simuler un clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Pour sélectionner un élément cible en simulant CTRL + clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Pour annuler la sélection d’un élément cible en simulant CTRL + clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Pour simuler MAJ + clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Pour sélectionner une plage d’objets et placez le focus sur le dernier objet|Spécifiez <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> sur l’objet de départ pour définir l’ancre de sélection. Appelez ensuite Select à nouveau et spécifiez <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> ou <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> sur le dernier objet.|  
|Pour désélectionner tous les objets|Spécifiez <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> sur n’importe quel objet. Cet indicateur désélectionne tous les objets sélectionnés à l’exception de celui sélectionné uniquement. Appelez ensuite Select à nouveau et spécifiez <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> sur le même objet.|  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’enfant sélectionné les objets d’un objet accessible. Pour obtenir une description de ce membre, consultez <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
        <value>Les objets enfants sélectionnés d’un objet accessible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant décrit l’objet de types que le <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> retourne de propriété  
  
|Type|Description|  
|----------|-----------------|  
|`null`|Aucun objet enfant est sélectionné.|  
|<xref:Accessibility.IAccessible>|L’objet accessible enfant qui est sélectionné.|  
|entiers|L’ID enfant qui identifie l’objet accessible est sélectionné. Utiliser le parent <xref:Accessibility.IAccessible> et l’ID enfant pour accéder à l’objet accessible.|  
|`IEnumVARIANT`|Une liste d’objets enfants qui sont sélectionnés.|  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Numéro d’ID de l’objet enfant à récupérer.</param>
        <summary>Récupère un objet enfant spécifié.</summary>
        <returns>L’objet enfant spécifié, s’il existe, ou <see langword="null" /> s’il n’existe pas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel obtenir l’action par défaut. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Retourne une chaîne qui décrit l’action par défaut de l’objet spécifié.</summary>
        <returns>Une chaîne qui indique l’action par défaut de <paramref name="childID" />, ou <see langword="name" /> si <paramref name="childID" /> n’a pas d’action par défaut.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel obtenir une description. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Retourne une chaîne qui décrit l’apparence visuelle de l’objet accessible spécifié.</summary>
        <returns>Une chaîne localisée qui décrit l’objet accessible spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel obtenir des informations d’aide. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Récupère le chemin d’accès complet du fichier WinHelp associé à l’objet accessible spécifié.</summary>
        <returns>Le chemin d’accès complet du fichier WinHelp associé à <paramref name="childID" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">Lorsque la méthode est retournée, le chemin d’accès complet du fichier WinHelp associé à l’objet spécifié.</param>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel récupérer une rubrique d’aide. La valeur de ce paramètre est 0 pour sélectionner l'objet ou un ID enfant pour sélectionner l'un des objets enfants de l'objet.</param>
        <summary>Récupère le chemin complet d’un fichier WinHelp associé à l’objet spécifié, ainsi que l’identificateur d’une rubrique spécifique dans le fichier.</summary>
        <returns>L’identificateur d’une rubrique spécifique dans <paramref name="pszHelpFile" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel obtenir un raccourci clavier. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Récupère la clé d’accès ou le raccourci clavier de l’objet spécifié.</summary>
        <returns>Une chaîne localisée qui identifie le raccourci clavier, ou <see langword="null" /> si aucun raccourci clavier n’est associé à l’objet spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible dont le nom doit être récupéré. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Récupère le nom de l’objet spécifié.</summary>
        <returns>Le nom de l’objet spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel obtenir des informations sur le rôle. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Récupère des informations qui décrivent le rôle de l'objet spécifié.</summary>
        <returns>Objet fournissant des informations sur le rôle de l'objet accessible spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible pour lequel obtenir des informations sur l’état. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Récupère l’état actuel de l’objet accessible spécifié.</summary>
        <returns>Un objet qui décrit l’état actuel de l’objet accessible spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible dont la valeur doit être récupérée. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <summary>Récupère la valeur de l’objet accessible spécifié. Les objets n'ont pas tous une valeur.</summary>
        <returns>La valeur de <paramref name="childID" />, ou <see langword="null" /> si l’objet n’a aucune valeur.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible auquel attribuer un nouveau nom. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <param name="newName">Le nouveau nom à attribuer à <paramref name="childID" />.</param>
        <summary>Attribue un nouveau nom accessible à l'élément spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Le numéro d’ID de l’objet accessible auquel attribuer une nouvelle valeur. Ce paramètre est 0 pour sélectionner l’objet ou un ID enfant pour sélectionner un des objets enfants de l’objet.</param>
        <param name="newValue">La nouvelle valeur à attribuer à l’objet accessible spécifié.</param>
        <summary>Attribue une nouvelle valeur à l'élément spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'emplacement et la taille de l'objet accessible.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> qui représente les limites de l'objet accessible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> propriété récupère le rectangle englobant de l’objet en coordonnées d’écran. Si l’objet a une forme non rectangulaire, cette propriété représente le plus petit rectangle qui englobe entièrement la région de l’objet entier. Par conséquent, pour les objets non rectangulaires tels que des éléments d’affichage de liste, les coordonnées du rectangle englobant de l’objet peuvent échouer, si elles sont testées en appelant le <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> (méthode), étant donné que <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> détermine les limites de l’objet sur un pixel par pixel.  
  
   
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> propriété. Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Les limites du contrôle ne peut pas être récupérées.</exception>
        <block subset="none" type="overrides"><para>L’implémentation par défaut retourne le que rectangle de délimitation de l’objet accessible si l’objet encapsule un contrôle système ; Sinon, elle retourne <see cref="F:System.Drawing.Rectangle.Empty" />. Tous les objets accessibles visibles doivent prendre en charge cette méthode. Objets son ne prennent pas en charge cette méthode.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne qui décrit l’action par défaut de l’objet. Les objets n'ont pas tous une action par défaut.</summary>
        <value>Description de l’action par défaut pour un objet, ou <see langword="null" /> si l’objet n’a pas d’action par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne décrit l’action qui est exécutée sur un objet, pas ce que fait l’objet en conséquence. Autrement dit, un bouton de barre d’outils qui imprime un document a une action par défaut de « Press » plutôt que « Imprime le document en cours. » Ne confondez pas l’action par défaut d’un objet sa valeur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">L’action par défaut pour le contrôle ne peut pas être récupérée.</exception>
        <block subset="none" type="overrides"><para>L’implémentation par défaut retourne l’action par défaut de l’objet accessible si l’objet encapsule un contrôle système qui a une action par défaut ; Sinon, elle retourne <see langword="null" />. Seuls les contrôles qui effectuent des actions doivent prendre en charge cette méthode. Pas tous les objets ont des actions par défaut et certains peuvent avoir une action par défaut qui est associée à son <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> propriété, comme dans les exemples suivants : Cette case à cocher a une action par défaut « Désactiver » et la valeur « Activée ». Une case à cocher désactivée a une action par défaut de « Vérifier » et la valeur « Désactivé ». Un bouton intitulé « Imprimer » a une action par défaut de « Press », sans valeur. Un contrôle de texte statique ou un contrôle d’édition qui affiche « France » n’a aucune action par défaut, mais a une valeur de « France ». D’un objet <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> propriété doit être un verbe ou une phrase verbale courte.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne qui décrit l’apparence visuelle de l’objet spécifié. Pas tous les objets ont une description.</summary>
        <value>Une description de l’apparence visuelle de l’objet à l’utilisateur, ou <see langword="null" /> si l’objet n’a pas de description.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété décrit l’apparence visuelle de l’objet à l’utilisateur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">La description pour le contrôle ne peut pas être récupérée.</exception>
        <block subset="none" type="overrides"><para>L’implémentation par défaut retourne l’accessibles description de l’objet si l’objet encapsule un contrôle système ; Sinon, elle retourne <see langword="null" />. La description est généralement utilisée pour fournir plus de contexte pour les utilisateurs malvoyants ou non-voyants. Il peut également servir pour la recherche de contexte ou d’autres applications. Serveurs ont besoin prendre en charge la <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> si la description n’est pas évident, ou si elle est redondante basée sur les propriétés sur l’objet <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, et <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> propriétés. Par exemple, un bouton « OK » ne nécessite pas d’informations supplémentaires, mais un bouton qui affiche l’image d’un cactus. Le <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />et, éventuellement, <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> propriétés du bouton cactus décrivent sa fonction, mais la <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> propriété véhicule des informations qui sont moins tangibles, tels que « Un bouton qui affiche l’image d’un cactus ».</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Effectue l’action par défaut associée à cet objet accessible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les clients peuvent récupérer l’action par défaut de l’objet en inspectant d’un objet <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> propriété. Un client peut utiliser automation (si pris en charge) au lieu de <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> pour effectuer l’action par défaut d’un objet. Toutefois, <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> fournit un moyen simple pour effectuer un objet plus couramment utilisé action.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Impossible d’effectuer l’action par défaut pour le contrôle.</exception>
        <block subset="none" type="overrides"><para>L’action par défaut effectuée par les éléments d’interface utilisateur fournie par le système dépend de l’état du clavier. Autrement dit, si une touche de modification telles que MAJ, ALT ou CTRL est activée (par une action utilisateur ou par programmation) lorsque <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> est appelée, la valeur par défaut action ne peut pas être le même que lorsque ces clés ne sont pas activées. Les objets n'ont pas tous une action par défaut.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l’enfant accessible.</param>
        <summary>Récupère l’enfant accessible correspondant à l’index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l'enfant accessible correspondant à l'index spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> (méthode). Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Tous les objets accessibles doivent prendre en charge cette propriété. Si la méthode n’est pas substituée, elle retourne <see langword="null" />. Substituez cette méthode lorsqu’un objet accessible doit fournir des enfants accessibles personnalisés. Si l’index n’est pas valide, cette méthode doit retourner <see langword="null" />. Lorsque vous substituez cette méthode, vous devez également substituer <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le nombre d’enfants qui appartiennent à un objet accessible.</summary>
        <returns>Nombre d’enfants qui appartiennent à un objet accessible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Ce code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> (méthode). Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Tous les objets doivent prendre en charge cette propriété. L'implémentation par défaut retourne -1. Substituez cette méthode lorsqu’un objet accessible doit fournir des enfants accessibles personnalisés. Lorsque vous substituez cette méthode, vous devez également substituer <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère l’objet qui a le focus clavier.</summary>
        <returns>Un <see cref="T:System.Windows.Forms.AccessibleObject" /> qui spécifie l’enfant ayant actuellement le focus. Cette méthode retourne l’objet appelant si le focus de l’objet lui-même. Retourne <see langword="null" /> si aucun objet n’a le focus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le concept de focus clavier est lié à celle d’une fenêtre active. Une fenêtre active est la fenêtre de premier plan dans lequel l’utilisateur travaille. L’objet ayant le focus clavier est la fenêtre active ou un objet enfant de la fenêtre active.  
  
 Qu’un seul objet ou élément dans un conteneur peut avoir le focus à tout moment. L’objet ayant le focus clavier n’est pas nécessairement l’objet sélectionné.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Le contrôle ne peut pas être récupéré.</exception>
        <block subset="none" type="overrides"><para>Tous les objets qui peuvent recevoir le focus clavier doivent prendre en charge cette propriété.</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">En retour, cette propriété contient le chemin d’accès au fichier d’aide associé à cet objet accessible.</param>
        <summary>Obtient un identificateur pour un identificateur de rubrique d’aide et le chemin d’accès au fichier d’aide associé à cet objet accessible.</summary>
        <returns>Identificateur d’une rubrique d’aide, ou -1 s’il n’existe aucune rubrique d’aide. En retour, le <paramref name="fileName" /> paramètre contient le chemin d’accès au fichier d’aide associé à cet objet accessible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour afficher l’aide pour le <xref:System.Windows.Forms.AccessibleObject> à l’aide du système d’aide de Windows, vous pouvez passer l’ID de rubrique et le nom de fichier appropriés <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> méthode de <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">La rubrique d’aide pour le contrôle ne peut pas être récupérée.</exception>
        <block subset="none" type="overrides"><para>Pas tous les objets ont besoin prendre en charge cette propriété.</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère l’enfant actuellement sélectionné.</summary>
        <returns>Un <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l’enfant actuellement sélectionné. Cette méthode retourne l’objet appelant si l’objet lui-même est sélectionné. Retourne <see langword="null" /> si aucun enfant n’est actuellement sélectionné et l’objet lui-même n’a pas le focus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">L’enfant sélectionné ne peut pas être récupérée.</exception>
        <block subset="none" type="overrides"><para>Tous les objets qui peuvent être sélectionnés doivent prendre en charge cette propriété.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une description de ce que fait l’objet ou comment il est utilisé.</summary>
        <value>Un <see cref="T:System.String" /> qui contient la description de ce que fait l’objet ou comment il est utilisé. Retourne <see langword="null" /> si aucune aide n’est définie.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">La chaîne d’aide pour le contrôle ne peut pas être récupérée.</exception>
        <block subset="none" type="overrides"><para>Pas tous les objets ont besoin prendre en charge cette propriété. En règle générale, cette propriété contient des informations de style info-bulle qui sont utilisées pour décrire ce que fait l’objet ou comment l’utiliser. Par exemple, le <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> propriété pour un bouton de barre d’outils qui affiche une imprimante peut être « imprime le document en cours. » Le texte pour le <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> propriété ne doit pas être unique au sein de l’interface utilisateur. Serveurs n’ont pas besoin prendre en charge le <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> propriété si d’autres propriétés fournissent suffisamment d’informations sur l’objet de l’usage et les actions que l’objet peut effectuer.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée d'écran horizontale.</param>
        <param name="y">Coordonnée d'écran verticale.</param>
        <summary>Récupère l'objet enfant qui est situé aux coordonnées d'écran spécifiées.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l’objet enfant situé aux coordonnées d’écran spécifiées. Cette méthode retourne l'objet appelant si l'objet lui-même est à l'emplacement spécifié. Retourne <see langword="null" /> si aucun objet ne se trouve à l’emplacement testé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir des objets non rectangulaires tels que des éléments d’affichage de liste, les coordonnées de l’objet du rectangle englobant récupérée par <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> peut échouer si testé avec <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, car <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> détermine les limites de l’objet sur un pixel par pixel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Le contrôle ne peut pas être atteint testé.</exception>
        <block subset="none" type="overrides"><para>Tous les objets visuels doivent prendre en charge cette méthode ; objets son ne les prennent pas en charge.</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la touche de raccourci ou touche d’accès pour l’objet accessible.</summary>
        <value>Touche de raccourci ou touche d’accès pour l’objet accessible, ou <see langword="null" /> si il n’existe aucune touche de raccourci associée à l’objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une clé d’accès, également appelé un mnémonique, est un caractère souligné dans le texte de menu, d’élément de menu, d’un bouton ou d’un autre contrôle. Par exemple, un utilisateur peut afficher un menu en appuyant sur la touche ALT et sur la touche indiquée soulignée, tels que ALT + F pour ouvrir le `File` menu. Pour utiliser la clé d’accès d’un élément de menu, le menu contenant l’élément doit être actif. Les contrôles comme des boutons de barre d’outils et les éléments de menu ont souvent une touche de raccourci associé. Un élément de menu peut avoir une clé d’accès et une touche de raccourci associé. Si la valeur de la <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> propriété est un caractère unique, vous pouvez supposer qu’il est une clé d’accès.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Le raccourci pour le contrôle ne peut pas être récupéré.</exception>
        <block subset="none" type="overrides"><para>Tous les objets qui ont une touche de raccourci ou la clé d’accès doivent prendre en charge cette propriété.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'objet.</summary>
        <value>Le nom d’objet, ou <see langword="null" /> si la propriété n’a pas été définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.AccessibleObject.Name%2A> propriété est une chaîne utilisée par les clients pour identifier, rechercher ou annoncer un objet pour l’utilisateur. Pour accéder au nom d’un objet enfant, vous devez d’abord appeler <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> avec l’index de l’enfant dont vous récupérez le nom.  
  
   
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.Name%2A> propriété. Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Le nom du contrôle ne peut pas être récupéré ou défini.</exception>
        <block subset="none" type="overrides"><para>Tous les objets doivent prendre en charge cette propriété. Nom d’un objet doit être intuitif afin que les utilisateurs comprennent la signification ou l’objectif de l’objet. En outre, vérifiez que le <see langword="Name" /> propriété est unique parmi les objets frères dans le parent. Navigation dans les tables présente particulièrement difficile pour certains utilisateurs. Par conséquent, les développeurs de serveur établisse les noms de cellule de tableau aussi descriptifs que possible. Par exemple, vous pouvez créer un nom de la cellule en combinant les noms de la ligne et colonne qu’elle occupe, tels que « A1 ». Toutefois, il est généralement préférable d’utiliser des noms plus descriptifs, tels que « Karin, février. » Nombreux objets, tels que des icônes, les menus, les cases à cocher, les zones de liste déroulante et les autres contrôles, ont des étiquettes qui sont présentées aux utilisateurs. Toute étiquette affichée aux utilisateurs doit être utilisée pour l’objet <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> propriété. Pour plus d’informations, consultez le <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> propriété.  
  
Si vous utilisez le texte de menu ou un bouton pour le <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> propriété, retirer les signes &amp; (&amp;) qui marquent les clés d’accès clavier.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Une des valeurs de <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</param>
        <summary>Navigue vers un autre objet accessible.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente une des valeurs de <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Volet de navigation, spatial et logique, est toujours limité aux éléments d’interface utilisateur dans un conteneur. Avec la navigation spatiale, les clients peuvent naviguer uniquement vers un frère de l’objet de départ. En fonction de l’indicateur de navigation utilisé avec la navigation logique, les clients peuvent accéder à un enfant ou à un frère de l’objet de départ. Cette méthode ne modifie pas la sélection ou le focus. Pour modifier le focus ou sélectionner un objet, utilisez <xref:System.Windows.Forms.AccessibleObject.Select%2A>. Le <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> méthode récupère uniquement les éléments d’interface utilisateur qui ont un emplacement défini à l’écran.  
  
   
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Ce code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> (méthode). Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Échec de la tentative de navigation.</exception>
        <block subset="none" type="overrides"><para>Tous les objets visuels doivent prendre en charge cette méthode. Si un objet a l’état <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, la navigation vers cet objet masqué peut échouer. Certains éléments de l’interface définie par le système telles que les menus, les éléments de menu et les menus contextuels autorisent la navigation vers les objets qui ne sont pas visibles. Toutefois, autres éléments d’interface utilisateur définie par le système ne prennent pas en charge cela. Si possible, les serveurs doivent prendre en charge la navigation vers les objets qui ne sont pas visibles, mais cette prise en charge n’est pas nécessaire et les clients ne doivent pas attendre qu’il.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le parent d'un objet accessible.</summary>
        <value><see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente le parent d’un objet accessible, ou <see langword="null" /> s’il n’existe pas d’objet parent.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.Parent%2A> propriété. Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Tous les objets doivent prendre en charge cette propriété.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">Type de notification.</param>
        <param name="notificationProcessing">Indique comment traiter les notifications.</param>
        <param name="notificationText">Texte de la notification.</param>
        <summary>Déclenche l’événement de notification d’UI Automation.</summary>
        <returns><see langword="true" /> si l’opération aboutit ; <see langword="false" /> si l’infrastructure Windows sous-jacente n’est pas disponible ou si l’opération a échoué. Appelle <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> pour obtenir des informations.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Cet événement est disponible à partir de Windows 10, version 1709.
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Déclenche l’événement UI Automation LiveRegionChanged.</summary>
        <returns><see langword="true" /> si l’opération aboutit ; sinon, <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Cette méthode doit être substituée dans les classes dérivées qui prennent en charge la fonctionnalité de zone dynamique UI automation.
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Les zones dynamiques d’objet d’accessibilité ne sont pas prises en charge.</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le rôle de l'objet accessible.</summary>
        <value>Une des valeurs <see cref="T:System.Windows.Forms.AccessibleRole" />, ou <see cref="F:System.Windows.Forms.AccessibleRole.None" /> si aucun rôle n'a été spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le rôle de l’objet permet de décrire la fonction de l’objet.  
  
   
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.Role%2A> propriété. Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Tous les objets doivent prendre en charge cette propriété.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Une des valeurs de <see cref="T:System.Windows.Forms.AccessibleSelection" />.</param>
        <summary>Modifie la sélection ou déplace le focus clavier de l’objet accessible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Applications peuvent utiliser cette méthode pour effectuer des opérations de sélection complexes.  
  
 La section suivante décrit ce qui <xref:System.Windows.Forms.AccessibleSelection> valeurs à spécifier lors de l’appel <xref:System.Windows.Forms.AccessibleObject.Select%2A> pour effectuer des opérations de sélection complexes.  
  
|Opération|Combinaison d’indicateurs|  
|---------------|----------------------|  
|Pour simuler un clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Remarque :**  Cette combinaison ne sélectionne pas le contrôle souhaité si appelée à partir de votre propre application. Il permet d’obtenir l’effet souhaité, mais, si elle est appelée à partir d’une application externe.|  
|Pour sélectionner un élément cible en simulant CTRL + clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Pour annuler la sélection d’un élément cible en simulant CTRL + clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Pour simuler MAJ + clic|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Pour sélectionner une plage d’objets et placez le focus sur le dernier objet|Spécifiez <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> sur l’objet de départ pour définir l’ancre de sélection. Appelez ensuite <xref:System.Windows.Forms.AccessibleObject.Select%2A> à nouveau et spécifiez <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> sur le dernier objet.|  
|Pour désélectionner tous les objets|Spécifiez <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> sur n’importe quel objet. Cet indicateur désélectionne tous les objets sélectionnés à l’exception de celui sélectionné uniquement. Appelez ensuite <xref:System.Windows.Forms.AccessibleObject.Select%2A> à nouveau et spécifiez <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> sur le même objet.|  
  
   
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Ce code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.Select%2A> (méthode). Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">La sélection ne peut pas être effectuée.</exception>
        <block subset="none" type="overrides"><para>Tous les objets qui peuvent être sélectionnés ou recevoir le focus clavier doivent prendre en charge cette méthode.</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’état de l’objet accessible.</summary>
        <value>Parmi les <see cref="T:System.Windows.Forms.AccessibleStates" /> valeurs, ou <see cref="F:System.Windows.Forms.AccessibleStates.None" />, si aucun état n’a pas été défini.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles. Le contrôle trace deux courbes avec une légende. Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart. Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle chart, il n’a pas d’informations accessibles intégrées. Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende. Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.  
  
 Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.AccessibleObject.State%2A> propriété. Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Tous les objets doivent prendre en charge cette propriété.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Le nom du champ à trouver.</param>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient le <see cref="T:System.Reflection.FieldInfo" /> de l’objet correspondant dans le champ spécifié et l’indicateur de liaison. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Un <see cref="T:System.Reflection.FieldInfo" /> objet contenant les informations de champ pour l’objet nommé correspondant aux contraintes de recherche spécifiées dans <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">L’objet implémente plusieurs champs portant le même nom.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient un tableau de <see cref="T:System.Reflection.FieldInfo" /> objets correspondant à tous les champs de la classe actuelle. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
        <returns>Un tableau de <see cref="T:System.Reflection.FieldInfo" /> contenant toutes les informations de champ pour cet objet réflexion correspondant aux contraintes de recherche spécifiées dans des objets <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque champ doit avoir un nom unique. Le <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> indicateur spécifie que les champs non publics sont inclus dans la recherche. Le <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> indicateur spécifie que les champs publics sont inclus dans la recherche.  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Le nom du membre à rechercher.</param>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient un tableau de <see cref="T:System.Reflection.MemberInfo" /> objets correspondant à tous les membres publics ou à tous les membres qui correspondent à un nom spécifié. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Un tableau de <see cref="T:System.Reflection.MemberInfo" /> objets correspond au paramètre name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient un tableau de <see cref="T:System.Reflection.MemberInfo" /> objets correspondant à tous les membres publics ou à tous les membres de la classe actuelle. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
        <returns>Un tableau de <see cref="T:System.Reflection.MemberInfo" /> objets contenant toutes les informations de membre pour cet objet réflexion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Le nom du membre à rechercher.</param>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient un <see cref="T:System.Reflection.MethodInfo" /> objet correspondant à une méthode spécifiée avec spécifié les contraintes de recherche. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Un <see cref="T:System.Reflection.MethodInfo" /> objet contenant les informations de méthode, en sélectionnant la correspondance étant basée sur les contraintes de méthode recherche et le nom spécifiés dans <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">L’objet implémente plusieurs méthodes portant le même nom.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Le nom du membre à rechercher.</param>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <param name="binder">Objet qui implémente <see cref="T:System.Reflection.Binder" />, contenant les propriétés associées à cette méthode.</param>
        <param name="types">Tableau utilisé pour choisir parmi les méthodes surchargées.</param>
        <param name="modifiers">Tableau de modificateurs de paramètres utilisé pour que la liaison fonctionne avec des signatures de paramètres dans lesquelles les types ont été modifiés.</param>
        <summary>Obtient un <see cref="T:System.Reflection.MethodInfo" /> objet correspondant à une méthode spécifiée, à l’aide d’un tableau de Type à choisir à partir de méthodes surchargées. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>La méthode demandée correspondant à tous les paramètres spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de retour est une correspondance basée sur le nom de la méthode, le <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> énumération, le type de conversion de type spécifiée par le `binder` paramètre, la surcharge et le <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> qui décrit la signature de la méthode.  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">L’objet implémente plusieurs méthodes portant le même nom.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient un tableau de <see cref="T:System.Reflection.MethodInfo" /> objets avec toutes les méthodes publiques ou toutes les méthodes de la classe actuelle. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
        <returns>Un tableau de <see cref="T:System.Reflection.MethodInfo" /> contenant toutes les méthodes définies pour cet objet réflexion qui répondent aux contraintes de recherche spécifiées dans des objets <see langword="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">L’attribut de liaison utilisé pour contrôler la recherche.</param>
        <summary>Obtient un tableau de <see cref="T:System.Reflection.PropertyInfo" /> objets correspondant à toutes les propriétés publiques ou à toutes les propriétés de la classe actuelle. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
        <returns>Un tableau de <see cref="T:System.Reflection.PropertyInfo" /> objets pour toutes les propriétés définies sur l’objet réflexion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nom de la propriété à rechercher.</param>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <summary>Obtient un <see cref="T:System.Reflection.PropertyInfo" /> objet correspondant à une propriété spécifiée sous spécifié les contraintes de recherche. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Un <see cref="T:System.Reflection.PropertyInfo" /> objet pour la propriété trouvée correspondant aux contraintes de recherche spécifiées dans <paramref name="bindingAttr" />, ou <see langword="null" /> si la propriété est introuvable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">L’objet implémente plusieurs méthodes portant le même nom.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Le nom du membre à rechercher.</param>
        <param name="bindingAttr">Les attributs de liaison utilisés pour contrôler la recherche.</param>
        <param name="binder">Objet qui implémente Binder, contenant les propriétés associées à cette méthode.</param>
        <param name="returnType">Tableau utilisé pour choisir parmi les méthodes surchargées.</param>
        <param name="types">Tableau de modificateurs de paramètres utilisé pour que la liaison fonctionne avec des signatures de paramètres dans lesquelles les types ont été modifiés.</param>
        <param name="modifiers">Tableau utilisé pour choisir les modificateurs de paramètre.</param>
        <summary>Obtient un <see cref="T:System.Reflection.PropertyInfo" /> objet correspondant à une propriété spécifiée avec spécifié les contraintes de recherche. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Un <see cref="T:System.Reflection.PropertyInfo" /> objet pour la propriété trouvée si une propriété portant le nom spécifié était située dans cet objet réflexion, ou <see langword="null" /> si la propriété est introuvable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Le nom du membre à rechercher.</param>
        <param name="invokeAttr">Parmi les <see cref="T:System.Reflection.BindingFlags" /> attributs d’appel.</param>
        <param name="binder">Parmi les <see cref="T:System.Reflection.BindingFlags" /> indicateurs binaires. Implémente Binder, contenant les propriétés associées à cette méthode.</param>
        <param name="target">Objet sur lequel appeler le membre spécifié. Ce paramètre est ignoré pour les membres statiques.</param>
        <param name="args">Tableau d’objets qui contient le nombre, l’ordre et le type des paramètres du membre à appeler. Il s’agit d’un tableau vide si aucun paramètre.</param>
        <param name="modifiers">Tableau d'objets <see cref="T:System.Reflection.ParameterModifier" />.</param>
        <param name="culture">Instance de <see cref="T:System.Globalization.CultureInfo" /> utilisée pour régir la contrainte des types.</param>
        <param name="namedParameters">Tableau de chaînes de paramètres.</param>
        <summary>Appelle un membre spécifié. Pour obtenir une description de ce membre, consultez <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
        <returns>Le membre spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `invokeAttr` paramètre peut être un constructeur, méthode, propriété ou le champ. Un attribut d’appel approprié doit être spécifié. Appeler le membre par défaut d’une classe en passant une chaîne vide (« ») en tant que le nom du membre.  
  
 Le `modifiers` paramètre a la même longueur que le `args` paramètre, représentant les attributs d’argument du membre appelé dans les métadonnées. Un paramètre peut avoir les attributs suivants : pdIn, pdOut, pdRetval, pdOptional et pdHasDefault. Ceux-ci représentent [In], [Out], [retval], [optional] et un paramètre par défaut, respectivement.  
  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" /> est <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> et un autre indicateur binaire est également défini.

-ou- <paramref name="invokeAttr" /> n’est pas <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> et le nom est <see langword="null" />.

ou

<paramref name="invokeAttr" /> n’est pas un attribut d’appel de <see cref="T:System.Reflection.BindingFlags" />.

ou

<paramref name="invokeAttr" /> Spécifie à la fois get et set pour une propriété ou un champ.

ou

<paramref name="invokeAttr" /> spécifie à la fois un jeu de champs et une méthode Invoke.<paramref name="args" /> est fourni pour une opération d’extraction de champ.

ou

Plus d’un argument est spécifié pour une opération de définition de champ.</exception>
        <exception cref="T:System.MissingFieldException">Le champ ou la propriété est introuvable.</exception>
        <exception cref="T:System.MissingMethodException">Impossible de trouver la méthode.</exception>
        <exception cref="T:System.Security.SecurityException">Un membre privé est appelé sans nécessaires <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type sous-jacent qui représente le <see cref="T:System.Reflection.IReflect" /> objet. Pour obtenir une description de ce membre, consultez <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
        <value>Le type sous-jacent qui représente le <see cref="T:System.Reflection.IReflect" /> objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.AccessibleObject> est castée en interface <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Associe un objet à une instance d’un <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Un <see cref="T:System.IntPtr" /> qui contient le handle de l’objet.</param>
        <summary>Associe un objet à une instance d’un <see cref="T:System.Windows.Forms.AccessibleObject" /> basé sur le handle de l’objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Applications de serveur peuvent appeler cette fonction lorsqu’ils contiennent un objet d’interface utilisateur personnalisé qui est similaire à un objet fourni par le système. Applications serveur appellent `CreateStdAccessibleObject` et remplacer le <xref:Accessibility.IAccessible> méthodes et propriétés en fonction des besoins pour correspondre à leur objet personnalisé. Cette approche évite aux développeurs de serveur de l’implémentation complète de tous les <xref:Accessibility.IAccessible> propriétés et méthodes. Cette fonction est similaire à `CreateStdAccessibleProxy`, sauf que `CreateStdAccessibleProxy` vous permet de spécifier le nom de classe en tant que paramètre, tandis que `CreateStdAccessibleObject` utilise le nom de classe associé à la `hwnd`.  
  
 Appel à cette version de la `UseStdAccessible` est identique à l’appel de la version de deux paramètres avec un objet ID de CLIENT.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">Un <see cref="T:System.IntPtr" /> qui contient le handle de l’objet.</param>
        <param name="objid">Int qui définit le type d’objet auquel le <paramref name="handle" /> paramètre fait référence à.</param>
        <summary>Associe un objet à une instance d’un <see cref="T:System.Windows.Forms.AccessibleObject" /> basé sur le handle et l’id d’objet de l’objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crée un objet accessible avec les méthodes et propriétés pour le type spécifié de l’élément d’interface utilisateur fournie par le système.  
  
 Applications de serveur peuvent appeler cette fonction lorsqu’ils contiennent un objet d’interface utilisateur personnalisé qui est similaire à un objet fourni par le système. Applications serveur appellent `CreateStdAccessibleObject` et remplacer le <xref:Accessibility.IAccessible> méthodes et propriétés en fonction des besoins pour correspondre à leur objet personnalisé. Cette approche évite aux développeurs de serveur de l’implémentation complète de tous les <xref:Accessibility.IAccessible> propriétés et méthodes.  
  
 Valeurs `objid` valides.  
  
|Object|Value|Description|  
|------------|-----------|-----------------|  
|ALERTE|0xFFFFFFF6|Fait référence à un message associé à une fenêtre ou d’une application.|  
|SIGNE INSERTION|0xFFFFFFF8|Fait référence à l’insertion de texte de la barre (accent circonflexe) dans la fenêtre.|  
|DOMAINE DE|0xFFFFFFFC|Fait référence à la zone cliente de la fenêtre. Dans la plupart des cas, le système d’exploitation contrôle les éléments de frame, et l’objet client contienne tous les éléments qui contrôle l’application.|  
|CURSEUR|0xFFFFFFF7|Fait référence au pointeur de la souris. Il est uniquement un pointeur de la souris dans le système et il n’est pas un enfant d’une fenêtre.|  
|HSCROLL|0xFFFFFFFA|Fait référence à la barre de défilement horizontale de la fenêtre.|  
|MENU|0xFFFFFFFD|Fait référence à la barre de menus de la fenêtre.|  
|SIZEGRIP|0xFFFFFFF9|Fait référence à une poignée de dimensionnement de la fenêtre, un composant de frame facultatif situé dans le coin inférieur droit du frame de fenêtre.|  
|SIGNAL SONORE|0xFFFFFFF5|Fait référence à un objet « sound ». Objets son n’ont pas d’enfants ou des emplacements de l’écran, mais ont les attributs de nom et d’état. Ils sont des enfants de l’application de lecture du son.|  
|SYSMENU|0xFFFFFFFF|Fait référence à un menu de système de la fenêtre.|  
|BARRE DE TITRE|0xFFFFFFFE|Fait référence à la barre de titre de la fenêtre.|  
|VSCROLL|0xFFFFFFFB|Fait référence à la barre de défilement verticale de la fenêtre.|  
|FENÊTRE|0x00000000|Fait référence à la fenêtre elle-même plutôt qu’à un objet enfant.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur d’un objet accessible.</summary>
        <value>Valeur d’un objet accessible, ou <see langword="null" /> si aucune valeur n’est définie pour l’objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, le <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriété représente des informations visuelles contenues dans l’objet. Pas tous les objets prennent en charge le <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriété.  
  
 Dans la plupart des cas, le <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriété est utilisée pour indiquer au client les informations visuelles qu’un objet contient. Par exemple, la valeur pour un contrôle d’édition est le texte qu’il contient, mais un élément de menu n’a aucune valeur.  
  
 Le <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriété peut fournir des informations hiérarchiques dans le cas par exemple, un contrôle arborescence. Bien que l’objet parent dans le contrôle arborescence ne fournit pas les informations contenues dans le <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriété, chaque élément dans le contrôle a une valeur de base zéro qui représente son niveau dans la hiérarchie. Éléments de niveau supérieur ont une valeur égale à zéro, les éléments de second niveau ont une valeur d’un et ainsi de suite.  
  
> [!NOTE]
>  Les valeurs retournées à partir de la barre de suivi et de la barre de défilement accessible objets représentent des pourcentages, afin qu’ils soient des entiers compris entre 0 et 100 (inclus).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">La valeur ne peut pas être définie ou récupérée.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>