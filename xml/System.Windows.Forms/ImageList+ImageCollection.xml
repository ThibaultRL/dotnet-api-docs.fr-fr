<Type Name="ImageList+ImageCollection" FullName="System.Windows.Forms.ImageList+ImageCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bea9d15251eac7cd3b62ef38775012731ea78ba" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015611" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImageList.ImageCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ImageList/ImageCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageList.ImageCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageList.ImageCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ImageList::ImageCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ImageList.ImageCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsule la collection d’objets <see cref="T:System.Drawing.Image" /> dans un <see cref="T:System.Windows.Forms.ImageList" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela permet de gérer les images dans le <xref:System.Windows.Forms.ImageList> par programme, en fournissant des méthodes pour ajouter et supprimer des objets d’image.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment sélectionner, supprimer et afficher des images, à partir de la <xref:System.Windows.Forms.ImageList.Images%2A> propriété de la <xref:System.Windows.Forms.ImageList> (classe), qui est un <xref:System.Windows.Forms.ImageList.ImageCollection> type.  
  
 [!code-cpp[Classic ImageList Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ImageList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ImageList Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ImageList Example/CS/source.cs#1)]
 [!code-vb[Classic ImageList Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ImageList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute l'objet spécifié à <see cref="T:System.Windows.Forms.ImageList" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Drawing.Icon value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Drawing.Icon value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.Drawing.Icon)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As Icon)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Drawing::Icon ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Drawing.Icon -&gt; unit" Usage="imageCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="value">Un <see cref="T:System.Drawing.Icon" /> à ajouter à la liste.</param>
        <summary>Ajoute l’icône spécifiée à la <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Drawing.Icon> est converti en un <xref:System.Drawing.Bitmap> avant d’être ajouté à la liste.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la construction un <xref:System.Windows.Forms.ImageList.%23ctor%2A>, ajout d’images à le <xref:System.Windows.Forms.ImageList.Images%2A> paramètre de propriété, le <xref:System.Windows.Forms.ImageList.ImageSize%2A> propriété et à l’aide de la <xref:System.Windows.Forms.ImageList.Draw%2A> (méthode). Pour exécuter cet exemple, placez-le dans un formulaire qui contient un bouton nommé `Button1`. L’exemple suppose l’existence de FeatherTexture.bmp et Gone Fishing.bmp dans c:\Windows\\. Modifier l’exemple en conséquence si les bitmaps de ne pas exister sur votre système ou se trouver à un autre emplacement.  
  
 [!code-cpp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.HelpProviderAndImageListExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpProviderAndImageListExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.  
  
ou 
valeur n’est pas un <see cref="T:System.Drawing.Icon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Drawing.Image value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Drawing.Image value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Drawing::Image ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Drawing.Image -&gt; unit" Usage="imageCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="value">Un <see cref="T:System.Drawing.Bitmap" /> de l’image à ajouter à la liste.</param>
        <summary>Ajoute l’image spécifiée à la <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">L’image ajoutée est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">L’image ajoutée n’est pas un <see cref="T:System.Drawing.Bitmap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Drawing.Image value, System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Drawing.Image value, valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.Drawing.Image,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As Image, transparentColor As Color) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Drawing::Image ^ value, System::Drawing::Color transparentColor);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Drawing.Image * System.Drawing.Color -&gt; int" Usage="imageCollection.Add (value, transparentColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Image" />
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="value">Un <see cref="T:System.Drawing.Bitmap" /> de l’image à ajouter à la liste.</param>
        <param name="transparentColor">Le <see cref="T:System.Drawing.Color" /> pour masquer cette image.</param>
        <summary>Ajoute l’image spécifiée à la <see cref="T:System.Windows.Forms.ImageList" />, à l’aide de la couleur spécifiée pour générer le masque.</summary>
        <returns>Index de la nouvelle image ajoutée ou -1 si l’image ne peut pas être ajouté.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">L’image ajoutée est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">L’image ajoutée n’est pas un <see cref="T:System.Drawing.Bitmap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, System.Drawing.Icon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, class System.Drawing.Icon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.String,System.Drawing.Icon)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::Drawing::Icon ^ icon);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Drawing.Icon -&gt; unit" Usage="imageCollection.Add (key, icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="icon" Type="System.Drawing.Icon" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Le nom de l’icône.</param>
        <param name="icon">Objet <see cref="T:System.Drawing.Icon" /> à ajouter à la collection.</param>
        <summary>Ajoute une icône avec la clé spécifiée à la fin de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une image correspond à sa clé dans le <xref:System.Windows.Forms.ImageList.ImageCollection>. Une clé d’image ne respecte pas la casse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="icon" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Add(System.String,System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Drawing.Image -&gt; unit" Usage="imageCollection.Add (key, image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="image" Type="System.Drawing.Image" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Le nom de l’image.</param>
        <param name="image">Objet <see cref="T:System.Drawing.Image" /> à ajouter à la collection.</param>
        <summary>Ajoute une image avec la clé spécifiée à la fin de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une image correspond à sa clé dans le <xref:System.Windows.Forms.ImageList.ImageCollection>. Une clé d’image ne respecte pas la casse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Drawing.Image[] images);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Drawing.Image[] images) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.AddRange(System.Drawing.Image[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (images As Image())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Drawing::Image ^&gt; ^ images);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Drawing.Image[] -&gt; unit" Usage="imageCollection.AddRange images" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="images" Type="System.Drawing.Image[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="images">Le tableau de <see cref="T:System.Drawing.Image" /> objets à ajouter à la collection.</param>
        <summary>Ajoute un tableau d’images à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Windows.Forms.ImageList.ImageCollection> pour ajouter plusieurs images à la collection. Pour ajouter un seul élément, utilisez une de la <xref:System.Windows.Forms.ImageList.ImageCollection.Add%2A> méthodes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="images" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddStrip">
      <MemberSignature Language="C#" Value="public int AddStrip (System.Drawing.Image value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddStrip(class System.Drawing.Image value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.AddStrip(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddStrip (value As Image) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddStrip(System::Drawing::Image ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddStrip : System.Drawing.Image -&gt; int" Usage="imageCollection.AddStrip value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="value">Un <see cref="T:System.Drawing.Bitmap" /> avec les images à ajouter.</param>
        <summary>Ajoute une bande d’image pour l’image spécifiée à la <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <returns>Index de la nouvelle image ajoutée ou -1 si l’image ne peut pas être ajouté.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nombre d’images à ajouter est déduit à partir de la largeur de l’image donnée.  
  
 Une bande est une image unique qui est traitée comme plusieurs images organisées côte à côte.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser <xref:System.Windows.Forms.ImageList.ImageCollection.AddStrip%2A>. Pour exécuter cet exemple, collez le code suivant dans un formulaire Windows qui contient un <xref:System.Windows.Forms.ImageList> nommé `imageList1` et un bouton et un appel de la `AddStripToCollection` méthode dans cet exemple, lors de la gestion du bouton <xref:System.Windows.Forms.Control.Click> événement.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L’image ajoutée est <see langword="null" />.  
  
ou 
L’image ajoutée n’est pas un <see cref="T:System.Drawing.Bitmap" />.</exception>
        <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’image.  
  
ou 
La largeur de bande d’image ajoutée est 0, ou la largeur n’est pas égale à la largeur d’image existant.  
  
ou 
La hauteur de la bande image n’est pas égale à la hauteur de l’image existante.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="imageCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les images et les masques de la <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ImageList.ImageCollection.Remove(System.Drawing.Image)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Contains(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Drawing.Image -&gt; bool" Usage="imageCollection.Contains image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Le <see cref="T:System.Drawing.Image" /> à rechercher dans la liste.</param>
        <summary>Non pris en charge. Le <see cref="M:System.Collections.IList.Contains(System.Object)" /> méthode indique si un objet spécifié est contenu dans la liste.</summary>
        <returns><see langword="true" /> Si l’image se trouve dans la liste ; Sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation de la <xref:System.Windows.Forms.ImageList.ImageCollection.Contains%2A> méthode lève un <xref:System.NotSupportedException> exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge.</exception>
        <altmember cref="M:System.Windows.Forms.ImageList.ImageCollection.IndexOf(System.Drawing.Image)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.ContainsKey : string -&gt; bool" Usage="imageCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">La clé de l’image à rechercher.</param>
        <summary>Détermine si la collection contient une image avec la clé spécifiée.</summary>
        <returns><see langword="true" /> pour indiquer une image avec la clé spécifiée est contenue dans la collection ; Sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une image correspond à sa clé. La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, le <xref:System.Windows.Forms.ImageList.ImageCollection.ContainsKey%2A> retourne de la méthode `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ImageList.ImageCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d’images actuellement dans la liste.</summary>
        <value>Le nombre d’images dans la liste. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Décompte d’images force la <xref:System.Windows.Forms.ImageList.Handle%2A> doit être créé.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ImageList.HandleCreated" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public bool Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Empty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Empty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : bool" Usage="System.Windows.Forms.ImageList.ImageCollection.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le <see cref="T:System.Windows.Forms.ImageList" /> possède des images.</summary>
        <value><see langword="true" /> s’il en existe aucune image dans la liste ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez vérifier cette propriété sans forcer la création d’un <xref:System.Windows.Forms.ImageList.Handle%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="imageCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut être utilisé pour itérer la collection d’éléments.</summary>
        <returns>Un <see cref="T:System.Collections.IEnumerator" /> qui représente la collection d’éléments.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.IndexOf(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Drawing.Image -&gt; int" Usage="imageCollection.IndexOf image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Le <see cref="T:System.Drawing.Image" /> à rechercher dans la liste.</param>
        <summary>Non pris en charge. Le <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> méthode retourne l’index d’un objet spécifié dans la liste.</summary>
        <returns>L’index de l’image dans la liste.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation de <xref:System.Windows.Forms.ImageList.ImageCollection.IndexOf%2A> lève un <xref:System.NotSupportedException> exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IndexOfKey : string -&gt; int" Usage="imageCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">La clé de l’image à récupérer l’index.</param>
        <summary>Détermine l’index de la première occurrence d’une image avec la clé spécifiée dans la collection.</summary>
        <returns>Index de base zéro de la première occurrence d’une image avec la clé spécifiée dans la collection, si trouvé ; Sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Forms.ImageList.ImageCollection.IndexOfKey%2A> est appelé plusieurs fois, la dernière retournée index est une correspondance de clés d’abord vérifiée, et si aucune correspondance n’est, la recherche commence au début de la collection.  
  
 Le nom d’une image correspond à sa clé dans le <xref:System.Windows.Forms.ImageList.ImageCollection>. La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, le <xref:System.Windows.Forms.ImageList.ImageCollection.IndexOfKey%2A> méthode retourne -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ImageList.ImageCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la liste est en lecture seule.</summary>
        <value>Toujours <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit un <see cref="T:System.Drawing.Image" /> dans une existante <see cref="T:System.Windows.Forms.ImageList" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Drawing.Image this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ default[int] { System::Drawing::Image ^ get(int index); void set(int index, System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ImageList.ImageCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">L’index de l’image à obtenir ou définir.</param>
        <summary>Obtient ou définit un <see cref="T:System.Drawing.Image" /> à l’index spécifié dans la collection.</summary>
        <value>L’image dans la liste spécifiée par <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La bitmap retournée est une copie de l’image d’origine et doivent être supprimée à l’aide de la <xref:System.Drawing.Image.Dispose%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L’index est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="image" /> n’est pas un <see cref="T:System.Drawing.Bitmap" />.</exception>
        <exception cref="T:System.ArgumentNullException">L’image à assigner est <see langword="null" /> ou non un <see cref="T:System.Drawing.Bitmap" />.</exception>
        <exception cref="T:System.InvalidOperationException">L’image ne peut pas être ajouté à la liste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Drawing.Image this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ default[System::String ^] { System::Drawing::Image ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Drawing.Image" Usage="System.Windows.Forms.ImageList.ImageCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Le nom de l’image à récupérer de la collection.</param>
        <summary>Obtient un <see cref="T:System.Drawing.Image" /> avec la clé spécifiée de la collection.</summary>
        <value><see cref="T:System.Drawing.Image" /> avec la clé spécifiée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une image correspond à sa clé dans le <xref:System.Windows.Forms.ImageList.ImageCollection>. La comparaison de clé ne respecte pas la casse.  
  
 Si une image avec la clé spécifiée est introuvable, la valeur de la <xref:System.Windows.Forms.ImageList.ImageCollection.Item%2A> propriété est `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ Keys { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.ImageList.ImageCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de clés associée aux images dans le <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</summary>
        <value>Un <see cref="T:System.Collections.Specialized.StringCollection" /> contenant les noms des images dans le <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une image correspond à sa clé, et une clé d’image ne respecte pas la casse.  
  
 Si aucun des images contenues dans le <xref:System.Windows.Forms.ImageList.ImageCollection> ont des clés, <xref:System.Windows.Forms.ImageList.ImageCollection.Keys%2A> retourne un vide <xref:System.Collections.Specialized.StringCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.Remove(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Drawing.Image -&gt; unit" Usage="imageCollection.Remove image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Le <see cref="T:System.Drawing.Image" /> à supprimer de la liste.</param>
        <summary>Non pris en charge. Le <see cref="M:System.Collections.IList.Remove(System.Object)" /> méthode supprime un objet spécifié dans la liste.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation de <xref:System.Windows.Forms.ImageList.ImageCollection.Remove%2A> lève un <xref:System.NotSupportedException> exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge.</exception>
        <altmember cref="M:System.Windows.Forms.ImageList.ImageCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ImageList.ImageCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="imageCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de l’image à supprimer.</param>
        <summary>Supprime une image de la liste.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">L’image ne peut pas être supprimé.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur d’index était inférieure à 0.  
  
ou 
La valeur d’index est supérieur ou égal à la <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" /> d’images.</exception>
        <altmember cref="M:System.Windows.Forms.ImageList.ImageCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ImageList.ImageCollection.Remove(System.Drawing.Image)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.RemoveByKey : string -&gt; unit" Usage="imageCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">La clé de l’image à supprimer de la collection.</param>
        <summary>Supprime l’image avec la clé spécifiée de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison de clé ne respecte pas la casse. Le nom d’une image correspond à sa clé dans le <xref:System.Windows.Forms.ImageList.ImageCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyName">
      <MemberSignature Language="C#" Value="public void SetKeyName (int index, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetKeyName(int32 index, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.SetKeyName(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetKeyName (index As Integer, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetKeyName(int index, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetKeyName : int * string -&gt; unit" Usage="imageCollection.SetKeyName (index, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro d’une image dans la collection.</param>
        <param name="name">Le nom de l’image à définir comme clé d’image.</param>
        <summary>Définit la clé pour une image dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom d’une image correspond à sa clé dans le <xref:System.Windows.Forms.ImageList.ImageCollection>. Une clé d’image ne respecte pas la casse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">L’index spécifié est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Unidimensionnel <see cref="T:System.Array" /> qui constitue la destination des éléments copiés à partir de la collection. Ce tableau doit avoir une indexation de base zéro.</param>
        <param name="index">Index de base zéro dans le <see cref="T:System.Array" /> à partir duquel la copie commence.</param>
        <summary>Copie les éléments de cette collection dans un tableau unidimensionnel compatible, en commençant à l’index spécifié du tableau cible.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dest" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à 0.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dest" /> est multidimensionnel.  
  
ou 
Le nombre d’éléments dans le <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> est supérieure à la quantité d’espace disponible entre <paramref name="index" /> à la fin du tableau de destination.</exception>
        <exception cref="T:System.InvalidCastException">Le type de la <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" /> ne peut pas être casté automatiquement au type du tableau de destination.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
        <value>L’objet utilisé pour synchroniser le <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">L’image à ajouter à la liste.</param>
        <summary>Ajoute l’image spécifiée à la <see cref="T:System.Windows.Forms.ImageList" />.</summary>
        <returns>Index de la nouvelle image ajoutée ou -1 si l’image n’a pas pu être ajouté.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> n’est pas un <see cref="T:System.Drawing.Bitmap" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object image);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (image As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ image) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="image">L’image à rechercher dans le <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</param>
        <summary>Implémente la méthode <see cref="M:System.Collections.IList.Contains(System.Object)" />. Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <exception cref="T:System.NotSupportedException">Dans tous les cas.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object image);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (image As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ image) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="image">L’image à rechercher dans la liste.</param>
        <summary>Implémente la méthode <see cref="M:System.Collections.IList.IndexOf(System.Object)" />. Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <exception cref="T:System.NotSupportedException">Dans tous les cas.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
        <param name="value">Objet à insérer dans la collection.</param>
        <summary>Implémente la méthode <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />. Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour ajouter un élément à la <xref:System.Windows.Forms.ImageList.ImageCollection>, utilisez le <xref:System.Windows.Forms.ImageList.ImageCollection.Add%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Dans tous les cas.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.ImageList.ImageCollection" /> est de taille fixe.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l’image à obtenir ou définir.</param>
        <summary>Obtient ou définit une image dans une existante <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</summary>
        <value>L’image dans la liste spécifiée par l’index.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">L’index est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Windows.Forms.ImageList.ImageCollection.Count" />.</exception>
        <exception cref="T:System.Exception">Échec de la tentative de remplacer l’image.</exception>
        <exception cref="T:System.ArgumentNullException">L’image à assigner est <see langword="null" /> ou pas d’une image bitmap.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object image);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageList.ImageCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (image As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ image) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="image">Objet à ajouter à <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />.</param>
        <summary>Implémente la tâche <see cref="M:System.Collections.IList.Remove(System.Object)" />. Lève une exception <see cref="T:System.NotSupportedException" /> dans tous les cas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas modifier la <xref:System.Windows.Forms.ImageList.ImageCollection> classe directement. Pour supprimer un élément de la <xref:System.Windows.Forms.ImageList.ImageCollection>, utilisez le <xref:System.Windows.Forms.ImageList.ImageCollection.RemoveAt%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Dans tous les cas.</exception>
      </Docs>
    </Member>
  </Members>
</Type>