<Type Name="WebBrowser" FullName="System.Windows.Forms.WebBrowser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a3b9a79dc89d135417f19ee0952773777dc577b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004827" /></Metadata><TypeSignature Language="C#" Value="public class WebBrowser : System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBrowser extends System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBrowser&#xA;Inherits WebBrowserBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser : System::Windows::Forms::WebBrowserBase" />
  <TypeSignature Language="F#" Value="type WebBrowser = class&#xA;    inherit WebBrowserBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("DocumentCompleted")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Url")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Autorise l’utilisateur à parcourir des pages web dans votre formulaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle vous permet d’héberger des pages Web et autres documents compatibles avec les navigateurs dans vos applications Windows Forms. Vous pouvez utiliser le <xref:System.Windows.Forms.WebBrowser> contrôler, par exemple, pour fournir une assistance utilisateur HTML intégrée ou Web les fonctionnalités de navigation dans votre application. En outre, vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser> contrôle à ajouter vos contrôles Web existants à vos applications clientes Windows Forms.  
  
> [!IMPORTANT]
>  Le <xref:System.Windows.Forms.WebBrowser> contrôle consomme beaucoup de ressources. Veillez à appeler la <xref:System.ComponentModel.Component.Dispose> méthode lorsque vous avez terminé d’utiliser le contrôle pour vous assurer que toutes les ressources sont libérées en temps voulu. Vous devez appeler la <xref:System.ComponentModel.Component.Dispose> méthode sur le même thread qui joint les événements, qui doivent toujours être le message ou le thread d’interface utilisateur (IU).  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle ne peut pas être utilisé par du code partiellement fiable. Pour plus d’informations, consultez [à l’aide de bibliothèques à partir de Code de confiance partielle](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle possède plusieurs propriétés, méthodes et événements liés à la navigation. Les membres suivants vous permettent de naviguer le contrôle vers une URL spécifique, déplacer vers le haut et les transférer dans l’historique de navigation et charger la page d’accueil et page de recherche de l’utilisateur actuel :  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Si le volet de navigation n’aboutit pas, une page indiquant le problème s’affiche. Navigation avec chacun de ces membres déclenche le <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, et <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événements se produisent à différents stades de navigation.  
  
 Ces événements et autres membres, tels que le <xref:System.Windows.Forms.WebBrowser.Stop%2A> et <xref:System.Windows.Forms.WebBrowser.Refresh%2A> les méthodes, vous permettent d’implémenter des contrôles d’interface utilisateur dans votre application similaire à ceux dans Internet Explorer. Certains membres sont utiles même lorsque vous ne souhaitez pas afficher le <xref:System.Windows.Forms.WebBrowser> contrôle sur votre formulaire. Par exemple, vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.Print%2A> méthode pour imprimer la dernière version d’une page Web sans afficher la page à l’utilisateur.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle vous permet également d’afficher le contenu que vous créez dans votre application ou récupérez à partir d’un base de données ou fichier de ressources. Utilisez le <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> ou <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriété à obtenir ou définir le contenu du document actif en tant que données de chaîne ou flux.  
  
 Vous pouvez également manipuler le contenu d’une page Web via le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété, qui contient un <xref:System.Windows.Forms.HtmlDocument> objet qui fournit l’accès managé pour le modèle objet de document HTML (DOM) de la page actuelle. Cette propriété est utile, lorsqu’il est utilisé en association avec le <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriété, pour implémenter une communication bidirectionnelle entre votre application et votre code HTML (DHTML) dans une page Web, ce qui vous permet de combiner les contrôles Web et contrôles Windows Forms dans un interface utilisateur unique. Vous pouvez utiliser le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété pour appeler des méthodes d’écriture du code à partir de votre application. Votre code de script peut accéder à votre application via le `window.external` objet, qui est un objet DOM intégré pour l’accès des ordinateurs hôtes, et qui mappe à l’objet que vous spécifiez pour le <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriété.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle est un wrapper managé pour le ActiveX [contrôle WebBrowser](https://go.microsoft.com/fwlink/?LinkId=198812)et utilise quelle que soit la version du contrôle est installée sur l’ordinateur de l’utilisateur.  
  
> [!NOTE]
>  Cette classe effectue des demandes de sécurité au niveau de la classe. Un <xref:System.Security.SecurityException> est levée lorsqu’une classe dérivée ou un appelant dans la pile des appels n’a pas d’autorisation de confiance totale. Pour plus d’informations sur les demandes de sécurité, consultez [demandes de liaison](~/docs/framework/misc/link-demands.md) et [demandes d’héritage](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.WebBrowser> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter une barre d’adresses pour une utilisation avec le <xref:System.Windows.Forms.WebBrowser> contrôle. Cet exemple nécessite que vous disposez d’un formulaire qui contient un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`, un <xref:System.Windows.Forms.TextBox> contrôle appelé `TextBoxAddress`et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonGo`. Lorsque vous tapez une URL dans la zone de texte et appuyez sur entrée ou cliquez sur le **accédez** bouton, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URL spécifiée. Lorsque vous accédez en cliquant sur un lien hypertexte, la zone de texte se met automatiquement à jour pour afficher l’URL actuelle.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">pour les classes dérivées héritent de ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/12667861-5b5b-46bc-8fb5-675e25264c9f">WebBrowser, contrôle (Windows Forms)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/dd66cd4c-b087-415f-9c3e-94e3a1835f74">Utilisation de bibliothèques à partir de code d'un niveau de confiance partiel</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le <xref:System.Windows.Forms.WebBrowser> contrôle est vide. Pour naviguer vers un document initial, définissez la <xref:System.Windows.Forms.WebBrowser.Url%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le <see cref="T:System.Windows.Forms.WebBrowser" /> contrôle est hébergé dans Internet Explorer.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNavigation : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle peut naviguer vers une autre page après le chargement de sa page initiale.</summary>
        <value><see langword="true" /> si le contrôle peut naviguer vers une autre page ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété ne vous empêche pas de charger une page initiale en définissant le <xref:System.Windows.Forms.WebBrowser.Url%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> ou <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriété, mais empêche toute navigation ultérieure.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowWebBrowserDrop">
      <MemberSignature Language="C#" Value="public bool AllowWebBrowserDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWebBrowserDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWebBrowserDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWebBrowserDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWebBrowserDrop : bool with get, set" Usage="System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> navigue vers des documents qui sont déposés sur lui.</summary>
        <value><see langword="true" /> si le contrôle accepte des documents qui sont déposés sur lui ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue automatiquement vers des documents qui sont déposés sur lui. Ce comportement est utile lorsque vous utilisez le contrôle comme un navigateur générique. Si vous utilisez le contrôle pour afficher le contenu conçu spécifiquement pour votre application, par exemple, utilisateur HTML une assistance, définissez le <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> propriété `false` pour empêcher l’affichage d’un autre contenu. Cela est particulièrement utile lorsque vous souhaitez masquer le fait que vous utilisez le <xref:System.Windows.Forms.WebBrowser> contrôle, par exemple pour créer une interface utilisateur qui intègre de contrôles Web avec les contrôles Windows Forms.  
  
 Vous pouvez désactiver les autres fonctionnalités du navigateur standard en affectant la <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> et <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propriétés à `false`.  
  
> [!NOTE]
>  Cette propriété n’est pas liée à la <xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=nameWithType> propriété et ne provoque pas d’événements de glisser-déplacer comme le <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> événement se produise pour le contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> propriété.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected override void AttachInterfaces (object nativeActiveXObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachInterfaces(object nativeActiveXObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AttachInterfaces (nativeActiveXObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AttachInterfaces(System::Object ^ nativeActiveXObject);" />
      <MemberSignature Language="F#" Value="override this.AttachInterfaces : obj -&gt; unit" Usage="webBrowser.AttachInterfaces nativeActiveXObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeActiveXObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nativeActiveXObject">Objet qui représente le contrôle ActiveX sous-jacent.</param>
        <summary>Appelé par le contrôle lorsque le contrôle ActiveX sous-jacent est créé.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Classes dérivées peuvent substituer cette méthode pour effectuer un cast de l’objet ActiveX sous-jacent à l’interface appropriée et mettre en cache dans une variable membre. Cette valeur doit ensuite être libérée dans une substitution de la <see cref="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces" /> (méthode).</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si une page précédente dans l'historique de navigation est disponible, ce qui permet à la méthode <see cref="M:System.Windows.Forms.WebBrowser.GoBack" /> de réussir.</summary>
        <value><see langword="true" /> si le contrôle peut naviguer en arrière ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode navigue le <xref:System.Windows.Forms.WebBrowser> contrôler à la page précédente de cet historique, s’il est disponible. Utilisez le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriété afin de déterminer si l’historique de navigation est disponible et contiendrait une page précédente. Si cette propriété est `true`, le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode réussit. Sinon, l’appel la <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode retournera la valeur `false` et aucune navigation se produira.  
  
 Vous pouvez également gérer les <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> les modifications de propriété. La gestion de cet événement est utile, par exemple, pour modifier l’état activé d’un **précédent** bouton lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers ou quitte le début de l’historique de navigation.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> pour implémenter un **retour** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle qui est similaire à la **retour** dans Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `backButton`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoBackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoBackChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoBackChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoBackChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoBackChanged : EventHandler " Usage="member this.CanGoBackChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" /> est modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode navigue le <xref:System.Windows.Forms.WebBrowser> contrôler à la page précédente de cet historique, s’il est disponible. Le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriété indique si l’historique de navigation est disponible et contiendrait une page précédente. Gérer le <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> les modifications de propriété. La gestion de cet événement est utile, par exemple, pour modifier l’état activé d’un **précédent** bouton lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers ou quitte le début de l’historique de navigation.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> événement pour implémenter un **retour** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle qui est similaire à la **retour** bouton dans Internet Explorateur. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `backButton`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si une page suivante dans l'historique de navigation est disponible, ce qui permet à la méthode <see cref="M:System.Windows.Forms.WebBrowser.GoForward" /> de réussir.</summary>
        <value><see langword="true" /> si le contrôle peut naviguer vers l'avant ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode navigue le <xref:System.Windows.Forms.WebBrowser> contrôler à la page suivante de cet historique, s’il est disponible à la suite d’une navigation arrière précédente. Si cette propriété est `true`, le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode réussit. Sinon, l’appel la <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode retournera la valeur `false` et aucune navigation se produira.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propriété afin de déterminer si l’historique de navigation est disponible et contiendrait une page située après l’actuel, ce qui permet la <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode réussisse.  
  
 Vous pouvez également gérer les <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> les modifications de propriété. La gestion de cet événement est utile, par exemple, pour modifier l’état activé d’un **transférer** bouton lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers ou quitte la fin de l’historique de navigation.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> événement pour implémenter un **transférer** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle qui est similaire à la **transférer** situé dans Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonForward`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoForwardChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoForwardChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoForwardChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoForwardChanged;" />
      <MemberSignature Language="F#" Value="member this.CanGoForwardChanged : EventHandler " Usage="member this.CanGoForwardChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" /> est modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode navigue le <xref:System.Windows.Forms.WebBrowser> contrôler à la page suivante de cet historique, s’il est disponible à la suite d’une navigation arrière précédente. Le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propriété indique si l’historique de navigation est disponible et contiendrait une page située après l’actuel, ce qui permet la <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode réussisse. Gérer le <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> les modifications de propriété. La gestion de cet événement est utile, par exemple, pour modifier l’état activé d’un **transférer** bouton lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers ou quitte la fin de l’historique de navigation.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour implémenter un **transférer** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle qui est similaire à la **transférer** bouton dans Internet Explorateur. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonForward`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected override void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateSink();" />
      <MemberSignature Language="F#" Value="override this.CreateSink : unit -&gt; unit" Usage="webBrowser.CreateSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Associe le contrôle ActiveX sous-jacent à un client qui peut gérer des événements de contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile si vous êtes familiarisé avec le développement OLE à l’aide de non managé `WebBrowser` contrôle ActiveX et que vous souhaitez étendre les fonctionnalités des formulaires Windows <xref:System.Windows.Forms.WebBrowser> contrôle, qui est un wrapper managé pour le contrôle ActiveX. Vous pouvez utiliser cette extensibilité pour implémenter des événements à partir du contrôle ActiveX qui ne sont pas fournies par le contrôle wrapper.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette méthode dans une classe dérivée de <xref:System.Windows.Forms.WebBrowser> qui complètent la normale <xref:System.Windows.Forms.WebBrowser> événements avec le `NavigateError` événement à partir de l’OLE `DWebBrowserEvents2` interface.  
  
 [!code-csharp[WebBrowserExtensibility#00](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#00)]
 [!code-vb[WebBrowserExtensibility#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#00)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.DetachSink" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa768283.aspx">DWebBrowserEvents2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebBrowserSiteBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWebBrowserSiteBase () As WebBrowserSiteBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::WebBrowserSiteBase ^ CreateWebBrowserSiteBase();" />
      <MemberSignature Language="F#" Value="override this.CreateWebBrowserSiteBase : unit -&gt; System.Windows.Forms.WebBrowserSiteBase" Usage="webBrowser.CreateWebBrowserSiteBase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserSiteBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une référence au site de contrôle ActiveX <see langword="WebBrowser" /> non managé que vous pouvez étendre pour personnaliser le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> managé.</summary>
        <returns><see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> qui représente le site du contrôle ActiveX <see langword="WebBrowser" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile si vous êtes familiarisé avec le développement OLE à l’aide de non managé `WebBrowser` contrôle ActiveX et que vous souhaitez étendre les fonctionnalités des formulaires Windows <xref:System.Windows.Forms.WebBrowser> contrôle, qui est un wrapper managé pour le contrôle ActiveX. Vous pouvez utiliser cette extensibilité, par exemple, pour personnaliser les touches de raccourci navigateur menu et le raccourci ou pour fournir une configuration de sécurité personnalisé pour les documents hébergés.  
  
 Pour utiliser cette fonctionnalité, implémenter des classes qui héritent de la <xref:System.Windows.Forms.WebBrowser> et <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classes. Non managé `WebBrowser` contrôle ActiveX utilise l’élément protégé <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> méthode pour récupérer des interfaces d’extensibilité implémentées par la <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classe. Remplacer le <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> méthode pour retourner une instance de votre propre classe qui hérite de la <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classe. Le <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> classe fournit des implémentations par défaut de l’OLE `IDocHostUIHandler` interface. Vous pouvez fournir votre propre implémentation de cette interface ou implémenter n’importe quel autre `WebBrowser` interface de contrôle ActiveX afin de personnaliser le comportement du contrôle.  
  
> [!NOTE]
>  Si vous fournissez votre propre implémentation pour un `IDocHostUIHandler` membres, vous devez implémenter tous les membres de cette interface.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa753260.aspx">Interface IDocHostUIHandler</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la taille par défaut du contrôle.</summary>
        <value>Obtient la taille par défaut du contrôle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachInterfaces">
      <MemberSignature Language="C#" Value="protected override void DetachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachInterfaces" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachInterfaces ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachInterfaces();" />
      <MemberSignature Language="F#" Value="override this.DetachInterfaces : unit -&gt; unit" Usage="webBrowser.DetachInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelé par le contrôle lorsque le contrôle ActiveX sous-jacent est ignoré.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Classes dérivées peuvent substituer cette méthode pour libérer une référence à l’objet ActiveX sous-jacent qui a été mis en cache dans une substitution de la <see cref="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)" /> (méthode).</para></block>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected override void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachSink();" />
      <MemberSignature Language="F#" Value="override this.DetachSink : unit -&gt; unit" Usage="webBrowser.DetachSink " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère le client de gestion d’événements joint à la méthode <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" /> du contrôle ActiveX sous-jacent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile si vous êtes familiarisé avec le développement OLE à l’aide de non managé `WebBrowser` contrôle ActiveX et que vous souhaitez étendre les fonctionnalités des formulaires Windows <xref:System.Windows.Forms.WebBrowser> contrôle, qui est un wrapper managé pour le contrôle ActiveX. Vous pouvez utiliser cette extensibilité pour implémenter des événements à partir du contrôle ActiveX qui ne sont pas fournies par le contrôle wrapper.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette méthode dans une classe dérivée de <xref:System.Windows.Forms.WebBrowser> qui complètent la norme <xref:System.Windows.Forms.WebBrowser> événements avec le `NavigateError` événement à partir de l’OLE `DWebBrowserEvents2` interface.  
  
 Pour l’exemple de code complet, consultez <xref:System.Windows.Forms.WebBrowser.CreateSink%2A>.  
  
 [!code-csharp[WebBrowserExtensibility#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#10)]
 [!code-vb[WebBrowserExtensibility#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.CreateSink" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa768283.aspx">DWebBrowserEvents2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="webBrowser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.WebBrowser" /> et libère éventuellement les ressources managées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.WebBrowser.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Windows.Forms.HtmlDocument" /> représentant la page web affichée actuellement dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlDocument" /> représentant la page active, ou <see langword="null" /> si aucune page n'est chargée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété lorsque vous souhaitez accéder au contenu d’une page Web affichée dans le <xref:System.Windows.Forms.WebBrowser> contrôle par le biais du modèle objet de document HTML (DOM). Cela est utile, par exemple, lorsque vous souhaitez utiliser des contrôles basés sur le Web dans votre application Windows Forms.  
  
 Vous pouvez utiliser cette propriété, en association avec le <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriété, pour implémenter la communication bidirectionnelle entre une page Web affichée dans le <xref:System.Windows.Forms.WebBrowser> contrôle et votre application. Utilisez le <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> méthode à appeler des méthodes de script implémentées dans une page Web à partir de votre code d’application cliente. Votre code de script peut accéder à votre application via le `window.external` objet, qui est un objet DOM intégré pour l’accès des ordinateurs hôtes, et qui mappe à un objet que vous spécifiez pour le <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriété.  
  
 Pour accéder au contenu d’une page Web sous forme de chaîne, utilisez la <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriété. Pour accéder au contenu d’une page Web comme un <xref:System.IO.Stream>, utilisez le <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété dans un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.Navigating> événement pour déterminer si un formulaire de page Web a été rempli. Si le champ d’entrée ne contient pas une valeur, le volet de navigation est annulée.  
  
 Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserDocumentCompletedEventHandler ^ DocumentCompleted;" />
      <MemberSignature Language="F#" Value="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " Usage="member this.DocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserDocumentCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> finit de charger un document.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers un nouveau document chaque fois qu’une des propriétés suivantes est définie ou méthodes est appelée :  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Gérer le <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événement pour recevoir une notification lorsque le nouveau document finit le chargement. Lorsque le <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événement se produit, le nouveau document est complètement chargé, ce qui signifie que vous pouvez accéder à son contenu par le biais du <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, ou <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriété.  
  
 Pour recevoir la notification avant le début de la navigation, gérez le <xref:System.Windows.Forms.WebBrowser.Navigating> événement. La gestion de cet événement vous permet d’annuler la navigation si certaines conditions ne sont pas remplies, par exemple, lorsque l’utilisateur n’a pas rempli un formulaire complètement. Gérer le <xref:System.Windows.Forms.WebBrowser.Navigated> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle termine la navigation et commence à charger le document au nouvel emplacement.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cet événement pour imprimer un document après que qu’il a complètement chargé.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream DocumentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream DocumentStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ DocumentStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStream : System.IO.Stream with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un flux contenant le contenu de la page web affichée dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see cref="T:System.IO.Stream" /> contenant le contenu de la page web active, ou <see langword="null" /> si aucune page n'est chargée. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet de charger une page Web dans le <xref:System.Windows.Forms.WebBrowser> contrôler à partir d’un <xref:System.IO.Stream> objet. Vous pouvez utiliser cette propriété, par exemple, pour charger des pages Web à partir d’un base de données ou fichier de ressources. Lorsque vous définissez cette propriété, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue automatiquement vers le sur : vide URL avant de charger le texte spécifié. Cela signifie que le <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, et <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événements se produisent lorsque vous définissez cette propriété et la valeur de la <xref:System.Windows.Forms.WebBrowser.Url%2A> propriété n’est plus significative.  
  
> [!NOTE]
>  Cette propriété contient le contenu du document actif, même si un autre document a été demandé. Si vous définissez la valeur de cette propriété, puis immédiatement l’extraire à nouveau, la valeur récupérée peut être différente de la valeur définie si le <xref:System.Windows.Forms.WebBrowser> contrôle n’a pas de temps pour charger le nouveau contenu. Vous pouvez récupérer la nouvelle valeur dans un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Gestionnaire d’événements.  
  
 Pour accéder au contenu d’une page Web sous forme de chaîne, utilisez la <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriété. Vous pouvez également accéder à du contenu de la page à l’aide du modèle objet de document HTML (DOM) via le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.IO.Stream" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentText">
      <MemberSignature Language="C#" Value="public string DocumentText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentText : string with get, set" Usage="System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu HTML de la page affichée dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Texte HTML de la page affichée, ou la chaîne vide ("") si aucun document n'est chargé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété lorsque vous souhaitez manipuler le contenu d’une page HTML affichée dans le <xref:System.Windows.Forms.WebBrowser> contrôler à l’aide des outils de traitement de chaîne. Vous pouvez utiliser cette propriété, par exemple, pour charger des pages à partir d’une base de données ou pour analyser des pages à l’aide d’expressions régulières. Lorsque vous définissez cette propriété, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue automatiquement vers le sur : vide URL avant de charger le texte spécifié. Cela signifie que le <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, et <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événements se produisent lorsque vous définissez cette propriété et la valeur de la <xref:System.Windows.Forms.WebBrowser.Url%2A> propriété n’est plus significative.  
  
> [!NOTE]
>  Cette propriété contient le texte du document actif, même si un autre document a été demandé. Si vous définissez la valeur de cette propriété, puis immédiatement l’extraire à nouveau, la valeur récupérée peut être différente de la valeur définie si le <xref:System.Windows.Forms.WebBrowser> contrôle n’a pas de temps pour charger le nouveau contenu. Vous pouvez récupérer la nouvelle valeur dans un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Gestionnaire d’événements. Vous pouvez également bloquer le thread jusqu'à ce que le document est chargé en appelant le <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> méthode dans une boucle jusqu'à ce que le <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriété retourne la valeur que vous avez définissez à le.  
  
 Pour accéder au contenu d’une page Web comme un <xref:System.IO.Stream>, utilisez le <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriété. Vous pouvez également accéder à du contenu de la page à l’aide du modèle objet de document HTML (DOM) via le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> propriété à afficher par programme le contenu du document de votre choix. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentTitle : string" Usage="System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le titre du document actuellement affiché dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Titre du document actif, ou la chaîne vide ("") si aucun document n'est chargé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utile, par exemple, lorsque vous souhaitez afficher le titre du document dans la barre de titre de l’application. Si aucun titre n’a été défini pour le document actif, cette propriété est définie à l’emplacement du document et le nom de fichier.  
  
 Gérer le <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> barre d’événements pour mettre à jour le titre dans le titre lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers un nouveau document.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> propriété à mettre à jour de la barre de titre du formulaire avec le titre du document actif. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DocumentTitleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DocumentTitleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentTitleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DocumentTitleChanged;" />
      <MemberSignature Language="F#" Value="member this.DocumentTitleChanged : EventHandler " Usage="member this.DocumentTitleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" /> est modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez gérer cet événement pour mettre à jour de la barre de titre de votre application avec la valeur actuelle de la <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> propriété.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> événement à mettre à jour de la barre de titre du formulaire avec le titre du document actif. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public string DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentType : string" Usage="System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le titre du document actuellement affiché dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Type du document actif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de cette propriété correspond au type MIME Multipurpose Internet Mail Extensions () du document.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionLevel As WebBrowserEncryptionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserEncryptionLevel EncryptionLevel { System::Windows::Forms::WebBrowserEncryptionLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevel : System.Windows.Forms.WebBrowserEncryptionLevel" Usage="System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserEncryptionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant la méthode de chiffrement utilisée par le document affiché actuellement dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété avec la <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> événement pour implémenter un indicateur dans l’interface utilisateur de votre application semblable à l’icône de verrou dans Internet Explorer. Lorsque le document actif n’est pas chiffré, la valeur de cette propriété est <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure?displayProperty=nameWithType>. Lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle affiche une page Web contenant plusieurs images avec un contenu de différents niveaux de chiffrement, la valeur de cette propriété est <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed?displayProperty=nameWithType>. Lorsque le niveau de chiffrement est inconnu, la valeur de cette propriété est <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown?displayProperty=nameWithType>. Autres valeurs indiquent le type de chiffrement présent. Pour reproduire le comportement de l’icône de verrou dans Internet Explorer, afficher le type de chiffrement dans une info-bulle qui apparaît lorsque le pointeur de la souris est placé sur l’indicateur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevelChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EncryptionLevelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EncryptionLevelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EncryptionLevelChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EncryptionLevelChanged;" />
      <MemberSignature Language="F#" Value="member this.EncryptionLevelChanged : EventHandler " Usage="member this.EncryptionLevelChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> navigue vers ou à partir d’un site web qui utilise le chiffrement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cet événement avec le <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> propriété pour implémenter un indicateur dans l’interface utilisateur de votre application semblable à l’icône de verrou dans Internet Explorer. Dans un gestionnaire pour cet événement, vérifiez la valeur de la <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> propriété afin de déterminer si vous devez masquer ou afficher l’indicateur. Pour reproduire le comportement de l’icône de verrou dans Internet Explorer, vous pouvez également fournir une info-bulle qui affiche le niveau de chiffrement lorsque le pointeur de la souris est placé sur l’indicateur.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.WebBrowser> nommé `WebBrowser1`. Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#647](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#647)]
 [!code-vb[System.Windows.Forms.EventExamples#647](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#647)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="FileDownload">
      <MemberSignature Language="C#" Value="public event EventHandler FileDownload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FileDownload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.FileDownload" />
      <MemberSignature Language="VB.NET" Value="Public Event FileDownload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FileDownload;" />
      <MemberSignature Language="F#" Value="member this.FileDownload : EventHandler " Usage="member this.FileDownload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque que le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> télécharge un fichier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.WebBrowser.FileDownload> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.WebBrowser> nommé `WebBrowser1`. Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.WebBrowser.FileDownload> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#648](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#648)]
 [!code-vb[System.Windows.Forms.EventExamples#648](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#648)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.WebBrowser.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le contrôle ou une de ses fenêtres enfants a actuellement le focus.</summary>
        <value><see langword="true" /> si le contrôle ou une de ses fenêtres enfants a le focus ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; bool" Usage="webBrowser.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigue le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> vers la page précédente de l'historique de navigation, s'il en existe une.</summary>
        <returns><see langword="true" /> si la navigation réussit ; <see langword="false" /> si une page précédente de l'historique de navigation n'est pas disponible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour implémenter un **retour** bouton similaire à celui d’Internet Explorer, ce qui permet à vos utilisateurs revenir à une page précédente dans l’historique de navigation.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> propriété afin de déterminer si l’historique de navigation est disponible et contiendrait une page précédente. Gérer le <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> valeur de propriété change. La gestion de cet événement est utile, par exemple, pour modifier l’état activé d’un **précédent** bouton lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers ou quitte le début de l’historique de navigation.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour implémenter un **retour** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `backButton`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; bool" Usage="webBrowser.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigue le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> vers la page suivante de l'historique de navigation, s'il en existe une.</summary>
        <returns><see langword="true" /> si la navigation réussit ; <see langword="false" /> si une page suivante de l'historique de navigation n'est pas disponible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour implémenter un **transférer** bouton similaire à celui d’Internet Explorer, ce qui permet de vos utilisateurs revenir à la page suivante dans l’historique de navigation après avoir navigué vers l’arrière.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> propriété afin de déterminer si l’historique de navigation est disponible et contiendrait une page située après l’objet actuel. Gérer le <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> valeur de propriété change. La gestion de cet événement est utile, par exemple, pour modifier l’état activé d’un **transférer** bouton lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers ou quitte la fin de l’historique de navigation.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour implémenter un **transférer** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonForward`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoHome">
      <MemberSignature Language="C#" Value="public void GoHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoHome();" />
      <MemberSignature Language="F#" Value="member this.GoHome : unit -&gt; unit" Usage="webBrowser.GoHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigue le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> vers la page d'accueil de l'utilisateur actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **accueil** bouton similaire à celui d’Internet Explorer. L’utilisateur peut spécifier une page d’accueil dans le **Options Internet** boîte de dialogue, qui est disponible dans le panneau de configuration ou le **outils** menu dans Internet Explorer.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.GoHome%2A> méthode pour implémenter un **accueil** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonHome`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#11)]
 [!code-csharp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.WebBrowser#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="GoSearch">
      <MemberSignature Language="C#" Value="public void GoSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoSearch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoSearch" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoSearch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoSearch();" />
      <MemberSignature Language="F#" Value="member this.GoSearch : unit -&gt; unit" Usage="webBrowser.GoSearch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigue le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> vers la page de recherche par défaut de l'utilisateur actuel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter une fonctionnalité de recherche semblable à celle dans Internet Explorer. Selon la version installée d’Internet Explorer, l’utilisateur peut spécifier une page de recherche par défaut dans le **Options Internet** boîte de dialogue, qui est disponible dans le panneau de configuration ou le **outils** menu Internet Explorer.  
  
 La page de recherche par défaut est stockée dans le Registre sous le `HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Search Page` clé de Registre. Avec les versions ultérieures d’Internet Explorer, cette clé de Registre doit être modifiée afin de modifier la page de recherche par défaut utilisée par cette méthode. Pour utiliser une page de recherche différente de la valeur par défaut, appelez le <xref:System.Windows.Forms.WebBrowser.Navigate%2A> méthode ou spécifiez le <xref:System.Windows.Forms.WebBrowser.Url%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.GoSearch%2A> méthode pour implémenter un **recherche** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonSearch`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#12)]
 [!code-csharp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.WebBrowser#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> charge actuellement un nouveau document.</summary>
        <value><see langword="true" /> si le contrôle est en train de charger un document ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette propriété est `true`, vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.Stop%2A> méthode pour arrêter la navigation actuelle avant que le nouveau document est entièrement chargé. Utilisez le <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> propriété afin de déterminer l’état exact de navigation le <xref:System.Windows.Forms.WebBrowser> contrôle. Le <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> valeur de la propriété a la valeur false lorsque le <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> valeur de propriété est <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.ReadyState" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> est en mode hors connexion.</summary>
        <value><see langword="true" /> si le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> est en mode hors connexion ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En mode hors connexion, le <xref:System.Windows.Forms.WebBrowser> contrôle est forcé à charger des pages Web à partir du cache local plutôt que de les télécharger.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="IsWebBrowserContextMenuEnabled">
      <MemberSignature Language="C#" Value="public bool IsWebBrowserContextMenuEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWebBrowserContextMenuEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebBrowserContextMenuEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsWebBrowserContextMenuEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le menu contextuel du contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> est activé.</summary>
        <value><see langword="true" /> si le menu contextuel du contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le <xref:System.Windows.Forms.WebBrowser> contrôle affiche un menu contextuel quand un utilisateur clique sur elle. Ce comportement est utile lorsque vous utilisez le contrôle comme un navigateur générique. Si vous souhaitez masquer le fait que vous utilisez le <xref:System.Windows.Forms.WebBrowser> contrôle, par exemple pour créer une interface utilisateur qui intègre de contrôles Web et les contrôles Windows Forms, définissez le <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> false à la propriété.  
  
 Vous pouvez désactiver les autres fonctionnalités du navigateur standard en affectant la <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> et <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> propriétés sur false.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propriété.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Charge le document à l'emplacement spécifié dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="webBrowser.Navigate urlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">URL du document à charger.</param>
        <summary>Charge le document à l'URL (Uniform Resource Locator) spécifiée dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> et remplace le document précédent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URI spécifié et l’ajoute à la fin de la liste d’historique. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour retourner le contrôle à une page précédente dans l’historique de navigation. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour revenir à une page suivante de l’historique de navigation après avoir navigué vers l’arrière.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
 Vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.Navigate%2A> méthode pour implémenter une barre d’adresses semblable à celle dans Internet Explorer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="webBrowser.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> représentant l'URL du document à charger.</param>
        <summary>Charge le document à l'emplacement indiqué par le <see cref="T:System.Uri" /> spécifié dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> en remplaçant le document précédent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URI spécifié et l’ajoute à la fin de la liste d’historique. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour retourner le contrôle à une page précédente dans l’historique de navigation. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour revenir à une page suivante de l’historique de navigation après avoir navigué vers l’arrière.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
 Vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.Navigate%2A> méthode pour implémenter une barre d’adresses semblable à celle dans Internet Explorer.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.Navigate%2A> méthode pour implémenter une barre d’adresses pour le <xref:System.Windows.Forms.WebBrowser> contrôle. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`, un <xref:System.Windows.Forms.TextBox> contrôle appelé `TextBoxAddress`et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonGo`. Lorsque vous tapez une URL dans la zone de texte et appuyez sur entrée ou cliquez sur le **accédez** bouton, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URL spécifiée. Lorsque vous accédez en cliquant sur un lien hypertexte, la zone de texte se met automatiquement à jour pour afficher l’URL actuelle.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <exception cref="T:System.ArgumentException">Le <paramref name="url" /> valeur du paramètre ne représente pas un URI absolu. Pour plus d'informations, consultez <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * bool -&gt; unit" Usage="webBrowser.Navigate (urlString, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">URL du document à charger.</param>
        <param name="newWindow"><see langword="true" /> pour charger le document dans une nouvelle fenêtre de navigateur ; <see langword="false" /> pour charger le document dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
        <summary>Charge le document à l'URL (Uniform Resource Locator) spécifiée dans une nouvelle fenêtre de navigateur ou dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge avec un `newWindow` valeur du paramètre de `false`, le contrôle navigue normalement vers l’URI spécifié et ajoute l’URI à la fin de la liste d’historique. Lorsque vous appelez cette surcharge avec un `newWindow` valeur du paramètre de `true`, le <xref:System.Windows.Forms.WebBrowser> contrôle charge le document à l’URI spécifié dans une nouvelle fenêtre Internet Explorer, qui gère son propre historique de navigation. Vous pouvez gérer le <xref:System.Windows.Forms.WebBrowser.NewWindow> événement pour recevoir une notification avant l’ouverture d’une nouvelle fenêtre de navigateur, ce qui vous permet d’annuler l’action si nécessaire.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page ou la charge dans une fenêtre de navigateur distincte, il gagne du temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version. Lorsqu’une page est chargée dans une fenêtre Internet Explorer distincte, l’utilisateur peut récupérer la dernière version en cliquant sur le **Actualiser** bouton.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">URL du document à charger.</param>
        <param name="targetFrameName">Nom du frame dans lequel charger le document.</param>
        <summary>Charge le document à l’URL (Uniform Resource Locator) spécifiée dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> et remplace le contenu du frame de la page web par le nom spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge, le <xref:System.Windows.Forms.WebBrowser> contrôle charge le document à l’URI spécifié dans le cadre de la page Web avec le nom spécifié et ajoute l’URI à la fin de la liste d’historique. Si le nom de frame spécifié n’est pas valide, le document est chargé dans une nouvelle fenêtre Internet Explorer.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour retourner le contrôle à une page précédente dans l’historique de navigation. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour revenir à une page suivante de l’historique de navigation après avoir navigué vers l’arrière.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, bool newWindow);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * bool -&gt; unit" Usage="webBrowser.Navigate (url, newWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> représentant l'URL du document à charger.</param>
        <param name="newWindow"><see langword="true" /> pour charger le document dans une nouvelle fenêtre de navigateur ; <see langword="false" /> pour charger le document dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
        <summary>Charge le document à l'emplacement indiqué par le <see cref="T:System.Uri" /> spécifié dans une nouvelle fenêtre de navigateur ou dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge avec un `newWindow` valeur du paramètre de `false`, le contrôle navigue normalement vers l’URI spécifié et ajoute l’URI à la fin de la liste d’historique. Lorsque vous appelez cette surcharge avec un `newWindow` valeur du paramètre de `true`, le <xref:System.Windows.Forms.WebBrowser> contrôle charge le document à l’URI spécifié dans une nouvelle fenêtre Internet Explorer, qui gère son propre historique de navigation. Vous pouvez gérer le <xref:System.Windows.Forms.WebBrowser.NewWindow> événement pour recevoir une notification avant l’ouverture d’une nouvelle fenêtre de navigateur, ce qui vous permet d’annuler l’action si nécessaire.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page ou la charge dans une fenêtre de navigateur distincte, il gagne du temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version. Lorsqu’une page est chargée dans une fenêtre Internet Explorer distincte, l’utilisateur peut récupérer la dernière version en cliquant sur le **Actualiser** bouton.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <exception cref="T:System.ArgumentException">Le <paramref name="url" /> valeur du paramètre ne représente pas un URI absolu. Pour plus d'informations, consultez <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> représentant l'URL du document à charger.</param>
        <param name="targetFrameName">Nom du frame dans lequel charger le document.</param>
        <summary>Charge le document à l’emplacement indiqué par le <see cref="T:System.Uri" /> spécifié dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> et remplace le contenu du cadre de la page web par le nom spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge, le <xref:System.Windows.Forms.WebBrowser> contrôle charge le document à l’URI spécifié dans le cadre de la page Web avec le nom spécifié et ajoute l’URI à la fin de la liste d’historique. Si le nom de frame spécifié n’est pas valide, le document est chargé dans une nouvelle fenêtre Internet Explorer.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour retourner le contrôle à une page précédente dans l’historique de navigation. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour revenir à une page suivante de l’historique de navigation après avoir navigué vers l’arrière.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <exception cref="T:System.ArgumentException">Le <paramref name="url" /> valeur du paramètre ne représente pas un URI absolu. Pour plus d'informations, consultez <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (urlString, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">URL du document à charger.</param>
        <param name="targetFrameName">Nom du frame dans lequel charger le document.</param>
        <param name="postData">Données HTTP POST telles que les données de formulaire.</param>
        <param name="additionalHeaders">En-têtes HTTP à ajouter aux en-têtes par défaut.</param>
        <summary>Charge le document à l’URL (Uniform Resource Locator) spécifiée dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> en le demandant à l’aide des données HTTP spécifiées et en remplaçant le contenu du frame de la page web par le nom spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge, le <xref:System.Windows.Forms.WebBrowser> contrôle charge le document à l’URI spécifié dans le cadre de la page Web avec le nom spécifié et ajoute l’URI à la fin de la liste d’historique. Si le nom de frame spécifié n’est pas valide, le document est chargé dans une nouvelle fenêtre Internet Explorer.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour retourner le contrôle à une page précédente dans l’historique de navigation. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour revenir à une page suivante de l’historique de navigation après avoir navigué vers l’arrière.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (url, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><see cref="T:System.Uri" /> représentant l'URL du document à charger.</param>
        <param name="targetFrameName">Nom du frame dans lequel charger le document.</param>
        <param name="postData">Données HTTP POST telles que les données de formulaire.</param>
        <param name="additionalHeaders">En-têtes HTTP à ajouter aux en-têtes par défaut.</param>
        <summary>Charge le document à l’emplacement indiqué par le <see cref="T:System.Uri" /> spécifié dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> en le demandant à l’aide des données HTTP spécifiées et en remplaçant le contenu du frame de la page web par le nom spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous appelez cette surcharge, le <xref:System.Windows.Forms.WebBrowser> contrôle charge le document à l’URI spécifié dans le cadre de la page Web avec le nom spécifié et ajoute l’URI à la fin de la liste d’historique. Si le nom de frame spécifié n’est pas valide, le document est chargé dans une nouvelle fenêtre Internet Explorer.  
  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.GoBack%2A> méthode pour retourner le contrôle à une page précédente dans l’historique de navigation. Utilisez le <xref:System.Windows.Forms.WebBrowser.GoForward%2A> méthode pour revenir à une page suivante de l’historique de navigation après avoir navigué vers l’arrière.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <exception cref="T:System.ArgumentException">Le <paramref name="url" /> valeur du paramètre ne représente pas un URI absolu. Pour plus d'informations, consultez <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As WebBrowserNavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " Usage="member this.Navigated : System.Windows.Forms.WebBrowserNavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> a navigué vers un nouveau document et a commencé à le charger.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers un nouveau document chaque fois qu’une des propriétés suivantes est définie ou méthodes est appelée :  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Gérer le <xref:System.Windows.Forms.WebBrowser.Navigated> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle a navigué vers un nouveau document. Lorsque le <xref:System.Windows.Forms.WebBrowser.Navigated> événement se produit, le nouveau document a commencé à charger, ce qui signifie que vous pouvez accéder au contenu chargé via la <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, et <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> propriétés. Gérer le <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle finit de charger le nouveau document.  
  
 Vous pouvez également recevoir la notification avant le début de la navigation en gérant la <xref:System.Windows.Forms.WebBrowser.Navigating> événement. Gestion de cet événement vous permet d’annuler la navigation si certaines conditions ne sont pas remplies, par exemple, l’utilisateur n’a pas complètement rempli un formulaire.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.Navigated> pour implémenter une barre d’adresses pour le <xref:System.Windows.Forms.WebBrowser> contrôle. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`, un <xref:System.Windows.Forms.TextBox> contrôle appelé `TextBoxAddress`et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonGo`. Lorsque vous tapez une URL dans la zone de texte et appuyez sur entrée ou cliquez sur le **accédez** bouton, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URL spécifiée. Lorsque vous accédez en cliquant sur un lien hypertexte, la zone de texte se met automatiquement à jour pour afficher l’URL actuelle.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As WebBrowserNavigatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatingEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " Usage="member this.Navigating : System.Windows.Forms.WebBrowserNavigatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant que le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> navigue vers un nouveau document.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers un nouveau document chaque fois qu’une des propriétés suivantes est définie ou méthodes est appelée :  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Vous pouvez gérer le <xref:System.Windows.Forms.WebBrowser.Navigating> événement pour annuler la navigation si certaines conditions ne sont pas remplies, par exemple, lorsque l’utilisateur n’a pas rempli un formulaire complètement. Pour annuler la navigation, définissez la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs> objet passé au gestionnaire d’événements à `true`. Vous pouvez également utiliser cet objet pour récupérer l’URL du nouveau document via la <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=nameWithType> propriété. Si le nouveau document s’affichera dans un cadre de la page Web, vous pouvez récupérer le nom du cadre via la <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=nameWithType> propriété.  
  
 Gérer le <xref:System.Windows.Forms.WebBrowser.Navigated> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle termine la navigation et commence à charger le document au nouvel emplacement. Gérer le <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événement pour recevoir une notification lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle finit de charger le nouveau document.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.Navigating> événement pour annuler la navigation lorsqu’un formulaire de page Web n’a pas été renseigné. Le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété est utilisée pour déterminer si le champ de formulaire d’entrée contient une valeur.  
  
 Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et que votre classe form a un <xref:System.Runtime.InteropServices.ComVisibleAttribute> rendant accessible à COM.  
  
 Pour obtenir un exemple de code complet que vous pouvez coller le code suivant dans, voir [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler NewWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler NewWindow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Event NewWindow As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ NewWindow;" />
      <MemberSignature Language="F#" Value="member this.NewWindow : System.ComponentModel.CancelEventHandler " Usage="member this.NewWindow : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant l'ouverture d'une nouvelle fenêtre de navigateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle ouvre une fenêtre de navigateur distincte lorsque la surcharge appropriée de la <xref:System.Windows.Forms.WebBrowser.Navigate%2A> méthode est appelée ou lorsque l’utilisateur clique sur le **ouvrir dans une nouvelle fenêtre** option du menu contextuel navigateur lorsque le pointeur de la souris pointe sur un lien hypertexte. Vous pouvez désactiver le menu contextuel en définissant le <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> false à la propriété.  
  
 Le <xref:System.Windows.Forms.WebBrowser.NewWindow> événement se produit avant l’ouverture de la nouvelle fenêtre de navigateur. Vous pouvez gérer cet événement, par exemple, pour empêcher la fenêtre d’ouverture lorsque certaines conditions ne sont pas remplies.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.WebBrowser.NewWindow> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.WebBrowser> nommé `WebBrowser1`. Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.WebBrowser.NewWindow> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#651](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#651)]
 [!code-vb[System.Windows.Forms.EventExamples#651](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#651)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectForScripting : obj with get, set" Usage="System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un objet accessible par du code de script contenu dans une page web affichée dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Objet rendu disponible au code de script.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour activer la communication entre une page Web hébergée par le <xref:System.Windows.Forms.WebBrowser> contrôle et l’application qui contient le <xref:System.Windows.Forms.WebBrowser> contrôle. Cette propriété vous permet d’intégrer du code HTML (DHTML) dynamique avec votre code d’application cliente. L’objet spécifié pour cette propriété est disponible pour le script de page Web en tant que le `window.external` objet, qui est un objet DOM intégré pour l’accès des ordinateurs hôtes.  
  
 Vous pouvez définir cette propriété à n’importe quel objet visible par COM pour lequel vous souhaitez que ses propriétés et méthodes publiques disponibles au code de script. Vous pouvez rendre une classe visible par COM en le marquant avec le <xref:System.Runtime.InteropServices.ComVisibleAttribute>.  
  
 Pour appeler des fonctions définies dans votre page Web à partir de votre code d’application cliente, utilisez la <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> méthode de la <xref:System.Windows.Forms.HtmlDocument> objet que vous pouvez récupérer à partir de la <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriété. Dans l’exemple, le <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> propriété est définie sur le formulaire en cours.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur spécifiée lors de la définition de cette propriété est une instance d’un type non public.  
  
ou 
La valeur spécifiée lors de la définition de cette propriété est une instance d’un type qui n’est pas visible par COM. Pour plus d'informations, consultez <see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoBackChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoBackChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoBackChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoBackChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoBackChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoBackChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoBackChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoBackChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnCanGoBackChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoForwardChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoForwardChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoForwardChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoForwardChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoForwardChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCanGoForwardChanged : EventArgs -&gt; unit&#xA;override this.OnCanGoForwardChanged : EventArgs -&gt; unit" Usage="webBrowser.OnCanGoForwardChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentCompleted(class System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentCompleted (e As WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentCompleted(System::Windows::Forms::WebBrowserDocumentCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit&#xA;override this.OnDocumentCompleted : System.Windows.Forms.WebBrowserDocumentCompletedEventArgs -&gt; unit" Usage="webBrowser.OnDocumentCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnDocumentCompleted%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTitleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTitleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentTitleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentTitleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDocumentTitleChanged : EventArgs -&gt; unit&#xA;override this.OnDocumentTitleChanged : EventArgs -&gt; unit" Usage="webBrowser.OnDocumentTitleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnEncryptionLevelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEncryptionLevelChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEncryptionLevelChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEncryptionLevelChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEncryptionLevelChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEncryptionLevelChanged : EventArgs -&gt; unit&#xA;override this.OnEncryptionLevelChanged : EventArgs -&gt; unit" Usage="webBrowser.OnEncryptionLevelChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFileDownload">
      <MemberSignature Language="C#" Value="protected virtual void OnFileDownload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFileDownload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFileDownload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFileDownload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFileDownload : EventArgs -&gt; unit&#xA;override this.OnFileDownload : EventArgs -&gt; unit" Usage="webBrowser.OnFileDownload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnFileDownload%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.FileDownload" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Forms.WebBrowserNavigatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Forms::WebBrowserNavigatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit&#xA;override this.OnNavigated : System.Windows.Forms.WebBrowserNavigatedEventArgs -&gt; unit" Usage="webBrowser.OnNavigated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.Navigated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnNavigated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Forms.WebBrowserNavigatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Forms::WebBrowserNavigatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit&#xA;override this.OnNavigating : System.Windows.Forms.WebBrowserNavigatingEventArgs -&gt; unit" Usage="webBrowser.OnNavigating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.Navigating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnNavigating%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNewWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewWindow(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewWindow (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewWindow(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnNewWindow : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="webBrowser.OnNewWindow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnNewWindow%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.Windows.Forms.WebBrowserProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::Windows::Forms::WebBrowserProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit&#xA;override this.OnProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventArgs -&gt; unit" Usage="webBrowser.OnProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnProgressChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStatusTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStatusTextChanged : EventArgs -&gt; unit&#xA;override this.OnStatusTextChanged : EventArgs -&gt; unit" Usage="webBrowser.OnStatusTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Windows.Forms.WebBrowser.OnStatusTextChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides"><para>Lors de la substitution de <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para></block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.WebBrowser.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété n'est pas significative pour ce contrôle.</summary>
        <value><see cref="F:System.Windows.Forms.Padding.Empty" /></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.WebBrowser.Padding" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien que vous pouvez obtenir ou définir la valeur de la <xref:System.Windows.Forms.WebBrowser.Padding%2A> propriété et répondre aux modifications en gérant cet événement, la propriété Padding n’est pas significative pour ce contrôle.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Padding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberSignature Language="F#" Value="member this.Print : unit -&gt; unit" Usage="webBrowser.Print " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Imprime le document affiché actuellement dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> à l'aide des paramètres de page et d'impression en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **impression** bouton similaire à celui d’Internet Explorer. Cette méthode imprime le document actif sans intervention supplémentaire utilisateur. Pour afficher le **impression** boîte de dialogue avant l’impression, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> (méthode). Pour afficher le **mise en Page** boîte de dialogue qui permet à vos utilisateurs de spécifier l’en-tête et les valeurs de pied de page et les autres paramètres de page, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> (méthode). Pour afficher le **Aperçu avant impression** boîte de dialogue, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.Print%2A> méthode pour implémenter un **impression** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle qui est similaire à la **imprimer** dans Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonPrint`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.WebBrowser#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Pour accéder à l’imprimante via cette méthode. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ProgressChanged As WebBrowserProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " Usage="member this.ProgressChanged : System.Windows.Forms.WebBrowserProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> a mis à jour des informations sur la progression de téléchargement d'un document vers lequel il navigue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser un gestionnaire pour cet événement pour implémenter une barre de progression de navigation semblable à celle dans Internet Explorer. Utilisez le <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=nameWithType> propriété afin de déterminer le nombre d’octets qui ont été téléchargées avec succès. Utilisez le <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=nameWithType> propriété afin de déterminer le nombre total d’octets disponibles pour le téléchargement.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.WebBrowser.ProgressChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.WebBrowser> nommé `WebBrowser1`. Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.WebBrowser.ProgressChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#652](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#652)]
 [!code-vb[System.Windows.Forms.EventExamples#652](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#652)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ReadyState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserReadyState ReadyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadyState As WebBrowserReadyState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserReadyState ReadyState { System::Windows::Forms::WebBrowserReadyState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadyState : System.Windows.Forms.WebBrowserReadyState" Usage="System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserReadyState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant l'état actuel du contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.WebBrowserReadyState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> propriété à récupérer l’état de la <xref:System.Windows.Forms.WebBrowser> contrôler lorsque vous avez besoin de davantage d’informations que le <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> fournit de la propriété.  
  
 Lorsque le <xref:System.Windows.Forms.WebBrowser> contrôle ne contient pas d’un document, la valeur de cette propriété est <xref:System.Windows.Forms.WebBrowserReadyState.Uninitialized?displayProperty=nameWithType>. Autres valeurs indiquent l’état du contrôle lorsqu’il navigue vers un nouveau document. Ces valeurs incluent <xref:System.Windows.Forms.WebBrowserReadyState.Loading?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Loaded?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Interactive?displayProperty=nameWithType>, et <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsBusy" />
        <altmember cref="T:System.Windows.Forms.WebBrowserReadyState" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recharge le document affiché actuellement dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="webBrowser.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recharge le document affiché actuellement dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> en recherchant sur le serveur une version à jour.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode force le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version. Vous pouvez utiliser cette méthode pour implémenter un **Actualiser** bouton similaire à celui d’Internet Explorer.  
  
> [!NOTE]
>  Une actualisation de document recharge la page actuelle, donc la <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, et <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événements ne se produisent pas lorsque vous appelez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour implémenter un **Actualiser** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonRefresh`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.WebBrowser#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Windows.Forms.WebBrowserRefreshOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (opt As WebBrowserRefreshOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Windows::Forms::WebBrowserRefreshOption opt);" />
      <MemberSignature Language="F#" Value="override this.Refresh : System.Windows.Forms.WebBrowserRefreshOption -&gt; unit" Usage="webBrowser.Refresh opt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opt" Type="System.Windows.Forms.WebBrowserRefreshOption" />
      </Parameters>
      <Docs>
        <param name="opt">Une des valeurs de <see cref="T:System.Windows.Forms.WebBrowserRefreshOption" />.</param>
        <summary>Recharge le document affiché actuellement dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" /> à l'aide des options d'actualisation spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web visitées récemment dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode force le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle. Le type de rechargement varie selon le <xref:System.Windows.Forms.WebBrowserRefreshOption> valeur spécifiée. Si vous appelez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode avec le <xref:System.Windows.Forms.WebBrowserRefreshOption.Completely?displayProperty=nameWithType> valeur, la dernière version du document est téléchargé. Si vous utilisez le <xref:System.Windows.Forms.WebBrowserRefreshOption.IfExpired?displayProperty=nameWithType> valeur, la dernière version est téléchargée uniquement si le document actif a expiré. Si vous utilisez le <xref:System.Windows.Forms.WebBrowserRefreshOption.Normal?displayProperty=nameWithType> valeur, le serveur envoie une copie du document stocké dans son propre cache.  
  
> [!NOTE]
>  Une actualisation de document recharge la page actuelle, donc la <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, et <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> événements ne se produisent pas lorsque vous appelez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="ScriptErrorsSuppressed">
      <MemberSignature Language="C#" Value="public bool ScriptErrorsSuppressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptErrorsSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptErrorsSuppressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptErrorsSuppressed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptErrorsSuppressed : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Windows.Forms.WebBrowser" /> affiche des boîtes de dialogue telles que les messages d'erreur de script.</summary>
        <value><see langword="true" /> si le contrôle n'affiche pas ses boîtes de dialogue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissez cette propriété sur `false` pour déboguer des pages Web que vous affichez dans le <xref:System.Windows.Forms.WebBrowser> contrôle. Cela est utile lorsque vous utilisez le contrôle pour ajouter des contrôles basés sur le Web et le code de script à votre application. Il est moins utile lorsque vous utilisez le contrôle comme un navigateur générique. Lorsque vous avez terminé le débogage de votre application, définissez cette propriété sur `true` pour supprimer les erreurs de script.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> a la valeur `true`, le <xref:System.Windows.Forms.WebBrowser> contrôle masque toutes les boîtes de dialogue qui proviennent du contrôle ActiveX sous-jacent, pas seulement les erreurs de script. Parfois, vous devrez peut-être supprimer des erreurs de script lors de l’affichage des boîtes de dialogue telles que celles utilisées pour les paramètres de sécurité de navigateur et de connexion de l’utilisateur. Dans ce cas, définissez <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> à `false` et supprimez les erreurs de script dans un gestionnaire pour le <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> événement. Pour plus d’informations, consultez l’exemple de code dans cette rubrique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment supprimer les erreurs de script sans supprimer d’autres boîtes de dialogue. Dans l’exemple, le <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> propriété est définie sur `false` pour vous assurer que les boîtes de dialogue sont affichés. Un gestionnaire pour le <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> événement supprime l’erreur. Cet événement est accessible uniquement lorsqu’un document est terminé le chargement, afin que le gestionnaire est attaché dans un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Gestionnaire d’événements.  
  
 [!code-csharp[WebBrowserMisc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#40)]
 [!code-vb[WebBrowserMisc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de l’[interface IWebBrowser2](https://go.microsoft.com/fwlink/?LinkId=151479) n’a pas pu être récupérée du [contrôle WebBrowser](https://go.microsoft.com/fwlink/?LinkId=151478) ActiveX sous-jacent.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarsEnabled">
      <MemberSignature Language="C#" Value="public bool ScrollBarsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollBarsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBarsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollBarsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBarsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si des barres de défilement sont affichées dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see langword="true" /> si des barres de défilement sont affichées dans le contrôle ; sinon, <see langword="false" />. La valeur par défaut est true.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la valeur de cette propriété est `true`, barres de défilement sont affichées uniquement quand le contenu de la page est supérieur à la fenêtre du navigateur.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowPageSetupDialog">
      <MemberSignature Language="C#" Value="public void ShowPageSetupDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPageSetupDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPageSetupDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPageSetupDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPageSetupDialog : unit -&gt; unit" Usage="webBrowser.ShowPageSetupDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre la boîte de dialogue **Mise en page** d’Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **mise en Page** élément de menu similaire à celui dans Internet Explorer **fichier** menu. Cette méthode affiche le **mise en Page** boîte de dialogue qui permet à vos utilisateurs de spécifier des valeurs d’en-tête et pied de page et d’autres paramètres de page avant l’impression. Pour imprimer le document actif, utilisez la <xref:System.Windows.Forms.WebBrowser.Print%2A> méthode ou le <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> (méthode). Pour afficher le **Aperçu avant impression** boîte de dialogue, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> méthode pour implémenter un **mise en Page** option de menu est semblable à celle sur Internet Explorer **fichier** menu. Cet exemple requiert que votre formulaire contienne un menu avec un élément de menu appelé `MenuItemFilePageSetup` et un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Pour accéder à l’imprimante via cette méthode. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre la boîte de dialogue **Imprimer** dans Internet Explorer sans définir de valeurs d’en-tête et de pied de page.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **impression** élément de menu similaire à celui dans Internet Explorer **fichier** menu. Cette méthode affiche le **imprimer** boîte de dialogue, permet à vos utilisateurs de modifier les paramètres d’impression avant d’imprimer. Pour permettre à vos utilisateurs de spécifier les paramètres de page avant l’impression, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> (méthode). Pour afficher le **Aperçu avant impression** boîte de dialogue, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> méthode pour implémenter un **impression** option de menu est semblable à celle sur Internet Explorer **fichier** menu. Cet exemple requiert que votre formulaire contienne un menu avec un élément de menu appelé `MenuItemFilePrint` et un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Pour accéder à l’imprimante via cette méthode. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintPreviewDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintPreviewDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintPreviewDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintPreviewDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintPreviewDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPrintPreviewDialog : unit -&gt; unit" Usage="webBrowser.ShowPrintPreviewDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre la boîte de dialogue **Aperçu avant impression** dans Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **Aperçu avant impression** élément de menu similaire à celui dans Internet Explorer **fichier** menu. Cette méthode affiche le **Aperçu avant impression** boîte de dialogue, permettant aux utilisateurs de voir comment apparaîtra le document actif s’il est imprimé. Pour permettre à vos utilisateurs de spécifier les paramètres de page avant l’impression, utilisez le <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> (méthode). Pour imprimer le document actif, utilisez la <xref:System.Windows.Forms.WebBrowser.Print%2A> méthode ou le <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> méthode pour implémenter un **Aperçu avant impression** option de menu similaire à celui dans Internet Explorer **fichier** menu. Cet exemple requiert que votre formulaire contienne un menu avec un élément de menu appelé `MenuItemFilePrintPreview`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.WebBrowser#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Pour accéder à l’imprimante via cette méthode. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPropertiesDialog">
      <MemberSignature Language="C#" Value="public void ShowPropertiesDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertiesDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPropertiesDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPropertiesDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowPropertiesDialog : unit -&gt; unit" Usage="webBrowser.ShowPropertiesDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre la boîte de dialogue **Propriétés** dans Internet Explorer pour le document actif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **propriétés** option de menu similaire à celui dans Internet Explorer **fichier** menu. Cette méthode affiche le **propriétés** boîte de dialogue qui contient des informations sur le document actif, telles que son type, URL, taille et les dates de création et de modification.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.ShowPropertiesDialog%2A> méthode pour implémenter un **propriétés** option de menu est semblable à celle sur Internet Explorer **fichier** menu. Cet exemple requiert que votre formulaire contienne un menu avec un élément de menu appelé `MenuItemFileProperties` et un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.WebBrowser#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowSaveAsDialog">
      <MemberSignature Language="C#" Value="public void ShowSaveAsDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSaveAsDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowSaveAsDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowSaveAsDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowSaveAsDialog : unit -&gt; unit" Usage="webBrowser.ShowSaveAsDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre la boîte de dialogue **Enregistrement de la page web** dans Internet Explorer ou la boîte de dialogue **Enregistrer** du document hébergé si celui-ci n’est pas une page HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour implémenter un **enregistrer en tant que** élément de menu similaire à celui dans Internet Explorer **fichier** menu. La boîte de dialogue qui s’affiche lorsque cette méthode est appelée varie selon le type de document actuellement chargé.  
  
> [!NOTE]
>  Cette méthode permet aux utilisateurs d’enregistrer uniquement le contenu du document qu’il a été chargé à l’origine. Toutes les modifications apportées au document au moment de l’exécution le <xref:System.Windows.Forms.WebBrowser.Document%2A> propriété ne sont pas conservées. Pour plus d’informations sur la récupération des modifications d’exécution, consultez [Comment : Accéder à la Source HTML dans le modèle d’objet de Document HTML managé](~/docs/framework/winforms/controls/how-to-access-the-html-source-in-the-managed-html-document-object-model.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> méthode pour implémenter un **enregistrer en tant que** option de menu est semblable à celle sur Internet Explorer **fichier** menu. Cet exemple requiert que votre formulaire contienne un menu avec un élément de menu appelé `MenuItemFileSaveAs` et un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Pour accéder à l’imprimante via cette méthode. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Énumération associée : <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
      </Docs>
    </Member>
    <Member MemberName="StatusText">
      <MemberSignature Language="C#" Value="public virtual string StatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.StatusText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StatusText : string" Usage="System.Windows.Forms.WebBrowser.StatusText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le texte d'état du contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value>Texte de l'état.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété pour afficher l’état de la <xref:System.Windows.Forms.WebBrowser> contrôle dans une barre d’état. Le texte d’état est un message qui contient des informations telles que l’URL d’un lien hypertexte lorsque le pointeur de la souris est placé sur celui-ci et l’URL du document actuellement chargé. Gérer le <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> barre d’événements pour mettre à jour l’état lorsque la valeur de la <xref:System.Windows.Forms.WebBrowser.StatusText%2A> les modifications de propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.StatusText%2A> pour implémenter une barre d’état pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.StatusBar> contrôle appelé `StatusBar1`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="StatusTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusTextChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusTextChanged : EventHandler " Usage="member this.StatusTextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.WebBrowser.StatusText" /> est modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Handle de cet événement pour mettre à jour un état barre lorsque la valeur de la <xref:System.Windows.Forms.WebBrowser.StatusText%2A> les modifications de propriété.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un gestionnaire pour le <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> pour implémenter une barre d’état pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.StatusBar> contrôle appelé `StatusBar1`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="webBrowser.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule toute navigation en attente et arrête tous les éléments de page dynamique, tels que les fonds sonores et les animations.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Windows.Forms.WebBrowser.Stop%2A> méthode pour implémenter un **arrêter** bouton similaire à celui d’Internet Explorer.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.Stop%2A> méthode pour implémenter un **arrêter** bouton pour le <xref:System.Windows.Forms.WebBrowser> contrôle similaire à celui d’Internet Explorer. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1` et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonStop`.  
  
 Pour l’exemple de code complet, consultez [Comment : Ajouter des fonctionnalités de navigateur Web à une Application de formulaires Windows](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.WebBrowser#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri with get, set" Usage="System.Windows.Forms.WebBrowser.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URL du document actif.</summary>
        <value><see cref="T:System.Uri" /> représentant l'URL du document actif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définition de cette propriété équivaut à appeler le <xref:System.Windows.Forms.WebBrowser.Navigate%2A> (méthode) et en lui passant l’URL spécifiée.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle conserve un historique de toutes les pages Web visitées pendant une session de navigation. Lorsque vous définissez la <xref:System.Windows.Forms.WebBrowser.Url%2A> propriété, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URL spécifiée et l’ajoute à la fin de la liste d’historique.  
  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle stocke les pages Web à partir de sites récemment visités dans un cache sur le disque dur local. Chaque page peut spécifier une date d’expiration indiquant la durée pendant laquelle il restera dans le cache. Lorsque le contrôle navigue vers une page, elle épargne le temps en affichant une version mise en cache, si celle-ci est disponible, plutôt que de télécharger de nouveau la page. Utilisez le <xref:System.Windows.Forms.WebBrowser.Refresh%2A> méthode pour forcer le <xref:System.Windows.Forms.WebBrowser> contrôle pour recharger la page actuelle en la téléchargeant, afin de garantir que le contrôle affiche la dernière version.  
  
> [!NOTE]
>  Cette propriété contient l’URL du document actif, même si un autre document a été demandé. Si vous définissez la valeur de cette propriété, puis immédiatement l’extraire à nouveau, la valeur récupérée peut être différente de la valeur définie si le <xref:System.Windows.Forms.WebBrowser> contrôle n’a pas de temps pour charger le nouveau document. Vous pouvez récupérer la nouvelle valeur dans un <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Gestionnaire d’événements.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.Url%2A> pour implémenter une barre d’adresses pour le <xref:System.Windows.Forms.WebBrowser> contrôle. Cet exemple requiert que votre formulaire contienne un <xref:System.Windows.Forms.WebBrowser> contrôle appelé `webBrowser1`, un <xref:System.Windows.Forms.TextBox> contrôle appelé `TextBoxAddress`et un <xref:System.Windows.Forms.Button> contrôle appelé `ButtonGo`. Lorsque vous tapez une URL dans la zone de texte et appuyez sur entrée ou cliquez sur le **accédez** bouton, le <xref:System.Windows.Forms.WebBrowser> contrôle navigue vers l’URL spécifiée. Lorsque vous accédez en cliquant sur un lien hypertexte, la zone de texte se met automatiquement à jour pour afficher l’URL actuelle.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cela <see cref="T:System.Windows.Forms.WebBrowser" /> instance n’est plus valide.</exception>
        <exception cref="T:System.InvalidOperationException">Une référence à une implémentation de la <see langword="IWebBrowser2" /> interface n’a pas pu être récupérée à partir d’ActiveX sous-jacent <see langword="WebBrowser" /> contrôle.</exception>
        <exception cref="T:System.ArgumentException">La valeur spécifiée lors de la définition de cette propriété n’est pas un URI absolu. Pour plus d'informations, consultez <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151478">WebBrowser, contrôle</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=151479">IWebBrowser2 Interface</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Windows.Forms.WebBrowser.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la version installée d'Internet Explorer.</summary>
        <value>Objet <see cref="T:System.Version" /> représentant la version installée d'Internet Explorer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.WebBrowser> contrôle est un wrapper managé autour d’un composant installé avec Internet Explorer. Cette propriété permet de déterminer la version d’Internet Explorer est installée. Cela est utile lorsque votre application utilise une fonctionnalité d’Internet Explorer qui se trouve uniquement dans certaines versions. Si la version requise n’est pas présente sur l’ordinateur local, vous pouvez fournir d’autres fonctionnalités ou inviter l’utilisateur à mettre à niveau.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowserShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool WebBrowserShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebBrowserShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property WebBrowserShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebBrowserShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowserShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si les raccourcis clavier sont activés dans le contrôle <see cref="T:System.Windows.Forms.WebBrowser" />.</summary>
        <value><see langword="true" /> si les raccourcis clavier sont activés dans le contrôle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissez cette propriété sur false pour empêcher les utilisateurs de l’utilisation des raccourcis clavier de Internet Explorer avec la <xref:System.Windows.Forms.WebBrowser> contrôle. Cela est utile lorsque vous souhaitez masquer le fait que vous utilisez le <xref:System.Windows.Forms.WebBrowser> contrôle, par exemple pour créer une interface utilisateur qui combine en toute transparence les contrôles DHTML et les contrôles Windows Forms.  
  
 Vous pouvez désactiver les autres fonctionnalités du navigateur standard en affectant la <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> et <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> propriétés à `false`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> propriété.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour les appelants immédiats utiliser ce contrôle. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB : Jeux d’autorisations nommés](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="webBrowser.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><see cref="T:System.Windows.Forms.Message" /> Windows à traiter.</param>
        <summary>Traite les messages Windows.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>