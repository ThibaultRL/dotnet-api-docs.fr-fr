<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64dceccfd2200afd7b30f3838219a566c1a9ab6a" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006016" /></Metadata><TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitializeNotification, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" />
  <TypeSignature Language="F#" Value="type BindingSource = class&#xA;    inherit Component&#xA;    interface IBindingListView&#xA;    interface IBindingList&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ITypedList&#xA;    interface ICancelAddNew&#xA;    interface ISupportInitializeNotification&#xA;    interface ISupportInitialize&#xA;    interface ICurrencyManagerProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28534-101">Encapsule la source de données pour un formulaire.</span><span class="sxs-lookup"><span data-stu-id="28534-101">Encapsulates the data source for a form.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-102">Le <xref:System.Windows.Forms.BindingSource> d’eux a de nombreuses fins.</span><span class="sxs-lookup"><span data-stu-id="28534-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="28534-103">Tout d’abord, il simplifie la liaison de contrôles sur un formulaire à des données en fournissant une gestion des devises, de notification de modification et d’autres services entre les contrôles Windows Forms et les sources de données.</span><span class="sxs-lookup"><span data-stu-id="28534-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="28534-104">Cela est accompli en attachant le <xref:System.Windows.Forms.BindingSource> à votre source de données à l’aide de la <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="28534-105">Pour les scénarios de liaison complexe vous pouvez éventuellement définir le <xref:System.Windows.Forms.BindingSource.DataMember%2A> propriété à une colonne spécifique ou de la liste dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="28534-106">Vous pouvez ensuite lier des contrôles à la <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="28534-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="28534-107">Toute interaction supplémentaire avec les données est effectuée en appelant le <xref:System.Windows.Forms.BindingSource> composant.</span><span class="sxs-lookup"><span data-stu-id="28534-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="28534-108">Pour obtenir des exemples sur la façon dont le <xref:System.Windows.Forms.BindingSource> peut simplifier le processus de liaison, consultez [Comment : Lier des contrôles Windows Forms à des valeurs de base de données DBNull](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) et [Comment : Gérer les erreurs et Exceptions qui se produisent avec Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span><span class="sxs-lookup"><span data-stu-id="28534-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="28534-109">Navigation et la mise à jour de la source de données s’effectue via des méthodes telles que <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, et <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="28534-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="28534-110">Opérations telles que le tri et le filtrage sont gérées via le <xref:System.Windows.Forms.BindingSource.Sort%2A> et <xref:System.Windows.Forms.BindingSource.Filter%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="28534-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="28534-111">Pour plus d’informations sur l’utilisation de tri et filtrage avec la <xref:System.Windows.Forms.BindingSource>, consultez [Comment : Trier et filtrer des données ADO.NET avec le composant de BindingSource Windows Forms](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span><span class="sxs-lookup"><span data-stu-id="28534-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="28534-112">En outre, le <xref:System.Windows.Forms.BindingSource> composant peut agir comme une source de données fortement typées.</span><span class="sxs-lookup"><span data-stu-id="28534-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="28534-113">En règle générale, le type de la source de données sous-jacente est fixe via un des mécanismes suivants :</span><span class="sxs-lookup"><span data-stu-id="28534-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="28534-114">Utilisez le <xref:System.Windows.Forms.BindingSource.Add%2A> méthode pour ajouter un élément à la <xref:System.Windows.Forms.BindingSource> composant.</span><span class="sxs-lookup"><span data-stu-id="28534-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="28534-115">Définir le <xref:System.Windows.Forms.BindingSource.DataSource%2A> à une liste, un objet unique ou un type de propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="28534-116">Ces deux mécanismes créer une liste fortement typée.</span><span class="sxs-lookup"><span data-stu-id="28534-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="28534-117">Pour plus d’informations sur l’utilisation de la <xref:System.Windows.Forms.BindingSource> pour lier à un type, consultez [Comment : Lier un contrôle de formulaires Windows à un Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span><span class="sxs-lookup"><span data-stu-id="28534-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="28534-118">Vous pouvez également utiliser le <xref:System.Windows.Forms.BindingSource> pour lier vos contrôles à un objet de fabrique.</span><span class="sxs-lookup"><span data-stu-id="28534-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="28534-119">Pour plus d’informations sur la façon de procéder, consultez [Comment : Lier un contrôle de formulaires Windows à un objet de fabrique](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span><span class="sxs-lookup"><span data-stu-id="28534-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28534-120">Étant donné qu’un <xref:System.Windows.Forms.BindingSource> gère les deux sources de données simples et complexes, la terminologie est problématique.</span><span class="sxs-lookup"><span data-stu-id="28534-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="28534-121">Dans cette documentation de classe, le terme *liste* fait référence à une collection de données au sein de la source de données hébergé et *élément* désigne un élément unique.</span><span class="sxs-lookup"><span data-stu-id="28534-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="28534-122">Lorsque fonctionnalités associé à des sources de données complexes, les termes équivalents *table* et *ligne* sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="28534-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="28534-123"><xref:System.Windows.Forms.BindingSource> Fournit des membres pour l’accès aux données sous-jacentes.</span><span class="sxs-lookup"><span data-stu-id="28534-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="28534-124">L’élément actuel peut être récupéré via la <xref:System.Windows.Forms.BindingSource.Current%2A> propriété et la liste entière peuvent être récupéré via la <xref:System.Windows.Forms.BindingSource.List%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="28534-125">Opérations de modification sont prises en charge sur l’élément actuel via <xref:System.Windows.Forms.BindingSource.Current%2A> et <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> et <xref:System.Windows.Forms.BindingSource.Add%2A> et <xref:System.Windows.Forms.BindingSource.AddNew%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="28534-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="28534-126">Bien que la gestion de la devise est gérée automatiquement pour tous les types de source de données sous-jacente, cette classe expose un nombre d’événements, tels que <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> et <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, qui permettent la personnalisation.</span><span class="sxs-lookup"><span data-stu-id="28534-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="28534-127">Sources de données qui sont liés à un <xref:System.Windows.Forms.BindingSource> composant peut également être parcourue et géré avec la <xref:System.Windows.Forms.BindingNavigator> classe, qui fournit une interface utilisateur de type magnétoscope (IU) pour parcourir les éléments d’une liste.</span><span class="sxs-lookup"><span data-stu-id="28534-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="28534-128">Bien que <xref:System.Windows.Forms.BindingNavigator> peut être lié à n’importe quelle source de données, il a été conçu pour s’intégrer avec un <xref:System.Windows.Forms.BindingSource> composant via son <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="28534-129">La propriété par défaut pour le <xref:System.Windows.Forms.BindingSource> classe est <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="28534-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="28534-130">L’événement par défaut est <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span><span class="sxs-lookup"><span data-stu-id="28534-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="28534-131">Nombre de membres de la <xref:System.Windows.Forms.BindingSource> classe fonctionnent dans la liste sous-jacente représentée par la <xref:System.Windows.Forms.BindingSource.List%2A> propriété et simplement référence à leur opération dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="28534-132">Par conséquent, lorsque le <xref:System.Windows.Forms.BindingSource> est lié à une implémentation personnalisée de <xref:System.Collections.IList>, le comportement exact de ces membres peut différer du comportement décrit dans la documentation de classe.</span><span class="sxs-lookup"><span data-stu-id="28534-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="28534-133">Par exemple, le <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> les appels de méthode <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28534-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28534-134">Le <xref:System.Windows.Forms.BindingSource> documentation décrit la <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> méthode avec la présentation qui le <xref:System.Collections.IList.RemoveAt%2A> méthode pour sous-jacent <xref:System.Collections.IList> est correctement implémenté.</span><span class="sxs-lookup"><span data-stu-id="28534-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-135">L’exemple de code suivant montre un <xref:System.Windows.Forms.ListBox> lié à un <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="28534-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="28534-136">Le <xref:System.Windows.Forms.BindingSource> est lié à un <xref:System.ComponentModel.BindingList%601> qui contient une liste de polices.</span><span class="sxs-lookup"><span data-stu-id="28534-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <related type="Article" href="~/docs/framework/winforms/controls/bindingsource-component.md"><span data-ttu-id="28534-137">Composant BindingSource</span><span class="sxs-lookup"><span data-stu-id="28534-137">BindingSource Component</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28534-138">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-139">Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.BindingSource" /> classe les valeurs de propriété par défaut.</span><span class="sxs-lookup"><span data-stu-id="28534-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-140">Le tableau suivant présente la valeur par défaut <xref:System.Windows.Forms.BindingSource> les valeurs de propriété initialisées par ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="28534-140">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="28534-141">Propriété</span><span class="sxs-lookup"><span data-stu-id="28534-141">Property</span></span>|<span data-ttu-id="28534-142">Valeur par défaut</span><span class="sxs-lookup"><span data-stu-id="28534-142">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : System.ComponentModel.IContainer -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="28534-143">Le <see cref="T:System.ComponentModel.IContainer" /> pour ajouter actuel <see cref="T:System.Windows.Forms.BindingSource" /> à.</span><span class="sxs-lookup"><span data-stu-id="28534-143">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span></span></param>
        <summary><span data-ttu-id="28534-144">Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.BindingSource" /> classe et ajoute le <see cref="T:System.Windows.Forms.BindingSource" /> au conteneur spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-145">Ce constructeur appelle le constructeur par défaut, puis ajoute actuel <xref:System.Windows.Forms.BindingSource> au conteneur spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-145">This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="28534-146">Il n'est pas généralement utilisé par le programmeur de solutions, mais plutôt par les auteurs des environnements de conception.</span><span class="sxs-lookup"><span data-stu-id="28534-146">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingSource : obj * string -&gt; System.Windows.Forms.BindingSource" Usage="new System.Windows.Forms.BindingSource (dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="28534-147">La source de données pour le <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-147">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></param>
        <param name="dataMember"><span data-ttu-id="28534-148">Colonne spécifique ou nom de liste dans la source de données à laquelle effectuer la liaison.</span><span class="sxs-lookup"><span data-stu-id="28534-148">The specific column or list name within the data source to bind to.</span></span></param>
        <summary><span data-ttu-id="28534-149">Initialise une nouvelle instance de la <see cref="T:System.Windows.Forms.BindingSource" /> classe avec la source de données spécifiée et un membre de données.</span><span class="sxs-lookup"><span data-stu-id="28534-149">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="bindingSource.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="28534-150">Un <see cref="T:System.Object" /> à ajouter à la liste interne.</span><span class="sxs-lookup"><span data-stu-id="28534-150">An <see cref="T:System.Object" /> to be added to the internal list.</span></span></param>
        <summary><span data-ttu-id="28534-151">Ajoute un élément existant à la liste interne.</span><span class="sxs-lookup"><span data-stu-id="28534-151">Adds an existing item to the internal list.</span></span></summary>
        <returns><span data-ttu-id="28534-152">Index de base zéro au niveau duquel <paramref name="value" /> a été ajouté à la liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-152">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-153">Le <xref:System.Windows.Forms.BindingSource.Add%2A> méthode fait référence à l’appel à la liste sous-jacente `Add` (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-153">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="28534-154">La liste interne doit contenir des types homogènes.</span><span class="sxs-lookup"><span data-stu-id="28534-154">The internal list must contain homogenous types.</span></span> <span data-ttu-id="28534-155">Si le <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriété n’a pas déjà été définie, puis le premier objet ajouté à la liste définit le type de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-155">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="28534-156">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-156">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-157">Le code suivant exemple comment utiliser le <xref:System.Windows.Forms.BindingSource.Add%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-157">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="28534-158">Pour exécuter cet exemple, collez le code dans un Windows Form et appelez le `PopulateBindingSourceWithFonts` méthode à partir du constructeur du formulaire.</span><span class="sxs-lookup"><span data-stu-id="28534-158">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28534-159"><paramref name="value" /> diffère selon les types d’éléments existants dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-159"><paramref name="value" /> differs in type from the existing items in the underlying list.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberSignature Language="F#" Value="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " Usage="member this.AddingNew : System.ComponentModel.AddingNewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-160">Se produit avant l'ajout d'un élément à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-160">Occurs before an item is added to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-161">Le <xref:System.Windows.Forms.BindingSource.AddingNew> événement se produit avant un nouvel objet est ajouté à la liste sous-jacente représentée par la <xref:System.Windows.Forms.BindingSource.List%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-161">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="28534-162">Cet événement est déclenché après le <xref:System.Windows.Forms.BindingSource.AddNew%2A> méthode est appelée, mais avant que le nouvel élément est créé et ajouté à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-162">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="28534-163">En gérant cet événement, le programmeur peut fournir la création d’élément personnalisé et le comportement d’insertion sans être obligé de dériver à partir de la <xref:System.Windows.Forms.BindingSource> classe.</span><span class="sxs-lookup"><span data-stu-id="28534-163">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="28534-164">Cela s’effectue dans le Gestionnaire d’événements en définissant le <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriété de le <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> paramètre vers le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="28534-164">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="28534-165">L’objet créé dans le <xref:System.Windows.Forms.BindingSource.AddingNew> événement doit être du même type que le type contenu dans la liste ou une exception se produit.</span><span class="sxs-lookup"><span data-stu-id="28534-165">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="28534-166">Vous ne pouvez pas définir le <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriété lorsqu’elle est liée à un <xref:System.Data.DataView> ou <xref:System.Data.DataTable> , car vous ne pouvez pas ajouter un nouveau <xref:System.Data.DataRowView> à la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-166">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="28534-167">Pour plus d’informations sur la fourniture des fonctionnalités personnalisées de création d’élément, consultez le <xref:System.Windows.Forms.BindingSource.AddNew%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-167">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="28534-168">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-168">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-169">Le code suivant exemple utilise un <xref:System.Windows.Forms.BindingSource> composant pour lier une liste à un <xref:System.Windows.Forms.DataGridView> contrôle.</span><span class="sxs-lookup"><span data-stu-id="28534-169">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="28534-170">Nouveaux éléments sont ajoutés à la liste en le <xref:System.Windows.Forms.BindingSource.AddingNew> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="28534-170">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="28534-171">Cet exemple de code fait partie d’un exemple plus complet fourni dans [Comment : Personnaliser l’ajout d’élément avec le BindingSource Windows Forms](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="28534-171">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28534-172"><see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> n’est pas le même type que le type contenu dans la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-172"><see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj&#xA;override this.AddNew : unit -&gt; obj" Usage="bindingSource.AddNew " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddNew</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-173">Ajoute un nouvel élément à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-173">Adds a new item to the underlying list.</span></span></summary>
        <returns><span data-ttu-id="28534-174">Le <see cref="T:System.Object" /> qui a été créé et ajouté à la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-174">The <see cref="T:System.Object" /> that was created and added to the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-175">Le <xref:System.Windows.Forms.BindingSource.AddNew%2A> méthode ajoute un nouvel élément à la liste sous-jacente représentée par la <xref:System.Windows.Forms.BindingSource.List%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-175">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="28534-176">Cette méthode configure de la série d’actions suivante :</span><span class="sxs-lookup"><span data-stu-id="28534-176">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="28534-177">Le <xref:System.Windows.Forms.BindingSource.EndEdit%2A> méthode est appelée automatiquement pour les opérations de modification en attente de validation.</span><span class="sxs-lookup"><span data-stu-id="28534-177">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="28534-178">Le <xref:System.Windows.Forms.BindingSource.AddingNew> événement est déclenché automatiquement.</span><span class="sxs-lookup"><span data-stu-id="28534-178">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="28534-179">Cet événement peut être géré par programme pour construire le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="28534-179">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="28534-180">Cela s’effectue dans le Gestionnaire d’événements en définissant le <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriété de le <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> paramètre vers le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="28534-180">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="28534-181">L’objet créé dans le <xref:System.Windows.Forms.BindingSource.AddingNew> événement doit être du même type que le type contenu dans la liste ou une exception se produit.</span><span class="sxs-lookup"><span data-stu-id="28534-181">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="28534-182">Si le <xref:System.Windows.Forms.BindingSource.AddingNew> événement n’est pas géré, et la liste sous-jacente est une <xref:System.ComponentModel.IBindingList>, puis la demande est passée à la liste <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-182">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="28534-183">Si la liste sous-jacente n'est pas un <xref:System.ComponentModel.IBindingList>, l'élément est créé automatiquement via son constructeur public par défaut.</span><span class="sxs-lookup"><span data-stu-id="28534-183">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor.</span></span> <span data-ttu-id="28534-184">Dans les deux cas, le nouvel élément est ajouté à la fin de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-184">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="28534-185">Le nouvel élément est ajouté immédiatement à la liste interne, sauf si la source de données implémente le <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="28534-185">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="28534-186">Dans ce cas, le nouvel élément n’est pas validé tant qu’un appel explicit à <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> est effectuée ou qu’une nouvelle opération de liste soit initialisée.</span><span class="sxs-lookup"><span data-stu-id="28534-186">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="28534-187">Avant qu’il soit validée, le nouvel élément peut être restauré en appelant <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, auquel cas le nouvel élément est ignoré.</span><span class="sxs-lookup"><span data-stu-id="28534-187">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="28534-188">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-188">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-189">Le code suivant exemple utilise un <xref:System.Windows.Forms.BindingSource> composant pour lier une liste à un <xref:System.Windows.Forms.DataGridView> contrôle.</span><span class="sxs-lookup"><span data-stu-id="28534-189">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="28534-190">Nouveaux éléments sont ajoutés à la liste en le <xref:System.Windows.Forms.BindingSource.AddingNew> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="28534-190">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="28534-191">Cet exemple de code fait partie d’un exemple plus complet fourni dans [Comment : Personnaliser l’ajout d’élément avec le BindingSource Windows Forms](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="28534-191">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28534-192">La propriété <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> a la valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-192">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span></span>  
  
<span data-ttu-id="28534-193">ou</span><span class="sxs-lookup"><span data-stu-id="28534-193">-or-</span></span> 
<span data-ttu-id="28534-194">Un constructeur public par défaut est introuvable pour le type d’élément actuel.</span><span class="sxs-lookup"><span data-stu-id="28534-194">A public default constructor could not be found for the current item type.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowEdit : bool" Usage="System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowEdit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-195">Obtient une valeur indiquant si les éléments de la liste sous-jacente peuvent être modifiés.</span><span class="sxs-lookup"><span data-stu-id="28534-195">Gets a value indicating whether items in the underlying list can be edited.</span></span></summary>
        <value><span data-ttu-id="28534-196"><see langword="true" /> pour indiquer les éléments de liste peut être modifiées ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-196"><see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-197">Le <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> propriété est généralement utilisée par d’autres composants pour déterminer si la modification des éléments de la liste est autorisée.</span><span class="sxs-lookup"><span data-stu-id="28534-197">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNew : bool with get, set" Usage="System.Windows.Forms.BindingSource.AllowNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-198">Obtient ou définit une valeur indiquant si le <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> méthode peut être utilisée pour ajouter des éléments à la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-198">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span></span></summary>
        <value><span data-ttu-id="28534-199"><see langword="true" /> Si <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> peut être utilisé pour ajouter des éléments à la liste ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-199"><see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-200">La valeur par défaut pour le <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriété varie selon le type de source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-200">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="28534-201">Si la liste sous-jacente implémente le <xref:System.ComponentModel.IBindingList> interface, cette propriété délègue à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-201">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="28534-202">Sinon, cette propriété retourne `false` si la liste sous-jacente est une des caractéristiques suivantes :</span><span class="sxs-lookup"><span data-stu-id="28534-202">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="28534-203">Il a une taille fixe, tel que déterminé par le <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-203">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="28534-204">Elle est en lecture seule, comme déterminé par le <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-204">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="28534-205">Le type de l’élément n’a pas de constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="28534-205">The item's type does not have a default constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28534-206">Une fois que la valeur de cette propriété est définie, la méthode getter ne fait plus référence l’appel à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-206">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="28534-207">Au lieu de cela, elle retourne simplement la valeur précédemment définie jusqu'à ce que le <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="28534-207">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="28534-208">Définition de cette propriété déclenche le <xref:System.Windows.Forms.BindingSource.ListChanged> événement avec <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> défini sur <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28534-208">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="28534-209">Si vous définissez la <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriété `true` et le type de liste sous-jacent n’a pas d’un constructeur par défaut, vous devez gérer le <xref:System.Windows.Forms.BindingSource.AddingNew> événement et créer le type approprié.</span><span class="sxs-lookup"><span data-stu-id="28534-209">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-210">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriété de la <xref:System.Windows.Forms.BindingSource> composant à l’utilisateur à ajouter de nouveaux éléments à la <xref:System.Windows.Forms.BindingSource> liste sous-jacente du composant.</span><span class="sxs-lookup"><span data-stu-id="28534-210">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="28534-211">Si cette propriété `true` provoque la limite <xref:System.Windows.Forms.DataGridView> contrôle à afficher sa ligne pour les nouveaux enregistrements.</span><span class="sxs-lookup"><span data-stu-id="28534-211">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28534-212">Cette propriété est définie sur <see langword="true" /> lorsque la liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété a une taille fixe ou est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28534-212">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="28534-213">La propriété est définie sur <see langword="true" /> et <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> événement n’est pas géré lorsque le type de liste sous-jacent n’a pas un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="28534-213">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span></span></exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowRemove : bool" Usage="System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.AllowRemove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-214">Obtient une valeur indiquant si des éléments peuvent être supprimés de la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-214">Gets a value indicating whether items can be removed from the underlying list.</span></span></summary>
        <value><span data-ttu-id="28534-215"><see langword="true" /> pour indiquer la liste des éléments peuvent être supprimés de la liste ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-215"><see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-216">Le <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> propriété est généralement utilisée par d’autres composants pour déterminer si la modification des éléments de la liste est autorisée.</span><span class="sxs-lookup"><span data-stu-id="28534-216">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28534-217">Trie la source de données avec les descriptions de tri spécifiées.</span><span class="sxs-lookup"><span data-stu-id="28534-217">Sorts the data source with the specified sort description or descriptions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.ListSortDescriptionCollection -&gt; unit" Usage="bindingSource.ApplySort sorts" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts"><span data-ttu-id="28534-218">Un <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> qui contient les descriptions de tri à appliquer à la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-218">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span></span></param>
        <summary><span data-ttu-id="28534-219">Trie la source de données avec les descriptions de tri spécifiées.</span><span class="sxs-lookup"><span data-stu-id="28534-219">Sorts the data source with the specified sort descriptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-220"><xref:System.ComponentModel.IBindingListView> implémente le tri multicolonne comme un ensemble de paires direction-descripteur de propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-220"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-221">La source de données n’est pas un <see cref="T:System.ComponentModel.IBindingListView" />.</span><span class="sxs-lookup"><span data-stu-id="28534-221">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberSignature Language="F#" Value="abstract member ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.ApplySort : System.ComponentModel.PropertyDescriptor * System.ComponentModel.ListSortDirection -&gt; unit" Usage="bindingSource.ApplySort (property, sort)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="28534-222">Un <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui décrit la propriété par laquelle trier la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-222">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span></span></param>
        <param name="sort"><span data-ttu-id="28534-223">Un <see cref="T:System.ComponentModel.ListSortDirection" /> indiquant comment la liste doit être triée.</span><span class="sxs-lookup"><span data-stu-id="28534-223">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span></span></param>
        <summary><span data-ttu-id="28534-224">Trie la source de données avec le descripteur de propriété et la direction de tri spécifiés.</span><span class="sxs-lookup"><span data-stu-id="28534-224">Sorts the data source using the specified property descriptor and sort direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-225">Le <xref:System.ComponentModel.IBindingList> implémente le tri de colonne unique à l’aide un <xref:System.ComponentModel.PropertyDescriptor> pour indiquer une propriété par laquelle trier et un <xref:System.ComponentModel.ListSortDirection> indiquant si le contenu de la propriété doit être trié dans l’ordre croissant ou décroissant.</span><span class="sxs-lookup"><span data-stu-id="28534-225">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-226">La source de données n’est pas un <see cref="T:System.ComponentModel.IBindingList" />.</span><span class="sxs-lookup"><span data-stu-id="28534-226">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-227">Se produit lorsque tous les clients ont été liés à ce <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-227">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-228">Le <xref:System.Windows.Forms.BindingSource.BindingComplete> événement se produit après tous les clients, généralement des contrôles, ont été liés à l’actuel <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="28534-228">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="28534-229">Le Gestionnaire de cet événement peut prendre les mesures appropriées en fonction de la réussite, erreur ou exceptions dans le processus de liaison, en examinant le <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> propriété de le <xref:System.Windows.Forms.BindingCompleteEventArgs> paramètre.</span><span class="sxs-lookup"><span data-stu-id="28534-229">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="28534-230">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-230">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-231">L’exemple de code suivant illustre la gestion du <xref:System.Windows.Forms.BindingSource.BindingComplete> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-231">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="28534-232">Pour exécuter ce code, collez-le dans un fichier de code vide.</span><span class="sxs-lookup"><span data-stu-id="28534-232">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingSource.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-233">Annule l'opération de modification actuelle.</span><span class="sxs-lookup"><span data-stu-id="28534-233">Cancels the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-234">Cette méthode ignore les modifications apportées aux données dans la mesure où le dernier enregistrement ou opération de chargement si les deux conditions suivantes sont remplies :</span><span class="sxs-lookup"><span data-stu-id="28534-234">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="28534-235">La source de données implémente le <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="28534-235">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="28534-236">Le <xref:System.Windows.Forms.BindingSource.EndEdit%2A> méthode n’a pas encore été appelée.</span><span class="sxs-lookup"><span data-stu-id="28534-236">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="28534-237">Cette méthode appelle la <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> méthode sous-jacent <xref:System.Windows.Forms.CurrencyManager>et est limité à des modifications apportées au niveau des lignes.</span><span class="sxs-lookup"><span data-stu-id="28534-237">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="bindingSource.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-238">Supprime tous les éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-238">Removes all elements from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-239">Le <xref:System.Windows.Forms.BindingSource.Clear%2A> méthode supprime tous les éléments de la liste sous-jacente représentée par la <xref:System.Windows.Forms.BindingSource.List%2A> propriété et définit le <xref:System.Windows.Forms.BindingSource.Count%2A> propriété à zéro.</span><span class="sxs-lookup"><span data-stu-id="28534-239">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="28534-240">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-240">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="bindingSource.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="28534-241">Le <see cref="T:System.Object" /> à localiser dans la liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-241">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span> <span data-ttu-id="28534-242">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-242">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28534-243">Détermine si un objet est un élément de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-243">Determines whether an object is an item in the list.</span></span></summary>
        <returns><span data-ttu-id="28534-244"><see langword="true" /> Si le <paramref name="value" /> paramètre se trouve dans le <see cref="P:System.Windows.Forms.BindingSource.List" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-244"><see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-245">Bien que l’implémentation dépend de la liste sous-jacente `Contains` (méthode), généralement les caractéristiques suivantes s’appliquent :</span><span class="sxs-lookup"><span data-stu-id="28534-245">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="28534-246"><xref:System.Windows.Forms.BindingSource.List%2A> recherche est effectuée à partir du premier élément au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="28534-246"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="28534-247">La méthode sous-jacente effectue une recherche linéaire ; Par conséquent, la durée d’exécution moyenne est proportionnelle à la valeur de la <xref:System.Windows.Forms.BindingSource.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-247">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="28534-248">La méthode sous-jacente détermine l’égalité en appelant le <xref:System.Object.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-248">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bindingSource.CopyTo (arr, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr"><span data-ttu-id="28534-249">Tableau de destination.</span><span class="sxs-lookup"><span data-stu-id="28534-249">The destination array.</span></span></param>
        <param name="index"><span data-ttu-id="28534-250">Index dans le tableau de destination auquel commencer l'opération de copie.</span><span class="sxs-lookup"><span data-stu-id="28534-250">The index in the destination array at which to start the copy operation.</span></span></param>
        <summary><span data-ttu-id="28534-251">Copie le contenu de la <see cref="P:System.Windows.Forms.BindingSource.List" /> dans le tableau spécifié, en commençant à la valeur d’index spécifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-251">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-252">Vous pouvez utiliser cette méthode pour combiner des éléments provenant de plusieurs sources dans un seul tableau.</span><span class="sxs-lookup"><span data-stu-id="28534-252">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingSource.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-253">Obtient le nombre total d’éléments dans la liste sous-jacente, en prenant cours <see cref="P:System.Windows.Forms.BindingSource.Filter" /> valeur en considération.</span><span class="sxs-lookup"><span data-stu-id="28534-253">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span></span></summary>
        <value><span data-ttu-id="28534-254">Nombre total d'éléments filtrés figurant dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-254">The total number of filtered items in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-255">Le <xref:System.Windows.Forms.BindingSource.Count%2A> propriété obtient le nombre d’éléments dans la liste sous-jacente représentée par la <xref:System.Windows.Forms.BindingSource.List%2A> propriété comme modifiée par la valeur de la <xref:System.Windows.Forms.BindingSource.Filter%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-255">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-256">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, et <xref:System.Windows.Forms.BindingSource.Count%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="28534-256">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="28534-257">Pour exécuter cet exemple, collez le code dans un formulaire qui contient un <xref:System.Windows.Forms.BindingSource> nommé `BindingSource1`, deux étiquettes nommées `label1` et `label2`et un bouton nommé `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-257">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="28534-258">Associer le `button1_Click` méthode avec le <xref:System.Windows.Forms.Control.Click> événement pour `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-258">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="28534-259">Les utilisateurs de Visual Basic devront ajouter une référence à System.Data.dll.</span><span class="sxs-lookup"><span data-stu-id="28534-259">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyManager : System.Windows.Forms.CurrencyManager" Usage="System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-260">Obtient le Gestionnaire de devise associé à ce <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-260">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <value><span data-ttu-id="28534-261"><see cref="T:System.Windows.Forms.CurrencyManager" /> associé à ce <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-261">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-262">Si vous souhaitez accéder au Gestionnaire de devise pour une autre liaison à l’utilisation de membre de données même le <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-262">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingSource.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-263">Obtient l'élément en cours dans la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-263">Gets the current item in the list.</span></span></summary>
        <value><span data-ttu-id="28534-264">Un <see cref="T:System.Object" /> qui représente l’élément actuel dans la liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété, ou <see langword="null" /> si la liste ne comporte aucun élément.</span><span class="sxs-lookup"><span data-stu-id="28534-264">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-265">Utiliser le <xref:System.Windows.Forms.BindingSource.Current%2A> propriété à accéder à l’élément actuel, mais utilisez le <xref:System.Windows.Forms.BindingSource.List%2A> propriété à obtenir la liste entière.</span><span class="sxs-lookup"><span data-stu-id="28534-265">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="28534-266">Pour déterminer le type de l’objet actuel, utilisez le <xref:System.Object.GetType%2A>, ou <xref:System.Object.ToString%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="28534-266">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="28534-267">Pour modifier l’élément actuel, définissez la <xref:System.Windows.Forms.BindingSource.Position%2A> à une nouvelle valeur intégrale, ou utilisez une des méthodes de navigation comme propriété <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="28534-267">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-268">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-268">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="28534-269">Pour exécuter cet exemple, collez le code dans un formulaire et appelez le `PopulateBindingSourceWithFonts` méthode à partir du formulaire <xref:System.Windows.Forms.Form.Load> méthode de gestion d’événements.</span><span class="sxs-lookup"><span data-stu-id="28534-269">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-270">Se produit quand l'élément actuellement lié change.</span><span class="sxs-lookup"><span data-stu-id="28534-270">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-271">Le <xref:System.Windows.Forms.BindingSource.CurrentChanged> événement est déclenché chaque fois que le <xref:System.Windows.Forms.BindingSource.Current%2A> des modifications de propriété pour une des raisons suivantes :</span><span class="sxs-lookup"><span data-stu-id="28534-271">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="28534-272">La position actuelle de la <xref:System.Windows.Forms.BindingSource.List%2A> modifications.</span><span class="sxs-lookup"><span data-stu-id="28534-272">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="28534-273">Le <xref:System.Windows.Forms.BindingSource.DataSource%2A> ou <xref:System.Windows.Forms.BindingSource.DataMember%2A> modification des propriétés.</span><span class="sxs-lookup"><span data-stu-id="28534-273">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="28534-274">L’appartenance de l’objet sous-jacent <xref:System.Windows.Forms.BindingSource.List%2A> change, ce qui conduit <xref:System.Windows.Forms.BindingSource.Position%2A> pour faire référence à un autre élément.</span><span class="sxs-lookup"><span data-stu-id="28534-274">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="28534-275">Exemples incluent l’ajout ou la suppression d’un élément avant l’élément actuel, suppression ou déplacement de l’élément actuel lui-même ou déplacement d’un élément à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="28534-275">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="28534-276">La liste sous-jacente est actualisée par un nouveau tri ou une opération de filtrage.</span><span class="sxs-lookup"><span data-stu-id="28534-276">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="28534-277">Lorsque cet événement est déclenché, le <xref:System.Windows.Forms.BindingSource.Current%2A> propriété contiennent déjà sa nouvelle valeur.</span><span class="sxs-lookup"><span data-stu-id="28534-277">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="28534-278"><xref:System.Windows.Forms.BindingSource.CurrentChanged> est l’événement par défaut pour le <xref:System.Windows.Forms.BindingSource> classe.</span><span class="sxs-lookup"><span data-stu-id="28534-278"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="28534-279">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-279">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-280">Se produit lorsqu’une valeur de propriété de la <see cref="P:System.Windows.Forms.BindingSource.Current" /> propriété a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-280">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-281">Le <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> événement est déclenché en réponse à toutes les circonstances qui déclenchent le <xref:System.Windows.Forms.BindingSource.CurrentChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-281">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="28534-282">En outre, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> est également déclenché chaque fois que la valeur de l’une des propriétés de <xref:System.Windows.Forms.BindingSource.Current%2A> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-282">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="28534-283">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-283">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-284">Se produit lorsqu’une exception relative à la devise est gérée silencieusement par le <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-284">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-285">Cet événement est informatif et signale uniquement les exceptions conformes CLS.</span><span class="sxs-lookup"><span data-stu-id="28534-285">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="28534-286">Pour déterminer quel type d’exception s’est produite, gérez cet événement et vérifiez la <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> propriété de la <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="28534-286">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="28534-287">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-287">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.BindingSource.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-288">Obtient ou définit la liste spécifique dans la source de données à laquelle le connecteur effectue actuellement des liaisons.</span><span class="sxs-lookup"><span data-stu-id="28534-288">Gets or sets the specific list in the data source to which the connector currently binds to.</span></span></summary>
        <value><span data-ttu-id="28534-289">Le nom d’une liste (ou ligne) dans le <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-289">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span></span> <span data-ttu-id="28534-290">La valeur par défaut est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="28534-290">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-291">Si le <xref:System.Windows.Forms.BindingSource.DataSource%2A> contient plusieurs listes (ou tables) de données, vous devez définir le <xref:System.Windows.Forms.BindingSource.DataMember%2A> propriété le nom d’une des sources.</span><span class="sxs-lookup"><span data-stu-id="28534-291">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="28534-292">Définition de cette propriété déclenche le <xref:System.Windows.Forms.BindingSource.DataMemberChanged> événement</span><span class="sxs-lookup"><span data-stu-id="28534-292">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-293">Se produit quand la valeur de propriété <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-293">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-294">Le <xref:System.Windows.Forms.BindingSource.DataMemberChanged> événement se produit après le <xref:System.Windows.Forms.BindingSource.DataMember%2A> les modifications de propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-294">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="28534-295">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-295">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.BindingSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-296">Obtient ou définit la source de données à laquelle le connecteur effectue une liaison.</span><span class="sxs-lookup"><span data-stu-id="28534-296">Gets or sets the data source that the connector binds to.</span></span></summary>
        <value><span data-ttu-id="28534-297">Un <see cref="T:System.Object" /> qui agit comme une source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-297">An <see cref="T:System.Object" /> that acts as a data source.</span></span> <span data-ttu-id="28534-298">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-298">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-299">Le <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriété peut être définie à un nombre de sources de données, y compris les types, les objets et les listes de types.</span><span class="sxs-lookup"><span data-stu-id="28534-299">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="28534-300">La source de données qui en résulte sera exposée comme une liste.</span><span class="sxs-lookup"><span data-stu-id="28534-300">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="28534-301">Le tableau suivant présente certaines des sources de données courantes et l’évaluation de liste résultante.</span><span class="sxs-lookup"><span data-stu-id="28534-301">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="28534-302">Propriété de source de données</span><span class="sxs-lookup"><span data-stu-id="28534-302">DataSource property</span></span>|<span data-ttu-id="28534-303">Résultats de la liste</span><span class="sxs-lookup"><span data-stu-id="28534-303">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="28534-304">Vide <xref:System.ComponentModel.IBindingList> d’objets.</span><span class="sxs-lookup"><span data-stu-id="28534-304">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="28534-305">Ajout d’un élément définit la liste vers le type de l’élément ajouté.</span><span class="sxs-lookup"><span data-stu-id="28534-305">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="28534-306">`null` avec <xref:System.Windows.Forms.BindingSource.DataMember%2A> défini</span><span class="sxs-lookup"><span data-stu-id="28534-306">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="28534-307">Non pris en charge, déclenche <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="28534-307">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="28534-308">Type non-liste ou objet de type « T »</span><span class="sxs-lookup"><span data-stu-id="28534-308">Non-list type or object of type "T"</span></span>|<span data-ttu-id="28534-309">Vide <xref:System.ComponentModel.IBindingList> de type « T ».</span><span class="sxs-lookup"><span data-stu-id="28534-309">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="28534-310">Instance de tableau</span><span class="sxs-lookup"><span data-stu-id="28534-310">Array instance</span></span>|<span data-ttu-id="28534-311"><xref:System.ComponentModel.IBindingList> contenant les éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="28534-311"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="28534-312"><xref:System.Collections.IEnumerable> Instance</span><span class="sxs-lookup"><span data-stu-id="28534-312"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="28534-313">Un <xref:System.ComponentModel.IBindingList> contenant le <xref:System.Collections.IEnumerable> éléments.</span><span class="sxs-lookup"><span data-stu-id="28534-313">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="28534-314">Instance de liste contenant type « T »</span><span class="sxs-lookup"><span data-stu-id="28534-314">List instance containing type "T"</span></span>|<span data-ttu-id="28534-315"><xref:System.ComponentModel.IBindingList> instance contenant le type « T ».</span><span class="sxs-lookup"><span data-stu-id="28534-315"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="28534-316">En outre, <xref:System.Windows.Forms.BindingSource.DataSource%2A> peut être définie à d’autres types de liste tel que <xref:System.ComponentModel.IListSource> et <xref:System.ComponentModel.ITypedList> et <xref:System.Windows.Forms.BindingSource> seront traiter de manière appropriée.</span><span class="sxs-lookup"><span data-stu-id="28534-316">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="28534-317">Dans ce cas, le type contenu dans la liste doit avoir un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="28534-317">In this case, the type contained in the list should have a default constructor.</span></span>  
  
 <span data-ttu-id="28534-318">Lorsque vous définissez une source de données, si la référence fournie contient plus d’une liste ou une table, vous devez définir le <xref:System.Windows.Forms.BindingSource.DataMember%2A> en une chaîne qui spécifie la liste à lier.</span><span class="sxs-lookup"><span data-stu-id="28534-318">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="28534-319">Définition de cette propriété déclenche le <xref:System.Windows.Forms.BindingSource.DataSourceChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-319">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28534-320">Si vous apportez des modifications à la <xref:System.Windows.Forms.BindingSource.DataSource%2A> valeur de propriété, vous devez le faire sur le thread d’interface utilisateur utilisateur pour vous assurer que l’interface utilisateur reflète les modifications.</span><span class="sxs-lookup"><span data-stu-id="28534-320">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="28534-321">Le <xref:System.Windows.Forms.BindingSource.DataSource%2A> propriété est la propriété par défaut pour le <xref:System.Windows.Forms.BindingSource> classe.</span><span class="sxs-lookup"><span data-stu-id="28534-321">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-322">L’exemple de code suivant assigne une liste de clients à la <xref:System.Windows.Forms.BindingSource.DataSource%2A> d’un <xref:System.Windows.Forms.BindingSource> composant.</span><span class="sxs-lookup"><span data-stu-id="28534-322">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="28534-323">Cet exemple de code fait partie d’un exemple plus complet fourni à [Comment : Déclencher des Notifications de modification à l’aide de la méthode ResetItem de BindingSource](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span><span class="sxs-lookup"><span data-stu-id="28534-323">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-324">Se produit quand la valeur de propriété <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-324">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-325">Le <xref:System.Windows.Forms.BindingSource.DataSourceChanged> événement se produit après le <xref:System.Windows.Forms.BindingSource.DataSource%2A> les modifications de propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-325">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="28534-326">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-326">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="bindingSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="28534-327"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="28534-327"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="28534-328">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.BindingSource" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="28534-328">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-329">Cette méthode est appelée par le public `Dispose` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-329">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="28534-330">`Dispose` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="28534-330">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="28534-331"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-331"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="28534-332">Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.Windows.Forms.BindingSource> références.</span><span class="sxs-lookup"><span data-stu-id="28534-332">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="28534-333">Cette méthode appelle la méthode `Dispose` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="28534-333">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-334">
            <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span><span class="sxs-lookup"><span data-stu-id="28534-334">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="28534-335">Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="28534-335">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="28534-336">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="28534-336">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="28534-337">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="28534-337">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="bindingSource.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-338">Applique des modifications en attente à la source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-338">Applies pending changes to the underlying data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-339">Lorsque le <xref:System.Windows.Forms.BindingSource.EndEdit%2A> est appelée, toutes les modifications en attente sont appliquées à la source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-339">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="28534-340">Cette méthode n’a aucun effet, sauf si les objets contenus par la source de données implémentent la <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="28534-340">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="28534-341">Si les objets n’implémentent pas le <xref:System.ComponentModel.IEditableObject> interface, les modifications apportées aux données sont copiés à la source de données sous-jacente immédiatement après chaque modification.</span><span class="sxs-lookup"><span data-stu-id="28534-341">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="28534-342">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-342">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.Windows.Forms.BindingSource.Filter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.Filter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-343">Obtient ou définit l'expression utilisée pour filtrer les lignes qui s'affichent.</span><span class="sxs-lookup"><span data-stu-id="28534-343">Gets or sets the expression used to filter which rows are viewed.</span></span></summary>
        <value><span data-ttu-id="28534-344">Chaîne qui spécifie la manière dont les lignes sont filtrées.</span><span class="sxs-lookup"><span data-stu-id="28534-344">A string that specifies how rows are to be filtered.</span></span> <span data-ttu-id="28534-345">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-345">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-346">Généralement utilisé dans des scénarios de liaison de données complexes, le <xref:System.Windows.Forms.BindingSource.Filter%2A> propriété vous permet d’afficher un sous-ensemble de la <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="28534-346">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="28534-347">Sous-jacent uniquement les listes qui implémentent le <xref:System.ComponentModel.IBindingListView> interface prise en charge le filtrage.</span><span class="sxs-lookup"><span data-stu-id="28534-347">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="28534-348">Lorsque <xref:System.Windows.Forms.BindingSource.Filter%2A> n’est pas `null`, le <xref:System.Windows.Forms.BindingSource> passe cette propriété à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-348">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="28534-349">Si vous définissez cette propriété pendant l’initialisation d’objet, l’appel est différée jusqu'à une fois que l’initialisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="28534-349">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="28534-350">Pour former une valeur de filtre, spécifiez le nom d’une colonne suivie d’un opérateur et une valeur sur laquelle filtrer.</span><span class="sxs-lookup"><span data-stu-id="28534-350">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="28534-351">La syntaxe de filtre acceptée dépend de la source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-351">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="28534-352">Si la source de données sous-jacent est un <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>, vous pouvez spécifier des expressions booléennes à l’aide de la syntaxe documentée pour la <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-352">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="28534-353">La valeur de la <xref:System.Windows.Forms.BindingSource.Filter%2A> propriété affecte la valeur de la <xref:System.Windows.Forms.BindingSource.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-353">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="28534-354">En outre, le <xref:System.Windows.Forms.BindingSource.Filter%2A> valeur persisteront lorsque les modifications de source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-354">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="28534-355">Pour arrêter le filtrage du <xref:System.Windows.Forms.BindingSource.DataSource%2A>, appelez le <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-355">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-356">L’exemple suivant montre comment utiliser le <xref:System.Windows.Forms.BindingSource.Filter%2A> propriété avec un <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="28534-356">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="28534-357">Pour exécuter cet exemple, collez le code dans un Windows Form et appelez `PopulateDataViewAndFilter` à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="28534-357">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="28534-358">Votre formulaire doit importer le <xref:System.Xml> et <xref:System.IO> espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="28534-358">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28534-359">Recherche l'élément spécifié dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-359">Find the specified item in the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int&#xA;override this.Find : System.ComponentModel.PropertyDescriptor * obj -&gt; int" Usage="bindingSource.Find (prop, key)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="28534-360"><see cref="T:System.ComponentModel.PropertyDescriptor" /> à rechercher.</span><span class="sxs-lookup"><span data-stu-id="28534-360">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span></span></param>
        <param name="key"><span data-ttu-id="28534-361">La valeur de <paramref name="prop" /> pour faire correspondre.</span><span class="sxs-lookup"><span data-stu-id="28534-361">The value of <paramref name="prop" /> to match.</span></span></param>
        <summary><span data-ttu-id="28534-362">Recherche l'index de l'élément qui a le descripteur de propriété donné.</span><span class="sxs-lookup"><span data-stu-id="28534-362">Searches for the index of the item that has the given property descriptor.</span></span></summary>
        <returns><span data-ttu-id="28534-363">Index de base zéro de l’élément qui a la valeur donnée pour <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="28534-363">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-364">Cette méthode est généralement utilisée dans les cas de liaison de données complexes pour trouver la première ligne où la valeur du champ spécifiée par le `prop` paramètre est égal à la valeur de la `key` paramètre</span><span class="sxs-lookup"><span data-stu-id="28534-364">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="28534-365">Cette méthode fait simplement référence à la demande à la liste sous-jacente <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-365">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="28534-366">Par exemple, si la source de données sous-jacente est une <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>, cette méthode appelle la <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-366">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="28534-367">Le comportement de <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, telles que la valeur retournée si aucun élément correspondant est trouvé, dépend de l’implémentation de la méthode dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-367">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-368">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.BindingSource.Find%2A>.</span><span class="sxs-lookup"><span data-stu-id="28534-368">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="28534-369">Pour obtenir un exemple complet, consultez la rubrique Vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="28534-369">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-370">La liste sous-jacente n’est pas de type <see cref="T:System.ComponentModel.IBindingList" />.</span><span class="sxs-lookup"><span data-stu-id="28534-370">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : string * obj -&gt; int" Usage="bindingSource.Find (propertyName, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="28534-371">Nom de la propriété à rechercher.</span><span class="sxs-lookup"><span data-stu-id="28534-371">The name of the property to search for.</span></span></param>
        <param name="key"><span data-ttu-id="28534-372">La valeur de l’élément avec la valeur <paramref name="propertyName" /> à rechercher.</span><span class="sxs-lookup"><span data-stu-id="28534-372">The value of the item with the specified <paramref name="propertyName" /> to find.</span></span></param>
        <summary><span data-ttu-id="28534-373">Retourne l'index de l'élément dans la liste avec le nom et la valeur de propriété spécifiés.</span><span class="sxs-lookup"><span data-stu-id="28534-373">Returns the index of the item in the list with the specified property name and value.</span></span></summary>
        <returns><span data-ttu-id="28534-374">Index de base zéro de l’élément avec la valeur et le nom de propriété spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-374">The zero-based index of the item with the specified property name and value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-375">Le <xref:System.Windows.Forms.BindingSource.Find%2A> méthode peut uniquement être utilisée lorsque la liste sous-jacente est une <xref:System.ComponentModel.IBindingList> avec recherche implémentée.</span><span class="sxs-lookup"><span data-stu-id="28534-375">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="28534-376">Cette méthode fait simplement référence à la demande à la liste sous-jacente <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-376">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="28534-377">Par exemple, si la source de données sous-jacente est une <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>, cette méthode convertit `propertyName` à un <xref:System.ComponentModel.PropertyDescriptor> et appelle le <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-377">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="28534-378">Le comportement de <xref:System.Windows.Forms.BindingSource.Find%2A>, telles que la valeur retournée si aucun élément correspondant est trouvé, dépend de l’implémentation de la méthode dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-378">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="28534-379">La comparaison de nom de propriété respecte la casse.</span><span class="sxs-lookup"><span data-stu-id="28534-379">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-380">L’exemple suivant montre comment utiliser le <xref:System.Windows.Forms.BindingSource.Find%2A> méthode avec un <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="28534-380">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="28534-381">Pour exécuter cet exemple, collez le code dans un Windows Form et appelez `PopulateDataViewAndFind` à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="28534-381">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="28534-382">Votre formulaire doit importer le <xref:System.Xml> et <xref:System.IO> espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="28534-382">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28534-383">La liste sous-jacente n’est pas un <see cref="T:System.ComponentModel.IBindingList" /> avec l’implémentation des fonctionnalités de recherche.</span><span class="sxs-lookup"><span data-stu-id="28534-383">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28534-384"><paramref name="propertyName" /> ne correspond pas à une propriété dans la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-384"><paramref name="propertyName" /> does not match a property in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bindingSource.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-385">Récupère un énumérateur pour les <see cref="P:System.Windows.Forms.BindingSource.List" />.</span><span class="sxs-lookup"><span data-stu-id="28534-385">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span></span></summary>
        <returns><span data-ttu-id="28534-386"><see cref="T:System.Collections.IEnumerator" /> pour <see cref="P:System.Windows.Forms.BindingSource.List" />.</span><span class="sxs-lookup"><span data-stu-id="28534-386">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.ComponentModel.PropertyDescriptor[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingSource.GetItemProperties listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="28534-387">Un tableau de <see cref="T:System.ComponentModel.PropertyDescriptor" /> objets à rechercher dans la liste comme pouvant être liée.</span><span class="sxs-lookup"><span data-stu-id="28534-387">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span></span></param>
        <summary><span data-ttu-id="28534-388">Récupère un tableau de <see cref="T:System.ComponentModel.PropertyDescriptor" /> objets représentant les propriétés pouvant être liées des données de source de type de liste.</span><span class="sxs-lookup"><span data-stu-id="28534-388">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span></span></summary>
        <returns><span data-ttu-id="28534-389">Un tableau de <see cref="T:System.ComponentModel.PropertyDescriptor" /> les objets qui représentent les propriétés sur ce type de liste utilisées pour lier des données.</span><span class="sxs-lookup"><span data-stu-id="28534-389">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string&#xA;override this.GetListName : System.ComponentModel.PropertyDescriptor[] -&gt; string" Usage="bindingSource.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="28534-390">Un tableau de <see cref="T:System.ComponentModel.PropertyDescriptor" /> objets à rechercher dans la liste comme pouvant être liée.</span><span class="sxs-lookup"><span data-stu-id="28534-390">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span></span></param>
        <summary><span data-ttu-id="28534-391">Obtient le nom de la liste fournissant les données pour la liaison.</span><span class="sxs-lookup"><span data-stu-id="28534-391">Gets the name of the list supplying data for the binding.</span></span></summary>
        <returns><span data-ttu-id="28534-392">Nom de la liste fournissant les données pour la liaison.</span><span class="sxs-lookup"><span data-stu-id="28534-392">The name of the list supplying the data for binding.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager&#xA;override this.GetRelatedCurrencyManager : string -&gt; System.Windows.Forms.CurrencyManager" Usage="bindingSource.GetRelatedCurrencyManager dataMember" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember"><span data-ttu-id="28534-393">Nom de la colonne ou de la liste, dans la source de données, pour lequel récupérer le gestionnaire de devise.</span><span class="sxs-lookup"><span data-stu-id="28534-393">The name of column or list, within the data source to retrieve the currency manager for.</span></span></param>
        <summary><span data-ttu-id="28534-394">Obtient le gestionnaire de devise connexe pour le membre de données spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-394">Gets the related currency manager for the specified data member.</span></span></summary>
        <returns><span data-ttu-id="28534-395">Connexe <see cref="T:System.Windows.Forms.CurrencyManager" /> pour le membre de données spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-395">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-396">Si `dataMember` est `null` ou une chaîne vide (" »), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> retourne le Gestionnaire de devise principal ; Sinon, il recherche un autre <xref:System.Windows.Forms.BindingSource> lié à la donnée membre spécifiée et retourne son gestionnaire de devise.</span><span class="sxs-lookup"><span data-stu-id="28534-396">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="bindingSource.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="28534-397">Le <see cref="T:System.Object" /> à localiser dans la liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-397">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span> <span data-ttu-id="28534-398">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-398">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28534-399">Recherche l'objet spécifié et retourne l'index de la première occurrence dans la liste entière.</span><span class="sxs-lookup"><span data-stu-id="28534-399">Searches for the specified object and returns the index of the first occurrence within the entire list.</span></span></summary>
        <returns><span data-ttu-id="28534-400">Index de base zéro de la première occurrence de la <paramref name="value" /> paramètre ; sinon, -1 si <paramref name="value" /> n’est pas dans la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-400">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-401">Bien que l’implémentation dépend de la liste sous-jacente `IndexOf` (méthode), généralement les caractéristiques suivantes s’appliquent :</span><span class="sxs-lookup"><span data-stu-id="28534-401">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="28534-402">Le <xref:System.Windows.Forms.BindingSource.List%2A> recherche est effectuée à partir du premier élément au dernier élément.</span><span class="sxs-lookup"><span data-stu-id="28534-402">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="28534-403">La méthode sous-jacente effectue une recherche linéaire ; Par conséquent, la durée d’exécution moyenne est proportionnelle à la valeur de la <xref:System.Windows.Forms.BindingSource.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-403">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="28534-404">La méthode sous-jacente détermine l’égalité en appelant le <xref:System.Object.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-404">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="bindingSource.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="28534-405">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</span><span class="sxs-lookup"><span data-stu-id="28534-405">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="28534-406"><see cref="T:System.Object" /> à insérer.</span><span class="sxs-lookup"><span data-stu-id="28534-406">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="28534-407">La valeur peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-407">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28534-408">Insère un élément dans la liste à l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-408">Inserts an item into the list at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-409">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-409">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28534-410"><paramref name="index" /> est inférieur à 0 ou supérieur à <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span><span class="sxs-lookup"><span data-stu-id="28534-410"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-411">La liste est en lecture seule ou a une taille fixe.</span><span class="sxs-lookup"><span data-stu-id="28534-411">The list is read-only or has a fixed size.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-412">Obtient une valeur indiquant si la liaison de la liste est suspendue.</span><span class="sxs-lookup"><span data-stu-id="28534-412">Gets a value indicating whether the list binding is suspended.</span></span></summary>
        <value><span data-ttu-id="28534-413"><see langword="true" /> pour indiquer que la liaison est suspendue ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-413"><see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-414">Obtient une valeur indiquant si la liste sous-jacente est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="28534-414">Gets a value indicating whether the underlying list has a fixed size.</span></span></summary>
        <value><span data-ttu-id="28534-415"><see langword="true" /> Si la liste sous-jacente a une taille fixe ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-415"><see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-416">Si la liste a une taille fixe, il n’autorise pas l’ajout ou la suppression d’éléments une fois que la liste a été créée, mais vous pouvez modifier des éléments existants.</span><span class="sxs-lookup"><span data-stu-id="28534-416">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-417">Obtient une valeur indiquant si la liste sous-jacente est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28534-417">Gets a value indicating whether the underlying list is read-only.</span></span></summary>
        <value><span data-ttu-id="28534-418"><see langword="true" /> si la liste est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-418"><see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-419">Une liste qui est en lecture seule n’autorise pas l’ajout, la suppression ou la modification de tout élément de liste après la création de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-419">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSorted : bool" Usage="System.Windows.Forms.BindingSource.IsSorted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.IsSorted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-420">Obtient une valeur indiquant si les éléments dans la liste sous-jacente sont triés.</span><span class="sxs-lookup"><span data-stu-id="28534-420">Gets a value indicating whether the items in the underlying list are sorted.</span></span></summary>
        <value><span data-ttu-id="28534-421"><see langword="true" /> Si la liste est un <see cref="T:System.ComponentModel.IBindingList" /> et est triée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-421"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-422"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> Retourne toujours `false` si la liste n’est pas un <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="28534-422"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-423">Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="28534-423">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="28534-424"><see langword="true" /> pour indiquer que la liste est synchronisée ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-424"><see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.BindingSource.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="28534-425">Index de base zéro de l'élément à récupérer.</span><span class="sxs-lookup"><span data-stu-id="28534-425">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="28534-426">Obtient ou définit l'élément de liste situé à l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-426">Gets or sets the list element at the specified index.</span></span></summary>
        <value><span data-ttu-id="28534-427">Élément au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="28534-427">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-428">Le <xref:System.Windows.Forms.BindingSource.Item%2A> propriété représente l’indexeur de cette classe.</span><span class="sxs-lookup"><span data-stu-id="28534-428">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="28534-429">Il accepte `null` comme une valeur valide et autorise les éléments en double dans la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-429">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="28534-430">Paramètre une valeur déclenchera le <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-430">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28534-431"><paramref name="index" /> est inférieur à zéro ou supérieure ou égale à <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span><span class="sxs-lookup"><span data-stu-id="28534-431"><paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.BindingSource.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-432">Obtient la liste à laquelle le connecteur est lié.</span><span class="sxs-lookup"><span data-stu-id="28534-432">Gets the list that the connector is bound to.</span></span></summary>
        <value><span data-ttu-id="28534-433">Un <see cref="T:System.Collections.IList" /> qui représente la liste, ou <see langword="null" /> s’il n’existe aucune liste sous-jacente associée à cet <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-433">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-434">Le <xref:System.Windows.Forms.BindingSource> classe gère uniformément différentes sources de données.</span><span class="sxs-lookup"><span data-stu-id="28534-434">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="28534-435">Dans l’idéal, le <xref:System.Windows.Forms.BindingSource.List%2A> propriété doit être définie sur un grand <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="28534-435">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="28534-436">Cependant, parfois, il peut être nécessaire d’effectuer un cast de cette propriété pour un type plus spécifique.</span><span class="sxs-lookup"><span data-stu-id="28534-436">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="28534-437">Le tableau suivant présente le type sous-jacent de la liste, qui varie selon le type de valeur de la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-437">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="28534-438">Type de source de données</span><span class="sxs-lookup"><span data-stu-id="28534-438">Data source type</span></span>|<span data-ttu-id="28534-439">Description de la liste sous-jacente</span><span class="sxs-lookup"><span data-stu-id="28534-439">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="28534-440"><xref:System.Windows.Forms.BindingSource.DataSource%2A> et <xref:System.Windows.Forms.BindingSource.DataMember%2A> sont `null`</span><span class="sxs-lookup"><span data-stu-id="28534-440"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="28534-441">Un <xref:System.Collections.ArrayList> vide.</span><span class="sxs-lookup"><span data-stu-id="28534-441">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="28534-442"><xref:System.Windows.Forms.BindingSource.DataSource%2A> est `null`, mais <xref:System.Windows.Forms.BindingSource.DataMember%2A> n’est pas `null`</span><span class="sxs-lookup"><span data-stu-id="28534-442"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="28534-443">None ; une tentative d’obtention du <xref:System.Windows.Forms.BindingSource.List%2A> lèvera une <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="28534-443">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="28534-444">Un <xref:System.Array> instance</span><span class="sxs-lookup"><span data-stu-id="28534-444">An <xref:System.Array> instance</span></span>|<span data-ttu-id="28534-445">Élément <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="28534-445">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="28534-446">Un <xref:System.ComponentModel.IListSource> instance</span><span class="sxs-lookup"><span data-stu-id="28534-446">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="28534-447">La valeur de retour d’un appel à la <xref:System.ComponentModel.IListSource.GetList%2A> méthode de ce <xref:System.ComponentModel.IListSource> instance.</span><span class="sxs-lookup"><span data-stu-id="28534-447">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="28534-448">Un <xref:System.ComponentModel.IBindingList> instance</span><span class="sxs-lookup"><span data-stu-id="28534-448">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="28534-449">Élément <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="28534-449">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="28534-450">Un <xref:System.Collections.IList> instance</span><span class="sxs-lookup"><span data-stu-id="28534-450">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="28534-451">Élément <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="28534-451">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="28534-452">Non -<xref:System.Collections.IList> instance de type « T »</span><span class="sxs-lookup"><span data-stu-id="28534-452">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="28534-453">Un <xref:System.ComponentModel.BindingList%601> avec un seul élément.</span><span class="sxs-lookup"><span data-stu-id="28534-453">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="28534-454">Un <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span><span class="sxs-lookup"><span data-stu-id="28534-454">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="28534-455">Un <xref:System.Collections.ArrayList> avec un seul élément.</span><span class="sxs-lookup"><span data-stu-id="28534-455">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="28534-456">Un <xref:System.Collections.IEnumerable></span><span class="sxs-lookup"><span data-stu-id="28534-456">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="28534-457">Un <xref:System.Collections.ArrayList> avec les éléments sont copiés.</span><span class="sxs-lookup"><span data-stu-id="28534-457">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="28534-458">Le <xref:System.Array> tapez avec <xref:System.Windows.Forms.BindingSource.DataMember%2A> d’élément de type « T »</span><span class="sxs-lookup"><span data-stu-id="28534-458">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="28534-459"><xref:System.ComponentModel.BindingList%601></span><span class="sxs-lookup"><span data-stu-id="28534-459">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="28534-460">Un <xref:System.Type> qui représente un <xref:System.ComponentModel.IListSource> ou <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="28534-460">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="28534-461">Une instance créée par un appel à la <xref:System.Activator.CreateInstance%28System.Type%29> méthode de la <xref:System.Activator> classe.</span><span class="sxs-lookup"><span data-stu-id="28534-461">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="28534-462">Un <xref:System.NotSupportedException> peut être levée.</span><span class="sxs-lookup"><span data-stu-id="28534-462">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="28534-463">Le <xref:System.Collections.IList> tapez avec <xref:System.Windows.Forms.BindingSource.DataMember%2A> d’élément de type « T »</span><span class="sxs-lookup"><span data-stu-id="28534-463">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="28534-464">ou</span><span class="sxs-lookup"><span data-stu-id="28534-464">-or-</span></span><br /><br /> <span data-ttu-id="28534-465">Non -<xref:System.Collections.IList> type</span><span class="sxs-lookup"><span data-stu-id="28534-465">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="28534-466"><xref:System.ComponentModel.BindingList%601></span><span class="sxs-lookup"><span data-stu-id="28534-466">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="28534-467">Le <xref:System.ComponentModel.ICustomTypeDescriptor> type</span><span class="sxs-lookup"><span data-stu-id="28534-467">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="28534-468">None ; une tentative d’obtention du <xref:System.Windows.Forms.BindingSource.List%2A> lèvera une <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="28534-468">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="28534-469">Si le type récupéré est le <xref:System.Collections.IList> interface, la collection sous-jacente peut être plus complexe, comme un <xref:System.Collections.ArrayList> ou <xref:System.Data.DataView> classe.</span><span class="sxs-lookup"><span data-stu-id="28534-469">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-470">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, et <xref:System.Windows.Forms.BindingSource.Count%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="28534-470">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="28534-471">Pour exécuter cet exemple, collez le code dans un formulaire qui contient un <xref:System.Windows.Forms.BindingSource> nommé `BindingSource1`, deux étiquettes nommées `label1` et `label2`et un bouton nommé `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-471">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="28534-472">Associer le `button1_Click` méthode avec le <xref:System.Windows.Forms.Control.Click> événement pour `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-472">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="28534-473">Les utilisateurs de Visual Basic devront ajouter une référence à System.Data.dll.</span><span class="sxs-lookup"><span data-stu-id="28534-473">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IBindingList.ListChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-474">Se produit en cas de modification de la liste sous-jacente ou d'un de ses éléments.</span><span class="sxs-lookup"><span data-stu-id="28534-474">Occurs when the underlying list changes or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-475">Le <xref:System.Windows.Forms.BindingSource.ListChanged> événement se produit lors d’une modification de l’appartenance ou les métadonnées de la liste sous-jacente représentée par la <xref:System.Windows.Forms.BindingSource.List%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-475">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="28534-476">Par exemple, cet événement est déclenché lorsque les éléments sont ajoutés, supprimés ou déplacés, ou le <xref:System.Windows.Forms.BindingSource.DataSource%2A> ou <xref:System.Windows.Forms.BindingSource.DataMember%2A> modification des propriétés.</span><span class="sxs-lookup"><span data-stu-id="28534-476">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="28534-477">Les valeurs de la <xref:System.Windows.Forms.BindingSource.Sort%2A> et <xref:System.Windows.Forms.BindingSource.Filter%2A> propriétés persisteront lorsque cet événement se produit.</span><span class="sxs-lookup"><span data-stu-id="28534-477">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="28534-478">Cet événement peut être totalement supprimé en définissant le <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-478">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="28534-479">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-479">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-480">L’exemple de code suivant illustre la gestion du <xref:System.Windows.Forms.BindingSource.ListChanged> événements de la <xref:System.Windows.Forms.BindingSource> composant détecter lorsque le <xref:System.Windows.Forms.BindingSource> liste sous-jacente du composant est modifié.</span><span class="sxs-lookup"><span data-stu-id="28534-480">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberSignature Language="F#" Value="member this.MoveFirst : unit -&gt; unit" Usage="bindingSource.MoveFirst " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-481">Passe au premier élément de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-481">Moves to the first item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-482">Modifie la valeur actuelle de la <xref:System.Windows.Forms.BindingSource.Position%2A> propriété sur 0, le premier élément dans la source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-482">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-483">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, et <xref:System.Windows.Forms.BindingSource.Position%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="28534-483">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="28534-484">Pour exécuter cet exemple, collez le code dans un formulaire qui importe le <xref:System.Drawing.Drawing2D> espace de noms et contient un <xref:System.Windows.Forms.BindingSource> nommé `BindingSource1` et un bouton nommé `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-484">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="28534-485">Associer le `Form1_Load` et `Form1_Paint` méthodes avec la <xref:System.Windows.Forms.Form.Load> et <xref:System.Windows.Forms.Control.Paint> événements pour le formulaire et associez le `button1_click` méthode avec le <xref:System.Windows.Forms.Control.Click> événement pour `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-485">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="28534-486">Les utilisateurs de Visual Basic devront ajouter une référence à System.Data.dll.</span><span class="sxs-lookup"><span data-stu-id="28534-486">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberSignature Language="F#" Value="member this.MoveLast : unit -&gt; unit" Usage="bindingSource.MoveLast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-487">Passe au dernier élément de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-487">Moves to the last item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-488">Modifie la valeur actuelle de la <xref:System.Windows.Forms.BindingSource.Position%2A> à l’index du dernier élément dans la source de données sous-jacente, qui est égale à la valeur de propriété le <xref:System.Windows.Forms.BindingSource.Count%2A> propriété moins 1.</span><span class="sxs-lookup"><span data-stu-id="28534-488">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; unit" Usage="bindingSource.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-489">Passe à l'élément suivant de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-489">Moves to the next item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-490">Modifie la valeur actuelle de la <xref:System.Windows.Forms.BindingSource.Position%2A> propriété à l’élément suivant dans la source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-490">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-491">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, et <xref:System.Windows.Forms.BindingSource.Position%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="28534-491">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="28534-492">Pour exécuter cet exemple, collez le code dans un formulaire qui importe le <xref:System.Drawing.Drawing2D> espace de noms et contient un <xref:System.Windows.Forms.BindingSource> nommé `BindingSource1` et un bouton nommé `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-492">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="28534-493">Associer le `Form1_Load` et `Form1_Paint` méthodes avec la <xref:System.Windows.Forms.Form.Load> et <xref:System.Windows.Forms.Control.Paint> événements pour le formulaire et associez le `button1_click` méthode avec le <xref:System.Windows.Forms.Control.Click> événement pour `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-493">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="28534-494">Les utilisateurs de Visual Basic devront ajouter une référence à System.Data.dll.</span><span class="sxs-lookup"><span data-stu-id="28534-494">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberSignature Language="F#" Value="member this.MovePrevious : unit -&gt; unit" Usage="bindingSource.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-495">Passe à l'élément précédent de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-495">Moves to the previous item in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-496">Cette méthode modifie la valeur actuelle de la <xref:System.Windows.Forms.BindingSource.Position%2A> propriété à l’élément précédent dans la source de données sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-496">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit&#xA;override this.OnAddingNew : System.ComponentModel.AddingNewEventArgs -&gt; unit" Usage="bindingSource.OnAddingNew e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-497"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-497">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-498">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.AddingNew" />.</span><span class="sxs-lookup"><span data-stu-id="28534-498">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-499">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-499">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-500">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-500">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-501">La méthode <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-501">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-502">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-502">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-503">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-503">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingSource.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-504"><see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-504">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-505">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" />.</span><span class="sxs-lookup"><span data-stu-id="28534-505">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-506">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-506">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-507">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-507">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-508">La méthode <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-508">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-509">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-509">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-510">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-510">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-511"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-511">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-512">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="28534-512">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-513">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-513">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-514">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-514">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-515">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-515">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-516">La méthode <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-516">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-517">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-517">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-518">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-518">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingSource.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-519"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-519">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-520">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />.</span><span class="sxs-lookup"><span data-stu-id="28534-520">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-521">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-521">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-522">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-522">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-523">La méthode <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-523">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-524">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-524">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-525">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-525">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : System.Windows.Forms.BindingManagerDataErrorEventArgs -&gt; unit" Usage="bindingSource.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-526"><see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-526">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-527">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.DataError" />.</span><span class="sxs-lookup"><span data-stu-id="28534-527">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-528">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-528">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-529">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-529">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-530">La méthode <xref:System.Windows.Forms.BindingSource.OnDataError%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-530">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-531">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-531">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-532">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-532">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-533"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-533">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-534">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />.</span><span class="sxs-lookup"><span data-stu-id="28534-534">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-535">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-535">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-536">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-536">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-537">La méthode <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-537">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-538">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-538">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-539">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-539">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span>  
  
<span data-ttu-id="28534-540">La méthode <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-540">The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-541">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-541">This is the preferred technique for handling the event in a derived class.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="bindingSource.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-542"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-542">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-543">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />.</span><span class="sxs-lookup"><span data-stu-id="28534-543">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-544">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-544">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-545">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-545">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-546">La méthode <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-546">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-547">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-547">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-548">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-548">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit&#xA;override this.OnListChanged : System.ComponentModel.ListChangedEventArgs -&gt; unit" Usage="bindingSource.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-549"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-549">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-550">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.ListChanged" />.</span><span class="sxs-lookup"><span data-stu-id="28534-550">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-551">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-551">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-552">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-552">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-553">La méthode <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-553">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-554">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-554">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-555">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-555">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="bindingSource.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28534-556"><see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-556">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28534-557">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="28534-557">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-558">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-558">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="28534-559">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-559">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="28534-560">La méthode <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="28534-560">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="28534-561">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="28534-561">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28534-562">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span><span class="sxs-lookup"><span data-stu-id="28534-562">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingSource.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-563">Obtient ou définit l'index de l'élément actuel dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-563">Gets or sets the index of the current item in the underlying list.</span></span></summary>
        <value><span data-ttu-id="28534-564">Index de base zéro qui spécifie la position de l'élément actuel dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-564">A zero-based index that specifies the position of the current item in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-565">Lors de la définition du <xref:System.Windows.Forms.BindingSource.Position%2A> propriété, les valeurs hors limites sont traitées de la manière suivante :</span><span class="sxs-lookup"><span data-stu-id="28534-565">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="28534-566">Les valeurs négatives sont traitées comme étant 0.</span><span class="sxs-lookup"><span data-stu-id="28534-566">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="28534-567">Les valeurs supérieures ou égales à <xref:System.Windows.Forms.BindingSource.Count%2A> sont traités comme des <xref:System.Windows.Forms.BindingSource.Count%2A> moins 1.</span><span class="sxs-lookup"><span data-stu-id="28534-567">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="28534-568">Modification de la <xref:System.Windows.Forms.BindingSource.Position%2A> propriété ajustera la <xref:System.Windows.Forms.BindingSource.Current%2A> propriété de la même manière.</span><span class="sxs-lookup"><span data-stu-id="28534-568">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-569">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, et <xref:System.Windows.Forms.BindingSource.Position%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="28534-569">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="28534-570">Pour exécuter cet exemple, collez le code dans un formulaire qui importe le <xref:System.Drawing.Drawing2D> espace de noms et contient un <xref:System.Windows.Forms.BindingSource> nommé `BindingSource1` et un bouton nommé `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-570">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="28534-571">Associer le `Form1_Load` et `Form1_Paint` méthodes avec la <xref:System.Windows.Forms.Form.Load> et <xref:System.Windows.Forms.Control.Paint> événements pour le formulaire et associez le `button1_click` méthode avec le <xref:System.Windows.Forms.Control.Click> événement pour `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-571">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="28534-572">Les utilisateurs de Visual Basic devront ajouter une référence à System.Data.dll.</span><span class="sxs-lookup"><span data-stu-id="28534-572">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-573">Se produit après la valeur de la <see cref="P:System.Windows.Forms.BindingSource.Position" /> propriété a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-573">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-574">Le <xref:System.Windows.Forms.BindingSource.PositionChanged> événement se produit après le <xref:System.Windows.Forms.BindingSource.Position%2A> propriété a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="28534-574">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="28534-575">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="28534-575">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RaiseListChangedEvents : bool with get, set" Usage="System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-576">Obtient ou définit une valeur indiquant si <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> événements doivent être déclenchés.</span><span class="sxs-lookup"><span data-stu-id="28534-576">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span></span></summary>
        <value><span data-ttu-id="28534-577"><see langword="true" /> Si <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> événements doivent être déclenchés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-577"><see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="28534-578">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="28534-578">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-579">Lorsque le <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriété est `false`, elle interrompt le déclenchement de <xref:System.Windows.Forms.BindingSource.ListChanged> événements.</span><span class="sxs-lookup"><span data-stu-id="28534-579">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="28534-580">Cet événement indique que la liste liée a été modifiée d’une certaine façon, y compris l’ajout, de suppression, d’insertion ou de modification d’éléments.</span><span class="sxs-lookup"><span data-stu-id="28534-580">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="bindingSource.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="28534-581">L’élément à supprimer de la liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-581">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span></span></param>
        <summary><span data-ttu-id="28534-582">Supprime l'élément spécifié de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-582">Removes the specified item from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-583">Le <xref:System.Windows.Forms.BindingSource.Remove%2A> méthode provoque la liste dans laquelle rechercher la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="28534-583">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="28534-584">Si le paramètre est trouvé, cette méthode essaie de supprimer l’élément de la <xref:System.Windows.Forms.BindingSource.List%2A>.</span><span class="sxs-lookup"><span data-stu-id="28534-584">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="28534-585">Cette tentative échoue si la liste a une taille fixe ou est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28534-585">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="28534-586">Ces deux conditions peuvent être testées avec les <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> et <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="28534-586">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="28534-587">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-587">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-588">La liste sous-jacente a une taille fixe ou est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28534-588">The underlying list has a fixed size or is read-only.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="bindingSource.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="28534-589">Index de base zéro de l'élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="28534-589">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="28534-590">Supprime l'élément au niveau de l'index spécifié dans la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-590">Removes the item at the specified index in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-591">Ces deux conditions peuvent être testées avec les <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> et <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> propriétés, respectivement.</span><span class="sxs-lookup"><span data-stu-id="28534-591">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="28534-592">Cette méthode déclenche la <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-592">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-593">L’exemple de code suivant montre le <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, et <xref:System.Windows.Forms.BindingSource.Count%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="28534-593">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="28534-594">Pour exécuter cet exemple, collez le code dans un formulaire qui contient un <xref:System.Windows.Forms.BindingSource> nommé `BindingSource1`, deux étiquettes nommées `label1` et `label2`et un bouton nommé `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-594">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="28534-595">Associer le `button1_Click` méthode avec le <xref:System.Windows.Forms.Control.Click> événement pour `button1`.</span><span class="sxs-lookup"><span data-stu-id="28534-595">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="28534-596">Les utilisateurs de Visual Basic devront ajouter une référence à System.Data.dll.</span><span class="sxs-lookup"><span data-stu-id="28534-596">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="28534-597"><paramref name="index" /> est inférieur à zéro ou supérieur à la valeur de la <see cref="P:System.Windows.Forms.BindingSource.Count" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-597"><paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-598">La liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété est en lecture seule ou a une taille fixe.</span><span class="sxs-lookup"><span data-stu-id="28534-598">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberSignature Language="F#" Value="member this.RemoveCurrent : unit -&gt; unit" Usage="bindingSource.RemoveCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-599">Supprime l'élément sélectionné de la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-599">Removes the current item from the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-600">Le <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> méthode est équivalente à la <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-600">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28534-601">La propriété <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> a la valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-601">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span></span>  
  
<span data-ttu-id="28534-602">ou</span><span class="sxs-lookup"><span data-stu-id="28534-602">-or-</span></span> 
 <span data-ttu-id="28534-603"><see cref="P:System.Windows.Forms.BindingSource.Position" /> est inférieur à 0 ou supérieur à <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span><span class="sxs-lookup"><span data-stu-id="28534-603"><see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-604">La liste sous-jacente représentée par la <see cref="P:System.Windows.Forms.BindingSource.List" /> propriété est en lecture seule ou a une taille fixe.</span><span class="sxs-lookup"><span data-stu-id="28534-604">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFilter : unit -&gt; unit&#xA;override this.RemoveFilter : unit -&gt; unit" Usage="bindingSource.RemoveFilter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingListView.RemoveFilter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-605">Supprime le filtre associé à le <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-605">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-606">Le <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> méthode fait référence à la demande à la liste sous-jacente <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-606">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="28534-607">Répertorie uniquement les qui implémentent <xref:System.ComponentModel.IBindingListView> prennent en charge le filtrage.</span><span class="sxs-lookup"><span data-stu-id="28534-607">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="28534-608">Par défaut, un appel à cette méthode est équivalent à la définition du <xref:System.Windows.Forms.BindingSource.Filter%2A> propriété `null`.</span><span class="sxs-lookup"><span data-stu-id="28534-608">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-609">La liste sous-jacente ne prend pas en charge le filtrage.</span><span class="sxs-lookup"><span data-stu-id="28534-609">The underlying list does not support filtering.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberSignature Language="F#" Value="abstract member RemoveSort : unit -&gt; unit&#xA;override this.RemoveSort : unit -&gt; unit" Usage="bindingSource.RemoveSort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveSort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-610">Supprime le tri associé à la <see cref="T:System.Windows.Forms.BindingSource" />.</span><span class="sxs-lookup"><span data-stu-id="28534-610">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-611">Le <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> méthode fait référence à la demande à la liste sous-jacente <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-611">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="28534-612">Répertorie uniquement les qui implémentent <xref:System.ComponentModel.IBindingList> prennent en charge le tri.</span><span class="sxs-lookup"><span data-stu-id="28534-612">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="28534-613">Par défaut, un appel à cette méthode est équivalent à la définition du <xref:System.Windows.Forms.BindingSource.Sort%2A> propriété `null`.</span><span class="sxs-lookup"><span data-stu-id="28534-613">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-614">La liste sous-jacente ne prend pas en charge le tri.</span><span class="sxs-lookup"><span data-stu-id="28534-614">The underlying list does not support sorting.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberSignature Language="F#" Value="abstract member ResetAllowNew : unit -&gt; unit&#xA;override this.ResetAllowNew : unit -&gt; unit" Usage="bindingSource.ResetAllowNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-615">Réinitialise le <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-615">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-616">Le <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> méthode réinitialise le <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriété afin de refléter la valeur correspondante <xref:System.Windows.Forms.BindingSource.AllowNew%2A> propriété dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-616">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : bool -&gt; unit" Usage="bindingSource.ResetBindings metadataChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged"><span data-ttu-id="28534-617"><see langword="true" /> Si le schéma de données a changé ; <see langword="false" /> si seules les valeurs ont changé.</span><span class="sxs-lookup"><span data-stu-id="28534-617"><see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span></span></param>
        <summary><span data-ttu-id="28534-618">Entraîne la relecture par un contrôle lié au <see cref="T:System.Windows.Forms.BindingSource" /> de tous les éléments dans la liste et l'actualisation de leurs valeurs affichées.</span><span class="sxs-lookup"><span data-stu-id="28534-618">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-619">Le <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> méthode informe tous les contrôles liés à la <xref:System.Windows.Forms.BindingSource> à actualiser leurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="28534-619">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="28534-620">La méthode effectue cela en déclenchant le <xref:System.Windows.Forms.BindingSource.ListChanged> événement au moins une fois ; le `metaDataChanged` paramètre indique la nature de la modification sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-620">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="28534-621">Un `metaDataChanged` valeur `true` indique que le schéma de données de <xref:System.Windows.Forms.BindingSource> a changé.</span><span class="sxs-lookup"><span data-stu-id="28534-621">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="28534-622">Un <xref:System.Windows.Forms.BindingSource.ListChanged> événement est déclenché avec <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> défini sur <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28534-622">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="28534-623">Un `metaDataChanged` valeur `false` indique que seules les valeurs d’un ou plusieurs éléments ont été modifiés.</span><span class="sxs-lookup"><span data-stu-id="28534-623">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="28534-624">Quelle que soit la valeur de `metaDataChanged`, un <xref:System.Windows.Forms.BindingSource.ListChanged> événement est déclenché avec <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> défini sur <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28534-624">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="28534-625">Par conséquent, l’appel <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> avec un paramètre de `true` déclenche deux <xref:System.Windows.Forms.BindingSource.ListChanged> événements.</span><span class="sxs-lookup"><span data-stu-id="28534-625">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="28534-626"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> est appelé automatiquement chaque fois qu’un autre membre apporte des modifications majeures à la liaison de données, telles que la définition du <xref:System.Windows.Forms.BindingSource.DataSource%2A> ou <xref:System.Windows.Forms.BindingSource.DataMember%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="28534-626"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="28534-627">Toutefois, le programmeur peut également appeler cette méthode explicitement.</span><span class="sxs-lookup"><span data-stu-id="28534-627">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-628">Le code suivant exemple utilise un <xref:System.Windows.Forms.BindingSource> composant pour lier une liste de tableaux qui ne fournit pas de notification de modification.</span><span class="sxs-lookup"><span data-stu-id="28534-628">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="28534-629">Un élément est supprimé de la liste, et les contrôles dépendants sont informés de la modification en appelant le <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-629">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="28534-630">Cet exemple de code fait partie d’un exemple plus complet fourni dans [Comment : Refléter les mises à jour de Source de données dans un contrôle de formulaire Windows avec le composant BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="28534-630">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberSignature Language="F#" Value="member this.ResetCurrentItem : unit -&gt; unit" Usage="bindingSource.ResetCurrentItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-631">Dessine un contrôle lié à la <see cref="T:System.Windows.Forms.BindingSource" /> à relire l’élément actuellement sélectionné et actualise sa valeur affichée.</span><span class="sxs-lookup"><span data-stu-id="28534-631">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-632">Appeler cette méthode provoque la <xref:System.Windows.Forms.BindingSource.ListChanged> événement se produise, spécifiant l’élément modifié à la position actuelle.</span><span class="sxs-lookup"><span data-stu-id="28534-632">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberSignature Language="F#" Value="member this.ResetItem : int -&gt; unit" Usage="bindingSource.ResetItem itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><span data-ttu-id="28534-633">Index de base zéro de l'élément modifié.</span><span class="sxs-lookup"><span data-stu-id="28534-633">The zero-based index of the item that has changed.</span></span></param>
        <summary><span data-ttu-id="28534-634">Dessine un contrôle lié à la <see cref="T:System.Windows.Forms.BindingSource" /> à la relecture par l’élément à l’index spécifié et actualise sa valeur affichée.</span><span class="sxs-lookup"><span data-stu-id="28534-634">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-635">Le <xref:System.Windows.Forms.BindingSource.ResetItem%2A> méthode avertit tous les contrôles liés à l’élément à l’emplacement spécifié <xref:System.Windows.Forms.BindingSource.Position%2A> pour actualiser leurs valeurs.</span><span class="sxs-lookup"><span data-stu-id="28534-635">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="28534-636">La méthode effectue cela en déclenchant le <xref:System.Windows.Forms.BindingSource.ListChanged> événement avec <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> défini sur <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="28534-636">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="28534-637"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> est appelé automatiquement chaque fois que les modifications sont apportées à la valeur d’un élément individuel.</span><span class="sxs-lookup"><span data-stu-id="28534-637"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="28534-638">Toutefois, le programmeur peut également appeler cette méthode explicitement.</span><span class="sxs-lookup"><span data-stu-id="28534-638">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-639">Le code suivant exemple utilise un <xref:System.Windows.Forms.BindingSource> composant pour lier une liste à un <xref:System.Windows.Forms.DataGridView> contrôle.</span><span class="sxs-lookup"><span data-stu-id="28534-639">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="28534-640">La liste ne déclenche pas de notifications de modification, donc la <xref:System.Windows.Forms.BindingSource.ResetItem%2A> méthode sur le <xref:System.Windows.Forms.BindingSource> est utilisée pour déclencher le <xref:System.Windows.Forms.BindingSource.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="28534-640">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="28534-641">Cet exemple de code fait partie d’un exemple plus complet fourni dans [Comment : Déclencher des Notifications de modification à l’aide de la méthode ResetItem de BindingSource](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span><span class="sxs-lookup"><span data-stu-id="28534-641">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberSignature Language="F#" Value="member this.ResumeBinding : unit -&gt; unit" Usage="bindingSource.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-642">Relance la liaison de données.</span><span class="sxs-lookup"><span data-stu-id="28534-642">Resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-643"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sont deux méthodes qui permettent la suspension temporaire et le rétablissement de la liaison de données dans un scénario de liaison simple.</span><span class="sxs-lookup"><span data-stu-id="28534-643"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="28534-644">Vous devez généralement suspendre la liaison de données si l’utilisateur doit être autorisé à effectuer plusieurs modifications de champs de données avant la validation.</span><span class="sxs-lookup"><span data-stu-id="28534-644">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="28534-645">Par exemple, si un champ doit être modifié conformément à une seconde, mais la validation du premier champ provoquerait le deuxième champ en erreur.</span><span class="sxs-lookup"><span data-stu-id="28534-645">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28534-646">À l’aide de <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> empêche les modifications soient apportées dans la source de données jusqu'à ce que <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> est appelée, mais n’empêche pas réellement les événements ne se produise.</span><span class="sxs-lookup"><span data-stu-id="28534-646">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="28534-647">Les contrôles qui utilisent la liaison de données complexes, tels que le <xref:System.Windows.Forms.DataGridView> contrôler, mettre à jour leurs valeurs basées sur les événements de changement tels que le <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement, ainsi, l’appel <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> ne les empêche pas de recevoir des modifications apportées à la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-647">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="28534-648">Pour cette raison, cela <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sont conçus pour une utilisation avec des contrôles liés simples, tels que le <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="28534-648">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="28534-649">Vous pouvez également utiliser ces méthodes dans un scénario de liaison complexes si vous supprimez <xref:System.Windows.Forms.BindingSource.ListChanged> événements en définissant le <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-649">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : string with get, set" Usage="System.Windows.Forms.BindingSource.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-650">Obtient ou définit les noms de colonnes utilisés pour le tri, et l'ordre de tri pour consulter les lignes dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-650">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span></span></summary>
        <value><span data-ttu-id="28534-651">Chaîne qui respecte la casse contenant le nom de la colonne suivi de "ASC" (ordre croissant) ou de "DESC" (ordre décroissant).</span><span class="sxs-lookup"><span data-stu-id="28534-651">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span></span> <span data-ttu-id="28534-652">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-652">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-653">Le <xref:System.Windows.Forms.BindingSource.Sort%2A> propriété est une chaîne qui respecte la casse qui spécifie les noms de colonne utilisées pour trier les lignes, ainsi que le sens du tri.</span><span class="sxs-lookup"><span data-stu-id="28534-653">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="28534-654">Les colonnes sont triées par ordre croissant par défaut.</span><span class="sxs-lookup"><span data-stu-id="28534-654">Columns are sorted ascending by default.</span></span> <span data-ttu-id="28534-655">Plusieurs colonnes peuvent être séparées par des virgules, tels que `"State, ZipCode DESC"`.</span><span class="sxs-lookup"><span data-stu-id="28534-655">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="28534-656">Pour prendre en charge le tri, la liste sous-jacente doit implémenter le <xref:System.ComponentModel.IBindingList> ou <xref:System.ComponentModel.IBindingListView> interfaces.</span><span class="sxs-lookup"><span data-stu-id="28534-656">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="28534-657">Cette fonctionnalité peut être interrogée via la <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="28534-657">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="28534-658">Le tri multicolonne est disponible lorsque le <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="28534-658">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="28534-659">Définition de la <xref:System.Windows.Forms.BindingSource.Sort%2A> propriété changera la liste interne en fonction de son type :</span><span class="sxs-lookup"><span data-stu-id="28534-659">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="28534-660">Si la liste est de type <xref:System.ComponentModel.IBindingList>, le <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> et <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> propriétés sont définies dans la liste interne.</span><span class="sxs-lookup"><span data-stu-id="28534-660">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="28534-661">Si la liste est de type <xref:System.ComponentModel.IBindingListView>, le <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="28534-661">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="28534-662">Propriétés de tri de la liste interne sont modifiées uniquement lorsque la chaîne de tri n’est pas `null`.</span><span class="sxs-lookup"><span data-stu-id="28534-662">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="28534-663">Le `get` accesseur de cette propriété ne récupérera pas la valeur de tri de la liste interne ; au lieu de cela, elle retournera le `set` valeur de l’accesseur.</span><span class="sxs-lookup"><span data-stu-id="28534-663">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="28534-664">La valeur de la <xref:System.Windows.Forms.BindingSource.Sort%2A> propriété persisteront lorsque les modifications de source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-664">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-665">L’exemple suivant montre comment utiliser le <xref:System.Windows.Forms.BindingSource.Sort%2A> propriété pour effectuer le tri de base avec un <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="28534-665">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="28534-666">Pour exécuter cet exemple, collez le code dans un Windows Form et appelez `PopulateDataViewAndSort` à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="28534-666">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="28534-667">Votre formulaire doit importer le <xref:System.Xml> et <xref:System.IO> espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="28534-667">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="28534-668">L’exemple suivant montre comment utiliser le <xref:System.Windows.Forms.BindingSource.Sort%2A> propriété pour effectuer le tri avec avancé un <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="28534-668">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="28534-669">Pour exécuter cet exemple, collez le code dans un Windows Form et appelez `PopulateDataViewAndAdvancedSort` à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="28534-669">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="28534-670">Votre formulaire doit importer le <xref:System.Xml> et <xref:System.IO> espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="28534-670">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescriptions : System.ComponentModel.ListSortDescriptionCollection" Usage="System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SortDescriptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-671">Obtient la collection de descriptions de tri appliquée à la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-671">Gets the collection of sort descriptions applied to the data source.</span></span></summary>
        <value><span data-ttu-id="28534-672">Si la source de données est un <see cref="T:System.ComponentModel.IBindingListView" />, un <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> qui contient les descriptions de tri appliquées à la liste ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-672">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-673">Si la liste n’est pas un <xref:System.ComponentModel.IBindingListView>, le <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="28534-673">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="28534-674">Le <xref:System.ComponentModel.ListSortDescriptionCollection> est une collection en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="28534-674">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDirection : System.ComponentModel.ListSortDirection" Usage="System.Windows.Forms.BindingSource.SortDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-675">Obtient la direction dans laquelle les éléments de la liste sont triés.</span><span class="sxs-lookup"><span data-stu-id="28534-675">Gets the direction the items in the list are sorted.</span></span></summary>
        <value><span data-ttu-id="28534-676">Parmi les <see cref="T:System.ComponentModel.ListSortDirection" /> valeurs indiquant la direction dans laquelle la liste est triée.</span><span class="sxs-lookup"><span data-stu-id="28534-676">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-677">Si la liste sous-jacente n’est pas un <xref:System.ComponentModel.IBindingList>, le <xref:System.Windows.Forms.BindingSource.SortDirection%2A> propriété retournera toujours <xref:System.ComponentModel.ListSortDirection.Ascending>.</span><span class="sxs-lookup"><span data-stu-id="28534-677">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortProperty : System.ComponentModel.PropertyDescriptor" Usage="System.Windows.Forms.BindingSource.SortProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SortProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-678">Obtient le <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui est utilisé pour trier la liste.</span><span class="sxs-lookup"><span data-stu-id="28534-678">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span></span></summary>
        <value><span data-ttu-id="28534-679">Si la liste est un <see cref="T:System.ComponentModel.IBindingList" />, le <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui est utilisé pour le tri ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28534-679">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-680">Si la liste n’est pas un <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> retourne toujours `null`.</span><span class="sxs-lookup"><span data-stu-id="28534-680">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAdvancedSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-681">Obtient une valeur indiquant si la source de données prend en charge le tri multicolonne.</span><span class="sxs-lookup"><span data-stu-id="28534-681">Gets a value indicating whether the data source supports multi-column sorting.</span></span></summary>
        <value><span data-ttu-id="28534-682"><see langword="true" /> Si la liste est un <see cref="T:System.ComponentModel.IBindingListView" /> et prend en charge le tri multicolonne ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-682"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-683">Si la liste n’est pas un <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-683">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotification : bool" Usage="System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsChangeNotification</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-684">Obtient une valeur indiquant si la source de données prend en charge la notification de modification.</span><span class="sxs-lookup"><span data-stu-id="28534-684">Gets a value indicating whether the data source supports change notification.</span></span></summary>
        <value><span data-ttu-id="28534-685"><see langword="true" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="28534-685"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFiltering : bool" Usage="System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingListView.SupportsFiltering</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-686">Obtient une valeur indiquant si la source de données prend en charge le filtrage.</span><span class="sxs-lookup"><span data-stu-id="28534-686">Gets a value indicating whether the data source supports filtering.</span></span></summary>
        <value><span data-ttu-id="28534-687"><see langword="true" /> Si la liste est un <see cref="T:System.ComponentModel.IBindingListView" /> et prend en charge le filtrage ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-687"><see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-688">Si la liste n’est pas un <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-688">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSearching : bool" Usage="System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSearching</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-689">Obtient une valeur indiquant si la source de données prend en charge la recherche avec le <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="28534-689">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span></span></summary>
        <value><span data-ttu-id="28534-690"><see langword="true" /> Si la liste est un <see cref="T:System.ComponentModel.IBindingList" /> et prend en charge la recherche avec le <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> méthode ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-690"><see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-691">Si la source de données n’est pas un <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-691">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28534-692">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> membre.</span><span class="sxs-lookup"><span data-stu-id="28534-692">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="28534-693">Pour obtenir un exemple complet, consultez la rubrique Vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="28534-693">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSorting : bool" Usage="System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IBindingList.SupportsSorting</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-694">Obtient une valeur indiquant si la source de données prend en charge le tri.</span><span class="sxs-lookup"><span data-stu-id="28534-694">Gets a value indicating whether the data source supports sorting.</span></span></summary>
        <value><span data-ttu-id="28534-695"><see langword="true" /> Si la source de données est un <see cref="T:System.ComponentModel.IBindingList" /> et prend en charge le tri ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-695"><see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-696">Si la source de données n’est pas un <xref:System.ComponentModel.IBindingList>, le <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> propriété retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-696">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberSignature Language="F#" Value="member this.SuspendBinding : unit -&gt; unit" Usage="bindingSource.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-697">Suspend la liaison de données pour empêcher que les modifications mettent à jour la source de données liée.</span><span class="sxs-lookup"><span data-stu-id="28534-697">Suspends data binding to prevent changes from updating the bound data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-698"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sont deux méthodes qui permettent la suspension temporaire et le rétablissement de la liaison de données dans un scénario de liaison simple.</span><span class="sxs-lookup"><span data-stu-id="28534-698"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="28534-699">Vous devez généralement suspendre la liaison de données si l’utilisateur doit être autorisé à effectuer plusieurs modifications de champs de données avant la validation.</span><span class="sxs-lookup"><span data-stu-id="28534-699">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="28534-700">Par exemple, si un champ doit être modifié conformément à une seconde, mais la validation du premier champ provoquerait le deuxième champ en erreur.</span><span class="sxs-lookup"><span data-stu-id="28534-700">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28534-701">À l’aide de <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> et empêche les modifications soient apportées dans la source de données jusqu'à ce que <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> est appelée, mais n’empêche pas réellement les événements ne se produise.</span><span class="sxs-lookup"><span data-stu-id="28534-701">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="28534-702">Les contrôles qui utilisent la liaison de données complexes, tels que le <xref:System.Windows.Forms.DataGridView> contrôler, mettre à jour leurs valeurs basées sur les événements de changement tels que le <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement, ainsi, l’appel <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> ne les empêche pas de recevoir des modifications apportées à la source de données.</span><span class="sxs-lookup"><span data-stu-id="28534-702">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="28534-703">Pour cette raison, cela <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sont conçus pour une utilisation avec des contrôles liés simples, tels que le <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="28534-703">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="28534-704">Vous pouvez également utiliser ces méthodes dans un scénario de liaison complexes si vous supprimez <xref:System.Windows.Forms.BindingSource.ListChanged> événements en définissant le <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="28534-704">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-705">Obtient un objet pouvant être utilisé pour synchroniser l’accès à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-705">Gets an object that can be used to synchronize access to the underlying list.</span></span></summary>
        <value><span data-ttu-id="28534-706">Objet pouvant être utilisé pour synchroniser l’accès à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="28534-706">An object that can be used to synchronize access to the underlying list.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="28534-707">Le <see cref="T:System.ComponentModel.PropertyDescriptor" /> à ajouter aux index utilisés pour la recherche.</span><span class="sxs-lookup"><span data-stu-id="28534-707">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="28534-708">Ajoute le <see cref="T:System.ComponentModel.PropertyDescriptor" /> aux index utilisés pour la recherche.</span><span class="sxs-lookup"><span data-stu-id="28534-708">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-709">Si la liste sous-jacente est une <xref:System.ComponentModel.IBindingList> type, cette méthode ajoute la <xref:System.ComponentModel.PropertyDescriptor> aux index ; sinon, en appelant cette méthode lève un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="28534-709">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28534-710">La liste sous-jacente n’est pas un <see cref="T:System.ComponentModel.IBindingList" />.</span><span class="sxs-lookup"><span data-stu-id="28534-710">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop"><span data-ttu-id="28534-711">Le <see cref="T:System.ComponentModel.PropertyDescriptor" /> à supprimer des index utilisés pour la recherche.</span><span class="sxs-lookup"><span data-stu-id="28534-711">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span></span></param>
        <summary><span data-ttu-id="28534-712">Supprime la <see cref="T:System.ComponentModel.PropertyDescriptor" /> des index utilisés pour la recherche.</span><span class="sxs-lookup"><span data-stu-id="28534-712">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-713">Si la liste sous-jacente n’est pas un <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, cette méthode lève toujours une <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="28534-713">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="28534-714">Index de l’élément qui a été ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="28534-714">The index of the item that was added to the collection.</span></span></param>
        <summary><span data-ttu-id="28534-715">Élimine un nouvel élément en attente de la collection.</span><span class="sxs-lookup"><span data-stu-id="28534-715">Discards a pending new item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-716">Le <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> méthode restaure un ajout en attente d’un élément précédemment ajouté à la collection à l’index spécifié par `position`.</span><span class="sxs-lookup"><span data-stu-id="28534-716">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="28534-717">Le `position` paramètre est nécessaire car plusieurs nouveaux éléments peuvent être simultanément en attente.</span><span class="sxs-lookup"><span data-stu-id="28534-717">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="28534-718">Index de l’élément qui a été ajouté à la collection.</span><span class="sxs-lookup"><span data-stu-id="28534-718">The index of the item that was added to the collection.</span></span></param>
        <summary><span data-ttu-id="28534-719">Valide un nouvel élément en attente dans la collection.</span><span class="sxs-lookup"><span data-stu-id="28534-719">Commits a pending new item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-720">Le <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> méthode valide une addition en attente d’un élément précédemment ajouté à la collection à l’index spécifié par `position`.</span><span class="sxs-lookup"><span data-stu-id="28534-720">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="28534-721">Le `position` paramètre est nécessaire car plusieurs nouveaux éléments peuvent être simultanément en attente.</span><span class="sxs-lookup"><span data-stu-id="28534-721">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-722">Signale le <see cref="T:System.Windows.Forms.BindingSource" /> que l’initialisation démarre.</span><span class="sxs-lookup"><span data-stu-id="28534-722">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28534-723">Signale le <see cref="T:System.Windows.Forms.BindingSource" /> que l’initialisation est terminée.</span><span class="sxs-lookup"><span data-stu-id="28534-723">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.Initialized">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.ISupportInitializeNotification.Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.ISupportInitializeNotification.Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#Initialized" />
      <MemberSignature Language="VB.NET" Value="Custom Event Initialized As EventHandler Implements System.ComponentModel.ISupportInitializeNotification" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.ISupportInitializeNotification.Initialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-724">Se produit lorsque le <see cref="T:System.Windows.Forms.BindingSource" /> est initialisé.</span><span class="sxs-lookup"><span data-stu-id="28534-724">Occurs when the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="28534-725">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="28534-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28534-726">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.BindingSource> est castée en interface <xref:System.ComponentModel.ISupportInitializeNotification>.</span><span class="sxs-lookup"><span data-stu-id="28534-726">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::ISupportInitializeNotification::IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISupportInitializeNotification.IsInitialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28534-727">Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.BindingSource" /> est initialisé.</span><span class="sxs-lookup"><span data-stu-id="28534-727">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span></span></summary>
        <value><span data-ttu-id="28534-728"><see langword="true" /> pour indiquer la <see cref="T:System.Windows.Forms.BindingSource" /> est initialisé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28534-728"><see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28534-729">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="28534-729">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="28534-730">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.BindingSource> est castée en interface <xref:System.ComponentModel.ISupportInitializeNotification>.</span><span class="sxs-lookup"><span data-stu-id="28534-730">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>