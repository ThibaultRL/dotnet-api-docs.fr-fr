<Type Name="VisualsToXpsDocument" FullName="System.Windows.Xps.VisualsToXpsDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33498c0c812b585f4c0152a893fcc0c865510786" /><Meta Name="ms.sourcegitcommit" Value="75eca440f8f4d595506405f48961f38649e160d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/01/2019" /><Meta Name="ms.locfileid" Value="66457808" /></Metadata><TypeSignature Language="C#" Value="public class VisualsToXpsDocument : System.Windows.Documents.Serialization.SerializerWriterCollator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualsToXpsDocument extends System.Windows.Documents.Serialization.SerializerWriterCollator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.VisualsToXpsDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualsToXpsDocument&#xA;Inherits SerializerWriterCollator" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualsToXpsDocument : System::Windows::Documents::Serialization::SerializerWriterCollator" />
  <TypeSignature Language="F#" Value="type VisualsToXpsDocument = class&#xA;    inherit SerializerWriterCollator" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Serialization.SerializerWriterCollator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes pour écrire des objets <see cref="T:System.Windows.Media.Visual" /> dans les documents XPS ou dans une file d’attente à l’impression en mode batch.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que cette classe n’a aucun constructeur, utilisez la <xref:System.Windows.Xps.XpsDocumentWriter.CreateVisualsCollator%2A> méthode pour créer une instance.  
  
 Le <xref:System.Windows.Xps.VisualsToXpsDocument> écrit dans la même cible <xref:System.Windows.Xps.Packaging.XpsDocument> ou <xref:System.Printing.PrintQueue> en tant que le <xref:System.Windows.Xps.XpsDocumentWriter> qui crée le <xref:System.Windows.Xps.VisualsToXpsDocument>.  
  
 Chaque <xref:System.Windows.Media.Visual> devient une page dans le document.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un assembleur de visuels et l’utiliser pour écrire dans un document XML Paper Specification (XPS).  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginBatchWrite">
      <MemberSignature Language="C#" Value="public override void BeginBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.BeginBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginBatchWrite();" />
      <MemberSignature Language="F#" Value="override this.BeginBatchWrite : unit -&gt; unit" Usage="visualsToXpsDocument.BeginBatchWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique que les opérations d'écriture peuvent commencer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez appeler cette méthode avant d’appeler <xref:System.Windows.Xps.VisualsToXpsDocument.Write%2A> ou <xref:System.Windows.Xps.VisualsToXpsDocument.WriteAsync%2A> méthodes.  
  
 Après la dernière opération d’écriture, appelez <xref:System.Windows.Xps.VisualsToXpsDocument.EndBatchWrite%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="visualsToXpsDocument.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule une opération d’écriture synchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par exemple, une exception est levée si le <xref:System.Windows.Xps.VisualsToXpsDocument.Cancel%2A> méthode est appelée et une opération d’écriture n’est pas en cours d’exécution.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Xps.XpsWriterException">L’état de <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> n’est pas compatible avec une opération <see cref="M:System.Windows.Xps.VisualsToXpsDocument.Cancel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelAsync();" />
      <MemberSignature Language="F#" Value="override this.CancelAsync : unit -&gt; unit" Usage="visualsToXpsDocument.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule une opération d’écriture asynchrone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par exemple, une exception est levée si le <xref:System.Windows.Xps.VisualsToXpsDocument.CancelAsync%2A> méthode est appelée et une opération d’écriture n’est pas en cours d’exécution.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Xps.XpsWriterException">L’état de <see cref="T:System.Windows.Xps.VisualsToXpsDocument" /> n’est pas compatible avec une opération <see cref="M:System.Windows.Xps.VisualsToXpsDocument.CancelAsync" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBatchWrite">
      <MemberSignature Language="C#" Value="public override void EndBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.EndBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndBatchWrite();" />
      <MemberSignature Language="F#" Value="override this.EndBatchWrite : unit -&gt; unit" Usage="visualsToXpsDocument.EndBatchWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique que les opérations d'écriture doivent se terminer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Après le dernier appel à <xref:System.Windows.Xps.VisualsToXpsDocument.Write%2A> ou <xref:System.Windows.Xps.VisualsToXpsDocument.WriteAsync%2A>, appelez cette méthode.  
  
 Vous devez appeler <xref:System.Windows.Xps.VisualsToXpsDocument.BeginBatchWrite%2A> avant toute opération d’écriture.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit <see cref="T:System.Windows.Media.Visual" /> de manière synchrone dans <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou <see cref="T:System.Printing.PrintQueue" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="override this.Write : System.Windows.Media.Visual -&gt; unit" Usage="visualsToXpsDocument.Write visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Le <see cref="T:System.Windows.Media.Visual" /> qui est écrit.</param>
        <summary>Écrit <see cref="T:System.Windows.Media.Visual" /> de manière synchrone dans <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou <see cref="T:System.Printing.PrintQueue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode pour écrire dans un document XML Paper Specification (XPS).  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="override this.Write : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="visualsToXpsDocument.Write (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">Le <see cref="T:System.Windows.Media.Visual" /> qui est écrit.</param>
        <param name="printTicket"><see cref="T:System.Printing.PrintTicket" /> qui représente les préférences d’impression par défaut pour le document.</param>
        <summary>Écrit <see cref="T:System.Windows.Media.Visual" /> de façon synchrone sur <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou <see cref="T:System.Printing.PrintQueue" />, et inclut <see cref="T:System.Printing.PrintTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne pas valider ou modifier le texte spécifié `printTicket` pour un particulier <xref:System.Printing.PrintQueue>. Si nécessaire, utilisez le <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> méthode pour créer un <xref:System.Printing.PrintTicket> qui est spécifique à la <xref:System.Printing.PrintQueue> et n’est valide pour l’imprimante spécifiée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit <see cref="T:System.Windows.Media.Visual" /> de manière asynchrone dans <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou <see cref="T:System.Printing.PrintQueue" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual -&gt; unit" Usage="visualsToXpsDocument.WriteAsync visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Le <see cref="T:System.Windows.Media.Visual" /> qui est écrit.</param>
        <summary>Écrit <see cref="T:System.Windows.Media.Visual" /> de manière synchrone dans <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou <see cref="T:System.Printing.PrintQueue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual * obj -&gt; unit" Usage="visualsToXpsDocument.WriteAsync (visual, userSuppliedState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">Le <see cref="T:System.Windows.Media.Visual" /> qui est écrit.</param>
        <param name="userSuppliedState">Objet qui contient les données que l’appelant veut passer au gestionnaire d’événements <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" />.</param>
        <summary>Écrit un <see cref="T:System.Windows.Media.Visual" /> de manière asynchrone dans un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou un <see cref="T:System.Printing.PrintQueue" /> et inclut les informations supplémentaires que l’appelant veut passer à un gestionnaire d’événements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="visualsToXpsDocument.WriteAsync (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">Le <see cref="T:System.Windows.Media.Visual" /> qui est écrit.</param>
        <param name="printTicket"><see cref="T:System.Printing.PrintTicket" /> qui représente les préférences d’impression par défaut pour le document.</param>
        <summary>Écrit un <see cref="T:System.Windows.Media.Visual" /> de façon asynchrone sur un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou un <see cref="T:System.Printing.PrintQueue" />, et inclut un <see cref="T:System.Printing.PrintTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne pas valider ou modifier le texte spécifié `printTicket` pour un particulier <xref:System.Printing.PrintQueue>. Si nécessaire, utilisez le <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> méthode pour créer un <xref:System.Printing.PrintTicket> qui est spécifique à la <xref:System.Printing.PrintQueue> et n’est valide pour l’imprimante spécifiée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.VisualsToXpsDocument.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket * obj -&gt; unit" Usage="visualsToXpsDocument.WriteAsync (visual, printTicket, userSuppliedState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">Le <see cref="T:System.Windows.Media.Visual" /> qui est écrit.</param>
        <param name="printTicket"><see cref="T:System.Printing.PrintTicket" /> qui représente les préférences d’impression par défaut pour le document.</param>
        <param name="userSuppliedState">Objet qui contient les données que l’appelant veut passer au gestionnaire d’événements <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" />.</param>
        <summary>Écrit un <see cref="T:System.Windows.Media.Visual" /> de manière asynchrone dans un <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> ou un <see cref="T:System.Printing.PrintQueue" /> ; inclut également un <see cref="T:System.Printing.PrintTicket" /> et toutes les informations supplémentaires que l’appelant veut passer à un gestionnaire d’événements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne pas valider ou modifier le texte spécifié `printTicket` pour un particulier <xref:System.Printing.PrintQueue>. Si nécessaire, utilisez le <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> méthode pour créer un <xref:System.Printing.PrintTicket> qui est spécifique à la <xref:System.Printing.PrintQueue> et n’est valide pour l’imprimante spécifiée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>