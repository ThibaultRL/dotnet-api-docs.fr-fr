<Type Name="Forest" FullName="System.DirectoryServices.ActiveDirectory.Forest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf9e72ec95fbc813d1a46acd6a20bb563ced91fa" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66007925" /></Metadata><TypeSignature Language="C#" Value="public class Forest : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Forest extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Forest" />
  <TypeSignature Language="VB.NET" Value="Public Class Forest&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Forest : IDisposable" />
  <TypeSignature Language="F#" Value="type Forest = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>La classe <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> représente une forêt de services de domaine Active Directory.</summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
  </Docs>
  <Members>
    <Member MemberName="ApplicationPartitions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPartitions As ApplicationPartitionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ ApplicationPartitions { System::DirectoryServices::ActiveDirectory::ApplicationPartitionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPartitions : System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de toutes les partitions d’application dans la forêt.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" /> qui contient toutes les partitions d’application dans cette forêt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateLocalSideOfTrustRelationship (targetForestName As String, direction As TrustDirection, trustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection direction, System::String ^ trustPassword);" />
      <MemberSignature Language="F#" Value="member this.CreateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.CreateLocalSideOfTrustRelationship (targetForestName, direction, trustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS de la forêt avec laquelle l’approbation est créée.</param>
        <param name="direction">Un des membres <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> qui détermine la direction de l’approbation par rapport à cette forêt.</param>
        <param name="trustPassword">Mot de passe pour l’approbation.</param>
        <summary>Crée le côté local d’une relation d’approbation avec la forêt spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un côté d’une relation d’approbation. L’approbation n’est pas établie jusqu'à ce que les deux côtés de l’approbation ont été créées.  
  
 Le `trustPassword` paramètre associe un mot de passe à l’approbation créée. Lorsque l’autre côté de l’approbation est créée, le même mot de passe est fourni et les deux approbations locales sont ensuite liées entre eux.  
  
 Pour créer par programme les deux côtés d’une relation d’approbation dans un seul appel de méthode, utilisez le <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">La relation d’approbation existe déjà.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException">Le nom <paramref name="targetForest" /> ou la chaîne <paramref name="trustPassword" /> est vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> ou <paramref name="trustPassword" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" /> n’est pas une valeur de <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valide.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.CreateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.CreateTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> qui représente la forêt avec laquelle l’approbation est créée.</param>
        <param name="direction">Un des membres <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> qui détermine la direction de l’approbation par rapport à cette forêt.</param>
        <summary>Crée les deux côtés d’une relation d’approbation avec la forêt spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée les deux côtés d’une relation d’approbation avec un seul appel de méthode. Le <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> méthode permet de ne créer qu’un seul côté d’une approbation.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">La relation d’approbation existe déjà.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou indisponible.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction" /> n’est pas une valeur de <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valide.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLocalSideOfTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLocalSideOfTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.DeleteLocalSideOfTrustRelationship : string -&gt; unit" Usage="forest.DeleteLocalSideOfTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS de la forêt avec laquelle l'approbation existe.</param>
        <summary>Supprime le côté local d’une relation d’approbation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un côté d’une relation d’approbation est supprimé, l’approbation n’est plus établie.  
  
 Pour supprimer les deux côtés d’une relation d’approbation avec un appel de méthode, utilisez le <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n’existe aucune relation d’approbation avec l’objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié par le paramètre <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.DeleteTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.DeleteTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest">Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> qui représente la forêt avec laquelle l'approbation existe.</param>
        <summary>Supprime les deux côtés d’une relation d’approbation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour supprimer un seul côté d’une relation d’approbation, utilisez le <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n’existe aucune relation d’approbation avec l’objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou indisponible.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libère les ressources utilisées par l’objet.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="forest.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources managées et non managées détenues par l'objet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="member this.Dispose : bool -&gt; unit" Usage="forest.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Valeur <see cref="T:System.Boolean" /> qui détermine si les ressources managées doivent être libérées. <see langword="true" /> si les ressources managées doivent être libérées ; <see langword="false" /> si seules les ressources non managées doivent être libérées.</param>
        <summary>Libère les ressources managées utilisées par l'objet et libère éventuellement les ressources non managées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Domains">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Domains" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Domains As DomainCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainCollection ^ Domains { System::DirectoryServices::ActiveDirectory::DomainCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Domains : System.DirectoryServices.ActiveDirectory.DomainCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Domains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de tous les domaines de la forêt.</summary>
        <value>Collection <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> qui contient les domaines <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> dans le <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> actuel.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDiscoverableGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche tous les catalogues globaux découvrables dans cette forêt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recherche tous les catalogues globaux découvrables dans cette forêt.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> qui contient la collection des catalogues globaux qui ont été trouvés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez trouver des contrôleurs de domaine découvrables en interrogeant les enregistrements SRV DNS.  Uniquement les catalogues globaux qui inscrivent un générique, la non spécifique au site, l’enregistrement SRV du catalogue global sont retournés par cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllDiscoverableGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllDiscoverableGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nom du site à rechercher.</param>
        <summary>Recherche tous les catalogues globaux découvrables dans cette forêt dans un site spécifié.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> qui contient la collection des catalogues globaux qui ont été trouvés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez trouver des catalogues globaux découvrables en interrogeant les enregistrements SRV DNS.  Si un catalogue global n’inscrit pas un enregistrement SRV de catalogue global pour le site spécifié, il ne sera pas retourné par cette méthode, même si le catalogue global se trouve physiquement au sein de ce site.  
  
 Tous les catalogues globaux qui inscrivent un enregistrement SRV de catalogue global pour le site spécifié seront être renvoyés par cette méthode, même si elles sont peut-être pas physiquement situés au sein de ce site.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllGlobalCatalogs">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche tous les catalogues globaux dans cette forêt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs () As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs();" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recherche tous les catalogues globaux dans cette forêt.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> qui contient la collection des catalogues globaux qui ont été trouvés.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllGlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllGlobalCatalogs (siteName As String) As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ FindAllGlobalCatalogs(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllGlobalCatalogs : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="forest.FindAllGlobalCatalogs siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nom du site à rechercher.</param>
        <summary>Recherche tous les catalogues globaux dans cette forêt pour un site donné.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> qui contient la collection des catalogues globaux qui ont été trouvés.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindGlobalCatalog">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recherche un seul catalogue global dans cette forêt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog () As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog();" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : unit -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recherche un catalogue global quelconque dans cette forêt.</summary>
        <returns><see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> de ce <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Catalogue global introuvable.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag">Valeur <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> spécifiant les critères d'emplacement.</param>
        <summary>Recherche un catalogue global dans cette forêt pour un critère d'emplacement spécifié.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> pour le critère d'emplacement spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Catalogue global introuvable.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName">Nom du site à rechercher.</param>
        <summary>Recherche un catalogue global dans cette forêt pour un site spécifié.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> pour le site spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Catalogue global introuvable.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </Docs>
    </Member>
    <Member MemberName="FindGlobalCatalog">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindGlobalCatalog (siteName As String, flag As LocatorOptions) As GlobalCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::GlobalCatalog ^ FindGlobalCatalog(System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindGlobalCatalog : string * System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.GlobalCatalog" Usage="forest.FindGlobalCatalog (siteName, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName">Nom du site à rechercher.</param>
        <param name="flag">Valeur <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> qui spécifie le critère d'emplacement.</param>
        <summary>Recherche un catalogue global dans cette forêt pour un site et un critère d'emplacement spécifiés.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> pour le site et le critère d'emplacement spécifiés.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Catalogue global introuvable.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="siteName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="siteName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="ForestMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.ForestMode ForestMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestMode As ForestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ForestMode ForestMode { System::DirectoryServices::ActiveDirectory::ForestMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestMode : System.DirectoryServices.ActiveDirectory.ForestMode" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le mode d'opération de la forêt.</summary>
        <value>Valeur <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> qui représente le mode de forêt actuel de ce <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="ForestModeLevel">
      <MemberSignature Language="C#" Value="public int ForestModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ForestModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForestModeLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ForestModeLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ForestModeLevel : int" Usage="System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le niveau du mode de fonctionnement de la forêt.</summary>
        <value>Niveau du mode de fonctionnement de la forêt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTrustRelationships () As TrustRelationshipInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformationCollection ^ GetAllTrustRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetAllTrustRelationships : unit -&gt; System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" Usage="forest.GetAllTrustRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une collection des relations d'approbation de la forêt actuelle.</summary>
        <returns>Collection <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> qui contient des objets <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> qui représentent des relations d'approbation du <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> actuel.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentForest () As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetCurrentForest();" />
      <MemberSignature Language="F#" Value="static member GetCurrentForest : unit -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour le contexte utilisateur actuel.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> qui représente la forêt actuelle.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetForest">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Forest GetForest(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetForest (context As DirectoryContext) As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Forest ^ GetForest(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetForest : System.DirectoryServices.ActiveDirectory.DirectoryContext -&gt; System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Forest.GetForest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context">Objet <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> qui contient la cible et les informations d'identification à utiliser pour récupérer l'objet.</param>
        <summary>Obtient un objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour le contexte spécifié.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> qui représente la forêt récupérée par cette méthode.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Une connexion à la cible spécifiée dans <paramref name="context" /> n'a pas pu être établie.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="context" /> n'est pas valide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> est <see langword="null" />.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectiveAuthenticationStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelectiveAuthenticationStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSelectiveAuthenticationStatus : string -&gt; bool" Usage="forest.GetSelectiveAuthenticationStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS du <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> avec lequel la relation d'approbation entrante existe.</param>
        <summary>Obtient une valeur booléenne qui indique si l'authentification sélective est activée sur la relation d'approbation entrante avec la forêt spécifiée.  <see langword="true" /> si l’authentification sélective est activée ; sinon, <see langword="false" />.</summary>
        <returns><see langword="true" /> si l’authentification sélective est activée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour une approbation de forêt, si vous optez pour l’authentification sélective, autorisations doivent être activées manuellement sur chaque domaine et ressource dans la forêt locale à laquelle vous souhaitez que les utilisateurs de l’autre forêt aient accès.  
  
 Lorsqu’un utilisateur s’authentifie sur une approbation pour laquelle sélective l’authentification est activée, une autre organisation ID de sécurité (SID) est ajouté aux données d’autorisation de l’utilisateur. La présence de ce SID invite à effectuer un contrôle du domaine de ressources pour s'assurer que l'utilisateur est autorisé à s'authentifier à ce service. Une fois que l’utilisateur est authentifié, le serveur qui authentifie l’utilisateur ajoute le SID cette organisation si le SID autre organisation n’est pas déjà présent. Seul l'un de ces SID spéciaux peut être présent dans le contexte d'un utilisateur authentifié.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n’existe aucune relation d’approbation avec l’objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">L’appel à <c>LsaQueryTrustedDomainInfoByName</c> a échoué. Pour plus d’informations, consultez <see href="/windows/desktop/api/ntsecapi/nf-ntsecapi-lsaquerytrusteddomaininfobyname">LsaQueryTrustedDomainInfoByName</see>.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet actuel a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSidFilteringStatus (targetForestName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSidFilteringStatus(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetSidFilteringStatus : string -&gt; bool" Usage="forest.GetSidFilteringStatus targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> avec lequel la relation d'approbation existe.</param>
        <summary>Obtient l'état de filtrage SID d'une approbation.</summary>
        <returns><see langword="true" /> si le filtrage des SID est activé ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet actuel a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrustRelationship (targetForestName As String) As ForestTrustRelationshipInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::ForestTrustRelationshipInformation ^ GetTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.GetTrustRelationship : string -&gt; System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" Usage="forest.GetTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour lequel les informations de relation d'approbation doivent être obtenues.</param>
        <summary>Obtient la relation d'approbation entre cette forêt et la forêt spécifiée.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> qui représente la relation d'approbation entre cette forêt et la forêt spécifiée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n’existe aucune relation d’approbation avec l’objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet actuel a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="GlobalCatalogs">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalCatalogs As GlobalCatalogCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ GlobalCatalogs { System::DirectoryServices::ActiveDirectory::GlobalCatalogCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalCatalogs : System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de tous les catalogues globaux de la forêt.</summary>
        <value>Collection <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> qui contient les catalogues globaux <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> dans le <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> actuel.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.ActiveDirectory.Forest.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la forêt.</summary>
        <value>Nom de cet objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ NamingRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamingRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contrôleur de domaine qui détient le rôle FSMO de maître d'opérations des noms de domaines pour la forêt.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> qui représente le contrôleur de domaine qui détient le rôle FSMO de maître d'opérations des noms de domaines de ce <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionality(valuetype System.DirectoryServices.ActiveDirectory.ForestMode forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionality(System::DirectoryServices::ActiveDirectory::ForestMode forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionality : System.DirectoryServices.ActiveDirectory.ForestMode -&gt; unit" Usage="forest.RaiseForestFunctionality forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Parameters>
      <Docs>
        <param name="forestMode">Valeur d'énumération <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> qui spécifie le nouveau niveau d'opération pour la forêt.</param>
        <summary>Élève le mode d'opération pour la forêt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.DirectoryServices.ActiveDirectory.ForestMode> valeur peut être déclenchée mais pas diminuée. Cela signifie qu’augmenter le niveau de la fonctionnalité de la forêt n’est pas réversible et que la décision de procéder doit-elle être apportée avec soin.  
  
 Pour plus d’informations sur les modes de fonctionnement de forêt, consultez [fonctionnalité des domaines et forêts](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd894353(v%3dws.11)).
  
 Le tableau suivant définit les valeurs valides pour `forestMode` selon le mode d’opération actuel de la forêt.  
  
|Mode actuel|Mode peut être déclenché à|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest>|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|  
|<xref:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest>|Aucun.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException">D'après le mode d'opération actuel de la forêt, la valeur spécifiée pour <paramref name="forestMode" /> n'est pas valide.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="forestMode" /> n’est pas une valeur d’énumération <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" /> valide.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
      </Docs>
    </Member>
    <Member MemberName="RaiseForestFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseForestFunctionalityLevel (int forestMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseForestFunctionalityLevel(int32 forestMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseForestFunctionalityLevel (forestMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseForestFunctionalityLevel(int forestMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseForestFunctionalityLevel : int -&gt; unit" Usage="forest.RaiseForestFunctionalityLevel forestMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forestMode" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="forestMode">Élève à ce niveau.</param>
        <summary>Élève le niveau de fonctionnalité de forêt pour le paramètre donné.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepairTrustRelationship (targetForest As Forest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepairTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest);" />
      <MemberSignature Language="F#" Value="member this.RepairTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest -&gt; unit" Usage="forest.RepairTrustRelationship targetForest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
      </Parameters>
      <Docs>
        <param name="targetForest">Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> qui représente l'objet de forêt avec lequel l'approbation existe.</param>
        <summary>Répare une relation d’approbation.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié par <paramref name="targetForest" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou indisponible.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDomain">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain RootDomain" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootDomain As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ RootDomain { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootDomain : System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le premier domaine qui a été créé dans une forêt.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> qui représente le premier domaine qui a été créé dans ce <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As ActiveDirectorySchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ Schema { System::DirectoryServices::ActiveDirectory::ActiveDirectorySchema ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" Usage="System.DirectoryServices.ActiveDirectory.Forest.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le schéma de la forêt.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" /> qui représente le schéma du <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> actuel.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ SchemaRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contrôleur de domaine qui détient le rôle FSMO de contrôleur de schéma pour la forêt.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> qui représente le contrôleur de domaine qui détient le rôle FSMO de contrôleur de schéma de ce <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectiveAuthenticationStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectiveAuthenticationStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSelectiveAuthenticationStatus : string * bool -&gt; unit" Usage="forest.SetSelectiveAuthenticationStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> avec lequel la relation d'approbation entrante existe.</param>
        <param name="enable"><see langword="true" /> si l'authentification sélective doit être activée ; sinon <see langword="false" />.</param>
        <summary>Active ou désactive l’authentification sélective pour une approbation entrante.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec la forêt spécifiée par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet actuel a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetForestName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetForestName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSidFilteringStatus (targetForestName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSidFilteringStatus(System::String ^ targetForestName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSidFilteringStatus : string * bool -&gt; unit" Usage="forest.SetSidFilteringStatus (targetForestName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> avec lequel la relation d'approbation existe.</param>
        <param name="enable"><see langword="true" /> si le filtrage SID doit être activé ; sinon <see langword="false" />.</param>
        <summary>Définit l'état de filtrage SID avec la forêt spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, les approbations externes nouvelle et forêt dans [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] Active Directory Domain Services appliquer le filtrage des SID.  Le filtrage des SID est utilisé pour empêcher les attaques d’utilisateurs malveillants qui pourraient essayer d’accorder des droits utilisateur élevés à un autre compte d’utilisateur.  En appliquant le filtrage des SID sur les approbations de forêt n’empêche pas les migrations de domaines au sein de la même forêt à partir de l’historique des SID et n’affectera pas votre stratégie de contrôle d’accès aux groupes universels.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec la forêt spécifiée par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L’objet actuel a été supprimé.</exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="Sites">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sites As ReadOnlySiteCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ Sites { System::DirectoryServices::ActiveDirectory::ReadOnlySiteCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sites : System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" Usage="System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection des sites qui sont contenus dans la forêt.</summary>
        <value><see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> qui contient les sites <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> du <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> actuel.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d’annuaire sous-jacent a généré une erreur.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="forest.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une chaîne représentant la forêt actuelle.</summary>
        <returns><see cref="T:System.String" /> qui représente le nom DNS de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateLocalSideOfTrustRelationship">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Met à jour le mot de passe pour le côté local d’une relation d’approbation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour lequel le mot de passe d'approbation locale doit être modifié.</param>
        <param name="newTrustPassword">Nouveau mot de passe pour la relation d'approbation.</param>
        <summary>Met à jour le mot de passe pour le côté local d’une relation d’approbation.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec la forêt spécifiée par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> ou <paramref name="newTrustPassword" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> ou <paramref name="newTrustPassword" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetForestName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetForestName As String, newTrustDirection As TrustDirection, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetForestName, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="forest.UpdateLocalSideOfTrustRelationship (targetForestName, newTrustDirection, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom de l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour lequel la direction d'approbation locale et le mot de passe doivent être modifiés.</param>
        <param name="newTrustDirection">Valeur <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> pour la nouvelle direction d'approbation de la relation d'approbation.</param>
        <param name="newTrustPassword">Nouveau mot de passe pour la relation d'approbation.</param>
        <summary>Met à jour le mot de passe et la direction d’approbation pour le côté local d’une relation d’approbation.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec l'objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> spécifié par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> ou <paramref name="newTrustPassword" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> ou <paramref name="newTrustPassword" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le paramètre <paramref name="newTrustDirection" /> n'est pas une valeur <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valide.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTrustRelationship (targetForest As Forest, newTrustDirection As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection);" />
      <MemberSignature Language="F#" Value="member this.UpdateTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.UpdateTrustRelationship (targetForest, newTrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour lequel les directions d'approbation doivent être modifiées.</param>
        <param name="newTrustDirection">Valeur <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> qui spécifie la nouvelle direction d'approbation pour la relation d'approbation.</param>
        <summary>Met à jour la direction d'approbation pour une relation d'approbation. Les directions d’approbation sont mises à jour des deux côtés de l’approbation.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation avec la forêt spécifiée par <paramref name="targetForest" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou indisponible.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection" /> n’est pas une valeur de <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valide.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetForestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetForestName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyOutboundTrustRelationship (targetForestName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyOutboundTrustRelationship(System::String ^ targetForestName);" />
      <MemberSignature Language="F#" Value="member this.VerifyOutboundTrustRelationship : string -&gt; unit" Usage="forest.VerifyOutboundTrustRelationship targetForestName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForestName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForestName">Nom DNS du domaine avec lequel l’approbation existe.</param>
        <summary>Vérifie qu'une approbation sortante établie précédemment avec la forêt spécifiée est valide.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe pas de relation d'approbation sortante avec la forêt spécifiée par <paramref name="targetForestName" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou non disponible.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetForestName" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Forest targetForest, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyTrustRelationship (targetForest As Forest, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyTrustRelationship(System::DirectoryServices::ActiveDirectory::Forest ^ targetForest, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.VerifyTrustRelationship : System.DirectoryServices.ActiveDirectory.Forest * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="forest.VerifyTrustRelationship (targetForest, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForest" Type="System.DirectoryServices.ActiveDirectory.Forest" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetForest">Objet <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> pour lequel vérifier la relation d'approbation.</param>
        <param name="direction">Valeur <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> qui spécifie la direction de l'approbation, relativement à cette forêt.</param>
        <summary>Vérifie qu'une approbation établie précédemment avec la forêt spécifiée est valide.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode vérifie qu’une relation d’approbation a bien été établie. L’approbation n’est pas établie jusqu'à ce que les deux côtés de l’approbation ont été créées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">Il n'existe aucune relation d'approbation avec la forêt spécifiée par <paramref name="targetForest" /> ou la forêt cible n'a pas la direction d'approbation spécifiée par <paramref name="direction" />.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">Un appel au service d'annuaire sous-jacent a échoué.</exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">Le serveur cible est occupé ou indisponible.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="targetForest" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le paramètre <paramref name="direction" /> n'est pas une valeur <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> valide.</exception>
        <exception cref="T:System.ObjectDisposedException">L'objet a été supprimé.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le compte spécifié n’est pas autorisé à effectuer cette opération.</exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e">Utilisation des approbations</related>
      </Docs>
    </Member>
  </Members>
</Type>