<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b9d6bee92e508314a7a572464c67f943df2bdae" /><Meta Name="ms.sourcegitcommit" Value="0609891c89ddaa91e4c02970acb00072fcc29baf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/13/2019" /><Meta Name="ms.locfileid" Value="65558521" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="072a6-101">Décrit une demande HTTP entrante d’un <see cref="T:System.Net.HttpListener" /> objet.</span><span class="sxs-lookup"><span data-stu-id="072a6-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span></span> <span data-ttu-id="072a6-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="072a6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-103">Lorsqu’un client effectue une demande à un identificateur URI (Uniform Resource) gérée par un <xref:System.Net.HttpListener> objet, le <xref:System.Net.HttpListener> fournit un <xref:System.Net.HttpListenerContext> objet qui contient des informations sur l’expéditeur, la demande et la réponse est envoyée au client.</span><span class="sxs-lookup"><span data-stu-id="072a6-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="072a6-104">Le <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> propriété retourne le <xref:System.Net.HttpListenerRequest> objet qui décrit la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="072a6-105">Le <xref:System.Net.HttpListenerRequest> objet contient des informations sur la demande, telles que la demande <xref:System.Net.HttpListenerRequest.HttpMethod%2A> chaîne, <xref:System.Net.HttpListenerRequest.UserAgent%2A> de chaîne et les données de corps de la requête (voir la <xref:System.Net.HttpListenerRequest.InputStream%2A> propriété).</span><span class="sxs-lookup"><span data-stu-id="072a6-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="072a6-106">Pour répondre à la demande, vous devez obtenir la réponse associée à l’aide de la <xref:System.Net.HttpListenerContext.Response%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-107">L’exemple de code suivant montre comment recevoir et répondre à un <xref:System.Net.HttpListenerRequest>.</span><span class="sxs-lookup"><span data-stu-id="072a6-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-108">Obtient les types MIME acceptés par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-108">Gets the MIME types accepted by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-109">Un <see cref="T:System.String" /> tableau qui contient les noms de types spécifiés dans la demande <see langword="Accept" /> en-tête ou <see langword="null" /> si la demande du client ne comprenait pas un <see langword="Accept" /> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-110">Le `Accept` en-tête est une chaîne de séparées par des espaces de noms de types MIME Multipurpose Internet Mail Extensions () (par exemple, `image/jpeg`), qui indiquent les types MIME que le client est prêt à accepter et traiter dans une réponse.</span><span class="sxs-lookup"><span data-stu-id="072a6-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="072a6-111">Le `*/*` entrée indique que le client accepte n’importe quel type MIME.</span><span class="sxs-lookup"><span data-stu-id="072a6-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="072a6-112">Pour une description détaillée de la `Accept` en-tête, consultez la RFC 2616, disponible à l’adresse [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="072a6-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="072a6-113">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-114">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="072a6-115">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="072a6-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="072a6-116">Objet défini par l'utilisateur qui comporte des informations sur l'opération.</span><span class="sxs-lookup"><span data-stu-id="072a6-116">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="072a6-117">Cet objet est passé au délégué de rappel lorsque l’opération se termine.</span><span class="sxs-lookup"><span data-stu-id="072a6-117">This object is passed to the callback delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="072a6-118">Démarre une demande asynchrone pour le certificat du client X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="072a6-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="072a6-119">Un <see cref="T:System.IAsyncResult" /> qui indique l’état de l’opération.</span><span class="sxs-lookup"><span data-stu-id="072a6-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-120">Obtient un code d’erreur qui identifie un problème avec le <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> fourni par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-121">Un <see cref="T:System.Int32" /> valeur contenant un code d’erreur Windows.</span><span class="sxs-lookup"><span data-stu-id="072a6-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-122">Cette propriété contient un code d’erreur Windows retourné par la Secure Channel (Schannel) prise en charge Interface SSPI (Security Provider), qui est utilisé pour valider le certificat.</span><span class="sxs-lookup"><span data-stu-id="072a6-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="072a6-123">Pour plus d’informations sur la prise en charge SSPI pour Schannel, consultez « Création a Secure Connection à l’aide de Schannel » dans la documentation de sécurité à [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="072a6-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-124">L’exemple de code suivant vérifie cette propriété pour déterminer si la demande comprend un certificat client valide.</span><span class="sxs-lookup"><span data-stu-id="072a6-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="072a6-125">Le certificat client n'a pas encore été initialisé par un appel à la <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> ou <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> méthodes</span><span class="sxs-lookup"><span data-stu-id="072a6-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span></span> 
<span data-ttu-id="072a6-126">ou</span><span class="sxs-lookup"><span data-stu-id="072a6-126">-or -</span></span> 
<span data-ttu-id="072a6-127">L’opération est toujours en cours.</span><span class="sxs-lookup"><span data-stu-id="072a6-127">The operation is still in progress.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-128">Obtient l’encodage du contenu qui peut être utilisé avec les données envoyées avec la demande</span><span class="sxs-lookup"><span data-stu-id="072a6-128">Gets the content encoding that can be used with data sent with the request</span></span></summary>
        <value><span data-ttu-id="072a6-129">Un <see cref="T:System.Text.Encoding" /> objet pouvant être utilisé avec les données dans le <see cref="P:System.Net.HttpListenerRequest.InputStream" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-130">Un <xref:System.Text.Encoding> objet peut être utilisé pour convertir des séquences d’octets en jeux de caractères (pages de codes) et des caractères en séquences d’octets.</span><span class="sxs-lookup"><span data-stu-id="072a6-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="072a6-131">Cette propriété utilise la valeur de jeu de caractères à partir de la `Content-Type` en-tête pour déterminer l’encodage.</span><span class="sxs-lookup"><span data-stu-id="072a6-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="072a6-132">Si ces informations ne sont pas disponibles, cette propriété retourne <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="072a6-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-133">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-134">Obtient la longueur des données relatives au corps incluses dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-134">Gets the length of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="072a6-135">La valeur de la demande <see langword="Content-Length" /> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-135">The value from the request's <see langword="Content-Length" /> header.</span></span> <span data-ttu-id="072a6-136">Cette valeur est -1 si la longueur du contenu n’est pas connue.</span><span class="sxs-lookup"><span data-stu-id="072a6-136">This value is -1 if the content length is not known.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-137">Le `Content-Length` en-tête exprime la longueur, en octets, des données relatives au corps qui accompagnent la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="072a6-138">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-139">Le code suivant exemple utilise le <xref:System.Net.HttpListenerRequest.ContentLength64%2A> propriété lors du traitement des données relatives au corps.</span><span class="sxs-lookup"><span data-stu-id="072a6-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-140">Obtient le type MIME des données relatives au corps incluses dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-140">Gets the MIME type of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="072a6-141">Un <see cref="T:System.String" /> qui contient le texte de la demande <see langword="Content-Type" /> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-142">Si un client inclut les données du corps dans une demande, il déclare le type MIME Multipurpose Internet Mail Extensions () des données relatives au corps dans le `Content-Type` en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="072a6-143">Par exemple, le type MIME par défaut des données retournées à partir d’un formulaire Web en utilisant le `POST` méthode est `application/x-www-form-urlencoded`.</span><span class="sxs-lookup"><span data-stu-id="072a6-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="072a6-144">Pour obtenir une liste complète des en-têtes de demande, consultez la <xref:System.Net.HttpRequestHeader> énumération et la norme RFC 2616, disponible à l’adresse [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="072a6-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="072a6-145">Le <xref:System.Net.HttpListenerRequest.ContentType%2A> a la valeur null lorsqu’il existe aucune `Content-Type` en-tête dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-146">L’exemple de code suivant montre comment utiliser cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-147">Obtient les cookies envoyés avec la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-147">Gets the cookies sent with the request.</span></span></summary>
        <value><span data-ttu-id="072a6-148">Un <see cref="T:System.Net.CookieCollection" /> qui contient les cookies qui accompagnent la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span></span> <span data-ttu-id="072a6-149">Cette propriété retourne une collection vide si la demande ne contient-elle pas de cookies.</span><span class="sxs-lookup"><span data-stu-id="072a6-149">This property returns an empty collection if the request does not contain cookies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-150">Un cookie est nom/valeur des données de texte à partir d’un serveur Web qui est stocké sur l’ordinateur local (client).</span><span class="sxs-lookup"><span data-stu-id="072a6-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-151">L’exemple de code suivant affiche les valeurs de cookies envoyée avec la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
 [!code-vb[Net_Listener_Basic#18](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="072a6-152">La demande en attente pour le certificat.</span><span class="sxs-lookup"><span data-stu-id="072a6-152">The pending request for the certificate.</span></span></param>
        <summary><span data-ttu-id="072a6-153">Termine une requête asynchrone pour le certificat du client X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="072a6-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="072a6-154">Le <see cref="T:System.IAsyncResult" /> objet qui est retourné lorsque l’opération a démarré.</span><span class="sxs-lookup"><span data-stu-id="072a6-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="072a6-155"><paramref name="asyncResult" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-155"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="072a6-156"><paramref name="asyncResult" /> n’a pas été obtenu en appelant <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span><span class="sxs-lookup"><span data-stu-id="072a6-156"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="072a6-157">Cette méthode a déjà été appelée pour l’opération identifiée par <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="072a6-158">Récupère le certificat du client X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="072a6-158">Retrieves the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="072a6-159">Un <see cref="N:System.Security.Cryptography.X509Certificates" /> objet qui contient le certificat du client X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="072a6-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-160">Cette méthode se bloque jusqu'à ce que le certificat est récupéré.</span><span class="sxs-lookup"><span data-stu-id="072a6-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="072a6-161">Un appel à cette méthode pour récupérer le certificat du client X.509 v.3 est en cours et par conséquent, un autre appel à cette méthode n’est pas possible.</span><span class="sxs-lookup"><span data-stu-id="072a6-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span></span></exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="072a6-162">Récupère le certificat du client X.509 v.3 sous la forme d’une opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072a6-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="072a6-163">Objet de tâche représentant l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="072a6-163">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="072a6-164">Le <see cref="P:System.Threading.Tasks.Task`1.Result" /> propriété sur l’objet de tâche retourne un <see cref="N:System.Security.Cryptography.X509Certificates" /> objet qui contient le certificat du client X.509 v.3.</span><span class="sxs-lookup"><span data-stu-id="072a6-164">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-165">Cette opération ne bloque pas.</span><span class="sxs-lookup"><span data-stu-id="072a6-165">This operation will not block.</span></span> <span data-ttu-id="072a6-166">Retourné <xref:System.Threading.Tasks.Task%601> objet se termine lorsque le certificat a été récupéré.</span><span class="sxs-lookup"><span data-stu-id="072a6-166">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="072a6-167">Si un appel à cette méthode pour récupérer le certificat du client X.509 v.3 est en cours, puis un autre appel à cette méthode n’est pas possible.</span><span class="sxs-lookup"><span data-stu-id="072a6-167">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-168">Obtient un <see cref="T:System.Boolean" /> valeur qui indique si la demande est associée à des données relatives au corps.</span><span class="sxs-lookup"><span data-stu-id="072a6-168">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span></span></summary>
        <value><span data-ttu-id="072a6-169"><see langword="true" /> Si la demande est associé à des données de corps ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-169"><see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-170">Une demande qui envoie des données au serveur en utilisant le `POST` (méthode), par exemple, doit avoir un corps d’entité.</span><span class="sxs-lookup"><span data-stu-id="072a6-170">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-171">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-171">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-172">Obtient la collection de paires nom/valeur d’en-tête envoyées dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-172">Gets the collection of header name/value pairs sent in the request.</span></span></summary>
        <value><span data-ttu-id="072a6-173">Un <see cref="T:System.Net.WebHeaderCollection" /> qui contient les en-têtes HTTP inclus dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-173">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-174">En-têtes de requête contiennent des informations de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="072a6-174">Request headers contain metadata information.</span></span> <span data-ttu-id="072a6-175">Par exemple, les en-têtes peuvent contenir l’identificateur URI (Uniform Resource) de la ressource qui a signalé le client au serveur, l’identité de l’agent utilisateur employées par le client et le MIME acceptable, les types de données dans le corps de réponse.</span><span class="sxs-lookup"><span data-stu-id="072a6-175">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="072a6-176">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-176">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-177">L’exemple de code suivant affiche les informations contenues dans une donnée <xref:System.Net.WebHeaderCollection> objet.</span><span class="sxs-lookup"><span data-stu-id="072a6-177">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
 [!code-vb[Net_Listener_Basic#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-178">Obtient la méthode HTTP spécifiée par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-178">Gets the HTTP method specified by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-179">Un <see cref="T:System.String" /> qui contient la méthode utilisée dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-179">A <see cref="T:System.String" /> that contains the method used in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-180">La méthode HTTP est généralement GET ou POST, selon l’action souhaitée par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-180">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-181">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-181">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-182">Obtient un flux qui contient les données relatives au corps envoyées par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-182">Gets a stream that contains the body data sent by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-183">Accessible en lecture <see cref="T:System.IO.Stream" /> objet qui contient les octets envoyés par le client dans le corps de la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-183">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span></span> <span data-ttu-id="072a6-184">Cette propriété retourne <see cref="F:System.IO.Stream.Null" /> si aucune donnée n’est envoyée avec la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-184">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-185">Si le client transmet des données (par exemple, à l’aide du protocole HTTP `POST` méthode), le flux retourné par cette méthode contient les données.</span><span class="sxs-lookup"><span data-stu-id="072a6-185">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="072a6-186">Fermeture de la demande ne ferme pas le flux retourné par cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-186">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="072a6-187">Lorsque vous n’avez plus besoin du flux, vous devez le fermer en appelant le <xref:System.IO.Stream.Close%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="072a6-187">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-188">L’exemple de code suivant illustre l’utilisation de cette propriété pour lire les données envoyées avec une demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-188">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
 [!code-vb[Net_Listener_Basic#16](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="072a6-189">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="072a6-189">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="072a6-190">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="072a6-190">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-191">Obtient un <see cref="T:System.Boolean" /> valeur qui indique si le client envoie cette demande est authentifié.</span><span class="sxs-lookup"><span data-stu-id="072a6-191">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span></span></summary>
        <value><span data-ttu-id="072a6-192"><see langword="true" /> Si le client a été authentifié ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-192"><see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-193">Votre application demande l’authentification du client à l’aide du <xref:System.Net.HttpListener.AuthenticationSchemes%2A> ou <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-193">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="072a6-194">Votre application ne reçoit pas une <xref:System.Net.HttpListenerContext> pour les demandes des clients qui ne sont pas authentifiés avec succès.</span><span class="sxs-lookup"><span data-stu-id="072a6-194">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-195">L’exemple de code suivant affiche la valeur de la <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-195">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-196">Obtient un <see cref="T:System.Boolean" /> valeur qui indique si la demande est envoyée à partir de l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="072a6-196">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span></span></summary>
        <value><span data-ttu-id="072a6-197"><see langword="true" /> Si l’origine de la demande sur le même ordinateur que le <see cref="T:System.Net.HttpListener" /> objet qui a fourni la demande ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-197"><see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-198">Applications peuvent utiliser cette propriété pour effectuer un traitement spécial lors de demandes proviennent de l’ordinateur local.</span><span class="sxs-lookup"><span data-stu-id="072a6-198">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-199">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListenerRequest.IsLocal%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-199">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-200">Obtient un <see cref="T:System.Boolean" /> valeur qui indique si la connexion TCP utilisée pour envoyer la demande utilise le protocole Secure Sockets Layer (SSL).</span><span class="sxs-lookup"><span data-stu-id="072a6-200">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span></span></summary>
        <value><span data-ttu-id="072a6-201"><see langword="true" /> Si la connexion TCP utilise SSL ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-201"><see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-202">Pour demander une connexion sécurisée, la demande du client utilise <xref:System.Uri.UriSchemeHttps> au lieu de <xref:System.Uri.UriSchemeHttp>.</span><span class="sxs-lookup"><span data-stu-id="072a6-202">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="072a6-203">Si la connexion ne peut pas être établie à l’aide de SSL, le client reçoit un <xref:System.Net.WebException> qui fournit des informations sur l’erreur.</span><span class="sxs-lookup"><span data-stu-id="072a6-203">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-204">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-204">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-205">Obtient un <see cref="T:System.Boolean" /> valeur qui indique si la connexion TCP était une requête WebSocket.</span><span class="sxs-lookup"><span data-stu-id="072a6-205">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span></span></summary>
        <value><span data-ttu-id="072a6-206">Retourne <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-206">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="072a6-207"><see langword="true" /> Si la connexion TCP est une requête WebSocket ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-207"><see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-208">Obtient un <see cref="T:System.Boolean" /> valeur qui indique si le client demande une connexion persistante.</span><span class="sxs-lookup"><span data-stu-id="072a6-208">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span></span></summary>
        <value><span data-ttu-id="072a6-209"><see langword="true" /> Si la connexion doit être maintenue ouverte ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-209"><see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-210">Si un client HTTP et le serveur sont susceptibles d’échanger des données plusieurs fois dans un bref laps de temps, une connexion persistante accélère leurs communications en les autorisant à éviter la surcharge requise pour ouvrir et fermer une connexion TCP pour chaque message.</span><span class="sxs-lookup"><span data-stu-id="072a6-210">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="072a6-211">Pour les clients à l’aide de HTTP/1.1, la valeur par défaut de cette propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="072a6-211">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-212">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-212">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-213">Obtient le serveur IP adresse et numéro de port auquel la demande est dirigée.</span><span class="sxs-lookup"><span data-stu-id="072a6-213">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="072a6-214">Un <see cref="T:System.Net.IPEndPoint" /> qui représente l’adresse IP que la demande est envoyée à.</span><span class="sxs-lookup"><span data-stu-id="072a6-214">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-215">Cette propriété est utile lorsque vous souhaitez répondre aux requêtes selon la façon dont elles sont traitées.</span><span class="sxs-lookup"><span data-stu-id="072a6-215">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-216">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-216">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-217">Obtient la version HTTP utilisée par le client demandeur.</span><span class="sxs-lookup"><span data-stu-id="072a6-217">Gets the HTTP version used by the requesting client.</span></span></summary>
        <value><span data-ttu-id="072a6-218">Un <see cref="T:System.Version" /> qui identifie la version du client de HTTP.</span><span class="sxs-lookup"><span data-stu-id="072a6-218">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-219">Les fonctions des différentes versions HTTP sont spécifiées dans les documents disponibles sur [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="072a6-219">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-220">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-220">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-221">Obtient la chaîne de requête incluse dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-221">Gets the query string included in the request.</span></span></summary>
        <value><span data-ttu-id="072a6-222">Un <see cref="T:System.Collections.Specialized.NameValueCollection" /> objet qui contient les données de requête incluses dans la demande <see cref="P:System.Net.HttpListenerRequest.Url" />.</span><span class="sxs-lookup"><span data-stu-id="072a6-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-223">Dans une URL, les informations de requête sont séparées à partir des informations de chemin d’accès par un point d’interrogation ( ?).</span><span class="sxs-lookup"><span data-stu-id="072a6-223">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="072a6-224">Paires nom/valeur sont séparées par un signe égal (=).</span><span class="sxs-lookup"><span data-stu-id="072a6-224">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="072a6-225">Pour accéder aux données de requête sous forme de chaîne unique, obtenez la <xref:System.Uri.Query%2A> valeur de propriété à partir de la <xref:System.Uri> objet retourné par <xref:System.Net.HttpListenerRequest.Url%2A>.</span><span class="sxs-lookup"><span data-stu-id="072a6-225">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="072a6-226">Les requêtes sans signe égal (exemple : [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) sont ajoutés à la `null` clé dans le <xref:System.Collections.Specialized.NameValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="072a6-226">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-227">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListenerRequest.QueryString%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-227">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-228">Obtient les informations d’URL (sans l’hôte et le port) demandées par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-228">Gets the URL information (without the host and port) requested by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-229">Un <see cref="T:System.String" /> qui contient l’URL brute de cette demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-229">A <see cref="T:System.String" /> that contains the raw URL for this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-230">L’URL brute est défini comme la partie de l’URL qui suit les informations de domaine.</span><span class="sxs-lookup"><span data-stu-id="072a6-230">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="072a6-231">Dans la chaîne d’URL `http://www.contoso.com/articles/recent.aspx`, l’URL brute est `/articles/recent.aspx`.</span><span class="sxs-lookup"><span data-stu-id="072a6-231">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="072a6-232">L’URL brute comprend la chaîne de requête, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="072a6-232">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="072a6-233">Pour obtenir les informations de l’hôte et le port, utilisez le <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-233">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-234">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListenerRequest.RawUrl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-234">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
 [!code-vb[Net_Listener_Basic#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-235">Obtient le client IP adresse et numéro de port à partir duquel provient la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-235">Gets the client IP address and port number from which the request originated.</span></span></summary>
        <value><span data-ttu-id="072a6-236">Un <see cref="T:System.Net.IPEndPoint" /> qui représente l’adresse IP et port numéro d'où provient la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-236">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="072a6-237">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-237">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
 [!code-vb[Net_Listener_Basic#17](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-238">Obtient l’identificateur de demande de la demande HTTP entrante.</span><span class="sxs-lookup"><span data-stu-id="072a6-238">Gets the request identifier of the incoming HTTP request.</span></span></summary>
        <value><span data-ttu-id="072a6-239">Un <see cref="T:System.Guid" /> objet qui contient l’identificateur de la requête HTTP.</span><span class="sxs-lookup"><span data-stu-id="072a6-239">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-240">Obtient le nom de fournisseur de Service (SPN) envoyés par le client dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-240">Gets the Service Provider Name (SPN) that the client sent on the request.</span></span></summary>
        <value><span data-ttu-id="072a6-241">Un <see cref="T:System.String" /> qui contient le SPN que le client a envoyé sur la requête.</span><span class="sxs-lookup"><span data-stu-id="072a6-241">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-242">Une application pourrait utiliser le <xref:System.Net.HttpListenerRequest.ServiceName%2A> propriété pour effectuer la validation de nom de fournir de Service (SPN) personnalisée.</span><span class="sxs-lookup"><span data-stu-id="072a6-242">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="072a6-243">Authentification Windows intégrée avec protection étendue</span><span class="sxs-lookup"><span data-stu-id="072a6-243">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-244">Obtient le <see cref="T:System.Net.TransportContext" /> pour la demande du client.</span><span class="sxs-lookup"><span data-stu-id="072a6-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span></span></summary>
        <value><span data-ttu-id="072a6-245">Un <see cref="T:System.Net.TransportContext" /> objet pour la demande du client.</span><span class="sxs-lookup"><span data-stu-id="072a6-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-246">Le <xref:System.Net.TransportContext> propriété peut être utilisée pour récupérer le jeton de liaison de canal (FAO) pour un <xref:System.Net.HttpListenerRequest> qui a été envoyé à l’aide de HTTPS.</span><span class="sxs-lookup"><span data-stu-id="072a6-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="072a6-247">Une application pourrait utiliser la <xref:System.Net.TransportContext> propriété pour effectuer l’authentification personnalisée utilisant des appels Win32 native [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) (fonction).</span><span class="sxs-lookup"><span data-stu-id="072a6-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="072a6-248">Si une application tente de récupérer le jeton de liaison de canal (FAO) à partir de ce <xref:System.Net.HttpListenerRequest.TransportContext%2A> à l’aide de la propriété le <xref:System.Net.TransportContext.GetChannelBinding%2A> (méthode) et le <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> n’est pas <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, puis le <xref:System.Net.HttpListenerRequest> lèvera <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="072a6-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="072a6-249">Le <xref:System.Net.HttpListenerRequest> remplace le <xref:System.Net.TransportContext.GetChannelBinding%2A> méthode avec une implémentation interne.</span><span class="sxs-lookup"><span data-stu-id="072a6-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="072a6-250">Authentification Windows intégrée avec protection étendue</span><span class="sxs-lookup"><span data-stu-id="072a6-250">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-251">Obtient le <see cref="T:System.Uri" /> objet demandé par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-251">Gets the <see cref="T:System.Uri" /> object requested by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-252">Un <see cref="T:System.Uri" /> objet qui identifie la ressource demandée par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-252">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-253">Le <xref:System.Net.HttpListenerRequest.Url%2A> propriété vous permet d’obtenir toutes les informations disponibles à partir d’un <xref:System.Uri> objet.</span><span class="sxs-lookup"><span data-stu-id="072a6-253">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="072a6-254">Si vous avez besoin de ne savoir que le texte brut de la demande URI, envisagez d’utiliser le <xref:System.Net.HttpListenerRequest.RawUrl%2A> propriété à la place.</span><span class="sxs-lookup"><span data-stu-id="072a6-254">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="072a6-255">Le <xref:System.Net.HttpListenerRequest.Url%2A> propriété a la valeur null si le <xref:System.Uri> à partir du client ne peut pas être analysée.</span><span class="sxs-lookup"><span data-stu-id="072a6-255">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="072a6-256">Le <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> propriété indique si <xref:System.Net.HttpListener> utilise l’URI brut sans séquence d’échappement plutôt que l’URI converti où toutes les valeurs encodées de pourcentage sont converties et autres étapes de normalisation sont exécutées.</span><span class="sxs-lookup"><span data-stu-id="072a6-256">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="072a6-257">Quand un <xref:System.Net.HttpListener> instance reçoit une demande via le `http.sys` service, il crée une instance de la chaîne d’URI fournie par `http.sys`et l’expose en tant que le <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-257">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="072a6-258">Le `http.sys` service expose deux chaînes d’URI de demande :</span><span class="sxs-lookup"><span data-stu-id="072a6-258">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="072a6-259">URI brut</span><span class="sxs-lookup"><span data-stu-id="072a6-259">Raw URI</span></span>  
  
-   <span data-ttu-id="072a6-260">URI converti</span><span class="sxs-lookup"><span data-stu-id="072a6-260">Converted URI</span></span>  
  
 <span data-ttu-id="072a6-261">L’URI brut est le <xref:System.Uri?displayProperty=nameWithType> fourni dans la ligne de demande d’une demande HTTP :</span><span class="sxs-lookup"><span data-stu-id="072a6-261">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="072a6-262">L’URI brut fourni par `http.sys` pour la requête mentionnée ci-dessus, est « / path / ».</span><span class="sxs-lookup"><span data-stu-id="072a6-262">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="072a6-263">Cela représente la chaîne qui suit le verbe HTTP lorsqu’il a été envoyé sur le réseau.</span><span class="sxs-lookup"><span data-stu-id="072a6-263">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="072a6-264">Le `http.sys` service crée un URI converti à partir des informations fournies dans la demande à l’aide de l’URI fourni dans la ligne de la requête HTTP et l’en-tête d’hôte pour déterminer le serveur d’origine la demande doit être transférée à.</span><span class="sxs-lookup"><span data-stu-id="072a6-264">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="072a6-265">Cela est effectué en comparant les informations à partir de la demande avec un ensemble de préfixes URI enregistrés.</span><span class="sxs-lookup"><span data-stu-id="072a6-265">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="072a6-266">Pour être en mesure de comparer ces valeurs, une normalisation de la demande doit être effectuée.</span><span class="sxs-lookup"><span data-stu-id="072a6-266">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="072a6-267">Pour l’exemple ci-dessus, l’URI converti est comme suit :</span><span class="sxs-lookup"><span data-stu-id="072a6-267">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="072a6-268">Le `http.sys` service combine le <xref:System.Uri.Host%2A?displayProperty=nameWithType> valeur de propriété et la chaîne dans la ligne de demande de création d’un URI converti.</span><span class="sxs-lookup"><span data-stu-id="072a6-268">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="072a6-269">En outre, `http.sys` et <xref:System.Uri?displayProperty=nameWithType> classe également effectuer ce qui suit :</span><span class="sxs-lookup"><span data-stu-id="072a6-269">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="072a6-270">N’échappe pas pourcentage de toutes les valeurs encodées.</span><span class="sxs-lookup"><span data-stu-id="072a6-270">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="072a6-271">Convertit encodés en pourcentage des caractères non ASCII en une représentation de caractères UTF-16.</span><span class="sxs-lookup"><span data-stu-id="072a6-271">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="072a6-272">Notez que les caractères UTF-8 et ANSI ou DBCS sont pris en charge, ainsi que des caractères Unicode (encodage Unicode en utilisant le format d’uXXXX %).</span><span class="sxs-lookup"><span data-stu-id="072a6-272">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="072a6-273">Exécute les autres étapes de normalisation, comme la compression de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="072a6-273">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="072a6-274">Étant donné que la demande ne contient pas toutes les informations concernant l’encodage utilisé pour les valeurs encodées en pourcentage, il n’est peut-être pas possible de déterminer l’encodage correct seulement en analysant les valeurs encodées en pourcentage.</span><span class="sxs-lookup"><span data-stu-id="072a6-274">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="072a6-275">Par conséquent `http.sys` fournit deux clés de Registre pour la modification du processus :</span><span class="sxs-lookup"><span data-stu-id="072a6-275">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="072a6-276">Clé de Registre</span><span class="sxs-lookup"><span data-stu-id="072a6-276">Registry Key</span></span>|<span data-ttu-id="072a6-277">Valeur par défaut</span><span class="sxs-lookup"><span data-stu-id="072a6-277">Default Value</span></span>|<span data-ttu-id="072a6-278">Description</span><span class="sxs-lookup"><span data-stu-id="072a6-278">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="072a6-279">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="072a6-279">EnableNonUTF8</span></span>|<span data-ttu-id="072a6-280">1</span><span class="sxs-lookup"><span data-stu-id="072a6-280">1</span></span>|<span data-ttu-id="072a6-281">Si zéro, `http.sys` accepte uniquement les URL encodée en UTF-8.</span><span class="sxs-lookup"><span data-stu-id="072a6-281">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="072a6-282">Si non nul, `http.sys` accepte également des URL ANSI ou DBCS dans les requêtes.</span><span class="sxs-lookup"><span data-stu-id="072a6-282">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="072a6-283">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="072a6-283">FavorUTF8</span></span>|<span data-ttu-id="072a6-284">1</span><span class="sxs-lookup"><span data-stu-id="072a6-284">1</span></span>|<span data-ttu-id="072a6-285">Si non nul, `http.sys` essaie toujours de décoder une URL au format UTF-8 tout d’abord ; si cette conversion échoue et EnableNonUTF8 n’est pas nulle, Http.sys, puis tente de décoder comme ANSI ou DBCS.</span><span class="sxs-lookup"><span data-stu-id="072a6-285">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="072a6-286">Si zéro (et EnableNonUTF8 n’est pas nulle), `http.sys` tente de décoder comme ANSI ou DBCS ; si ce n’est pas réussie, il essaie une conversion UTF-8.</span><span class="sxs-lookup"><span data-stu-id="072a6-286">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="072a6-287">Lorsque <xref:System.Net.HttpListener> reçoit une demande, il utilise l’URI converti à partir de `http.sys` comme entrée pour le <xref:System.Net.HttpListenerRequest.Url%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-287">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="072a6-288">Il est nécessaire pour prendre en charge des caractères en plus des caractères et les nombres dans les URI.</span><span class="sxs-lookup"><span data-stu-id="072a6-288">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="072a6-289">Un exemple est l’URI suivant, qui est utilisée pour récupérer des informations sur le client pour le client numéro « 1/3812 » :</span><span class="sxs-lookup"><span data-stu-id="072a6-289">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="072a6-290">Notez la barre oblique d’encodée en pourcentage dans l’Uri (% 2F).</span><span class="sxs-lookup"><span data-stu-id="072a6-290">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="072a6-291">Cela est nécessaire, puisque dans ce cas la barre oblique représente des données et non un délimiteur de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="072a6-291">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="072a6-292">En passant la chaîne au constructeur d’Uri entraîne l’URI suivant :</span><span class="sxs-lookup"><span data-stu-id="072a6-292">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="072a6-293">Fractionner le chemin d’accès en ses segments génère les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="072a6-293">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="072a6-294">Cela n’est pas l’intention de l’expéditeur de la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-294">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="072a6-295">Si le <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> propriété est définie sur false, lorsque le <xref:System.Net.HttpListener> reçoit une demande, il utilise l’URI brut au lieu de l’URI converti à partir de `http.sys` comme entrée pour le <xref:System.Net.HttpListenerRequest.Url%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-295">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-296">L’exemple de code suivant montre comment utiliser le <xref:System.Net.HttpListenerRequest.Url%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-296">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md"><span data-ttu-id="072a6-297">Schéma des paramètres réseau</span><span class="sxs-lookup"><span data-stu-id="072a6-297">Network Settings Schema</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9"><span data-ttu-id="072a6-298">&lt;httpListener&gt; , élément (paramètres réseau)</span><span class="sxs-lookup"><span data-stu-id="072a6-298">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-299">Obtient l’identificateur URI (Uniform Resource) de la ressource qui a signalé le client au serveur.</span><span class="sxs-lookup"><span data-stu-id="072a6-299">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span></span></summary>
        <value><span data-ttu-id="072a6-300">Un <see cref="T:System.Uri" /> objet qui contient le texte de la demande <see cref="F:System.Net.HttpRequestHeader.Referer" /> en-tête, ou <see langword="null" /> si l’en-tête n’était pas inclus dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-300">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-301">Si un client a suivi un lien hypertexte vers l’URI demandé, sa demande peut contenir un `Referrer` en-tête qui identifie l’URI de la ressource qui contenait le lien hypertexte.</span><span class="sxs-lookup"><span data-stu-id="072a6-301">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="072a6-302">Les clients peuvent falsifier ou choisir de ne pas présenter un <xref:System.Net.HttpRequestHeader.Referer> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-302">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="072a6-303">Par conséquent, tandis que le <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> propriété peut être utile pour identifier les tendances de base dans le trafic Web ; vous ne devez pas l’utiliser en tant que partie d’un schéma d’autorisation pour contrôler l’accès aux données.</span><span class="sxs-lookup"><span data-stu-id="072a6-303">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="072a6-304">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="072a6-305">Le <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> a la valeur null lorsqu’il existe aucune `Referrer` en-tête dans la demande ou lorsque le `Referrer` en-tête est présent dans la demande, mais ne donne pas valide <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="072a6-305">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-306">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-307">Obtient l’agent utilisateur présenté par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-307">Gets the user agent presented by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-308">Un <see cref="T:System.String" /> objet qui contient le texte de la demande <see langword="User-Agent" /> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-308">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-309">Le `User-Agent` en-tête contient généralement un texte qui identifie le nom et numéro de version du logiciel utilisé pour générer la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-309">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="072a6-310">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-310">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="072a6-311">Le <xref:System.Net.HttpListenerRequest.UserAgent%2A> a la valeur null lorsqu’il existe aucune `User-Agent` en-tête dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-311">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-312">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-312">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-313">Obtient le serveur IP adresse et numéro de port auquel la demande est dirigée.</span><span class="sxs-lookup"><span data-stu-id="072a6-313">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="072a6-314">Un <see cref="T:System.String" /> qui contient les informations d’adresse hôte.</span><span class="sxs-lookup"><span data-stu-id="072a6-314">A <see cref="T:System.String" /> that contains the host address information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-315">Les informations retournées par cette propriété sont également disponibles dans le <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-315">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-316">L’exemple de code suivant affiche la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-316">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-317">Obtient le nom DNS et, s’il est fourni, le numéro de port spécifié par le client.</span><span class="sxs-lookup"><span data-stu-id="072a6-317">Gets the DNS name and, if provided, the port number specified by the client.</span></span></summary>
        <value><span data-ttu-id="072a6-318">Un <see cref="T:System.String" /> valeur qui contient le texte de la demande <see langword="Host" /> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-318">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-319">Le `Host` en-tête contient le nom d’hôte serveur demandé et le numéro de port, si spécifié, séparés par un signe deux-points (par exemple, `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="072a6-319">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="072a6-320">Vous pouvez utiliser cette propriété pour retourner des réponses différentes en fonction du nom d’hôte spécifié dans la demande.</span><span class="sxs-lookup"><span data-stu-id="072a6-320">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="072a6-321">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-321">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-322">L’exemple de code suivant illustre l’utilisation de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="072a6-322">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="072a6-323">Obtient les langages naturels préférés pour la réponse.</span><span class="sxs-lookup"><span data-stu-id="072a6-323">Gets the natural languages that are preferred for the response.</span></span></summary>
        <value><span data-ttu-id="072a6-324">Un <see cref="T:System.String" /> tableau qui contient les langues spécifiées dans la demande <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> en-tête ou <see langword="null" /> si la demande du client ne comprenait pas un <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-324">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="072a6-325">Pour une description détaillée de la `Accept-Language` en-tête, consultez le document RFC 2616, Section 14,4, disponible à l’adresse [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="072a6-325">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="072a6-326">Pour obtenir une liste complète des en-têtes de demande, consultez le <xref:System.Net.HttpRequestHeader> énumération.</span><span class="sxs-lookup"><span data-stu-id="072a6-326">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="072a6-327">L’exemple de code suivant affiche les langues à partir de la demande `Accept-Language` en-tête.</span><span class="sxs-lookup"><span data-stu-id="072a6-327">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
 [!code-vb[Net_Listener_Basic#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>