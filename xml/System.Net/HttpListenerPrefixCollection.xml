<Type Name="HttpListenerPrefixCollection" FullName="System.Net.HttpListenerPrefixCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24ed896b5097c0293079cbdb27b8273a2e5a3d0f" /><Meta Name="ms.sourcegitcommit" Value="0609891c89ddaa91e4c02970acb00072fcc29baf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/13/2019" /><Meta Name="ms.locfileid" Value="65558499" /></Metadata><TypeSignature Language="C#" Value="public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpListenerPrefixCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;string&gt;, class System.Collections.Generic.IEnumerable`1&lt;string&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerPrefixCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpListenerPrefixCollection&#xA;Implements ICollection(Of String), IEnumerable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerPrefixCollection : System::Collections::Generic::ICollection&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type HttpListenerPrefixCollection = class&#xA;    interface ICollection&lt;string&gt;&#xA;    interface seq&lt;string&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="21fd0-101">Représente la collection utilisée pour stocker des préfixes d’identificateur URI (Uniform Resource) pour <see cref="T:System.Net.HttpListener" /> objets.</span><span class="sxs-lookup"><span data-stu-id="21fd0-101">Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <see cref="T:System.Net.HttpListener" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-102">Le <xref:System.Net.HttpListener.Prefixes%2A> propriété retourne des instances de cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-102">The <xref:System.Net.HttpListener.Prefixes%2A> property returns instances of this collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-103">L’exemple de code suivant crée un <xref:System.Net.HttpListener> et ajoute des préfixes de spécifié par l’utilisateur à son <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-103">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="httpListenerPrefixCollection.Add uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="21fd0-104">Un <see cref="T:System.String" /> qui identifie les informations d’URI qui sont comparées dans les demandes entrantes.</span><span class="sxs-lookup"><span data-stu-id="21fd0-104">A <see cref="T:System.String" /> that identifies the URI information that is compared in incoming requests.</span></span> <span data-ttu-id="21fd0-105">Le préfixe doit se terminer par une barre oblique (« / »).</span><span class="sxs-lookup"><span data-stu-id="21fd0-105">The prefix must be terminated with a forward slash ("/").</span></span></param>
        <summary><span data-ttu-id="21fd0-106">Ajoute un préfixe URI (Uniform Resource Identifier) à la collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-106">Adds a Uniform Resource Identifier (URI) prefix to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-107">Cette méthode ajoute un préfixe URI pour le jeu de préfixes gérée par associé <xref:System.Net.HttpListener> objet.</span><span class="sxs-lookup"><span data-stu-id="21fd0-107">This method adds a URI prefix to the set of prefixes managed by the associated <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="21fd0-108">Lors de la vérification `uriPrefix` pour vous assurer qu’il n’est valide, la casse est ignorée.</span><span class="sxs-lookup"><span data-stu-id="21fd0-108">When checking `uriPrefix` to ensure it is valid, case is ignored.</span></span>  
  
 <span data-ttu-id="21fd0-109">Une chaîne de préfixe URI est composée d’un schéma (http ou https), un ordinateur hôte, un port facultatif et un chemin d’accès facultatif, par exemple, «`http://www.contoso.com:8080/customerData/`».</span><span class="sxs-lookup"><span data-stu-id="21fd0-109">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "`http://www.contoso.com:8080/customerData/`".</span></span> <span data-ttu-id="21fd0-110">Le préfixe doit se terminer par une barre oblique (« / »).</span><span class="sxs-lookup"><span data-stu-id="21fd0-110">The prefix must be terminated with a forward slash ("/").</span></span> <span data-ttu-id="21fd0-111">Le <xref:System.Net.HttpListener> avec le préfixe qui correspond le mieux à un URI demandé répond à la demande.</span><span class="sxs-lookup"><span data-stu-id="21fd0-111">The <xref:System.Net.HttpListener> with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="21fd0-112">Plusieurs <xref:System.Net.HttpListener> objets ne peut pas ajouter le même préfixe.</span><span class="sxs-lookup"><span data-stu-id="21fd0-112">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix.</span></span> <span data-ttu-id="21fd0-113">Un <xref:System.Net.HttpListenerException> exception est levée si un <xref:System.Net.HttpListener> ajoute un préfixe qui est déjà utiliser.</span><span class="sxs-lookup"><span data-stu-id="21fd0-113">An <xref:System.Net.HttpListenerException> exception is thrown if an <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>  
  
 <span data-ttu-id="21fd0-114">Lorsqu’un port est spécifié, l’élément hôte peut être remplacé par «`*`» pour indiquer que le <xref:System.Net.HttpListener> accepte les demandes envoyées au port si l’URI demandé ne correspond pas à n’importe quel autre préfixe.</span><span class="sxs-lookup"><span data-stu-id="21fd0-114">When a port is specified, the host element can be replaced with "`*`" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="21fd0-115">Par exemple, pour recevoir toutes les demandes envoyées au port 8080 lorsque l’URI demandé n’est pas géré par un autre <xref:System.Net.HttpListener>, le préfixe est «`http://*:8080/`».</span><span class="sxs-lookup"><span data-stu-id="21fd0-115">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <xref:System.Net.HttpListener>, the prefix is "`http://*:8080/`".</span></span> <span data-ttu-id="21fd0-116">De même, pour spécifier que le <xref:System.Net.HttpListener> accepte toutes les demandes envoyées à un port, remplacez l’élément hôte avec le «`+`« character »,`https://+:8080/`».</span><span class="sxs-lookup"><span data-stu-id="21fd0-116">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "`+`" character, "`https://+:8080/`".</span></span> <span data-ttu-id="21fd0-117">Le «`*`« et »`+`» les caractères peuvent être présents dans les préfixes qui incluent des chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="21fd0-117">The "`*`" and "`+`" characters can be present in prefixes that include paths.</span></span>  
  
 <span data-ttu-id="21fd0-118">Les sous-domaines génériques à partir de .NET 4.5.3 et Windows 10, sont pris en charge dans les préfixes URI qui sont gérés par un <xref:System.Net.HttpListener> objet.</span><span class="sxs-lookup"><span data-stu-id="21fd0-118">Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="21fd0-119">Pour spécifier un sous-domaine de caractère générique, utilisez le « \* » caractère en tant que partie du nom d’hôte dans un préfixe URI : par exemple, `http://*.foo.com/`et le transmettre comme argument à la méthode HttpListenerPrefixCollection.Add.</span><span class="sxs-lookup"><span data-stu-id="21fd0-119">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix: for example, `http://*.foo.com/`, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</span></span> <span data-ttu-id="21fd0-120">Cela fonctionne sur .NET 4.5.3 et Windows 10 ; dans les versions antérieures, cela générerait une <xref:System.Net.HttpListenerException></span><span class="sxs-lookup"><span data-stu-id="21fd0-120">This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <xref:System.Net.HttpListenerException></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-121">L’exemple de code suivant crée un <xref:System.Net.HttpListener> et ajoute des préfixes de spécifié par l’utilisateur à son <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-121">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21fd0-122"><paramref name="uriPrefix" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-122"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21fd0-123"><paramref name="uriPrefix" /> n’utilise pas le schéma http:// ou https://.</span><span class="sxs-lookup"><span data-stu-id="21fd0-123"><paramref name="uriPrefix" /> does not use the http:// or https:// scheme.</span></span> <span data-ttu-id="21fd0-124">Ces schémas sont les seuls pris en charge pour les objets <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-124">These are the only schemes supported for <see cref="T:System.Net.HttpListener" /> objects.</span></span>  
  
<span data-ttu-id="21fd0-125">ou</span><span class="sxs-lookup"><span data-stu-id="21fd0-125">-or-</span></span> 
 <span data-ttu-id="21fd0-126"><paramref name="uriPrefix" /> n’est pas un préfixe d’URI correctement mis en forme.</span><span class="sxs-lookup"><span data-stu-id="21fd0-126"><paramref name="uriPrefix" /> is not a correctly formatted URI prefix.</span></span> <span data-ttu-id="21fd0-127">Assurez-vous que la chaîne se termine par une barre oblique (« / »).</span><span class="sxs-lookup"><span data-stu-id="21fd0-127">Make sure the string is terminated with a "/".</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="21fd0-128">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</span><span class="sxs-lookup"><span data-stu-id="21fd0-128">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="21fd0-129">Un appel de fonction Windows a échoué.</span><span class="sxs-lookup"><span data-stu-id="21fd0-129">A Windows function call failed.</span></span> <span data-ttu-id="21fd0-130">Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</span><span class="sxs-lookup"><span data-stu-id="21fd0-130">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span> <span data-ttu-id="21fd0-131">Cette exception est levée si un autre <see cref="T:System.Net.HttpListener" /> a déjà ajouté le préfixe <paramref name="uriPrefix" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-131">This exception is thrown if another <see cref="T:System.Net.HttpListener" /> has already added the prefix <paramref name="uriPrefix" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="21fd0-132">Pour accepter les connexions réseau.</span><span class="sxs-lookup"><span data-stu-id="21fd0-132">To accept network connections.</span></span> <span data-ttu-id="21fd0-133">Énumération associée : <see cref="F:System.Net.NetworkAccess.Accept" /></span><span class="sxs-lookup"><span data-stu-id="21fd0-133">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span></span></permission>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpListenerPrefixCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21fd0-134">Supprime tous les préfixes d’identificateur de ressource uniforme (URI) de la collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-134">Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-135">Après avoir appelé cette méthode, vous ne pouvez pas démarrer associé <xref:System.Net.HttpListener> sans ajouter de nouveaux préfixes ; si vous essayez de le faire, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="21fd0-135">After calling this method, you cannot start the associated <xref:System.Net.HttpListener> without adding new prefixes; if you try to do so, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-136">L’exemple de code suivant supprime tous les préfixes dans un <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-136">The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#6)]  
 [!code-vb[Net_Listener_Basic#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="21fd0-137">Un appel de fonction Windows a échoué.</span><span class="sxs-lookup"><span data-stu-id="21fd0-137">A Windows function call failed.</span></span> <span data-ttu-id="21fd0-138">Vérifiez la propriété <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de l’exception pour déterminer la cause de l’exception.</span><span class="sxs-lookup"><span data-stu-id="21fd0-138">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="21fd0-139">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</span><span class="sxs-lookup"><span data-stu-id="21fd0-139">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="21fd0-140">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="21fd0-140">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="21fd0-141">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="21fd0-141">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Contains : string -&gt; bool&#xA;override this.Contains : string -&gt; bool" Usage="httpListenerPrefixCollection.Contains uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="21fd0-142">Un <see cref="T:System.String" /> qui contient le préfixe d’identificateur de ressource uniforme (URI) à tester.</span><span class="sxs-lookup"><span data-stu-id="21fd0-142">A <see cref="T:System.String" /> that contains the Uniform Resource Identifier (URI) prefix to test.</span></span></param>
        <summary><span data-ttu-id="21fd0-143">Retourne un <see cref="T:System.Boolean" /> valeur qui indique si le préfixe spécifié est contenu dans la collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-143">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified prefix is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="21fd0-144"><see langword="true" /> Si cette collection contient le préfixe spécifié par <paramref name="uriPrefix" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-144"><see langword="true" /> if this collection contains the prefix specified by <paramref name="uriPrefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-145">Le préfixe spécifié doit correspondre exactement à une valeur existante.</span><span class="sxs-lookup"><span data-stu-id="21fd0-145">The specified prefix must exactly match an existing value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-146">Le code suivant exemple vérifie si un préfixe spécifié par l’utilisateur est contenu dans la collection de préfixe d’un <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-146">The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#4)]  
 [!code-vb[Net_Listener_Basic#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21fd0-147"><paramref name="uriPrefix" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-147"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21fd0-148">Copie le contenu d’un <see cref="T:System.Net.HttpListenerPrefixCollection" /> dans le tableau spécifié.</span><span class="sxs-lookup"><span data-stu-id="21fd0-148">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-149">Le tableau doit être en mesure de contenir des chaînes et ne peut pas être multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="21fd0-149">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, int offset);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="21fd0-150">Unidimensionnel <see cref="T:System.Array" /> qui reçoit les chaînes de préfixe d’identificateur de ressource uniforme (URI) de cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-150">The one dimensional <see cref="T:System.Array" /> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span></span></param>
        <param name="offset"><span data-ttu-id="21fd0-151">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="21fd0-151">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="21fd0-152">Copie le contenu d’un <see cref="T:System.Net.HttpListenerPrefixCollection" /> dans le tableau spécifié.</span><span class="sxs-lookup"><span data-stu-id="21fd0-152">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-153">Le tableau doit être en mesure de contenir des chaînes et ne peut pas être multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="21fd0-153">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-154">L’exemple de code suivant copie les préfixes dans un <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-154">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
 [!code-vb[Net_Listener_Basic#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21fd0-155"><paramref name="array" /> a plusieurs dimensions.</span><span class="sxs-lookup"><span data-stu-id="21fd0-155"><paramref name="array" /> has more than one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21fd0-156">Cette collection contient plus d’éléments que peuvent être stockées dans <paramref name="array" /> en commençant à <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-156">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="21fd0-157">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</span><span class="sxs-lookup"><span data-stu-id="21fd0-157">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="21fd0-158"><paramref name="array" /> Impossible de stocker les valeurs de chaîne.</span><span class="sxs-lookup"><span data-stu-id="21fd0-158"><paramref name="array" /> cannot store string values.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(string[] array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int offset);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : string[] * int -&gt; unit&#xA;override this.CopyTo : string[] * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="21fd0-159">Le tableau de chaînes unidimensionnel qui reçoit les chaînes de préfixe d’identificateur URI (Uniform Resource) dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-159">The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span></span></param>
        <param name="offset"><span data-ttu-id="21fd0-160">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</span><span class="sxs-lookup"><span data-stu-id="21fd0-160">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="21fd0-161">Copie le contenu d’un <see cref="T:System.Net.HttpListenerPrefixCollection" /> au tableau de chaînes spécifié.</span><span class="sxs-lookup"><span data-stu-id="21fd0-161">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified string array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-162">Le tableau doit être en mesure de contenir des chaînes et ne peut pas être multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="21fd0-162">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-163">L’exemple de code suivant copie les préfixes dans un <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-163">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
 [!code-vb[Net_Listener_Basic#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21fd0-164"><paramref name="array" /> a plusieurs dimensions.</span><span class="sxs-lookup"><span data-stu-id="21fd0-164"><paramref name="array" /> has more than one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21fd0-165">Cette collection contient plus d’éléments que peuvent être stockées dans <paramref name="array" /> en commençant à <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-165">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="21fd0-166">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</span><span class="sxs-lookup"><span data-stu-id="21fd0-166">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.HttpListenerPrefixCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21fd0-167">Obtient le nombre de préfixes contenus dans la collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-167">Gets the number of prefixes contained in the collection.</span></span></summary>
        <value><span data-ttu-id="21fd0-168">Un <see cref="T:System.Int32" /> qui contient le nombre de préfixes dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-168">An <see cref="T:System.Int32" /> that contains the number of prefixes in this collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21fd0-169">L’exemple de code suivant affiche les préfixes d’un regroupement.</span><span class="sxs-lookup"><span data-stu-id="21fd0-169">The following code example displays the prefixes in a collection.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;string&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;string&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::String ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;" Usage="httpListenerPrefixCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21fd0-170">Retourne un objet qui peut être utilisé pour itérer la collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-170">Returns an object that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="21fd0-171">Un objet qui implémente le <see cref="T:System.Collections.IEnumerator" /> interface et permet d’accéder aux chaînes de cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-171">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-172">L’objet qui est retourné par cette méthode est positionné initialement avant le premier élément dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-172">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="21fd0-173">Vous devez appeler la <xref:System.Collections.IEnumerator.MoveNext%2A> méthode avant de pouvoir accéder au premier élément.</span><span class="sxs-lookup"><span data-stu-id="21fd0-173">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="21fd0-174">Pour accéder à l’élément à la position actuelle, appelez le <xref:System.Collections.IEnumerator.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="21fd0-174">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="21fd0-175">Ne modifiez pas la collection lors de l’utilisation de l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="21fd0-175">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="21fd0-176">Si la collection est modifiée pendant qu’un énumérateur est en utilisation, une tentative de définir la position en appelant <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> provoque un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-176">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="21fd0-177">Pour obtenir une description détaillée des énumérateurs, consultez la documentation pour le <xref:System.Collections.IEnumerator> classe et le <xref:System.Collections.IEnumerable.GetEnumerator%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="21fd0-177">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21fd0-178">L’exemple de code suivant illustre l’énumération d’une collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-178">The following code example demonstrates enumerating through a collection.</span></span> <span data-ttu-id="21fd0-179">Notez que les exemples Visual Basic et c# utilisent des instructions de langage spécifique à énumérer la collection au lieu de récupérer l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="21fd0-179">Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21fd0-180">Obtient une valeur qui indique si l’accès à la collection est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="21fd0-180">Gets a value that indicates whether access to the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="21fd0-181">Retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-181">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21fd0-182">Obtient une valeur qui indique si l’accès à la collection est synchronisé (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="21fd0-182">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="21fd0-183">Cette propriété retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-183">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-184">L'énumération d'une collection n'est intrinsèquement pas une procédure thread-safe.</span><span class="sxs-lookup"><span data-stu-id="21fd0-184">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="21fd0-185">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</span><span class="sxs-lookup"><span data-stu-id="21fd0-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="21fd0-186">Pour garantir la sécurité des threads pendant l’énumération, vous pouvez verrouiller la collection pendant toute l’énumération ou intercepter les exceptions qui résultent de modifications apportées par d’autres threads.</span><span class="sxs-lookup"><span data-stu-id="21fd0-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="httpListenerPrefixCollection.Remove uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="21fd0-187">Un <see cref="T:System.String" /> qui contient le préfixe URI à supprimer.</span><span class="sxs-lookup"><span data-stu-id="21fd0-187">A <see cref="T:System.String" /> that contains the URI prefix to remove.</span></span></param>
        <summary><span data-ttu-id="21fd0-188">Supprime le spécifié identificateur URI (Uniform Resource) de la liste de préfixes gérée par le <see cref="T:System.Net.HttpListener" /> objet.</span><span class="sxs-lookup"><span data-stu-id="21fd0-188">Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <returns><span data-ttu-id="21fd0-189"><see langword="true" /> Si le <paramref name="uriPrefix" /> a été trouvé dans le <see cref="T:System.Net.HttpListenerPrefixCollection" /> et supprimé ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-189"><see langword="true" /> if the <paramref name="uriPrefix" /> was found in the <see cref="T:System.Net.HttpListenerPrefixCollection" /> and removed; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-190">Si `uriPrefix` est pas dans la collection, cette méthode ne fait rien.</span><span class="sxs-lookup"><span data-stu-id="21fd0-190">If `uriPrefix` is not in the collection, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21fd0-191"><paramref name="uriPrefix" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21fd0-191"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="21fd0-192">Un appel de fonction Windows a échoué.</span><span class="sxs-lookup"><span data-stu-id="21fd0-192">A Windows function call failed.</span></span> <span data-ttu-id="21fd0-193">Pour déterminer la cause de l’exception, vérifiez le code d’erreur de l’exception.</span><span class="sxs-lookup"><span data-stu-id="21fd0-193">To determine the cause of the exception, check the exception's error code.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="21fd0-194">Le <see cref="T:System.Net.HttpListener" /> associé à cette collection est fermé.</span><span class="sxs-lookup"><span data-stu-id="21fd0-194">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="21fd0-195">Ce membre génère des informations de traçage lorsque vous activez le traçage réseau dans votre application.</span><span class="sxs-lookup"><span data-stu-id="21fd0-195">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="21fd0-196">Pour plus d’informations, consultez [le traçage réseau dans le .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="21fd0-196">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21fd0-197">Retourne un objet qui peut être utilisé pour itérer la collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-197">Returns an object that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="21fd0-198">Un objet qui implémente le <see cref="T:System.Collections.IEnumerator" /> interface et permet d’accéder aux chaînes de cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-198">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21fd0-199">L’objet qui est retourné par cette méthode est positionné initialement avant le premier élément dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="21fd0-199">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="21fd0-200">Vous devez appeler la <xref:System.Collections.IEnumerator.MoveNext%2A> méthode avant de pouvoir accéder au premier élément.</span><span class="sxs-lookup"><span data-stu-id="21fd0-200">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="21fd0-201">Pour accéder à l’élément à la position actuelle, appelez le <xref:System.Collections.IEnumerator.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="21fd0-201">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="21fd0-202">Ne modifiez pas la collection lors de l’utilisation de l’énumérateur.</span><span class="sxs-lookup"><span data-stu-id="21fd0-202">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="21fd0-203">Si la collection est modifiée pendant qu’un énumérateur est en utilisation, une tentative de définir la position en appelant <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> provoque un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="21fd0-203">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="21fd0-204">Pour obtenir une description détaillée des énumérateurs, consultez la documentation pour le <xref:System.Collections.IEnumerator> classe et le <xref:System.Collections.IEnumerable.GetEnumerator%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="21fd0-204">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
  </Members>
</Type>