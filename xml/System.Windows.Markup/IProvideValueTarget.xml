<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004485" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7847e-101">Représente un service qui fait état des relations de propriétés d’objet situationnelles pour l’évaluation de l’extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="7847e-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7847e-102"><xref:System.Windows.Markup.IProvideValueTarget> représente un service qui signale les informations concernant la structure objet-propriété qui entoure où un convertisseur de valeurs est appelé.</span><span class="sxs-lookup"><span data-stu-id="7847e-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="7847e-103">Convertisseurs de type et extensions de balisage peuvent interroger pour <xref:System.Windows.Markup.IProvideValueTarget> en tant que service sur le contexte de service qui est fourni par un writer d’objet XAML, lorsque le writer d’objet XAML appelle le comportement de conversion de valeur.</span><span class="sxs-lookup"><span data-stu-id="7847e-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="7847e-104">Pour plus d’informations, consultez [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) et [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="7847e-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="7847e-105">Extensions de balisage, un scénario où <xref:System.Windows.Markup.IProvideValueTarget> est utile consiste à déterminer la validité de l’utilisation de la connaissance de votre extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="7847e-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="7847e-106">Par exemple, votre extension de balisage peut implémenter un mécanisme de report de valeur, mais à l’aide de ce mécanisme ne convient que si l’objet cible est capable d’utiliser d’autres composants de votre mécanisme de report en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="7847e-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="7847e-107">Vous pouvez vérifier les caractéristiques du système de type de l’objet retourné en tant que <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> et assurez-vous que cet objet prend en charge votre technique de différé.</span><span class="sxs-lookup"><span data-stu-id="7847e-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="7847e-108">Dans ce cas, votre extension de balisage retourne une valeur, et dans le cas contraire, votre extension de balisage lève une exception qui est récupérée en tant qu’exception interne par un writer d’objet XAML.</span><span class="sxs-lookup"><span data-stu-id="7847e-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="7847e-109">Un scénario semblable assure qu’une propriété particulière prend en charge une fonctionnalité, en vérifiant les caractéristiques du système de type de la <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="7847e-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="7847e-110">Bien que le nom de l’API <xref:System.Windows.Markup.IProvideValueTarget> peut impliquer une association avec <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, les informations signalées par <xref:System.Windows.Markup.IProvideValueTarget> peut également être utile pour un <xref:System.ComponentModel.TypeConverter> ou <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="7847e-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="7847e-111">Un <xref:System.ComponentModel.TypeConverter> ou <xref:System.Windows.Markup.ValueSerializer> ont généralement plus de contexte qu’une extension de balisage, car ils sont dédiés à un type de cible particulière ou d’une propriété cible, et donc la validité situationnelle est habituellement prévisible dans le système de type.</span><span class="sxs-lookup"><span data-stu-id="7847e-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="7847e-112">Toutefois, d’autres scénarios existent.</span><span class="sxs-lookup"><span data-stu-id="7847e-112">However, other scenarios exist.</span></span> <span data-ttu-id="7847e-113">Voici une liste de scénarios qui peuvent être implémentés par un convertisseur de type ou une extension de balisage :</span><span class="sxs-lookup"><span data-stu-id="7847e-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="7847e-114">Obtenir <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> pour lire les valeurs d’instance d’autres propriétés sur cet objet.</span><span class="sxs-lookup"><span data-stu-id="7847e-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="7847e-115">Notez que votre gestion doit être fiable pour les valeurs non définies, étant donné que l’ordre de traitement de membres XAML sur l’objet cible peut être non déterministe.</span><span class="sxs-lookup"><span data-stu-id="7847e-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="7847e-116">Obtenir <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> pour lire les métadonnées au niveau du type, ou pour vérifier que les interfaces requises sont implémentées par le type.</span><span class="sxs-lookup"><span data-stu-id="7847e-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="7847e-117">Obtenir <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> pour lire les métadonnées de propriété.</span><span class="sxs-lookup"><span data-stu-id="7847e-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="7847e-118">Un scénario consiste à utiliser <xref:System.Windows.Markup.IProvideValueTarget> informations pour limiter les objets ou propriétés est autorisé à être définis par votre extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="7847e-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="7847e-119">Avant de tenter d’utiliser le service, assurez-vous que le service lui-même n’est pas `null` lorsque retournée par le paramètre de fournisseur de service appropriée vous utilisez pour le contexte.</span><span class="sxs-lookup"><span data-stu-id="7847e-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7847e-120">Lorsque vous utilisez le service, il est particulièrement important de ne pas modifier l’objet référencé par le <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> propriété ou autres objets référencés par cet objet.</span><span class="sxs-lookup"><span data-stu-id="7847e-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="7847e-121">Pour WPF spécifiquement, ces modifications pourraient provoquer des modifications inattendues qui invalideraient le système de propriétés WPF.</span><span class="sxs-lookup"><span data-stu-id="7847e-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7847e-122">N’utilisez pas le type de <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> pour déterminer quel type précis un convertisseur de type ou d’extension de balisage doit retourner.</span><span class="sxs-lookup"><span data-stu-id="7847e-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="7847e-123">Qui n’est pas recommandé.</span><span class="sxs-lookup"><span data-stu-id="7847e-123">That is not a best practice.</span></span> <span data-ttu-id="7847e-124">Votre type de retour doit être cohérent avec l’attribution (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> pour les extensions de balisage) ou les modèles (nom de classe de convertisseur de type).</span><span class="sxs-lookup"><span data-stu-id="7847e-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="7847e-125">Dans les versions précédentes du .NET Framework, cette interface existait dans l’assembly WindowsBase spécifique de WPF.</span><span class="sxs-lookup"><span data-stu-id="7847e-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="7847e-126">Dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> est dans l’assembly System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="7847e-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="7847e-127">Pour plus d'informations, consultez [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="7847e-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="7847e-128">Remarques sur l’utilisation WPF</span><span class="sxs-lookup"><span data-stu-id="7847e-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="7847e-129">Ce service prend en charge les fonctionnalités de framework, telles que de liaison sur une propriété de dépendance.</span><span class="sxs-lookup"><span data-stu-id="7847e-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="7847e-130">Dans WPF, le service représenté par <xref:System.Windows.Markup.IProvideValueTarget> peut retourner des objets et propriétés pour les situations où la valeur à retourner à partir d’un convertisseur de type ou d’extension de balisage dépend du contexte.</span><span class="sxs-lookup"><span data-stu-id="7847e-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="7847e-131"><xref:System.Windows.Markup.IProvideValueTarget> est exploité dans l’implémentation interne de <xref:System.Windows.Data.BindingBase>, la classe qui implémente le mécanisme de liaison pour les propriétés de dépendance dans WPF.</span><span class="sxs-lookup"><span data-stu-id="7847e-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="7847e-132">Un fournisseur de service interne par défaut pour WPF implémente <xref:System.Windows.Markup.IProvideValueTarget> pour une utilisation par un convertisseur de type ou d’extension de balisage personnalisée.</span><span class="sxs-lookup"><span data-stu-id="7847e-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="7847e-133">L’objet et la propriété signalée par <xref:System.Windows.Markup.IProvideValueTarget> peuvent être définies uniquement par le service WPF interne.</span><span class="sxs-lookup"><span data-stu-id="7847e-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="7847e-134">Au-delà de cette définition de procédure <xref:System.Windows.Markup.IProvideValueTarget> opère nécessitent la définition de votre propre fournisseur de services pour les utilisations de balisage extension et le type de convertisseur qui implémente au moins le <xref:System.Windows.Markup.IProvideValueTarget> et <xref:System.Windows.Markup.IXamlTypeResolver> , qui est une avancée et services scénario qui n’est pas décrite ici.</span><span class="sxs-lookup"><span data-stu-id="7847e-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="7847e-135">Une valeur null pour <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> ou <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> ne signifie pas nécessairement qu’un convertisseur de type ou d’extension de balisage ne peut pas agir, bien que cela dépend de votre implémentation.</span><span class="sxs-lookup"><span data-stu-id="7847e-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="7847e-136">Un exemple de cas où les valeurs de <xref:System.Windows.Markup.IProvideValueTarget> sont null même si le service est disponible est lorsque votre extension de balisage est imbriquée dans une autre extension de balisage, comme un <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="7847e-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="7847e-137">Une implémentation qui s’appuie sur <xref:System.Windows.Markup.IProvideValueTarget> doit toujours rechercher les valeurs null uniquement à des fins de lever une exception spécifique, si cela est votre conception prévue.</span><span class="sxs-lookup"><span data-stu-id="7847e-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7847e-138">Obtient l’objet cible qui est signalé.</span><span class="sxs-lookup"><span data-stu-id="7847e-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="7847e-139">Objet cible signalé.</span><span class="sxs-lookup"><span data-stu-id="7847e-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7847e-140">La valeur retournée par <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> est la référence réelle, pas un identificateur de système de type ou tout autre identificateur.</span><span class="sxs-lookup"><span data-stu-id="7847e-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="7847e-141">La valeur peut également être `null`; consultez <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="7847e-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7847e-142">Lorsque vous utilisez le service, il est particulièrement important de ne pas modifier l’objet référencé par le <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> propriété ou autres objets référencés par cet objet, comme les propriétés qui ne sont pas spécifiquement la conversion de valeur cas que vous gérez.</span><span class="sxs-lookup"><span data-stu-id="7847e-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="7847e-143">Pour WPF spécifiquement, la modification de l’objet cible peut entraîner des modifications inattendues qui invalideraient le système de propriétés WPF.</span><span class="sxs-lookup"><span data-stu-id="7847e-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="7847e-144">Convertisseurs de type ou les Extensions de balisage pour XAML</span><span class="sxs-lookup"><span data-stu-id="7847e-144">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7847e-145">Obtient un identificateur pour la propriété cible qui est signalée.</span><span class="sxs-lookup"><span data-stu-id="7847e-145">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="7847e-146">Identificateur de la propriété cible signalée.</span><span class="sxs-lookup"><span data-stu-id="7847e-146">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7847e-147">La valeur peut également être `null`; consultez <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="7847e-147">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="7847e-148">Remarques sur l’utilisation WPF</span><span class="sxs-lookup"><span data-stu-id="7847e-148">WPF Usage Notes</span></span>  
 <span data-ttu-id="7847e-149">Pour une propriété de dépendance, le service WPF par défaut peut retourner un <xref:System.Windows.DependencyProperty>, telle que le convertisseur de type ou d’extension de balisage peut utiliser des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="7847e-149">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="7847e-150">Sinon, l’objet retourné peut être un <xref:System.Reflection.PropertyInfo> pour une propriété CLR.</span><span class="sxs-lookup"><span data-stu-id="7847e-150">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="7847e-151">Convertisseurs de type ou les Extensions de balisage pour XAML</span><span class="sxs-lookup"><span data-stu-id="7847e-151">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>