<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baa263074eed8e44641b6e694586499e323d9183" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004512" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie qu’une propriété ou un type doit être traité comme ambiant. Le concept de caractère ambiant renvoie à la façon dont les processeurs XAML déterminent les propriétaires de types des membres.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une propriété ambiante est une propriété où la valeur doit être disponible dans le contexte de l’analyseur lors de la création d’un graphique d’objet, mais pour laquelle la recherche de membre de type standard est interrompue à des fins de jeu en cours de création de nœuds XAML immédiat. Il existe deux principaux scénarios pour le concept ambiant :  
  
-   Une autre propriété du même objet influence et qualifie le fonctionne de cette recherche de propriété de l’objet.  
  
-   La propriété représente un mécanisme de report plus volumineux et les fonctions ambiantes pour la recherche d’une valeur de membre étendent à tous les objets contenus dans l’objet actuel.  
  
 Cet attribut peut être appliqué aux propriétés spécifiques qui ont conteneurs attendus qui activent un comportement de recherche de propriété ambiante, ou peut être appliqué à une classe pour activer le comportement de la propriété ambiante dans tous les cas de ce type de valeur pour une propriété.  
  
 <xref:System.Windows.Markup.AmbientAttribute> peut également être appliqué à une méthode CLR, pour prendre en charge l’attribution d’une propriété pouvant être attachée XAML comme ambiant. Il s’agit potentiellement nécessaire parce que dans une implémentation CLR un XAML propriété jointe est implémentée/représentée à la réflexion comme un modèle d’accesseur avec `get` et `set` méthodes. N’existe aucune propriété CLR réelle à l’attribut, limitant ainsi l’utilisation de <xref:System.AttributeTargets> à `Property` n'aurait pas permis la spécification d’un membre pouvant être attaché comme ambiant. Pour plus d’un membre pouvant être attaché que vous souhaitez signaler comme ambiant, attribut le `get` accesseur. Vous ne devez pas essayer d’attributs aux méthodes qui ne sont pas spécifiquement les méthodes de prise en charge de membres pouvant être attachés.  
  
 Dans les versions précédentes du .NET Framework, cette classe existait dans l’assembly WindowsBase spécifique de WPF. Dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> est dans l’assembly System.Xaml. Pour plus d'informations, consultez [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Types ambiants (types où <xref:System.Windows.Markup.AmbientAttribute> est appliqué au niveau du type) peut être utilisé pour certaines situations de traitement XAML où le type d’une propriété doit être résolu dans le désordre.  
  
## <a name="object-writer-scenarios"></a>Scénarios de Writer d’objet  
 Si vous définissez un writer d’objet XAML, et que vous rencontrez une propriété, la méthode ou le type où <xref:System.Windows.Markup.AmbientAttribute> est appliqué, vous en général devez accéder à un service pour déterminer le comportement de recherche de propriété ambiante prévu est nécessaire pour l’écriture d’objets. Pour plus d'informations, consultez <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Convertisseurs de valeurs  
 Convertisseurs de type ou les extensions de balisage deviez connaître les informations ambiantes pour traiter les propriétés qui représentent des mappages de type indirecte, telles que les propriétés qui spécifient des membres ou types par noms de chaîne avec ou sans qualification. Dans ce scénario, <xref:System.Windows.Markup.AmbientAttribute> n’est pas destinée à être utilisée directement pour la logique de code de convertisseur de valeur. Au lieu de cela, le convertisseur de valeur doit s’appuyer sur le comportement de traitement de writer XAML, qui passera <xref:System.Xaml.IAmbientProvider> dans ses contextes de service à vos méthodes de convertisseur de valeur lorsqu’elle est appelée.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Scénarios WPF pour AmbientAttribute  
  
-   Une propriété d’un <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) peut qualifier les recherches de nom de propriété nécessaires pour rechercher les références de stockage pour les noms de propriété dans <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valeurs.  
  
-   Tout le contenu au sein d’un `Resources` propriété (éléments d’un <xref:System.Windows.ResourceDictionary>), ainsi que le contenu du modèle, qui doit être en mesure d’accéder à d’autres homologues en tant que valeurs. Déclaration de l’ensemble du `Resources` de la propriété ambiante appelle la logique qui permet cela dans l’Analyseur de WPF XAML.  
  
 Consultez <xref:System.Windows.ResourceDictionary> pour obtenir un exemple de scénario de paramètre <xref:System.Windows.Markup.AmbientAttribute> au niveau du type.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">Attributs CLR XAML pour les bibliothèques et Types personnalisés</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Définition de types personnalisés pour une utilisation avec les services XAML .NET Framework</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Documentation conceptuelle des Services XAML du NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>