<Type Name="DateTimeValueSerializer" FullName="System.Windows.Markup.DateTimeValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74ac424f5ee0a150ea4bf3c01b17b3c6713fb6f7" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004541" /></Metadata><TypeSignature Language="C#" Value="public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeValueSerializer extends System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DateTimeValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeValueSerializer&#xA;Inherits ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeValueSerializer : System::Windows::Markup::ValueSerializer" />
  <TypeSignature Language="F#" Value="type DateTimeValueSerializer = class&#xA;    inherit ValueSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.ValueSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fabe5-101">Convertit des instances de <see cref="T:System.String" /> en instances de <see cref="T:System.DateTime" /> et à partir de celles-ci.</span><span class="sxs-lookup"><span data-stu-id="fabe5-101">Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.DateTime" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fabe5-102"><xref:System.Windows.Markup.ValueSerializer> est utilisé au lieu de <xref:System.ComponentModel.TypeConverter> pour les cas où la conversion de type requiert état supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="fabe5-102"><xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state.</span></span> <span data-ttu-id="fabe5-103"><xref:System.Windows.Markup.DateTimeValueSerializer> n’est pas attribué à un type avec <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fabe5-103"><xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="fabe5-104">Il s’agit, car <xref:System.DateTime> est dans mscorlib, et mscorlib ne peut pas accepter des dépendances sur les classes d’attributs qu’il ne définit pas lui-même.</span><span class="sxs-lookup"><span data-stu-id="fabe5-104">This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself.</span></span> <span data-ttu-id="fabe5-105">Au lieu de cela, l’utilisation de <xref:System.Windows.Markup.DateTimeValueSerializer> est le cas spéciaux dans le comportement du processeur XAML dans les Services XAML .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fabe5-105">Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.</span></span>  
  
 <span data-ttu-id="fabe5-106">Dans les versions précédentes du .NET Framework, cette classe existait dans l’assembly WindowsBase spécifique de WPF.</span><span class="sxs-lookup"><span data-stu-id="fabe5-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="fabe5-107">Dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> est dans l’assembly System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="fabe5-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="fabe5-108">Consultez [Types migrés de WPF vers System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="fabe5-108">See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.DateTime" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fabe5-109">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fabe5-110">Chaîne à évaluer pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="fabe5-110">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="fabe5-111">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="fabe5-111">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="fabe5-112">Détermine si le <see cref="T:System.String" /> spécifié peut être converti en instance de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-112">Determines if the specified <see cref="T:System.String" /> can be convert to an instance of <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fabe5-113"><see langword="true" /> si la valeur peut être convertie ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-113"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fabe5-114">Cette implémentation retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="fabe5-114">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="dateTimeValueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fabe5-115">Objet à évaluer pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="fabe5-115">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="fabe5-116">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="fabe5-116">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="fabe5-117">Détermine si l’objet spécifié peut être converti en <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-117">Determines if the specified object can be converted to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="fabe5-118"><see langword="true" /> si <paramref name="value" /> peut être converti en <see cref="T:System.String" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-118"><see langword="true" /> if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fabe5-119">Cette implémentation retourne `true` uniquement si passé `value` est de type <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="fabe5-119">This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="dateTimeValueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fabe5-120">Chaîne à convertir en <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-120">The string to convert into a <see cref="T:System.DateTime" />.</span></span></param>
        <param name="context"><span data-ttu-id="fabe5-121">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="fabe5-121">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="fabe5-122">Convertit un <see cref="T:System.String" /> en <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-122">Converts a <see cref="T:System.String" /> into a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fabe5-123">Nouvelle instance de <see cref="T:System.DateTime" /> basée sur le <paramref name="value" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="fabe5-123">A new instance of <see cref="T:System.DateTime" /> based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fabe5-124">Retourne une chaîne vide <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fabe5-124">An empty string returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fabe5-125">L’implémentation actuelle utilise <xref:System.DateTime.Parse%2A> en interne et également utilise les éléments suivants <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.</span><span class="sxs-lookup"><span data-stu-id="fabe5-125">The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fabe5-126"><paramref name="value" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-126"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="dateTimeValueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fabe5-127">Objet à convertir en chaîne.</span><span class="sxs-lookup"><span data-stu-id="fabe5-127">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="fabe5-128">Informations de contexte utilisées pour la conversion.</span><span class="sxs-lookup"><span data-stu-id="fabe5-128">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="fabe5-129">Convertit une instance de <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-129">Converts an instance of <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="fabe5-130">Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="fabe5-130">A string representation of the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fabe5-131">`context` n’est pas utilisé par cette implémentation.</span><span class="sxs-lookup"><span data-stu-id="fabe5-131">`context` is not used by this implementation.</span></span>  
  
 <span data-ttu-id="fabe5-132">Représentations sous forme de chaîne pour les dates, telle qu’elle figure dans le traitement de valeur XAML reposent sur la `en-US` culture.</span><span class="sxs-lookup"><span data-stu-id="fabe5-132">String representations for dates as found in XAML value processing are based on the `en-US` culture.</span></span> <span data-ttu-id="fabe5-133">Il s’agit, car le XAML de traitement pour plus d’informations de la culture est fractionné conceptuellement entre les phases de compilation et d’exécution et qu’il doit utiliser une représentation de chaîne connus tout au long.</span><span class="sxs-lookup"><span data-stu-id="fabe5-133">This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout.</span></span> <span data-ttu-id="fabe5-134">Pour plus d’informations, consultez [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fabe5-134">For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).</span></span>  
  
 <span data-ttu-id="fabe5-135">L’implémentation actuelle utilise une chaîne de format qui est ajustée selon que les aspects de l’élément <xref:System.DateTime> ont des valeurs.</span><span class="sxs-lookup"><span data-stu-id="fabe5-135">The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values.</span></span> <span data-ttu-id="fabe5-136">Par exemple, si aucune valeur n’est dans <xref:System.TimeSpan.TotalSeconds%2A>, la chaîne de format se présente sous la forme `yyyy-MM-dd` au lieu d’écrire détaillées des valeurs zéro pour le composant heure.</span><span class="sxs-lookup"><span data-stu-id="fabe5-136">For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fabe5-137"><paramref name="value" /> n’est pas un <see cref="T:System.DateTime" /> ou est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fabe5-137"><paramref name="value" /> is not a <see cref="T:System.DateTime" /> or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>