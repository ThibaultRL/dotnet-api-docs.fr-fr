<Type Name="MetadataReaderProvider" FullName="System.Reflection.Metadata.MetadataReaderProvider">
  <TypeSignature Language="C#" Value="public sealed class MetadataReaderProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataReaderProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.MetadataReaderProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataReaderProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataReaderProvider sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type MetadataReaderProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metadataReaderProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dce4-101">Supprime toute la mémoire allouée par le lecteur.</span><span class="sxs-lookup"><span data-stu-id="1dce4-101">Disposes all memory allocated by the reader.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMetadataImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="1dce4-102">Image de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="1dce4-102">Metadata image.</span></span></param>
        <summary><span data-ttu-id="1dce4-103">Crée un fournisseur sur un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="1dce4-103">Creates a provider over a byte array.</span></span></summary>
        <returns><span data-ttu-id="1dce4-104">Le nouveau fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1dce4-104">The new provider.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dce4-105"><paramref name="image" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-105"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="1dce4-106">Pointeur vers le début de l’objet blob de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="1dce4-106">Pointer to the start of the metadata blob.</span></span></param>
        <param name="size"><span data-ttu-id="1dce4-107">La taille de l’objet blob de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="1dce4-107">The size of the metadata blob.</span></span></param>
        <summary><span data-ttu-id="1dce4-108">Crée un fournisseur de métadonnées sur une image stockée dans la mémoire.</span><span class="sxs-lookup"><span data-stu-id="1dce4-108">Creates a metadata provider over an image stored in memory.</span></span></summary>
        <returns><span data-ttu-id="1dce4-109">Le nouveau fournisseur de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="1dce4-109">The new metadata provider.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dce4-110"><paramref name="start" /> a la valeur <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-110"><paramref name="start" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1dce4-111"><paramref name="size" /> est un nombre négatif.</span><span class="sxs-lookup"><span data-stu-id="1dce4-111"><paramref name="size" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromMetadataStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="1dce4-112">Instance de <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-112">A <see cref="T:System.IO.Stream" /> instance.</span></span></param>
        <param name="options"><span data-ttu-id="1dce4-113">Options qui spécifient comment les sections de l’image sont lues à partir du flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-113">Options specifying how sections of the image are read from the stream.</span></span></param>
        <param name="size"><span data-ttu-id="1dce4-114">Taille de l’objet de métadonnées blob dans le flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-114">Size of the metadata blob in the stream.</span></span> <span data-ttu-id="1dce4-115">Si non spécifié, l’objet blob de métadonnées est censé span à la fin du flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-115">If not specified, the metadata blob is assumed to span to the end of the stream.</span></span></param>
        <summary><span data-ttu-id="1dce4-116">Crée un fournisseur pour un flux de début de la taille spécifiée à sa position actuelle.</span><span class="sxs-lookup"><span data-stu-id="1dce4-116">Creates a provider for a stream of the specified size beginning at its current position.</span></span></summary>
        <returns><span data-ttu-id="1dce4-117">Le nouveau fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1dce4-117">The new provider.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

<span data-ttu-id="1dce4-118">À moins que <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> est spécifié, la propriété du flux de données est transférée vers le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> lorsque la validation d’argument réussie.</span><span class="sxs-lookup"><span data-stu-id="1dce4-118">Unless <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> is specified, ownership of the stream is transferred to the <xref:T:System.Reflection.Metadata.MetadataReaderProvider>  upon successful argument validation.</span></span> <span data-ttu-id="1dce4-119">Il est supprimé par le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> et l’appelant ne doit pas manipuler il.</span><span class="sxs-lookup"><span data-stu-id="1dce4-119">It will be disposed by the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> and the caller must not manipulate it.</span></span>
            
<span data-ttu-id="1dce4-120">À moins que <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata> est spécifiée aucune donnée n’est lue à partir du flux pendant la construction de la <xref:T:System.Reflection.Metadata.MetadataReaderProvider>.</span><span class="sxs-lookup"><span data-stu-id="1dce4-120">Unless <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata> is specified no data is read from the stream during the construction of the <xref:T:System.Reflection.Metadata.MetadataReaderProvider>.</span></span> <span data-ttu-id="1dce4-121">En outre, le flux de données ne doit pas être manipulé par appelant lors de la <xref:T:System.Reflection.Metadata.MetadataReaderProvider> est actif et non supprimé.</span><span class="sxs-lookup"><span data-stu-id="1dce4-121">Furthermore, the stream must not be manipulated by caller while the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> is alive and undisposed.</span></span>
            
<span data-ttu-id="1dce4-122">Si <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>, le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> ont lira toutes les données demandées au cours de construction.</span><span class="sxs-lookup"><span data-stu-id="1dce4-122">If <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>, the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> will have read all of the data requested during construction.</span></span> <span data-ttu-id="1dce4-123">Par conséquent, si <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> est également spécifié, l’appelant conserve la pleine propriété du flux de données et est assuré qu’il ne sera pas manipulé par le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> après la construction.</span><span class="sxs-lookup"><span data-stu-id="1dce4-123">As such, if <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> is also specified, the caller retains full ownership of the stream and is assured that it will not be manipulated by the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> after construction.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dce4-124"><paramref name="stream" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-124"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1dce4-125"><paramref name="stream" /> ne prend en charge la lecture et les opérations de recherche.</span><span class="sxs-lookup"><span data-stu-id="1dce4-125"><paramref name="stream" /> doesn't support read and seek operations.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1dce4-126">Taille est négative ou s’étend au-delà de la fin du flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-126">Size is negative or extends past the end of the stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1dce4-127">Erreur de lecture à partir du flux (uniquement lorsque <see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> est spécifié).</span><span class="sxs-lookup"><span data-stu-id="1dce4-127">Error reading from the stream (only when <see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> is specified).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPortablePdbImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="1dce4-128">Une image de fichier PDB portable.</span><span class="sxs-lookup"><span data-stu-id="1dce4-128">A portable PDB image.</span></span></param>
        <summary><span data-ttu-id="1dce4-129">Crée un fournisseur de métadonnées PDB portable sur un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="1dce4-129">Creates a portable PDB metadata provider over a byte array.</span></span></summary>
        <returns><span data-ttu-id="1dce4-130">Le nouveau fournisseur de métadonnées PDB portable.</span><span class="sxs-lookup"><span data-stu-id="1dce4-130">The new portable PDB metadata provider .</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dce4-131"><paramref name="image" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-131"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="1dce4-132">Pointeur vers le début de l’objet blob PDB portable.</span><span class="sxs-lookup"><span data-stu-id="1dce4-132">Pointer to the start of the portable PDB blob.</span></span></param>
        <param name="size"><span data-ttu-id="1dce4-133">La taille de l’objet blob PDB portable.</span><span class="sxs-lookup"><span data-stu-id="1dce4-133">The size of the portable PDB blob.</span></span></param>
        <summary><span data-ttu-id="1dce4-134">Crée un fournisseur de métadonnées PDB portable sur un objet blob stocké dans la mémoire.</span><span class="sxs-lookup"><span data-stu-id="1dce4-134">Creates a portable PDB metadata provider over a blob stored in memory.</span></span></summary>
        <returns><span data-ttu-id="1dce4-135">Le nouveau fournisseur de métadonnées PDB portable.</span><span class="sxs-lookup"><span data-stu-id="1dce4-135">The new portable PDB metadata provider.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dce4-136"><paramref name="start" /> a la valeur <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-136"><paramref name="start" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1dce4-137"><paramref name="size" /> est un nombre négatif.</span><span class="sxs-lookup"><span data-stu-id="1dce4-137"><paramref name="size" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="1dce4-138">flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-138">The stream.</span></span></param>
        <param name="options"><span data-ttu-id="1dce4-139">Options qui spécifient comment les sections de l’image sont lues à partir du flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-139">Options specifying how sections of the image are read from the stream.</span></span></param>
        <param name="size"><span data-ttu-id="1dce4-140">Taille de l’objet de métadonnées blob dans le flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-140">Size of the metadata blob in the stream.</span></span> <span data-ttu-id="1dce4-141">Si non spécifié, l’objet blob de métadonnées est censé span à la fin du flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-141">If not specified, the metadata blob is assumed to span to the end of the stream.</span></span></param>
        <summary><span data-ttu-id="1dce4-142">Crée un fournisseur pour un flux de début de la taille spécifiée à sa position actuelle.</span><span class="sxs-lookup"><span data-stu-id="1dce4-142">Creates a provider for a stream of the specified size beginning at its current position.</span></span></summary>
        <returns><span data-ttu-id="1dce4-143">Instance de <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-143">A <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        
            
<span data-ttu-id="1dce4-144">À moins que <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> est spécifié, la propriété du flux de données est transférée vers le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> lorsque la validation d’argument réussie.</span><span class="sxs-lookup"><span data-stu-id="1dce4-144">Unless <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> is specified, ownership of the stream is transferred to the <xref:T:System.Reflection.Metadata.MetadataReaderProvider>  upon successful argument validation.</span></span> <span data-ttu-id="1dce4-145">Il est supprimé par le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> et l’appelant ne doit pas manipuler il.</span><span class="sxs-lookup"><span data-stu-id="1dce4-145">It will be disposed by the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> and the caller must not manipulate it.</span></span>
            
<span data-ttu-id="1dce4-146">À moins que <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata> est spécifiée aucune donnée n’est lue à partir du flux pendant la construction de la <xref:T:System.Reflection.Metadata.MetadataReaderProvider>.</span><span class="sxs-lookup"><span data-stu-id="1dce4-146">Unless <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata> is specified no data is read from the stream during the construction of the <xref:T:System.Reflection.Metadata.MetadataReaderProvider>.</span></span> <span data-ttu-id="1dce4-147">En outre, le flux de données ne doit pas être manipulé par appelant lors de la <xref:T:System.Reflection.Metadata.MetadataReaderProvider> est actif et non supprimé.</span><span class="sxs-lookup"><span data-stu-id="1dce4-147">Furthermore, the stream must not be manipulated by caller while the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> is alive and undisposed.</span></span>
            
<span data-ttu-id="1dce4-148">Si <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>, le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> ont lira toutes les données demandées au cours de construction.</span><span class="sxs-lookup"><span data-stu-id="1dce4-148">If <xref:F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata>, the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> will have read all of the data requested during construction.</span></span> <span data-ttu-id="1dce4-149">Par conséquent, si <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> est également spécifié, l’appelant conserve la pleine propriété du flux de données et est assuré qu’il ne sera pas manipulé par le <xref:T:System.Reflection.Metadata.MetadataReaderProvider> après la construction.</span><span class="sxs-lookup"><span data-stu-id="1dce4-149">As such, if <xref:F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen> is also specified, the caller retains full ownership of the stream and is assured that it will not be manipulated by the <xref:T:System.Reflection.Metadata.MetadataReaderProvider> after construction.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1dce4-150"><paramref name="stream" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-150"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1dce4-151"><paramref name="stream" /> ne prend en charge la lecture et les opérations de recherche.</span><span class="sxs-lookup"><span data-stu-id="1dce4-151"><paramref name="stream" /> doesn't support read and seek operations.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1dce4-152">Taille est négative ou s’étend au-delà de la fin du flux.</span><span class="sxs-lookup"><span data-stu-id="1dce4-152">Size is negative or extends past the end of the stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.Default, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Metadata.MetadataReader GetMetadataReader(valuetype System.Reflection.Metadata.MetadataReaderOptions options, class System.Reflection.Metadata.MetadataStringDecoder utf8Decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.GetMetadataReader(System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.Default, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" />
      <MemberSignature Language="F#" Value="member this.GetMetadataReader : System.Reflection.Metadata.MetadataReaderOptions * System.Reflection.Metadata.MetadataStringDecoder -&gt; System.Reflection.Metadata.MetadataReader" Usage="metadataReaderProvider.GetMetadataReader (options, utf8Decoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
        <Parameter Name="utf8Decoder" Type="System.Reflection.Metadata.MetadataStringDecoder" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="1dce4-153">Une combinaison au niveau du bit des valeurs d’énumération qui représentent la configuration lors de la lecture des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="1dce4-153">A bitwise combination of the enumeration values that represent the configuration when reading the metadata.</span></span></param>
        <param name="utf8Decoder"><span data-ttu-id="1dce4-154">Encodage à utiliser.</span><span class="sxs-lookup"><span data-stu-id="1dce4-154">The encoding to use.</span></span></param>
        <summary><span data-ttu-id="1dce4-155">Obtient un <see cref="T:System.Reflection.Metadata.MetadataReader" /> à partir d’un <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-155">Gets a <see cref="T:System.Reflection.Metadata.MetadataReader" /> from a <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />.</span></span></summary>
        <returns><span data-ttu-id="1dce4-156">Un <see cref="T:System.Reflection.Metadata.MetadataReader" /> instance...</span><span class="sxs-lookup"><span data-stu-id="1dce4-156">A <see cref="T:System.Reflection.Metadata.MetadataReader" /> instance..</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1dce4-157">L’encodage de <paramref name="utf8Decoder" /> n’est pas <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="1dce4-157">The encoding of <paramref name="utf8Decoder" /> is not <see cref="T:System.Text.UTF8Encoding" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="1dce4-158">La plateforme actuelle est big-endian.</span><span class="sxs-lookup"><span data-stu-id="1dce4-158">The current platform is big-endian.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1dce4-159">Erreur d’e/s de lecture à partir du flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="1dce4-159">IO error while reading from the underlying stream.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1dce4-160">Fournisseur a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="1dce4-160">Provider has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
