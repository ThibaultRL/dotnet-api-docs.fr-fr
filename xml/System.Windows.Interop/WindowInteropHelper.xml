<Type Name="WindowInteropHelper" FullName="System.Windows.Interop.WindowInteropHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4336638cdf2fb1c5cf7d47bec3e51e24af0b3fb" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994523" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.WindowInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowInteropHelper sealed" />
  <TypeSignature Language="F#" Value="type WindowInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f9c4-101">Facilite l’interopérabilité entre Windows Presentation Foundation (WPF) et le code Win32.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f9c4-102">Membres de cette classe permet à l’appelant un accès interne à la [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND et le HWND du parent d’un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-102">Members of this class allows the caller to have internal access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND and the parent HWND of a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="2f9c4-103">Vérifications de sécurité appropriées sont effectuées par ces membres.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-103">The proper security checks are performed by those members.</span></span>  
  
 <span data-ttu-id="2f9c4-104">Utilisez cette classe chaque fois que vous avez besoin d’un objet plus spécifique en fonction de son HWND.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-104">Use this class whenever you need a more specific object based on its HWND.</span></span>  
  
 <span data-ttu-id="2f9c4-105">Un exemple de scénario est si vous avez besoin pour héberger un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] boîte de dialogue dans un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-105">An example scenario is if you need to host a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span> <span data-ttu-id="2f9c4-106">Initialiser le <xref:System.Windows.Interop.WindowInteropHelper> avec un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] objet de fenêtre pour la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-106">Initialize the <xref:System.Windows.Interop.WindowInteropHelper> with a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object for the dialog box.</span></span> <span data-ttu-id="2f9c4-107">Vous pouvez ensuite obtenir le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] le handle de fenêtre (HWND) à partir de la <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propriété et spécifiez le propriétaire de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] fenêtre avec le <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-107">You can then get the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window's handle (HWND) from the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property and specify the owner for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window with the <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> property.</span></span> <span data-ttu-id="2f9c4-108">L’exemple de code suivant montre comment utiliser <xref:System.Windows.Interop.WindowInteropHelper> lorsque vous hébergez un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] boîte de dialogue dans un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-108">The following code example shows how to use <xref:System.Windows.Interop.WindowInteropHelper> when hosting a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 [!code-csharp[CorePseudocode#WindowInteropHelper](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#windowinterophelper)]
 [!code-vb[CorePseudocode#WindowInteropHelper](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#windowinterophelper)]  
  
 <span data-ttu-id="2f9c4-109">Un autre scénario pris en charge par cette classe consiste à obtenir un <xref:System.Windows.Interop.HwndSource> de l’objet à partir d’un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> objet.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-109">Another scenario supported by this class is to obtain a <xref:System.Windows.Interop.HwndSource> object from a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> object.</span></span> <span data-ttu-id="2f9c4-110">Le <xref:System.Windows.Interop.HwndSource> permet d’effectuer un traitement de [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages par le biais du <xref:System.Windows.Interop.HwndSource.AddHook%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2f9c4-110">The <xref:System.Windows.Interop.HwndSource> enables direct processing of [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages through the <xref:System.Windows.Interop.HwndSource.AddHook%2A> method.</span></span> <span data-ttu-id="2f9c4-111">À l’aide de <xref:System.Windows.Interop.HwndSource> et <xref:System.Windows.Interop.HwndSource.AddHook%2A> au lieu d’un <xref:System.Windows.Window> vous pouvez toujours gérer des messages qui ont aucun équivalent ou traitement dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="2f9c4-111">By using <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndSource.AddHook%2A> in place of a <xref:System.Windows.Window> you can still handle messages that have no equivalent or handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="2f9c4-112">Créer un <xref:System.Windows.Interop.WindowInteropHelper> avec la <xref:System.Windows.Window> source, puis appelez <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> sur le <xref:System.Windows.Interop.WindowInteropHelper> pour passer de HWND à <xref:System.Windows.Interop.HwndSource>.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-112">Create a <xref:System.Windows.Interop.WindowInteropHelper> with the <xref:System.Windows.Window> source, then call <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> on the <xref:System.Windows.Interop.WindowInteropHelper> to get from HWND to <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Window" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowInteropHelper (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowInteropHelper(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.WindowInteropHelper : System.Windows.Window -&gt; System.Windows.Interop.WindowInteropHelper" Usage="new System.Windows.Interop.WindowInteropHelper window" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window"><span data-ttu-id="2f9c4-113">Un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] objet window.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span></span></param>
        <summary><span data-ttu-id="2f9c4-114">Initialise une nouvelle instance de la <see cref="T:System.Windows.Interop.WindowInteropHelper" /> classe spécifié [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] fenêtre.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f9c4-115">La fenêtre peut être une boîte de dialogue ou une fenêtre convient sinon pas hébergé dans les limites d’un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-115">The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHandle">
      <MemberSignature Language="C#" Value="public IntPtr EnsureHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int EnsureHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr EnsureHandle();" />
      <MemberSignature Language="F#" Value="member this.EnsureHandle : unit -&gt; nativeint" Usage="windowInteropHelper.EnsureHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f9c4-116">Crée le HWND de la fenêtre si le HWND n’a pas encore été créé.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-116">Creates the HWND of the window if the HWND has not been created yet.</span></span></summary>
        <returns><span data-ttu-id="2f9c4-117">Un <see cref="T:System.IntPtr" /> qui représente le HWND.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f9c4-118">Utilisez le <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> méthode lorsque vous souhaitez séparer la création de handle (HWND) de fenêtre à partir de l’affichage réel de managé <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-118">Use the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when you want to separate window handle (HWND) creation from the actual showing of the managed <xref:System.Windows.Window>.</span></span> <span data-ttu-id="2f9c4-119">Cela est utile lorsque vous avez un client automation qui peut accomplir ses tâches sans avoir besoin d’afficher une fenêtre.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-119">This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</span></span>  
  
 <span data-ttu-id="2f9c4-120">Si la fenêtre native n’a pas encore été créée, cette méthode crée la fenêtre native, définit le <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propriété et retourne le HWND.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-120">If the native window has not yet been created, this method creates the native window, sets the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property, and returns the HWND.</span></span> <span data-ttu-id="2f9c4-121">Si la fenêtre native a déjà été créée, le handle de la fenêtre native existante est retourné.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-121">If the native window has been created already, the handle of the existing native window is returned.</span></span>  
  
 <span data-ttu-id="2f9c4-122">Si la fenêtre native est créée en appelant cette méthode, le <xref:System.Windows.Window.SourceInitialized> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-122">If the native window is created as a result of calling this method, the <xref:System.Windows.Window.SourceInitialized> event is raised.</span></span>  
  
 <span data-ttu-id="2f9c4-123">Interrogation de la <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propriété après la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> méthode est appelée retourne le handle de fenêtre existante.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-123">Querying the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called returns the existing window handle.</span></span> <span data-ttu-id="2f9c4-124">L’arborescence visuelle n’est pas attaché à la fenêtre jusqu’après la <xref:System.Windows.Window.Show%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-124">The visual tree is not attached to the window until after the <xref:System.Windows.Window.Show%2A> method is called.</span></span>  
  
 <span data-ttu-id="2f9c4-125">Appel de la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> méthode plusieurs fois ne crée pas de nouveaux handles de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-125">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method more than one time does not create new window handles.</span></span> <span data-ttu-id="2f9c4-126">Appel de la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> méthode lorsque le handle a déjà été créé par un appel à la <xref:System.Windows.Window.Show%2A> méthode ne crée pas un nouveau handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-126">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when the handle has already been created by a call to the <xref:System.Windows.Window.Show%2A> method does not create a new window handle.</span></span> <span data-ttu-id="2f9c4-127">Une fenêtre native est créée uniquement lorsqu’aucun handle n’existe lorsque le <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-127">A native window is only created when no handle exists when the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called.</span></span>  
  
 <span data-ttu-id="2f9c4-128">Propriétés de la fenêtre sont définies à l’aide des API de fenêtre natives via p/invoke ne semble pas dans l’API de fenêtre managées.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-128">Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</span></span> <span data-ttu-id="2f9c4-129">Par exemple, si vous définissez la fenêtre au premier plan à l’aide de l’indicateur MS_EX_TOPMOST natif après le <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> méthode est appelée, le <xref:System.Windows.Window.Topmost%2A> propriété n’est pas garantie pour refléter le paramètre natif.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-129">For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called, the <xref:System.Windows.Window.Topmost%2A> property is not guaranteed to reflect the native setting.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2f9c4-130">Pour créer et accéder à un handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-130">to create and access a window handle.</span></span> <span data-ttu-id="2f9c4-131">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="2f9c4-131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f9c4-132">Reçoit le handle de fenêtre pour une fenêtre [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] utilisée pour créer ce <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span></span></summary>
        <value><span data-ttu-id="2f9c4-133">Le [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] le handle de fenêtre (HWND).</span><span class="sxs-lookup"><span data-stu-id="2f9c4-133">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window handle (HWND).</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2f9c4-134">Pour obtenir un handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-134">to obtain a window handle.</span></span> <span data-ttu-id="2f9c4-135">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="2f9c4-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public IntPtr Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Owner { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : nativeint with get, set" Usage="System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f9c4-136">Obtient ou définit le handle de la fenêtre propriétaire de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="2f9c4-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span></span></summary>
        <value><span data-ttu-id="2f9c4-137">Le handle de fenêtre propriétaire (HWND).</span><span class="sxs-lookup"><span data-stu-id="2f9c4-137">The owner window handle (HWND).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f9c4-138">Vous pouvez redéfinir la parenté windows en définissant cette propriété.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-138">You can reparent windows by setting this property.</span></span> <span data-ttu-id="2f9c4-139">En l’état true pour général [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] de programmation, redéfinir pas la parenté de windows qui sont déjà en cours d’utilisation.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-139">As is true for general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programming, do not reparent windows that are already in use.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="2f9c4-140">Pour obtenir ou définir cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="2f9c4-140">to get or set this property value.</span></span> <span data-ttu-id="2f9c4-141">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="2f9c4-141">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>