<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eec032f697d492a73bddcff77813f8ac15bd90f6" /><Meta Name="ms.sourcegitcommit" Value="ef1f0c8985003a14413f66c3de381b8f3b6e4436" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/30/2019" /><Meta Name="ms.locfileid" Value="66381242" /></Metadata><TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <TypeSignature Language="F#" Value="type ViewTechnology = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="57975-101">Définit des identificateurs pour un ensemble de technologies prises en charge par les hôtes du concepteur.</span><span class="sxs-lookup"><span data-stu-id="57975-101">Defines identifiers for a set of technologies that designer hosts support.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57975-102">Le modèle d’adaptateur de vue remplace et ajoute des fonctionnalités à la <xref:System.ComponentModel.Design.ViewTechnology> fonctionnalité ; Toutefois, le <xref:System.ComponentModel.Design.ViewTechnology> fonctionnalité est conservée pour compatibilité descendante et une utilisation ultérieure, si vous choisissez.</span><span class="sxs-lookup"><span data-stu-id="57975-102">The view adapter model replaces and adds functionality to the <xref:System.ComponentModel.Design.ViewTechnology> feature; however, the <xref:System.ComponentModel.Design.ViewTechnology> feature is retained for both backward compatibility and future use, if you choose.</span></span>
  
 <span data-ttu-id="57975-103"><xref:System.ComponentModel.Design.ViewTechnology> définit des identificateurs qui indiquent le mode à utiliser pour le contrôle de l’affichage d’un document concepteur hébergé.</span><span class="sxs-lookup"><span data-stu-id="57975-103"><xref:System.ComponentModel.Design.ViewTechnology> defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.</span></span>  
  
 <span data-ttu-id="57975-104">Vous devez uniquement utiliser la valeur par défaut dans votre environnement d’hébergement concepteur.</span><span class="sxs-lookup"><span data-stu-id="57975-104">You should only use the Default value in your designer hosting environment.</span></span> <span data-ttu-id="57975-105">Dans les versions précédentes de la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], le <xref:System.ComponentModel.Design.ViewTechnology.Default> énumération spécifiant le type de modèle d’interface utilisateur pris en charge par un concepteur racine.</span><span class="sxs-lookup"><span data-stu-id="57975-105">In previous versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the <xref:System.ComponentModel.Design.ViewTechnology.Default> enumeration specified the type of UI model supported by a root designer.</span></span> <span data-ttu-id="57975-106">Étant donné que ce modèle n’est pas extensible, vous devez utiliser à la place un *adaptateur de vue* modèle.</span><span class="sxs-lookup"><span data-stu-id="57975-106">Because this model is not extensible, you should instead use a *view adapter* model.</span></span> <span data-ttu-id="57975-107">Un adaptateur de vue est un type qui s’adapte à un objet d’un type vers un autre.</span><span class="sxs-lookup"><span data-stu-id="57975-107">A view adapter is a type that adapts an object of one type to another.</span></span>  
  
 <span data-ttu-id="57975-108">Par exemple, un Concepteur HTML peut retourner un `DemoDOM` arborescence en tant que sa vue.</span><span class="sxs-lookup"><span data-stu-id="57975-108">For example, an HTML designer might return a `DemoDOM` tree as its view.</span></span> <span data-ttu-id="57975-109">Le Concepteur HTML retourne une technologie d’affichage de la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="57975-109">The HTML designer returns a view technology of Default.</span></span> <span data-ttu-id="57975-110">Un environnement d’hébergement les formulaires Windows aurait une ou plusieurs classes d’adaptateur d’affichage disponibles.</span><span class="sxs-lookup"><span data-stu-id="57975-110">A Windows Forms hosting environment would have one or more view adapter classes available.</span></span> <span data-ttu-id="57975-111">Si une telle classe peut convertir le `DemoDOM` dans un contrôle Windows Forms, l’application d’hébergement peut prendre en charge ce type de concepteur.</span><span class="sxs-lookup"><span data-stu-id="57975-111">If one such class could convert the `DemoDOM` into a Windows Forms control, the hosting application can support this type of designer.</span></span> <span data-ttu-id="57975-112">Si aucune carte ne peut gérer le type de données retourné à partir du concepteur <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> (méthode), le chargement du concepteur échouera et l’utilisateur s’affiche avec une erreur.</span><span class="sxs-lookup"><span data-stu-id="57975-112">If no adapter can handle the data type returned from the designer's <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method, the load of the designer will fail, and the user will be presented with an error.</span></span>  
  
 <span data-ttu-id="57975-113">Visual Studio a un schéma extensible pour fournir des adaptateurs de vue et il peut s’adapter à n’importe quelle technologie d’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="57975-113">Visual Studio has an extensible scheme for providing view adapters, so it can adapt to any UI technology.</span></span> <span data-ttu-id="57975-114">Les fournisseurs de technologies tierces peuvent offrir également un adaptateur de vue approprié et leurs modèles d’objet sont immédiatement consommables.</span><span class="sxs-lookup"><span data-stu-id="57975-114">Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.</span></span>
  
## Examples

<span data-ttu-id="57975-115">L’exemple suivant montre comment utiliser `ViewTechnology.Default` dans un concepteur.</span><span class="sxs-lookup"><span data-stu-id="57975-115">The following example demonstrates how to use `ViewTechnology.Default` in a designer.</span></span> <span data-ttu-id="57975-116">Cet exemple fait partie d’un exemple plus complet fourni pour le <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interface.</span><span class="sxs-lookup"><span data-stu-id="57975-116">This example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interface.</span></span>  
  
[!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
[!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
[!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  

<span data-ttu-id="57975-117">L’exemple suivant montre comment utiliser le « ViewTechnology > énumération dans un concepteur.</span><span class="sxs-lookup"><span data-stu-id="57975-117">The following example demonstrates how to use the \`ViewTechnology> enumeration in a designer.</span></span> <span data-ttu-id="57975-118">Cet exemple fait partie d’un exemple plus complet fourni pour la <xref:System.ComponentModel.Design.LocalizationExtenderProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="57975-118">This example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.</span></span>
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
    
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 2" Usage="System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="57975-119">Spécifie la prise en charge de la technologie d'affichage par défaut.</span><span class="sxs-lookup"><span data-stu-id="57975-119">Specifies the default view technology support.</span></span>
        
<span data-ttu-id="57975-120">Le concepteur racine peut retourner tout type d’objet, à condition que l’objet soit compatible avec un adaptateur de la technologie de l’hôte.</span><span class="sxs-lookup"><span data-stu-id="57975-120">The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host.</span></span> <span data-ttu-id="57975-121">Les environnements d’hébergement tels que Visual Studio fournissent un moyen d’intégrer de nouveaux adaptateurs de technologie d’affichage.</span><span class="sxs-lookup"><span data-stu-id="57975-121">Hosting environments such as Visual Studio provide a way to plug in new view technology adapters.</span></span> <span data-ttu-id="57975-122">L’objet de vue par défaut pour le concepteur Windows Forms est une instance <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="57975-122">The default view object for the Windows Forms designer is a <see cref="T:System.Windows.Forms.Control" /> instance.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberSignature Language="F#" Value="Passthrough = 0" Usage="System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="57975-123">Représente un mode dans lequel l'objet de vue est passé directement à l'environnement de développement.</span><span class="sxs-lookup"><span data-stu-id="57975-123">Represents a mode in which the view object is passed directly to the development environment.</span></span>
        
<span data-ttu-id="57975-124">L’objet de vue doit implémenter les interfaces requises par l’environnement de développement.</span><span class="sxs-lookup"><span data-stu-id="57975-124">The view object must implement any interfaces the development environment requires.</span></span> <span data-ttu-id="57975-125">L’environnement de développement Visual Studio prend en charge les objets de vue qui sont un contrôle ActiveX, un document actif, ou un objet qui implémente l’interface `IVsWindowPane` disponible dans le programme Visual Studio VSI (Visual Studio Integration).</span><span class="sxs-lookup"><span data-stu-id="57975-125">The Visual Studio development environment supports view objects that are either an ActiveX control, active document, or an object that implements the `IVsWindowPane` interface that is available through the Visual Studio VSI (Visual Studio Integration) program.</span></span> <span data-ttu-id="57975-126">L’environnement de développement Visual Studio prend en charge cette technologie d’affichage.</span><span class="sxs-lookup"><span data-stu-id="57975-126">The Visual Studio development environment provides support for this view technology.</span></span> <span data-ttu-id="57975-127">Celle-ci n’est pas nécessairement disponible dans tous les environnements de développement.</span><span class="sxs-lookup"><span data-stu-id="57975-127">Support for this view technology is not necessarily available in all development environments.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberSignature Language="F#" Value="WindowsForms = 1" Usage="System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="57975-128">Représente un mode dans lequel un objet contrôle Windows Forms assure l'affichage du concepteur racine.</span><span class="sxs-lookup"><span data-stu-id="57975-128">Represents a mode in which a Windows Forms control object provides the display for the root designer.</span></span> <span data-ttu-id="57975-129">Le concepteur hôte remplit la fenêtre de document de l’environnement de développement avec le contrôle Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="57975-129">The designer host fills the development environment document window with the Windows Forms control.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
