<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd0e6eb123f9b6aae2230f80156e89d3042cb7ee" /><Meta Name="ms.sourcegitcommit" Value="0b4deef443af9fe6334aa34b8a17190223bf0486" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/14/2019" /><Meta Name="ms.locfileid" Value="65609710" /></Metadata><TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="14b61-101">Fournit l’accès à la fonctionnalité d’un moteur de synthèse vocale installé.</span><span class="sxs-lookup"><span data-stu-id="14b61-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-102">Lorsque vous créez un nouveau <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet, il utilise la voix de système par défaut.</span><span class="sxs-lookup"><span data-stu-id="14b61-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="14b61-103">Pour configurer le <xref:System.Speech.Synthesis.SpeechSynthesizer> pour utiliser une des voix de synthèse vocale (conversion texte-voix) vocale installé, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="14b61-104">Pour obtenir des informations sur les voix est installées, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> (méthode) et le <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="14b61-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="14b61-105">Cette classe fournit également un contrôle sur les aspects suivants de la synthèse vocale :</span><span class="sxs-lookup"><span data-stu-id="14b61-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="14b61-106">Pour configurer la sortie pour le <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="14b61-107">Pour générer le discours, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="14b61-108">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> peuvent produire de reconnaissance vocale à partir du texte, un <xref:System.Speech.Synthesis.Prompt> ou <xref:System.Speech.Synthesis.PromptBuilder> objet, ou à partir de [Markup langage SSML (Speech Synthesis) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="14b61-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="14b61-109">Pour suspendre et reprendre la synthèse vocale, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="14b61-110">Pour ajouter ou supprimer des lexiques, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="14b61-111">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> pouvez utiliser un ou plusieurs des lexiques pour guider la prononciation des mots.</span><span class="sxs-lookup"><span data-stu-id="14b61-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="14b61-112">Pour modifier la remise de la sortie vocale, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="14b61-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="14b61-113">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche des événements lorsqu’elle rencontre certaines fonctionnalités dans les invites : (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="14b61-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="14b61-114">Elle déclenche également des événements qui signalent au démarrage (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) et de fin (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) de parler des opérations et sur la modification de la voix (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="14b61-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14b61-115">Appelez toujours <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="14b61-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="14b61-116">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Speech.Synthesis.SpeechSynthesizer> de l'objet <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-117">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et il parle une chaîne.</span><span class="sxs-lookup"><span data-stu-id="14b61-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361644(v%3doffice.14)"><span data-ttu-id="14b61-118">Synthèse vocale</span><span class="sxs-lookup"><span data-stu-id="14b61-118">Speech Synthesis</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-119">Initialise une nouvelle instance de la classe <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="14b61-119">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-120">Lorsque vous initialisez un nouveau <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, elle utilise la voix de système par défaut.</span><span class="sxs-lookup"><span data-stu-id="14b61-120">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="14b61-121">Pour configurer le <xref:System.Speech.Synthesis.SpeechSynthesizer> pour utiliser une des voix de synthèse vocale (conversion texte-voix) vocale installé, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-121">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="14b61-122">Pour obtenir des informations sur les voix est installées, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> (méthode) et le <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="14b61-122">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="14b61-123">L’emplacement des informations de lexique.</span><span class="sxs-lookup"><span data-stu-id="14b61-123">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="14b61-124">Le type de média du lexique.</span><span class="sxs-lookup"><span data-stu-id="14b61-124">The media type of the lexicon.</span></span> <span data-ttu-id="14b61-125">Les valeurs de type de média ne respectent pas la casse.</span><span class="sxs-lookup"><span data-stu-id="14b61-125">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="14b61-126">Ajoute un lexique à la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-126">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-127">Un lexique prononciation est une collection de mots ou expressions ainsi que des prononciations, se composent de lettres et de caractères à partir d’un alphabet phonétique pris en charge.</span><span class="sxs-lookup"><span data-stu-id="14b61-127">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="14b61-128">Vous pouvez utiliser un lexique pour spécifier des prononciations personnalisées pour le vocabulaire spécialisé dans votre application.</span><span class="sxs-lookup"><span data-stu-id="14b61-128">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="14b61-129">Prononciations spécifiées dans un fichier de lexique externes sont prioritaires sur les prononciations du lexique interne le synthétiseur vocal ou un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="14b61-129">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="14b61-130">Toutefois, prononciations spécifiées inline dans les invites créés avec un de le <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, ou <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> méthodes sont prioritaires sur prononciations spécifiées dans n’importe quel lexique.</span><span class="sxs-lookup"><span data-stu-id="14b61-130">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="14b61-131">Inline prononciations s’appliquent uniquement à une seule occurrence d’un mot.</span><span class="sxs-lookup"><span data-stu-id="14b61-131">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="14b61-132">Consultez [lexiques et Alphabets phonétiques](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="14b61-132">See [Lexicons and Phonetic Alphabets](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) for more information.</span></span>  
  
 <span data-ttu-id="14b61-133">Vous pouvez ajouter plusieurs lexiques à un <xref:System.Speech.Synthesis.SpeechSynthesizer> objet. Deux valeurs sont actuellement pris en charge pour le `mediaType` paramètre :</span><span class="sxs-lookup"><span data-stu-id="14b61-133">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="14b61-134">La valeur `application/pls+xml` indique que le lexique est conforme à la [prononciation lexique spécification (PLS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="14b61-134">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="14b61-135">Voici le format préféré à utiliser.</span><span class="sxs-lookup"><span data-stu-id="14b61-135">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="14b61-136">La valeur `application/vdn.ms-sapi-lex` indique que le format de lexique est un lexique non compressé, ce qui est un format propriétaire de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="14b61-136">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="14b61-137">Il s’agit d’un format hérité et nous vous recommandons d’utiliser le format PLS décrit ci-dessus.</span><span class="sxs-lookup"><span data-stu-id="14b61-137">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-138">L’exemple suivant montre l’effet de l’ajout et la suppression d’un lexique qui contient une prononciation personnalisée pour le mot « bleu ».</span><span class="sxs-lookup"><span data-stu-id="14b61-138">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="14b61-139">Le lexique définit la prononciation de « bleu » à son comme « bleep ».</span><span class="sxs-lookup"><span data-stu-id="14b61-139">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="14b61-140">Même si le lexique est chargé, le synthétiseur vocal utilise la prononciation définie dans le lexique.</span><span class="sxs-lookup"><span data-stu-id="14b61-140">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="14b61-141">Voici le contenu du fichier de lexique Blue.pls :</span><span class="sxs-lookup"><span data-stu-id="14b61-141">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-142">Déclenché lorsque le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-142">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-143">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement lors du traitement de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-143">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="14b61-144">Pour plus d’informations sur les données associées à l’événement, consultez <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14b61-144">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="14b61-145">Vous pouvez ajouter des signets à l’aide de la <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-145">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-146">L’exemple suivant crée une invite qui inclut les deux signets et envoie la sortie vers un fichier WAV pour la lecture.</span><span class="sxs-lookup"><span data-stu-id="14b61-146">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="14b61-147">Le gestionnaire pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> événement écrit le nom du signet et sa position dans le flux audio lorsque l’événement a été déclenché à la console.</span><span class="sxs-lookup"><span data-stu-id="14b61-147">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nighttime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-148">Supprime l’objet <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> et libère les ressources utilisées pendant la session.</span><span class="sxs-lookup"><span data-stu-id="14b61-148">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-149">Agit comme un dispositif de protection pour nettoyer les ressources dans le cas où la <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> méthode n’est pas appelée.</span><span class="sxs-lookup"><span data-stu-id="14b61-149">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-150">Obtient l’invite que le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> parle.</span><span class="sxs-lookup"><span data-stu-id="14b61-150">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="14b61-151">Retourne l’objet d’invite qui est actuellement énoncé.</span><span class="sxs-lookup"><span data-stu-id="14b61-151">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14b61-152">Retourne la collection de la voix de synthèse () voix actuellement installées sur le système.</span><span class="sxs-lookup"><span data-stu-id="14b61-152">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-153">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix (moteurs pour la synthèse vocale) qu’il trouve dans le Registre respecte certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-153">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-154">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-154">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-155">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-155">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-156">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-156">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-157">Retourne toutes les vocale installées voix de synthèse vocale (conversion texte-voix).</span><span class="sxs-lookup"><span data-stu-id="14b61-157">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="14b61-158">Retourne une collection en lecture seule des voix actuellement installées sur le système.</span><span class="sxs-lookup"><span data-stu-id="14b61-158">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-159">Une voix est un moteur de synthèse vocale (conversion texte-voix ou TTS) est installé sur le système.</span><span class="sxs-lookup"><span data-stu-id="14b61-159">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-160">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et génère à la console une liste des voix installées (moteurs de synthèse vocale) et montre les informations qui est disponibles pour chaque voix.</span><span class="sxs-lookup"><span data-stu-id="14b61-160">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="14b61-161">Les paramètres régionaux que la voix doit prendre en charge.</span><span class="sxs-lookup"><span data-stu-id="14b61-161">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="14b61-162">Retourne toutes les voix de synthèse vocale (conversion de texte par synthèse vocale) installées qui prennent en charge des paramètres régionaux spécifiques.</span><span class="sxs-lookup"><span data-stu-id="14b61-162">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="14b61-163">Retourne une collection en lecture seule des voix actuellement installées sur le système qui prennent en charge les paramètres régionaux spécifiés.</span><span class="sxs-lookup"><span data-stu-id="14b61-163">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-164">Absence de la prise en charge de voix installées les paramètres régionaux spécifiés, cette méthode retourne une collection vide.</span><span class="sxs-lookup"><span data-stu-id="14b61-164">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="14b61-165">Microsoft Windows et l’API System.Speech acceptent tous les codes de langue-pays valides.</span><span class="sxs-lookup"><span data-stu-id="14b61-165">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="14b61-166">Pour effectuer la synthèse vocale à l’aide de la langue spécifiée dans la propriété de la Culture, un moteur de synthèse vocale qui prend en charge de ce code de langue-pays doit être installé.</span><span class="sxs-lookup"><span data-stu-id="14b61-166">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="14b61-167">Les moteurs de synthèse vocale fourni avec Microsoft Windows 7 fonctionnent avec les codes de langue-pays suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-167">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="14b61-168">en-US.</span><span class="sxs-lookup"><span data-stu-id="14b61-168">en-US.</span></span> <span data-ttu-id="14b61-169">Anglais (États-Unis)</span><span class="sxs-lookup"><span data-stu-id="14b61-169">English (United States)</span></span>  
  
-   <span data-ttu-id="14b61-170">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="14b61-170">zh-CN.</span></span> <span data-ttu-id="14b61-171">Chinois (Chine)</span><span class="sxs-lookup"><span data-stu-id="14b61-171">Chinese (China)</span></span>  
  
-   <span data-ttu-id="14b61-172">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="14b61-172">zh-TW.</span></span> <span data-ttu-id="14b61-173">Chinois (Taïwan)</span><span class="sxs-lookup"><span data-stu-id="14b61-173">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="14b61-174">Codes de langue à deux lettres tels que « fr » sont également autorisées.</span><span class="sxs-lookup"><span data-stu-id="14b61-174">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-175">L’exemple suivant fait partie d’une application console qui initialise un <xref:System.Speech.Synthesis.SpeechSynthesizer> de l’objet et fournit en sortie à la console une liste des voix installées qui prennent en charge les paramètres régionaux en-US.</span><span class="sxs-lookup"><span data-stu-id="14b61-175">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-176">Suspend le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-176">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-177">Déclenché lorsqu’un phonème est atteint.</span><span class="sxs-lookup"><span data-stu-id="14b61-177">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-178">Un phonème est un composant de base du langage écrit, en général une lettre d’un caractère alphabétique (ou la combinaison de deux lettres) qui représente un ou plusieurs sons distinctes.</span><span class="sxs-lookup"><span data-stu-id="14b61-178">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="14b61-179">Par exemple, la lettre « c » est un phonème peut sembler comme « s » dans « on », ou comme « k » dans « catch ».</span><span class="sxs-lookup"><span data-stu-id="14b61-179">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="14b61-180">Un mot écrit est un assemblage de phonèmes.</span><span class="sxs-lookup"><span data-stu-id="14b61-180">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="14b61-181">Modification d’un mot d’un phonème modifie son orthographe.</span><span class="sxs-lookup"><span data-stu-id="14b61-181">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="14b61-182">Un <xref:System.Speech.Synthesis.SpeechSynthesizer> instance génère un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> événement pour chaque partie d’un mot qui constitue un phonème.</span><span class="sxs-lookup"><span data-stu-id="14b61-182">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="14b61-183">Par exemple, pour le mot « thème » génère trois <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> événements ; l’autre pour le son de « th », un pour le son de « e » et un pour le son de « m » (me).</span><span class="sxs-lookup"><span data-stu-id="14b61-183">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="14b61-184">Pour un exemple et les données associées à l’événement d’informations, consultez <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14b61-184">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-185">Obtient ou définit la vitesse d’énonciation du <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-185">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="14b61-186">Retourne la vitesse d’énonciation du <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet, à partir de -10 à 10.</span><span class="sxs-lookup"><span data-stu-id="14b61-186">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14b61-187">L’exemple suivant explique une chaîne à la vitesse d’énonciation la valeur -2.</span><span class="sxs-lookup"><span data-stu-id="14b61-187">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="14b61-188">L’emplacement du document lexique.</span><span class="sxs-lookup"><span data-stu-id="14b61-188">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="14b61-189">Supprime un lexique à partir de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-189">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-190">Pour obtenir un exemple, consultez <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-190">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-191">Reprend le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> après qu’il a été suspendu de l’objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-191">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="14b61-192">Le nom de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-192">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="14b61-193">Sélectionne une voix spécifique par nom.</span><span class="sxs-lookup"><span data-stu-id="14b61-193">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-194">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> classe pour obtenir les noms d’installée voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-194">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="14b61-195">Pour sélectionner une voix, passer tout le contenu de la <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> propriété comme argument pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-195">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="14b61-196">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée contenant `name` dans la voix <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="14b61-197">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> effectue une comparaison respectant la casse, de la sous-chaîne pour déterminer si la voix correspond à la `name`.</span><span class="sxs-lookup"><span data-stu-id="14b61-197">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="14b61-198">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-198">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-199">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-199">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-200">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-200">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-201">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-201">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="14b61-202">Pour sélectionner une voix par sexe, d’âge ou de paramètres régionaux, utilisez une de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-202">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14b61-203">Sélectionne une voix avec des caractéristiques spécifiques.</span><span class="sxs-lookup"><span data-stu-id="14b61-203">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-204">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> classe pour obtenir les noms d’installée voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-204">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="14b61-205">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée qui correspond à des caractéristiques indiquées.</span><span class="sxs-lookup"><span data-stu-id="14b61-205">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="14b61-206">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-206">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-207">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-207">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-208">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-208">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-209">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-209">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="14b61-210">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode)</span><span class="sxs-lookup"><span data-stu-id="14b61-210">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="14b61-211">Genre de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-211">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="14b61-212">Sélectionne une voix avec un type spécifique.</span><span class="sxs-lookup"><span data-stu-id="14b61-212">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-213">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> classe pour obtenir les noms d’installée voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-213">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="14b61-214">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée dont <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> propriété correspondances le `gender` paramètre.</span><span class="sxs-lookup"><span data-stu-id="14b61-214">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="14b61-215">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-215">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-216">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-216">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-217">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-217">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-218">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-218">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="14b61-219">Pour sélectionner une voix selon d’autres caractéristiques, consultez l’autre <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-219">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="14b61-220">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-220">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="14b61-221">Genre de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-221">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="14b61-222">Âge de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-222">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="14b61-223">Sélectionne une voix avec un type spécifique et d’un âge.</span><span class="sxs-lookup"><span data-stu-id="14b61-223">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-224">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> classe pour obtenir les noms d’installée voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-224">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="14b61-225">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet sélectionne la première voix installée dont <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> et <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriétés correspondent le `gender` et `age` paramètres.</span><span class="sxs-lookup"><span data-stu-id="14b61-225">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="14b61-226">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-226">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-227">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-227">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-228">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-228">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-229">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-229">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="14b61-230">Pour sélectionner une voix selon d’autres caractéristiques, consultez l’autre <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-230">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="14b61-231">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-231">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="14b61-232">Genre de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-232">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="14b61-233">Âge de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-233">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="14b61-234">La position de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-234">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="14b61-235">Sélectionne une voix avec un type spécifique et d’un âge, selon la position dans laquelle les voix sont classées.</span><span class="sxs-lookup"><span data-stu-id="14b61-235">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-236">Utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> méthode et <xref:System.Speech.Synthesis.VoiceInfo> classe pour obtenir les noms d’installée voix de synthèse vocale (TTS) que vous pouvez sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-236">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="14b61-237">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> recherche installé voix dont la propriété de l’objet <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> et <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> propriétés correspondent le `gender` et `age` paramètres.</span><span class="sxs-lookup"><span data-stu-id="14b61-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="14b61-238">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> compte les correspondances de recherche, elle retourne la voix lorsque le nombre est égal à la `voiceAlternate` paramètre.</span><span class="sxs-lookup"><span data-stu-id="14b61-238">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="14b61-239">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-239">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-240">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-240">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-241">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-241">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-242">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-242">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="14b61-243">Pour sélectionner une voix selon d’autres caractéristiques, consultez l’autre <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> surcharges.</span><span class="sxs-lookup"><span data-stu-id="14b61-243">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="14b61-244">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-244">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="14b61-245">Genre de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-245">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="14b61-246">Âge de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-246">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="14b61-247">La position de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-247">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="14b61-248">Les paramètres régionaux de la voix à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="14b61-248">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="14b61-249">Sélectionne une voix avec un type spécifique, l’âge et paramètres régionaux, selon la position dans laquelle les voix sont classées.</span><span class="sxs-lookup"><span data-stu-id="14b61-249">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-250">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> recherche voix dont la propriété de l’objet <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, et <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> propriétés correspondent le `gender`, `age`, et `culture` paramètres.</span><span class="sxs-lookup"><span data-stu-id="14b61-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="14b61-251">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> compte les correspondances de recherche, elle retourne la voix lorsque le nombre est égal à la `voiceAlternate` paramètre.</span><span class="sxs-lookup"><span data-stu-id="14b61-251">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="14b61-252">Microsoft Windows et l’API System.Speech acceptent tous les codes de langue-pays valides.</span><span class="sxs-lookup"><span data-stu-id="14b61-252">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="14b61-253">Pour effectuer la synthèse vocale à l’aide de la langue spécifiée dans le `culture` paramètre, un moteur de synthèse vocale qui prend en charge que le code de langue-pays doit être installé.</span><span class="sxs-lookup"><span data-stu-id="14b61-253">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="14b61-254">Les moteurs de synthèse vocale fourni avec Microsoft Windows 7 fonctionnent avec les codes de langue-pays suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-254">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="14b61-255">en-US.</span><span class="sxs-lookup"><span data-stu-id="14b61-255">en-US.</span></span> <span data-ttu-id="14b61-256">Anglais (États-Unis)</span><span class="sxs-lookup"><span data-stu-id="14b61-256">English (United States)</span></span>  
  
-   <span data-ttu-id="14b61-257">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="14b61-257">zh-CN.</span></span> <span data-ttu-id="14b61-258">Chinois (Chine)</span><span class="sxs-lookup"><span data-stu-id="14b61-258">Chinese (China)</span></span>  
  
-   <span data-ttu-id="14b61-259">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="14b61-259">zh-TW.</span></span> <span data-ttu-id="14b61-260">Chinois (Taïwan)</span><span class="sxs-lookup"><span data-stu-id="14b61-260">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="14b61-261">Codes de langue à deux lettres tels que « fr » sont également autorisées.</span><span class="sxs-lookup"><span data-stu-id="14b61-261">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="14b61-262">Lorsqu’une application appelle <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, la méthode vérifie que chacun des voix qu’il trouve dans le Registre répond à certains critères minimum.</span><span class="sxs-lookup"><span data-stu-id="14b61-262">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="14b61-263">Pour n’importe quel voice qui échoue la vérification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> définit son <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-263">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="14b61-264">Une application ne peut pas sélectionner une voix dont <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété est `False`.</span><span class="sxs-lookup"><span data-stu-id="14b61-264">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="14b61-265">En règle générale, les applications ne définissent pas d’une voix <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="14b61-265">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="14b61-266">Pour sélectionner une voix selon d’autres caractéristiques, consultez l’autre <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> surcharges.</span><span class="sxs-lookup"><span data-stu-id="14b61-266">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="14b61-267">Pour sélectionner une voix par nom, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-267">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="14b61-268">Le flux de données à laquelle ajouter la sortie de synthèse.</span><span class="sxs-lookup"><span data-stu-id="14b61-268">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="14b61-269">Le format à utiliser pour la sortie de synthèse.</span><span class="sxs-lookup"><span data-stu-id="14b61-269">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="14b61-270">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet pour ajouter la sortie vers un flux audio.</span><span class="sxs-lookup"><span data-stu-id="14b61-270">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-271">Appelez <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>de référence dans le flux.</span><span class="sxs-lookup"><span data-stu-id="14b61-271">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the stream.</span></span>  
  
 <span data-ttu-id="14b61-272">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-272">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-273">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet pour envoyer la sortie vers le périphérique audio par défaut.</span><span class="sxs-lookup"><span data-stu-id="14b61-273">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-274">Vous pouvez utiliser la **son** fenêtre dans le Windows **le panneau de configuration** pour configurer le périphérique audio par défaut pour l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="14b61-274">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="14b61-275">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-275">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-276">L’exemple suivant utilise le synthétiseur de parler dans une expression à la sortie audio par défaut.</span><span class="sxs-lookup"><span data-stu-id="14b61-276">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-277">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet ne pas sortie opérations de synthèse vers un appareil, un fichier ou un flux.</span><span class="sxs-lookup"><span data-stu-id="14b61-277">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-278">Utilisez cette méthode pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>de référence à un fichier ou un flux.</span><span class="sxs-lookup"><span data-stu-id="14b61-278">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to a file or stream.</span></span> <span data-ttu-id="14b61-279">Pour obtenir un exemple, consultez <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-279">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="14b61-280">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-280">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14b61-281">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet pour ajouter la sortie à un fichier de format audio Waveform.</span><span class="sxs-lookup"><span data-stu-id="14b61-281">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-282">Pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>référence de le dans le fichier, vous devez reconfigurer le <xref:System.Speech.Synthesis.SpeechSynthesizer>de sortie, par exemple, en appelant <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-282">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="14b61-283">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-283">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="14b61-284">Chemin d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="14b61-284">The path to the file.</span></span></param>
        <summary><span data-ttu-id="14b61-285">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet pour ajouter la sortie vers un fichier qui contient les données audio au format Waveform.</span><span class="sxs-lookup"><span data-stu-id="14b61-285">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-286">Pour configurer la sortie et spécifiez le format audio, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-286">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-287">L’exemple suivant utilise une instance de <xref:System.Media.SoundPlayer> pour lire une invite de commandes a été sortie vers un fichier .wav.</span><span class="sxs-lookup"><span data-stu-id="14b61-287">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="14b61-288">Étant donné que le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> appel est asynchrone, le <xref:System.Media.SoundPlayer> instance est créée (et le <xref:System.Media.SoundPlayer.Play%2A> méthode appelée) dans le Gestionnaire de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="14b61-288">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="14b61-289">Chemin d'accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="14b61-289">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="14b61-290">Les informations de format audio.</span><span class="sxs-lookup"><span data-stu-id="14b61-290">The audio format information.</span></span></param>
        <summary><span data-ttu-id="14b61-291">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet pour ajouter la sortie à un fichier de format audio Waveform dans un format spécifié.</span><span class="sxs-lookup"><span data-stu-id="14b61-291">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14b61-292">L’exemple suivant spécifie le format de la sortie de la synthèse vocale et les envoie à un fichier WAV.</span><span class="sxs-lookup"><span data-stu-id="14b61-292">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="14b61-293">Le flux de données à laquelle ajouter la sortie de synthèse.</span><span class="sxs-lookup"><span data-stu-id="14b61-293">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="14b61-294">Configure le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet pour ajouter la sortie dans un flux qui contient des données audio au format Waveform.</span><span class="sxs-lookup"><span data-stu-id="14b61-294">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-295">Pour libérer le <xref:System.Speech.Synthesis.SpeechSynthesizer>référence de le dans le flux, reconfigure le synthétiseur de sortie, par exemple, en appelant <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-295">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="14b61-296">Pour les autres options de configuration de sortie, consultez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, et <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-296">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-297">L’exemple suivant génère une expression dans un flux WAV.</span><span class="sxs-lookup"><span data-stu-id="14b61-297">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream streamAudio = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14b61-298">Génère la sortie vocale de façon synchrone à partir d’une chaîne, un <see cref="T:System.Speech.Synthesis.Prompt" /> objet, ou un <see cref="T:System.Speech.Synthesis.PromptBuilder" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-298">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-299">Le <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthodes synthèse vocale de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="14b61-299">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="14b61-300">Les méthodes ne retournent pas jusqu'à ce que le contenu de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance a été complètement parlée.</span><span class="sxs-lookup"><span data-stu-id="14b61-300">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="14b61-301">Il s’agit de la façon la plus simple pour la synthèse vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-301">This is the simplest way to generate speech.</span></span> <span data-ttu-id="14b61-302">Toutefois, si votre application doit effectuer des tâches pendant l’énonciation, par exemple texte en surbrillance, l’animation de peinture, les contrôles de moniteur ou autres tâches, utilisent le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> méthodes ou les <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthode pour la synthèse vocale de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="14b61-302">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="14b61-303">Pendant un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-303">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="14b61-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="14b61-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="14b61-305">Déclenché lorsque l’état d’énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-305">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="14b61-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="14b61-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="14b61-307">Déclenché lorsque le synthétiseur commence à générer la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-307">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="14b61-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="14b61-309">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de la voix dans un langage.</span><span class="sxs-lookup"><span data-stu-id="14b61-309">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="14b61-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="14b61-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="14b61-311">Déclenché chaque fois que le synthétiseur termine en parlant d’un mot.</span><span class="sxs-lookup"><span data-stu-id="14b61-311">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="14b61-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="14b61-313">Déclenché chaque fois que la restitution vocale nécessite une modification dans la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-313">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="14b61-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="14b61-315">Déclenché lorsque le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-315">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="14b61-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="14b61-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="14b61-317">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-317">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="14b61-318">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> ne déclenche pas le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement lors du traitement de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-318">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="14b61-319">Le contenu à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-319">The content to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-320">Énonce de façon synchrone le contenu d’un <see cref="T:System.Speech.Synthesis.Prompt" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-320">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-321">Pour parler de façon asynchrone le contenu d’un <xref:System.Speech.Synthesis.Prompt> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-321">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-322">L’exemple suivant crée un <xref:System.Speech.Synthesis.Prompt> objet à partir d’une chaîne et transmet l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-322">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="14b61-323">Le contenu à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-323">The content to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-324">Énonce de façon synchrone le contenu d’un <see cref="T:System.Speech.Synthesis.PromptBuilder" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-324">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-325">Pour parler de façon asynchrone le contenu d’un <xref:System.Speech.Synthesis.PromptBuilder> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-325">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-326">L’exemple suivant crée un <xref:System.Speech.Synthesis.PromptBuilder> objet à partir d’une chaîne et transmet l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-326">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="14b61-327">Texte à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-327">The text to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-328">Énonce de façon synchrone le contenu d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="14b61-328">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-329">De façon synchrone prononciation une chaîne qui contient un balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-329">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="14b61-330">Pour façon asynchrone énoncer le contenu d’une chaîne, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-330">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-331">Comme indiqué dans l’exemple suivant, la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthode permet de générer le discours de sortie de façon synchrone la plus simple.</span><span class="sxs-lookup"><span data-stu-id="14b61-331">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14b61-332">Génère la sortie vocale de façon asynchrone à partir d’une chaîne, un <see cref="T:System.Speech.Synthesis.Prompt" /> objet, ou un <see cref="T:System.Speech.Synthesis.PromptBuilder" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-332">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-333">Le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> méthodes synthèse vocale de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="14b61-333">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="14b61-334">Les méthodes retournent immédiatement sans attendre que le contenu de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> objet à la fin de parler.</span><span class="sxs-lookup"><span data-stu-id="14b61-334">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="14b61-335">Utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> si votre application a besoin effectuer des tâches en parlant, par exemple mettre en surbrillance de texte, peindre l’animation, les contrôles de moniteur ou d’autres tâches.</span><span class="sxs-lookup"><span data-stu-id="14b61-335">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="14b61-336">Pendant un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-336">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="14b61-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="14b61-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="14b61-338">Déclenché lorsque l’état d’énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-338">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="14b61-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="14b61-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="14b61-340">Déclenché lorsque le synthétiseur commence à générer la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-340">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="14b61-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="14b61-342">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de la voix dans un langage.</span><span class="sxs-lookup"><span data-stu-id="14b61-342">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="14b61-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="14b61-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="14b61-344">Déclenché chaque fois que le synthétiseur termine en parlant d’un mot.</span><span class="sxs-lookup"><span data-stu-id="14b61-344">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="14b61-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="14b61-346">Déclenché chaque fois que la restitution vocale nécessite une modification dans la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-346">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="14b61-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="14b61-348">Déclenché lorsque le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-348">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="14b61-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="14b61-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="14b61-350">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-350">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="14b61-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="14b61-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="14b61-352">Déclenché lorsque le synthétiseur termine un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="14b61-352">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="14b61-353">Si votre application n’a pas besoin effectuer des tâches en parlant, vous pouvez utiliser la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> méthodes ou les <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> méthode pour la synthèse vocale de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="14b61-353">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="14b61-354">Le contenu à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-354">The content to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-355">Énonce de façon asynchrone le contenu d’un <see cref="T:System.Speech.Synthesis.Prompt" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-355">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-356">Vous pouvez annuler la lecture asynchrone d’une invite de commandes avec la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-356">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="14b61-357">Pour parler de façon synchrone le contenu d’un <xref:System.Speech.Synthesis.Prompt> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-357">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-358">L’exemple suivant crée un <xref:System.Speech.Synthesis.Prompt> objet à partir d’une chaîne et transmet l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-358">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="14b61-359">Le contenu à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-359">The content to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-360">Énonce de façon asynchrone le contenu d’un <see cref="T:System.Speech.Synthesis.PromptBuilder" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-360">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="14b61-361">Retourne l’objet qui contient le contenu à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-361">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-362">Pour parler de façon synchrone le contenu d’un <xref:System.Speech.Synthesis.PromptBuilder> de l’objet, utilisez <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="14b61-362">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-363">L’exemple suivant crée un <xref:System.Speech.Synthesis.PromptBuilder> objet à partir d’une chaîne et transmet l’objet en tant qu’argument à la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-363">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="14b61-364">Texte à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-364">The text to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-365">Énonce de façon asynchrone le contenu d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="14b61-365">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="14b61-366">Retourne l’objet qui contient le contenu à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-366">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-367">Pour parler façon asynchrone une chaîne qui contient un balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-367">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="14b61-368">Pour façon synchrone énoncer le contenu d’une chaîne, utilisez la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-368">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="14b61-369">Vous pouvez annuler la lecture asynchrone d’une invite de commandes avec la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-369">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-370">Comme indiqué dans l’exemple suivant, la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> méthode permet de générer le discours de sortie de façon asynchrone la plus simple.</span><span class="sxs-lookup"><span data-stu-id="14b61-370">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="14b61-371">Le contenu pour lequel annuler une opération de lecture.</span><span class="sxs-lookup"><span data-stu-id="14b61-371">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="14b61-372">Annule l’opération asynchrone de synthèse d’une invite en file d’attente.</span><span class="sxs-lookup"><span data-stu-id="14b61-372">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-373">Vous pouvez également utiliser cette méthode d’annulation asynchrone parler d’opération pour les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-373">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="14b61-374">Le contenu d’un <xref:System.String> spécifié par un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-374">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="14b61-375">Le contenu d’un <xref:System.Speech.Synthesis.PromptBuilder> spécifié par un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-375">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="14b61-376">Le contenu d’un <xref:System.String> contenant SSML spécifié par un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-376">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="14b61-377">Lorsque vous appelez <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech crée un <xref:System.Speech.Synthesis.Prompt> de l’objet et les remplit avec le contenu du paramètre de la méthode et retourne le <xref:System.Speech.Synthesis.Prompt> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-377">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="14b61-378">Si vous conservez une copie de retourné <xref:System.Speech.Synthesis.Prompt>, vous pouvez passer dans <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> pour annuler l’énonciation du contenu spécifié dans un <xref:System.String> ou un <xref:System.Speech.Synthesis.PromptBuilder> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-378">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14b61-379">Annule les opérations de synthèse vocale tout en file d’attente, asynchrone.</span><span class="sxs-lookup"><span data-stu-id="14b61-379">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14b61-380">L’exemple suivant montre une utilisation de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> pour annuler la lecture asynchrone d’une invite de commandes, afin qu’une nouvelle invite peut être prononcée.</span><span class="sxs-lookup"><span data-stu-id="14b61-380">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="14b61-381">Notez que le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement déclenche lorsqu’un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> opération est annulée.</span><span class="sxs-lookup"><span data-stu-id="14b61-381">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-382">Déclenché lorsque le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> termine la lecture d’une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-382">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-383">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement à la fin d’une de le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-383">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="14b61-384">Le <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> classe ne possède aucune propriété et ne retourne pas de données à partir de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="14b61-384">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="14b61-385">Il est fourni pour permettre aux auteurs d’applications écrire des gestionnaires d’événements pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement.</span><span class="sxs-lookup"><span data-stu-id="14b61-385">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-386">Déclenché après que le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> parle de chaque mot d’une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-386">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-387">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement pour chaque nouveau mot qui il participe dans une invite de commandes à l’aide de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-387">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="14b61-388">Pour un exemple et plus d’informations sur les données associées à l’événement, consultez <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14b61-388">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="14b61-389">La chaîne SSML à lire.</span><span class="sxs-lookup"><span data-stu-id="14b61-389">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-390">Énonce de façon synchrone un <see cref="T:System.String" /> qui contient un balisage SSML.</span><span class="sxs-lookup"><span data-stu-id="14b61-390">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-391">Le contenu de la `textToSpeak` paramètre doit inclure un `speak` élément et doit être conforme à la [Markup langage SSML (Speech Synthesis) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="14b61-391">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="14b61-392">Pour plus d’informations, consultez [référence du langage Speech Synthesis Markup](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="14b61-392">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="14b61-393">Pour parler façon asynchrone une chaîne qui contient un balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-393">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="14b61-394">Vous pouvez utiliser <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> pour lancer la lecture synchrone d’une chaîne qui ne contient-elle pas de balisage SSML.</span><span class="sxs-lookup"><span data-stu-id="14b61-394">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="14b61-395">Pendant un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-395">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="14b61-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="14b61-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="14b61-397">Déclenché lorsque l’état d’énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-397">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="14b61-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="14b61-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="14b61-399">Déclenché lorsque le synthétiseur commence à générer la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-399">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="14b61-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="14b61-401">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de la voix dans un langage.</span><span class="sxs-lookup"><span data-stu-id="14b61-401">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="14b61-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="14b61-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="14b61-403">Déclenché chaque fois que le synthétiseur termine en parlant d’un mot.</span><span class="sxs-lookup"><span data-stu-id="14b61-403">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="14b61-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="14b61-405">Déclenché chaque fois que la restitution vocale nécessite une modification dans la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-405">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="14b61-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="14b61-407">Déclenché lorsque le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-407">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="14b61-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="14b61-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="14b61-409">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-409">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="14b61-410">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> ne déclenche pas le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> événement lors du traitement de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-410">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-411">L’exemple suivant affiche la date 1/29/2009 en tant que date, mois, jour, ordre de l’année.</span><span class="sxs-lookup"><span data-stu-id="14b61-411">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt synchronously.
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="14b61-412">Le balisage SMML à utiliser.</span><span class="sxs-lookup"><span data-stu-id="14b61-412">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="14b61-413">Énonce de façon asynchrone un <see cref="T:System.String" /> qui contient un balisage SSML.</span><span class="sxs-lookup"><span data-stu-id="14b61-413">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-414">Le contenu de la `textToSpeak` paramètre doit inclure un `speak` élément et doit être conforme à la [Markup langage SSML (Speech Synthesis) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="14b61-414">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="14b61-415">Pour plus d’informations, consultez [référence du langage Speech Synthesis Markup](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="14b61-415">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="14b61-416">De façon synchrone prononciation une chaîne qui contient un balisage SSML, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-416">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="14b61-417">Vous pouvez utiliser <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> pour lancer la lecture asynchrone d’une chaîne qui ne contient-elle pas de balisage SSML.</span><span class="sxs-lookup"><span data-stu-id="14b61-417">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="14b61-418">Pendant un appel à cette méthode, le <xref:System.Speech.Synthesis.SpeechSynthesizer> peut déclencher des événements suivants :</span><span class="sxs-lookup"><span data-stu-id="14b61-418">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="14b61-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="14b61-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="14b61-420">Déclenché lorsque l’état d’énonciation du synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-420">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="14b61-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="14b61-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="14b61-422">Déclenché lorsque le synthétiseur commence à générer la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-422">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="14b61-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="14b61-424">Déclenché chaque fois que le synthétiseur atteint une lettre ou une combinaison de lettres qui constituent un son discrète de la voix dans un langage.</span><span class="sxs-lookup"><span data-stu-id="14b61-424">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="14b61-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="14b61-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="14b61-426">Déclenché chaque fois que le synthétiseur termine en parlant d’un mot.</span><span class="sxs-lookup"><span data-stu-id="14b61-426">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="14b61-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="14b61-428">Déclenché chaque fois que la restitution vocale nécessite une modification dans la position de la bouche ou les visages muscles utilisés pour produire la reconnaissance vocale.</span><span class="sxs-lookup"><span data-stu-id="14b61-428">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="14b61-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="14b61-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="14b61-430">Déclenché lorsque le synthétiseur rencontre un signet dans une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-430">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="14b61-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="14b61-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="14b61-432">Déclenché lorsque la voix pour le synthétiseur change.</span><span class="sxs-lookup"><span data-stu-id="14b61-432">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="14b61-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="14b61-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="14b61-434">Déclenché lorsque le synthétiseur termine le traitement une <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="14b61-434">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="14b61-435">Si vous devez pas effectuer des tâches pendant l’énonciation dos de votre application, vous pouvez utiliser la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> méthode pour la synthèse vocale de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="14b61-435">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-436">Déclenché lorsque le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> commence la lecture d’une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-436">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-437">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement lorsqu’il commence le traitement d’une invite de commandes à l’aide de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-437">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="14b61-438">Le <xref:System.Speech.Synthesis.SpeakStartedEventArgs> classe ne possède aucune propriété et ne retourne pas de données à partir de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> événement.</span><span class="sxs-lookup"><span data-stu-id="14b61-438">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="14b61-439">Il est fourni pour permettre aux auteurs d’applications écrire des gestionnaires d’événements pour le <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> événement.</span><span class="sxs-lookup"><span data-stu-id="14b61-439">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-440">Obtient l’état de d’énonciation actuel le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-440">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="14b61-441">Retourne l’état d’énonciation actuel de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-441">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-442">Pour obtenir le nouvel état de la <xref:System.Speech.Synthesis.SpeechSynthesizer> après ces modifications, utilisez la <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> propriété de la <xref:System.Speech.Synthesis.StateChangedEventArgs> classe.</span><span class="sxs-lookup"><span data-stu-id="14b61-442">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-443">L’exemple suivant illustre l’état de la <xref:System.Speech.Synthesis.SpeechSynthesizer> avant, pendant et après la lecture d’une invite de commandes.</span><span class="sxs-lookup"><span data-stu-id="14b61-443">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-444">Déclenché lorsque l’état de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> modifications.</span><span class="sxs-lookup"><span data-stu-id="14b61-444">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-445">Le <xref:System.Speech.Synthesis.SpeechSynthesizer> déclenche cet événement lorsque sa parlant <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> modifications.</span><span class="sxs-lookup"><span data-stu-id="14b61-445">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="14b61-446">Pour un exemple et plus d’informations sur les données associées à l’événement, consultez <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14b61-446">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="14b61-447">Pour suspendre et reprendre la synthèse vocale, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> et <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-447">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-448">Déclenché lorsqu’un viseme est atteint.</span><span class="sxs-lookup"><span data-stu-id="14b61-448">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-449">Un viseme est la position de base de la bouche et face prononciation d’un phonème.</span><span class="sxs-lookup"><span data-stu-id="14b61-449">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="14b61-450">Visemes sont des représentations visuelles des phonèmes.</span><span class="sxs-lookup"><span data-stu-id="14b61-450">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="14b61-451">System.Speech prend en charge 21 visemes anglais (États-Unis), chacun d’eux correspondant à un ou plusieurs des phonèmes.</span><span class="sxs-lookup"><span data-stu-id="14b61-451">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="14b61-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> événements sont déclenchés lorsqu’un phonème nouveau atteinte a un visème différents correspondant à phonème précédent atteint.</span><span class="sxs-lookup"><span data-stu-id="14b61-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="14b61-453">Dans la mesure où certains visemes représentent plusieurs phonème, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> événement n’est pas généré si le phonème suivant atteint correspond au même visème comme phonème précédent.</span><span class="sxs-lookup"><span data-stu-id="14b61-453">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="14b61-454">Par exemple, pour les mots « cette zone », un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> événement est déclenché pour le « s » dans « this » et « z » dans « zone ».</span><span class="sxs-lookup"><span data-stu-id="14b61-454">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="14b61-455">Toutefois, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> événement n’est pas déclenché pour le « z » dans « zone », car il correspond à la même visème comme le « s » dans « this ».</span><span class="sxs-lookup"><span data-stu-id="14b61-455">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="14b61-456">Voici une liste des groupes de phonème qui correspondent à un visème dans anglais (États-Unis) et 21 phonèmes SAPI.</span><span class="sxs-lookup"><span data-stu-id="14b61-456">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="14b61-457">Visème</span><span class="sxs-lookup"><span data-stu-id="14b61-457">Viseme</span></span>|<span data-ttu-id="14b61-458">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="14b61-458">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="14b61-459">0</span><span class="sxs-lookup"><span data-stu-id="14b61-459">0</span></span>|<span data-ttu-id="14b61-460">silence</span><span class="sxs-lookup"><span data-stu-id="14b61-460">silence</span></span>|  
|<span data-ttu-id="14b61-461">1</span><span class="sxs-lookup"><span data-stu-id="14b61-461">1</span></span>|<span data-ttu-id="14b61-462">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="14b61-462">ae, ax, ah</span></span>|  
|<span data-ttu-id="14b61-463">2</span><span class="sxs-lookup"><span data-stu-id="14b61-463">2</span></span>|<span data-ttu-id="14b61-464">aa</span><span class="sxs-lookup"><span data-stu-id="14b61-464">aa</span></span>|  
|<span data-ttu-id="14b61-465">3</span><span class="sxs-lookup"><span data-stu-id="14b61-465">3</span></span>|<span data-ttu-id="14b61-466">ao</span><span class="sxs-lookup"><span data-stu-id="14b61-466">ao</span></span>|  
|<span data-ttu-id="14b61-467">4</span><span class="sxs-lookup"><span data-stu-id="14b61-467">4</span></span>|<span data-ttu-id="14b61-468">EY, GE, euh</span><span class="sxs-lookup"><span data-stu-id="14b61-468">ey, eh, uh</span></span>|  
|<span data-ttu-id="14b61-469">5</span><span class="sxs-lookup"><span data-stu-id="14b61-469">5</span></span>|<span data-ttu-id="14b61-470">er</span><span class="sxs-lookup"><span data-stu-id="14b61-470">er</span></span>|  
|<span data-ttu-id="14b61-471">6</span><span class="sxs-lookup"><span data-stu-id="14b61-471">6</span></span>|<span data-ttu-id="14b61-472">y, k, ih, ix</span><span class="sxs-lookup"><span data-stu-id="14b61-472">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="14b61-473">7</span><span class="sxs-lookup"><span data-stu-id="14b61-473">7</span></span>|<span data-ttu-id="14b61-474">w, uw</span><span class="sxs-lookup"><span data-stu-id="14b61-474">w, uw</span></span>|  
|<span data-ttu-id="14b61-475">8</span><span class="sxs-lookup"><span data-stu-id="14b61-475">8</span></span>|<span data-ttu-id="14b61-476">Comment puis-je</span><span class="sxs-lookup"><span data-stu-id="14b61-476">ow</span></span>|  
|<span data-ttu-id="14b61-477">9</span><span class="sxs-lookup"><span data-stu-id="14b61-477">9</span></span>|<span data-ttu-id="14b61-478">aw</span><span class="sxs-lookup"><span data-stu-id="14b61-478">aw</span></span>|  
|<span data-ttu-id="14b61-479">10</span><span class="sxs-lookup"><span data-stu-id="14b61-479">10</span></span>|<span data-ttu-id="14b61-480">Oy</span><span class="sxs-lookup"><span data-stu-id="14b61-480">oy</span></span>|  
|<span data-ttu-id="14b61-481">11</span><span class="sxs-lookup"><span data-stu-id="14b61-481">11</span></span>|<span data-ttu-id="14b61-482">AA</span><span class="sxs-lookup"><span data-stu-id="14b61-482">ay</span></span>|  
|<span data-ttu-id="14b61-483">12</span><span class="sxs-lookup"><span data-stu-id="14b61-483">12</span></span>|<span data-ttu-id="14b61-484">h</span><span class="sxs-lookup"><span data-stu-id="14b61-484">h</span></span>|  
|<span data-ttu-id="14b61-485">13</span><span class="sxs-lookup"><span data-stu-id="14b61-485">13</span></span>|<span data-ttu-id="14b61-486">r</span><span class="sxs-lookup"><span data-stu-id="14b61-486">r</span></span>|  
|<span data-ttu-id="14b61-487">14</span><span class="sxs-lookup"><span data-stu-id="14b61-487">14</span></span>|<span data-ttu-id="14b61-488">l</span><span class="sxs-lookup"><span data-stu-id="14b61-488">l</span></span>|  
|<span data-ttu-id="14b61-489">15</span><span class="sxs-lookup"><span data-stu-id="14b61-489">15</span></span>|<span data-ttu-id="14b61-490">s, z</span><span class="sxs-lookup"><span data-stu-id="14b61-490">s, z</span></span>|  
|<span data-ttu-id="14b61-491">16</span><span class="sxs-lookup"><span data-stu-id="14b61-491">16</span></span>|<span data-ttu-id="14b61-492">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="14b61-492">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="14b61-493">17</span><span class="sxs-lookup"><span data-stu-id="14b61-493">17</span></span>|<span data-ttu-id="14b61-494">th, dh</span><span class="sxs-lookup"><span data-stu-id="14b61-494">th, dh</span></span>|  
|<span data-ttu-id="14b61-495">18</span><span class="sxs-lookup"><span data-stu-id="14b61-495">18</span></span>|<span data-ttu-id="14b61-496">f, v</span><span class="sxs-lookup"><span data-stu-id="14b61-496">f, v</span></span>|  
|<span data-ttu-id="14b61-497">19</span><span class="sxs-lookup"><span data-stu-id="14b61-497">19</span></span>|<span data-ttu-id="14b61-498">d, t, n</span><span class="sxs-lookup"><span data-stu-id="14b61-498">d, t, n</span></span>|  
|<span data-ttu-id="14b61-499">20</span><span class="sxs-lookup"><span data-stu-id="14b61-499">20</span></span>|<span data-ttu-id="14b61-500">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="14b61-500">k, g, ng</span></span>|  
|<span data-ttu-id="14b61-501">21</span><span class="sxs-lookup"><span data-stu-id="14b61-501">21</span></span>|<span data-ttu-id="14b61-502">p, b, m</span><span class="sxs-lookup"><span data-stu-id="14b61-502">p, b, m</span></span>|  
  
 <span data-ttu-id="14b61-503">Pour plus d’informations sur les données associées à la `VisemeReached` événement, consultez <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14b61-503">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-504">Obtient des informations sur la voix actuelle de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-504">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="14b61-505">Retourne des informations sur la voix actuelle de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-505">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-506">Lorsque vous initialisez un nouveau <xref:System.Speech.Synthesis.SpeechSynthesizer>, il utilise la voix de système par défaut.</span><span class="sxs-lookup"><span data-stu-id="14b61-506">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="14b61-507">Pour configurer le <xref:System.Speech.Synthesis.SpeechSynthesizer> objet pour utiliser une des voix de synthèse vocale installé, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="14b61-507">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="14b61-508">Pour obtenir des informations sur les voix est installées, utilisez le <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> (méthode) et le <xref:System.Speech.Synthesis.VoiceInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="14b61-508">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14b61-509">L’exemple suivant initialise une instance de <xref:System.Speech.Synthesis.SpeechSynthesizer> et obtient des informations sur la voix actuelle.</span><span class="sxs-lookup"><span data-stu-id="14b61-509">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-510">Déclenché lorsque la voix de le <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> modifications.</span><span class="sxs-lookup"><span data-stu-id="14b61-510">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14b61-511">Pour un exemple et les données associées à l’événement d’informations, consultez <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="14b61-511">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="14b61-512">Vous pouvez modifier la voix qui le <xref:System.Speech.Synthesis.SpeechSynthesizer> utilise avec un de la <xref:System.Speech.Synthesis.PromptBuilder>de <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> méthodes ou les <xref:System.Speech.Synthesis.SpeechSynthesizer>de <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> ou <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="14b61-512">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14b61-513">Obtient ou définit le volume de sortie de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> objet.</span><span class="sxs-lookup"><span data-stu-id="14b61-513">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="14b61-514">Retourne le volume de la <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, comprise entre 0 et 100.</span><span class="sxs-lookup"><span data-stu-id="14b61-514">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14b61-515">L’exemple suivant définit le volume de la <xref:System.Speech.Synthesis.SpeechSynthesizer>de sortie de l’audio pour la voix synthétisée et le fichier WAV.</span><span class="sxs-lookup"><span data-stu-id="14b61-515">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>