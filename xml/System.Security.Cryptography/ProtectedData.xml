<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38eb090e97e5972009f0065e48a5b55765ceee17" /><Meta Name="ms.sourcegitcommit" Value="3575d47a0ba065e8986f03d99279f478811907b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/20/2019" /><Meta Name="ms.locfileid" Value="65922700" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes de chiffrement et de déchiffrement des données. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Cette classe fournit l’accès à l’API de Protection des données (DPAPI) disponible dans les systèmes d’exploitation Windows. Il s’agit d’un service qui est fourni par le système d’exploitation et ne nécessite pas de bibliothèques supplémentaires. Elle offre une protection à l’aide des informations d’identification de l’utilisateur ou l’ordinateur pour chiffrer ou déchiffrer des données.

> [!IMPORTANT]
> Car il repose sur DPAPI, la `ProtectedData` classe est prise en charge sur la plateforme Windows uniquement. Son utilisation sur .NET Core sur les plates-formes autres que Windows lève un <xref:System.PlatformNotSupportedException>.
  
La classe se compose de deux wrappers pour l’interface DPAPI non managé, <xref:System.Security.Cryptography.ProtectedData.Protect%2A> et <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Ces deux méthodes peuvent être utilisées pour chiffrer et déchiffrer des données telles que les mots de passe, les clés et les chaînes de connexion.  
  
Si vous utilisez ces méthodes pendant l’emprunt d’identité, vous pouvez recevoir l’erreur suivante : « Clé non valide pour une utilisation dans l’état spécifié. » Cela se produit, car l’interface DPAPI stocke les données de clé dans les profils utilisateur. Si le profil n’est pas chargé, DPAPI ne pourrez pas effectuer le déchiffrement. Pour éviter cette erreur, charger le profil de l’utilisateur que vous souhaitez emprunter l’identité avant d’appeler soit la méthode. À l’aide de DPAPI avec l’emprunt d’identité peuvent entraîner une baisse significative complication et nécessite des choix de conception minutieuse.  

## Examples  
 L’exemple suivant montre comment utiliser la protection des données.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Tableau d’octets qui contient les données à chiffrer.</param>
        <param name="optionalEntropy">Un tableau d’octets supplémentaire facultatif utilisé pour augmenter la complexité du chiffrement, ou <see langword="null" /> pour aucune complexité supplémentaire.</param>
        <param name="scope">Une des valeurs d’énumération qui spécifie la portée du chiffrement.</param>
        <summary>Chiffre les données contenues dans un tableau d'octets spécifié et retourne un tableau d'octets contenant les données chiffrées.</summary>
        <returns>Tableau d'octets représentant les données chiffrées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée pour chiffrer les données telles que les mots de passe, les clés ou les chaînes de connexion. Le `optionalEntropy` paramètre vous permet d’ajouter des données pour augmenter la complexité du chiffrement ; spécifiez `null` pour aucune complexité supplémentaire. S’il est fourni, cette information doit également être utilisée lors du déchiffrage des données à l’aide du <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> (méthode).  
  
> [!NOTE]
>  Si vous utilisez cette méthode lors de l’emprunt d’identité, vous pouvez recevoir l’erreur suivante : « Clé non valide pour une utilisation dans l’état spécifié. » Pour éviter cette erreur, charger le profil de l’utilisateur que vous souhaitez emprunter l’identité avant d’appeler la méthode.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser la protection des données.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="userData" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Le chiffrement a échoué.</exception>
        <exception cref="T:System.NotSupportedException">Le système d’exploitation ne prend pas en charge cette méthode.</exception>
        <exception cref="T:System.OutOfMemoryException">Le système a manqué de mémoire pendant le chiffrement des données.</exception>
        <exception cref="T:System.PlatformNotSupportedException">.NET Core uniquement : Les appels à la <c>protéger</c> méthode sont prises en charge sur les systèmes d’exploitation Windows uniquement.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">avec associé <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> indicateur pour l’autorisation protéger les données.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Un tableau d’octets contenant des données chiffrées à l’aide de la <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> (méthode).</param>
        <param name="optionalEntropy">Tableau d’octets supplémentaire facultatif qui a été utilisé pour chiffrer les données, ou <see langword="null" /> si le tableau d’octets supplémentaire n’a pas été utilisé.</param>
        <param name="scope">Une des valeurs d’énumération qui spécifie la portée de protection des données qui a été utilisée pour chiffrer les données.</param>
        <summary>Déchiffre les données contenues dans un tableau d'octets spécifié et retourne un tableau d'octets contenant les données déchiffrées.</summary>
        <returns>Tableau d'octets représentant les données déchiffrées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée pour ôter la protection des données qui ont été chiffrées à l’aide de la <xref:System.Security.Cryptography.ProtectedData.Protect%2A> (méthode). Si le `optionalEntropy` paramètre a été utilisé au cours du chiffrement, il doit être fourni pour déchiffrer les données.  
  
> [!NOTE]
>  Si vous utilisez cette méthode lors de l’emprunt d’identité, vous pouvez recevoir l’erreur suivante : « Clé non valide pour une utilisation dans l’état spécifié. » Pour éviter cette erreur, charger le profil de l’utilisateur que vous souhaitez emprunter l’identité avant d’appeler la méthode.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser la protection des données.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="encryptedData" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Le déchiffrement a échoué.</exception>
        <exception cref="T:System.NotSupportedException">Le système d’exploitation ne prend pas en charge cette méthode.</exception>
        <exception cref="T:System.OutOfMemoryException">Mémoire insuffisante.</exception>
        <exception cref="T:System.PlatformNotSupportedException">.NET Core uniquement : Les appels à la <c>Unprotect</c> méthode sont prises en charge sur les systèmes d’exploitation Windows uniquement.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">avec associé <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> indicateur pour l’autorisation ôter la protection des données.</permission>
      </Docs>
    </Member>
  </Members>
</Type>