<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f21c8d79188df3ecb9df91effbfa1a48e870be7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39841836" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <TypeSignature Language="F#" Value="type ExpressionContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3cefa-101">Fournit un moyen de passer l'état de contexte à des sérialiseurs.</span><span class="sxs-lookup"><span data-stu-id="3cefa-101">Provides a means of passing context state among serializers.</span></span> <span data-ttu-id="3cefa-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cefa-103">Un <xref:System.ComponentModel.Design.Serialization.ExpressionContext> est placé sur la pile de contexte et contient l’expression la plus pertinente pendant la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="3cefa-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="3cefa-104">Le code C# suivant illustre une assignation.</span><span class="sxs-lookup"><span data-stu-id="3cefa-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="3cefa-105">Pendant la sérialisation, plusieurs sérialiseurs sont responsables de la création de cette instruction unique.</span><span class="sxs-lookup"><span data-stu-id="3cefa-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="3cefa-106">Un de ces sérialiseurs est chargé de créer « Hello ».</span><span class="sxs-lookup"><span data-stu-id="3cefa-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="3cefa-107">Il est parfois lorsque ce sérialiseur ait besoin de connaître le contexte dans lequel il crée son expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="3cefa-108">Dans l’exemple précédent, ce contexte n’est pas nécessaire.</span><span class="sxs-lookup"><span data-stu-id="3cefa-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="3cefa-109">Le code C# suivant illustre une situation dans laquelle la connaissance du contexte est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="3cefa-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="3cefa-110">Dans ce cas, le sérialiseur responsable de la création de l’expression de ressource doit être informé des noms des objets cibles.</span><span class="sxs-lookup"><span data-stu-id="3cefa-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="3cefa-111">Le <xref:System.ComponentModel.Design.Serialization.ExpressionContext> classe peut être utilisée pour cela.</span><span class="sxs-lookup"><span data-stu-id="3cefa-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="3cefa-112">Comme chaque sérialiseur crée une expression et appelle un sérialiseur pour gérer une plus petite partie de l’instruction dans son ensemble, le sérialiseur exécute un push de contexte d’une expression sur la pile de contexte.</span><span class="sxs-lookup"><span data-stu-id="3cefa-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="3cefa-113">Chaque contexte de l’expression a une propriété parent qui localise le contexte d’expression suivant sur la pile.</span><span class="sxs-lookup"><span data-stu-id="3cefa-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="3cefa-114">Cela fournit une fonction de parcours pratique.</span><span class="sxs-lookup"><span data-stu-id="3cefa-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cefa-115">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />.</span><span class="sxs-lookup"><span data-stu-id="3cefa-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="3cefa-116">Expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-116">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="3cefa-117">Type de l’expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-117">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="3cefa-118">Propriétaire de l’expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-118">The given code expression owner.</span></span></param>
        <summary><span data-ttu-id="3cefa-119">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> avec l’expression et le propriétaire donnés.</span><span class="sxs-lookup"><span data-stu-id="3cefa-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3cefa-120"><paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3cefa-120"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.ExpressionContext : System.CodeDom.CodeExpression * Type * obj * obj -&gt; System.ComponentModel.Design.Serialization.ExpressionContext" Usage="new System.ComponentModel.Design.Serialization.ExpressionContext (expression, expressionType, owner, presetValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="3cefa-121">Expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-121">The given code expression.</span></span></param>
        <param name="expressionType"><span data-ttu-id="3cefa-122">Type de l’expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-122">The given code expression type.</span></span></param>
        <param name="owner"><span data-ttu-id="3cefa-123">Propriétaire de l’expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-123">The given code expression owner.</span></span></param>
        <param name="presetValue"><span data-ttu-id="3cefa-124">Valeur prédéfinie de l’expression de code donnée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-124">The given code expression preset value.</span></span></param>
        <summary><span data-ttu-id="3cefa-125">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> avec une valeur actuelle.</span><span class="sxs-lookup"><span data-stu-id="3cefa-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3cefa-126"><paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3cefa-126"><paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.CodeDom.CodeExpression" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cefa-127">Obtient l'expression que ce contexte représente.</span><span class="sxs-lookup"><span data-stu-id="3cefa-127">Gets the expression this context represents.</span></span></summary>
        <value><span data-ttu-id="3cefa-128">Expression que ce contexte représente.</span><span class="sxs-lookup"><span data-stu-id="3cefa-128">The expression this context represents.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cefa-129">Obtient le <see cref="T:System.Type" /> de l'expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-129">Gets the <see cref="T:System.Type" /> of the expression.</span></span></summary>
        <value><span data-ttu-id="3cefa-130"><see cref="T:System.Type" /> de l'expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-130">The <see cref="T:System.Type" /> of the expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cefa-131">Vous pouvez utiliser <xref:System.ComponentModel.Design.Serialization.ExpressionContext> pour déterminer si un cast est nécessaire lors de l’affectation à l’expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cefa-132">Obtient l'objet propriétaire de cette expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-132">Gets the object owning this expression.</span></span></summary>
        <value><span data-ttu-id="3cefa-133">Objet propriétaire de cette expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-133">The object owning this expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cefa-134">Si l’expression est une référence de propriété à la <xref:System.Windows.Forms.Control.Text%2A> propriété d’une instance de <xref:System.Windows.Forms.Button> appelé `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> retourne `button1`.</span><span class="sxs-lookup"><span data-stu-id="3cefa-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PresetValue : obj" Usage="System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cefa-135">Obtient la valeur prédéfinie d'une expression.</span><span class="sxs-lookup"><span data-stu-id="3cefa-135">Gets the preset value of an expression.</span></span></summary>
        <value><span data-ttu-id="3cefa-136">Valeur prédéfinie de cette expression ou <see langword="null" /> si elle n'est pas assignée.</span><span class="sxs-lookup"><span data-stu-id="3cefa-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cefa-137">Contient la valeur prédéfinie d’une expression, s’il existe.</span><span class="sxs-lookup"><span data-stu-id="3cefa-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="3cefa-138">Par exemple, si l’expression est une expression de référence de propriété faisant référence à la <xref:System.Windows.Forms.Control.Controls%2A> propriété d’un <xref:System.Windows.Forms.Button>, le <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> propriété contient l’instance de la <xref:System.Windows.Forms.Control.Controls%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="3cefa-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="3cefa-139">Il s’agit, car la propriété est en lecture seule et prédéfinie par l’objet doit contenir une valeur.</span><span class="sxs-lookup"><span data-stu-id="3cefa-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="3cefa-140">En revanche, une propriété telle que <xref:System.Windows.Forms.Control.Text%2A> ou <xref:System.Windows.Forms.Control.Visible%2A> n’a pas de valeur prédéfinie et par conséquent le <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> retourne de la propriété `null`.</span><span class="sxs-lookup"><span data-stu-id="3cefa-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="3cefa-141">Le code C# suivant montre comment les sérialiseurs peuvent utiliser ces informations pour guider la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="3cefa-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="3cefa-142">Le sérialiseur de la <xref:System.Windows.Forms.Padding> structure doit être informé s’il doit générer le premier ou le deuxième formulaire.</span><span class="sxs-lookup"><span data-stu-id="3cefa-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="3cefa-143">La première forme est générée par défaut.</span><span class="sxs-lookup"><span data-stu-id="3cefa-143">The first form is generated by default.</span></span> <span data-ttu-id="3cefa-144">La deuxième forme est générée uniquement s’il existe un <xref:System.ComponentModel.Design.Serialization.ExpressionContext> sur la pile de contexte qui contient un <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> égale à la valeur de la <xref:System.Windows.Forms.Padding> actuellement en cours de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="3cefa-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>