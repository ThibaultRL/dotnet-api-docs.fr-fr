<Type Name="CharacterBufferRange" FullName="System.Windows.Media.TextFormatting.CharacterBufferRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e60b515b729a7e27ad8ddd30eacddb3944db94bf" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65009934" /></Metadata><TypeSignature Language="C#" Value="public struct CharacterBufferRange : IEquatable&lt;System.Windows.Media.TextFormatting.CharacterBufferRange&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterBufferRange extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.CharacterBufferRange&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterBufferRange&#xA;Implements IEquatable(Of CharacterBufferRange)" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterBufferRange : IEquatable&lt;System::Windows::Media::TextFormatting::CharacterBufferRange&gt;" />
  <TypeSignature Language="F#" Value="type CharacterBufferRange = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.CharacterBufferRange&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2ecb1-101">Décrit une chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-101">Describes a string of characters.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965"><span data-ttu-id="2ecb1-102">Exemple de mise en forme de texte avancée</span><span class="sxs-lookup"><span data-stu-id="2ecb1-102">Advanced Text Formatting Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ecb1-103">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-103">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterBufferRange (char* unsafeCharacterString, int characterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* unsafeCharacterString, int32 characterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterBufferRange(char* unsafeCharacterString, int characterLength);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextFormatting.CharacterBufferRange : nativeptr&lt;char&gt; * int -&gt; System.Windows.Media.TextFormatting.CharacterBufferRange" Usage="new System.Windows.Media.TextFormatting.CharacterBufferRange (unsafeCharacterString, characterLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unsafeCharacterString" Type="System.Char*" />
        <Parameter Name="characterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unsafeCharacterString"><span data-ttu-id="2ecb1-104">Une référence de pointeur non managé vers une chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-104">An unmanaged pointer reference to a character string.</span></span></param>
        <param name="characterLength"><span data-ttu-id="2ecb1-105">Nombre de caractères de <c>unsafecharacterString</c> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-105">The number of characters in <c>unsafecharacterString</c> to use.</span></span></param>
        <summary><span data-ttu-id="2ecb1-106">Initialise une nouvelle instance de la structure <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à partir d’une chaîne de caractères non managée.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-106">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a unmanaged character string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ecb1-107">L’appelant doit disposer des autorisations de code non managé pour appeler le <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.%23ctor%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2ecb1-107">The caller needs unmanaged code permission in order to invoke the <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.%23ctor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterBufferRange (char[] characterArray, int offsetToFirstChar, int characterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] characterArray, int32 offsetToFirstChar, int32 characterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (characterArray As Char(), offsetToFirstChar As Integer, characterLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterBufferRange(cli::array &lt;char&gt; ^ characterArray, int offsetToFirstChar, int characterLength);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextFormatting.CharacterBufferRange : char[] * int * int -&gt; System.Windows.Media.TextFormatting.CharacterBufferRange" Usage="new System.Windows.Media.TextFormatting.CharacterBufferRange (characterArray, offsetToFirstChar, characterLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="characterArray" Type="System.Char[]" />
        <Parameter Name="offsetToFirstChar" Type="System.Int32" />
        <Parameter Name="characterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterArray"><span data-ttu-id="2ecb1-108">Le tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-108">The character array.</span></span></param>
        <param name="offsetToFirstChar"><span data-ttu-id="2ecb1-109">Offset de mémoire tampon de caractères vers le premier caractère.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-109">The character buffer offset to the first character.</span></span></param>
        <param name="characterLength"><span data-ttu-id="2ecb1-110">Nombre de caractères de <paramref name="characterArray" /> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-110">The number of characters in <paramref name="characterArray" /> to use.</span></span></param>
        <summary><span data-ttu-id="2ecb1-111">Initialise une nouvelle instance de la <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure à partir d’un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-111">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a character array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterBufferRange (string characterString, int offsetToFirstChar, int characterLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string characterString, int32 offsetToFirstChar, int32 characterLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (characterString As String, offsetToFirstChar As Integer, characterLength As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterBufferRange(System::String ^ characterString, int offsetToFirstChar, int characterLength);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.TextFormatting.CharacterBufferRange : string * int * int -&gt; System.Windows.Media.TextFormatting.CharacterBufferRange" Usage="new System.Windows.Media.TextFormatting.CharacterBufferRange (characterString, offsetToFirstChar, characterLength)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="characterString" Type="System.String" />
        <Parameter Name="offsetToFirstChar" Type="System.Int32" />
        <Parameter Name="characterLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterString"><span data-ttu-id="2ecb1-112">La chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-112">The character string.</span></span></param>
        <param name="offsetToFirstChar"><span data-ttu-id="2ecb1-113">Offset de mémoire tampon de caractères vers le premier caractère.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-113">The character buffer offset to the first character.</span></span></param>
        <param name="characterLength"><span data-ttu-id="2ecb1-114">Nombre de caractères de <paramref name="characterString" /> à utiliser.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-114">The number of characters in <paramref name="characterString" /> to use.</span></span></param>
        <summary><span data-ttu-id="2ecb1-115">Initialise une nouvelle instance de la <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure à partir d’une chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-115">Initializes a new instance of the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> structure from a character string.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterBufferReference">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterBufferReference CharacterBufferReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextFormatting.CharacterBufferReference CharacterBufferReference" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterBufferReference As CharacterBufferReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::TextFormatting::CharacterBufferReference CharacterBufferReference { System::Windows::Media::TextFormatting::CharacterBufferReference get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterBufferReference : System.Windows.Media.TextFormatting.CharacterBufferReference" Usage="System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterBufferReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ecb1-116">Obtient une référence à la mémoire tampon de caractères d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-116">Gets a reference to the character buffer of a string.</span></span></summary>
        <value><span data-ttu-id="2ecb1-117">Un <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> valeur représentant la mémoire tampon de caractères d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-117">A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> value representing the character buffer of a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.CharacterBufferRange Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.TextFormatting.CharacterBufferRange Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As CharacterBufferRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::TextFormatting::CharacterBufferRange Empty { System::Windows::Media::TextFormatting::CharacterBufferRange get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Media.TextFormatting.CharacterBufferRange" Usage="System.Windows.Media.TextFormatting.CharacterBufferRange.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterBufferRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ecb1-118">Obtient une chaîne de caractères vide.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-118">Gets an empty character string.</span></span></summary>
        <value><span data-ttu-id="2ecb1-119">Un <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> de l’objet dont la propriété <see cref="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" /> est égal à 0.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-119">A <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object whose <see cref="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" /> is equal to 0.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ecb1-120">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-120">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterBufferRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2ecb1-121">Le <see cref="T:System.Object" /> à comparer avec actuel <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objet.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-121">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span></span></param>
        <summary><span data-ttu-id="2ecb1-122">Détermine si l'objet spécifié est identique à l'objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-122">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span></span></summary>
        <returns><span data-ttu-id="2ecb1-123"><see langword="true" /> si <paramref name="o" /> est égal à l’objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-123"><see langword="true" /> if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2ecb1-124">Si <paramref name="o" /> n’est pas un <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objet, <see langword="false" /> est retournée.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-124">If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object, <see langword="false" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ecb1-125">Deux <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objets sont égaux si les <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> propriétés sont égales.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-125">Two <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objects are equal if the <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.CharacterBufferRange value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.CharacterBufferRange value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Windows.Media.TextFormatting.CharacterBufferRange)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As CharacterBufferRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::TextFormatting::CharacterBufferRange value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.TextFormatting.CharacterBufferRange -&gt; bool" Usage="characterBufferRange.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2ecb1-126">Le <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer avec actuel <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objet.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-126">The <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare with the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span></span></param>
        <summary><span data-ttu-id="2ecb1-127">Détermine si le <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objet est égal à actuel <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objet.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-127">Determines whether the <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object.</span></span></summary>
        <returns><span data-ttu-id="2ecb1-128"><see langword="true" /> si <paramref name="value" /> est égal à l’objet <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-128"><see langword="true" /> if <paramref name="value" /> is equal to the current <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2ecb1-129">Si <paramref name="value" /> n’est pas un <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objet, <see langword="false" /> est retournée.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-129">If <paramref name="value" /> is not a <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> object, <see langword="false" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ecb1-130">Deux <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objets sont égaux si les <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> propriétés sont égales.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-130">Two <xref:System.Windows.Media.TextFormatting.CharacterBufferRange> objects are equal if the <xref:System.Windows.Media.TextFormatting.CharacterBufferRange.CharacterBufferReference%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterBufferRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ecb1-131">Sert de fonction de hachage pour <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-131">Serves as a hash function for <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" />.</span></span> <span data-ttu-id="2ecb1-132">Son utilisation est indiquée dans les algorithmes de hachage et les structures de données telles qu’une table de hachage.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-132">It is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="2ecb1-133">Valeur <see cref="T:System.Int32" /> qui représente le code de hachage de l’objet actif.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-133">An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.CharacterBufferRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Windows.Media.TextFormatting.CharacterBufferRange.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ecb1-134">Obtient le nombre de caractères dans le magasin de caractère de texte source.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-134">Gets the number of characters in the text source character store.</span></span></summary>
        <value><span data-ttu-id="2ecb1-135">Un <see cref="T:System.Int32" /> valeur qui représente le nombre total de caractères.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-135">An <see cref="T:System.Int32" /> value that represents the total number of characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.CharacterBufferRange left, System.Windows.Media.TextFormatting.CharacterBufferRange right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.CharacterBufferRange left, valuetype System.Windows.Media.TextFormatting.CharacterBufferRange right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.op_Equality(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.CharacterBufferRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CharacterBufferRange, right As CharacterBufferRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::TextFormatting::CharacterBufferRange left, System::Windows::Media::TextFormatting::CharacterBufferRange right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.TextFormatting.CharacterBufferRange * System.Windows.Media.TextFormatting.CharacterBufferRange -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="2ecb1-136">Première instance du <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-136">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="2ecb1-137">Deuxième instance de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-137">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span></span></param>
        <summary><span data-ttu-id="2ecb1-138">Comparer deux <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> l’égalité de chaînes.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-138">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> strings for equality.</span></span></summary>
        <returns><span data-ttu-id="2ecb1-139"><see langword="true" /> Pour afficher le texte spécifié <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objets sont égaux ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-139"><see langword="true" /> to show the specified <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.CharacterBufferRange left, System.Windows.Media.TextFormatting.CharacterBufferRange right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.CharacterBufferRange left, valuetype System.Windows.Media.TextFormatting.CharacterBufferRange right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.CharacterBufferRange.op_Inequality(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.CharacterBufferRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CharacterBufferRange, right As CharacterBufferRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::TextFormatting::CharacterBufferRange left, System::Windows::Media::TextFormatting::CharacterBufferRange right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.TextFormatting.CharacterBufferRange * System.Windows.Media.TextFormatting.CharacterBufferRange -&gt; bool" Usage="System.Windows.Media.TextFormatting.CharacterBufferRange.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.CharacterBufferRange" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="2ecb1-140">Première instance du <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-140">The first instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="2ecb1-141">Deuxième instance de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> à comparer.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-141">The second instance of <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> to compare.</span></span></param>
        <summary><span data-ttu-id="2ecb1-142">Comparer deux <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> chaînes pour vérifier leur inégalité.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-142">Compare two <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferRange" /> strings for inequality.</span></span></summary>
        <returns><span data-ttu-id="2ecb1-143"><see langword="false" /> Pour afficher les <paramref name="left" /> est égal à <paramref name="right" />; sinon, <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2ecb1-143"><see langword="false" /> to show <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>