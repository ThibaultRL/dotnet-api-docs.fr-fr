<Type Name="MetaData" FullName="System.Runtime.Remoting.MetadataServices.MetaData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd177fe34cf67d6c2f7c863f55e202a07eddacd8" /><Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/04/2018" /><Meta Name="ms.locfileid" Value="43654432" /></Metadata><TypeSignature Language="C#" Value="public class MetaData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.MetaData" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaData" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaData" />
  <TypeSignature Language="F#" Value="type MetaData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a0b88-101">Fournit des méthodes qui vous permettent d'utiliser un schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-101">Provides methods that allow you to work with XML schema.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b88-102">Le <xref:System.Runtime.Remoting.MetadataServices.MetaData> classe fournit des méthodes qui vous permettent de générer des Web Services Description Language (WSDL) à partir des informations de type, de convertir un schéma XML en un flux de code et de compiler le flux de code dans un assembly.</span><span class="sxs-lookup"><span data-stu-id="a0b88-102">The <xref:System.Runtime.Remoting.MetadataServices.MetaData> class provides methods that allow you to generate Web Services Description Language (WSDL) from type information, convert an XML Schema into a code stream, and compile the code stream into an assembly.</span></span> <span data-ttu-id="a0b88-103">Cette fonctionnalité est également présente dans le [Soapsuds Tool (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="a0b88-103">This functionality is also present in the [Soapsuds Tool (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0b88-104">Crée une instance de <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</span><span class="sxs-lookup"><span data-stu-id="a0b88-104">Creates an instance of <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceFileToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceFileToAssemblyFile (string codePath, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceFileToAssemblyFile(string codePath, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceFileToAssemblyFile (codePath As String, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceFileToAssemblyFile(System::String ^ codePath, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceFileToAssemblyFile : string * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile (codePath, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codePath"><span data-ttu-id="a0b88-105">Chemin d'accès au fichier contenant le code source.</span><span class="sxs-lookup"><span data-stu-id="a0b88-105">The path to the file that contains the source code.</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="a0b88-106">Emplacement où le nouvel assembly du Runtime est généré.</span><span class="sxs-lookup"><span data-stu-id="a0b88-106">The location where the new run-time assembly is generated.</span></span></param>
        <param name="strongNameFilename"><span data-ttu-id="a0b88-107">Nom fort sous lequel compiler le nouvel assembly.</span><span class="sxs-lookup"><span data-stu-id="a0b88-107">The strong name to compile into the new assembly.</span></span> <span data-ttu-id="a0b88-108">Peut être <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a0b88-108">Can be <see cref="F:System.String.Empty" />.</span></span></param>
        <summary><span data-ttu-id="a0b88-109">Compile un fichier source de code spécifié en un fichier d'assembly de Runtime.</span><span class="sxs-lookup"><span data-stu-id="a0b88-109">Compiles a specified code source file into a runtime assembly file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b88-110">Pour plus d’informations sur les noms forts, consultez [assemblys avec nom fort](~/docs/framework/app-domains/strong-named-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="a0b88-110">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-111">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-111">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b88-112">L’exemple de code suivant illustre l’utilisation de la <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> méthode pour écrire la définition de schéma des types spécifiés dans un assembly de runtime portant le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-112">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> method to write the schema definition of the specified types to a runtime assembly with the specified name.</span></span> <span data-ttu-id="a0b88-113">Le `CsSource.cs` fichier converti ici contient le code source C#.</span><span class="sxs-lookup"><span data-stu-id="a0b88-113">The `CsSource.cs` file converted here contains C# source code.</span></span>  
  
 [!code-cpp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceStreamToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceStreamToAssemblyFile (System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceStreamToAssemblyFile(class System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList As ArrayList, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceStreamToAssemblyFile(System::Collections::ArrayList ^ outCodeStreamList, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceStreamToAssemblyFile : System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outCodeStreamList"><span data-ttu-id="a0b88-114"><see cref="T:System.Collections.ArrayList" /> de flux avec le code source.</span><span class="sxs-lookup"><span data-stu-id="a0b88-114">A <see cref="T:System.Collections.ArrayList" /> of streams with the source code.</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="a0b88-115">Emplacement où le nouvel assembly du Runtime est généré.</span><span class="sxs-lookup"><span data-stu-id="a0b88-115">The location where the new run-time assembly is generated.</span></span></param>
        <param name="strongNameFilename"><span data-ttu-id="a0b88-116">Nom fort sous lequel compiler le nouvel assembly.</span><span class="sxs-lookup"><span data-stu-id="a0b88-116">The strong name to compile into the new run-time assembly.</span></span> <span data-ttu-id="a0b88-117">Peut être <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a0b88-117">Can be <see cref="F:System.String.Empty" />.</span></span></param>
        <summary><span data-ttu-id="a0b88-118">Compile les flux source de code spécifiés en un fichier d'assembly du Runtime.</span><span class="sxs-lookup"><span data-stu-id="a0b88-118">Compiles specified code source streams into a run-time assembly file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b88-119">Pour plus d’informations sur les noms forts, consultez [assemblys avec nom fort](~/docs/framework/app-domains/strong-named-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="a0b88-119">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-120">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertSchemaStreamToCodeSourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0b88-121">Convertit une définition de schéma spécifiée en un proxy de code source C#, qui peut ensuite être compilé dans un assembly de proxy du Runtime.</span><span class="sxs-lookup"><span data-stu-id="a0b88-121">Converts a specified schema definition to C# source code proxy, which can then be compiled into a runtime proxy assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="clientProxy"><span data-ttu-id="a0b88-122">Indique le type de proxy à générer.</span><span class="sxs-lookup"><span data-stu-id="a0b88-122">Indicates the type of proxy to generate.</span></span> <span data-ttu-id="a0b88-123">Si <see langword="true" />, génère un proxy simple (également qualifié de proxy encapsulé) qui charge automatiquement les canaux, expose toutes les méthodes de l'objet distant et donne accès aux propriétés de canal.</span><span class="sxs-lookup"><span data-stu-id="a0b88-123">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span></span> <span data-ttu-id="a0b88-124">Si <see langword="false" />, génère un proxy transparent qui expose toutes les méthodes de l'objet distant.</span><span class="sxs-lookup"><span data-stu-id="a0b88-124">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span></span></param>
        <param name="outputDirectory"><span data-ttu-id="a0b88-125">Répertoire où les nouveaux fichiers de code source C# avec le proxy sont créés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-125">The directory where the new C# source code files with the proxy are created.</span></span></param>
        <param name="inputStream"><span data-ttu-id="a0b88-126">Flux d'entrée contenant la définition de schéma au format WSDL (Web Services Description Language).</span><span class="sxs-lookup"><span data-stu-id="a0b88-126">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span></span></param>
        <param name="outCodeStreamList"><span data-ttu-id="a0b88-127">Liste des noms de fichiers des flux de code générés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-127">The list of file names for the code streams that are generated.</span></span> <span data-ttu-id="a0b88-128">Notez que la méthode <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> peut créer plusieurs flux de code source.</span><span class="sxs-lookup"><span data-stu-id="a0b88-128">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span></span></param>
        <summary><span data-ttu-id="a0b88-129">Convertit la définition de schéma spécifiée en un code source de proxy C#.</span><span class="sxs-lookup"><span data-stu-id="a0b88-129">Converts the specified schema definition into C# proxy source code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-130">Si des fichiers portant les noms spécifiés existent déjà, ils sont remplacés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-130">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy"><span data-ttu-id="a0b88-131">Indique le type de proxy à générer.</span><span class="sxs-lookup"><span data-stu-id="a0b88-131">Indicates the type of proxy to generate.</span></span> <span data-ttu-id="a0b88-132">Si <see langword="true" />, génère un proxy simple (également qualifié de proxy encapsulé) qui charge automatiquement les canaux, expose toutes les méthodes de l'objet distant et donne accès aux propriétés de canal.</span><span class="sxs-lookup"><span data-stu-id="a0b88-132">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span></span> <span data-ttu-id="a0b88-133">Si <see langword="false" />, génère un proxy transparent qui expose toutes les méthodes de l'objet distant.</span><span class="sxs-lookup"><span data-stu-id="a0b88-133">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span></span></param>
        <param name="outputDirectory"><span data-ttu-id="a0b88-134">Répertoire où les nouveaux fichiers de code source C# avec le proxy sont créés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-134">The directory where the new C# source code files with the proxy are created.</span></span></param>
        <param name="inputStream"><span data-ttu-id="a0b88-135">Flux d'entrée contenant la définition de schéma au format WSDL (Web Services Description Language).</span><span class="sxs-lookup"><span data-stu-id="a0b88-135">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span></span></param>
        <param name="outCodeStreamList"><span data-ttu-id="a0b88-136">Liste des noms de fichiers des flux de code générés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-136">The list of file names for the code streams that are generated.</span></span> <span data-ttu-id="a0b88-137">Notez que la méthode <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> peut créer plusieurs flux de code source.</span><span class="sxs-lookup"><span data-stu-id="a0b88-137">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span></span></param>
        <param name="proxyUrl"><span data-ttu-id="a0b88-138">URL où se trouvera l'objet distant cible représenté par le nouveau proxy.</span><span class="sxs-lookup"><span data-stu-id="a0b88-138">The URL where the target remote object that is represented by the new proxy will be located.</span></span></param>
        <summary><span data-ttu-id="a0b88-139">Convertit la définition de schéma spécifiée en un code source de proxy C# pour un objet distant situé à l'URL spécifiée.</span><span class="sxs-lookup"><span data-stu-id="a0b88-139">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-140">Si des fichiers portant les noms spécifiés existent déjà, ils sont remplacés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-140">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String, proxyNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl, System::String ^ proxyNamespace);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl, proxyNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
        <Parameter Name="proxyNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy"><span data-ttu-id="a0b88-141">Indique le type de proxy à générer.</span><span class="sxs-lookup"><span data-stu-id="a0b88-141">Indicates the type of proxy to generate.</span></span> <span data-ttu-id="a0b88-142">Si <see langword="true" />, génère un proxy simple (également qualifié de proxy encapsulé) qui charge automatiquement les canaux, expose toutes les méthodes de l'objet distant et donne accès aux propriétés de canal.</span><span class="sxs-lookup"><span data-stu-id="a0b88-142">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span></span> <span data-ttu-id="a0b88-143">Si <see langword="false" />, génère un proxy transparent qui expose toutes les méthodes de l'objet distant.</span><span class="sxs-lookup"><span data-stu-id="a0b88-143">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span></span></param>
        <param name="outputDirectory"><span data-ttu-id="a0b88-144">Répertoire où les nouveaux fichiers de code source C# avec le proxy sont créés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-144">The directory where the new C# source code files with the proxy are created.</span></span></param>
        <param name="inputStream"><span data-ttu-id="a0b88-145">Flux d'entrée contenant la définition de schéma au format du langage WSDL (Web Services Description Language).</span><span class="sxs-lookup"><span data-stu-id="a0b88-145">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</span></span></param>
        <param name="outCodeStreamList"><span data-ttu-id="a0b88-146">Liste des noms de fichiers des flux de code générés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-146">The list of file names for the code streams that are generated.</span></span> <span data-ttu-id="a0b88-147">Notez que la méthode <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> peut créer plusieurs flux de code source.</span><span class="sxs-lookup"><span data-stu-id="a0b88-147">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span></span></param>
        <param name="proxyUrl"><span data-ttu-id="a0b88-148">URL où se trouvera l'objet distant cible représenté par le nouveau proxy.</span><span class="sxs-lookup"><span data-stu-id="a0b88-148">The URL where the target remote object that is represented by the new proxy will be located.</span></span></param>
        <param name="proxyNamespace"><span data-ttu-id="a0b88-149">Espace de noms du proxy venant d'être créé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-149">The namespace of the newly created proxy.</span></span></param>
        <summary><span data-ttu-id="a0b88-150">Convertit la définition de schéma spécifiée en un code source de proxy C# pour un objet distant situé à l'URL spécifiée et dans l'espace de noms de classes fourni.</span><span class="sxs-lookup"><span data-stu-id="a0b88-150">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL and in the provided class namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-151">Si des fichiers portant les noms spécifiés existent déjà, ils sont remplacés.</span><span class="sxs-lookup"><span data-stu-id="a0b88-151">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToFile">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0b88-152">Convertit les types spécifiés en schéma XML et écrit celui-ci dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="a0b88-152">Converts the specified types to XML schema, and writes it to a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (System.Runtime.Remoting.MetadataServices.ServiceType[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Runtime.Remoting.MetadataServices.ServiceType[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="a0b88-153">Instances <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> à convertir en schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-153">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="a0b88-154">Type de langage de description de service à utiliser pour le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-154">The type of service description language to use for the XML schema.</span></span></param>
        <param name="path"><span data-ttu-id="a0b88-155">Chemin d'accès au fichier XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-155">The path of the XML file.</span></span></param>
        <summary><span data-ttu-id="a0b88-156">Convertit les types de service spécifiés en schéma XML et écrit celui-ci dans un fichier spécifié par nom.</span><span class="sxs-lookup"><span data-stu-id="a0b88-156">Converts the specified service types to XML schema, and writes it to a file that is specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b88-157">Un <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance vous permet d’associer une URL avec un objet <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="a0b88-157">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-158">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-158">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="a0b88-159">Types d'objets à convertir en schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-159">The object types to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="a0b88-160">Type de langage de description de service à utiliser pour le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-160">The type of service description language to use for the XML schema.</span></span></param>
        <param name="path"><span data-ttu-id="a0b88-161">Chemin d'accès au fichier XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-161">The path of the XML file.</span></span></param>
        <summary><span data-ttu-id="a0b88-162">Convertit les types d'objets spécifiés en schéma XML et écrit celui-ci dans un fichier spécifié par nom.</span><span class="sxs-lookup"><span data-stu-id="a0b88-162">Converts the specified object types to XML schema, and writes it to a file that is specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-163">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-163">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0b88-164">L’exemple de code suivant illustre l’utilisation de la <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> méthode pour écrire la définition de schéma des types spécifiés dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="a0b88-164">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> method to write the schema definition of the specified types to a file.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0b88-165">Convertit les types spécifiés en schéma XML et écrit celui-ci dans un flux.</span><span class="sxs-lookup"><span data-stu-id="a0b88-165">Converts the specified types to XML schema, and writes it to a stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ serviceTypes, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (serviceTypes, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceTypes" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serviceTypes"><span data-ttu-id="a0b88-166">Instances <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> à convertir en schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-166">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="a0b88-167">Type de langage de description de service à utiliser pour le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-167">The type of service description language to use for the XML schema.</span></span></param>
        <param name="outputStream"><span data-ttu-id="a0b88-168"><see cref="T:System.IO.Stream" /> dans lequel est écrit le schéma.</span><span class="sxs-lookup"><span data-stu-id="a0b88-168">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="a0b88-169">Convertit les types de services spécifiés en schéma XML et écrit celui-ci dans un flux spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-169">Converts the specified service types to XML schema, and writes it to a specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0b88-170">Un <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance vous permet d’associer une URL avec un objet <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="a0b88-170">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (types, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="a0b88-171">Types d'objets à convertir en schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-171">The object types to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="a0b88-172">Type de langage de description de service à utiliser pour le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-172">The type of service description language to use for the XML schema.</span></span></param>
        <param name="outputStream"><span data-ttu-id="a0b88-173"><see cref="T:System.IO.Stream" /> dans lequel est écrit le schéma.</span><span class="sxs-lookup"><span data-stu-id="a0b88-173">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="a0b88-174">Convertit les types d'objets spécifiés en schéma XML et écrit celui-ci dans un flux spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-174">Converts the specified object types to XML schema, and writes it to a specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0b88-175">L’exemple de code suivant illustre l’utilisation de la <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> méthode pour écrire la définition de schéma des types spécifiés dans un flux de données.</span><span class="sxs-lookup"><span data-stu-id="a0b88-175">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> method to write the schema definition of the specified types to a stream.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToFile">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToFile (string url, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToFile(string url, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToFile (url As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToFile(System::String ^ url, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToFile : string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile (url, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="a0b88-176">URL où se trouve le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-176">The URL where the XML schema is located.</span></span></param>
        <param name="path"><span data-ttu-id="a0b88-177">Chemin d'accès au fichier dans lequel le schéma est écrit.</span><span class="sxs-lookup"><span data-stu-id="a0b88-177">The path of the file that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="a0b88-178">Télécharge le schéma XML à partir d'une URL et écrit ce schéma dans un fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-178">Downloads the XML schema from a URL, and writes it to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-179">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-179">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToStream">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToStream (string url, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToStream(string url, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToStream (url As String, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToStream(System::String ^ url, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToStream : string * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream (url, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="a0b88-180">URL où se trouve le schéma XML.</span><span class="sxs-lookup"><span data-stu-id="a0b88-180">The URL where the XML schema is located.</span></span></param>
        <param name="outputStream"><span data-ttu-id="a0b88-181"><see cref="T:System.IO.Stream" /> dans lequel est écrit le schéma.</span><span class="sxs-lookup"><span data-stu-id="a0b88-181">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="a0b88-182">Télécharge le schéma XML à partir d'une URL et écrit ce schéma dans le flux spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-182">Downloads the XML schema from a URL, and writes it to the specified stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStreamToFile">
      <MemberSignature Language="C#" Value="public static void SaveStreamToFile (System.IO.Stream inputStream, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveStreamToFile(class System.IO.Stream inputStream, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveStreamToFile (inputStream As Stream, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveStreamToFile(System::IO::Stream ^ inputStream, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member SaveStreamToFile : System.IO.Stream * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile (inputStream, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="a0b88-183">Flux dans lequel écrire le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-183">The stream to write to the specified file.</span></span></param>
        <param name="path"><span data-ttu-id="a0b88-184">Fichier dans lequel le flux d'entrée est écrit.</span><span class="sxs-lookup"><span data-stu-id="a0b88-184">The file that the input stream is written to.</span></span></param>
        <summary><span data-ttu-id="a0b88-185">Enregistre le flux d'entrée dans un fichier sous le non spécifié.</span><span class="sxs-lookup"><span data-stu-id="a0b88-185">Saves the input stream to a file with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a0b88-186">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="a0b88-186">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>