<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d410e2f8ee67691aaa9eeab2323f4b1690f073f" /><Meta Name="ms.sourcegitcommit" Value="0de246131f8a87c71d008d055adec7bf72470c4f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/29/2019" /><Meta Name="ms.locfileid" Value="66301709" /></Metadata><TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie qu'un type, une propriété, un champ ou une méthode fournit une exportation particulière.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans le modèle de programmation par attributs, le <xref:System.ComponentModel.Composition.ExportAttribute> déclare qu’une partie exporte, ou fournit au conteneur de composition, un objet qui accomplit un contrat particulier. Pendant la composition, les parties avec importations qui ont des contrats correspondants verront ces dépendances remplies par l’objet exporté.  
  
 Le <xref:System.ComponentModel.Composition.ExportAttribute> peut décorer une classe entière, une propriété, champ ou la méthode d’une classe. Si la classe entière est décorée, une instance de la classe est l’objet exporté. Si un membre d’une classe est décoré, l’objet exporté sera la valeur du membre décoré.  
  
 Correspondance ou non d’un contrat est déterminée principalement par le nom de contrat et le type de contrat. Pour plus d'informations, consultez <xref:System.ComponentModel.Composition.ImportAttribute>.  
  
   
  
## Examples  
 L’exemple suivant montre trois classes décorées avec le <xref:System.ComponentModel.Composition.ExportAttribute>et trois importations qui leur correspondent.  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde">Vue d'ensemble du modèle de programmation par attributs</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, en exportant le type ou le membre marqué avec cet attribut sous le nom de contrat par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de contrat par défaut est le résultat de l’appel la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur le type de propriété ou un champ, ou sur le type qui est marqué avec cet attribut.  
  
 Méthodes marquées avec cet attribut doivent spécifier un nom de contrat ou un type à l’aide <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> ou <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">Nom de contrat utilisé pour exporter le type ou membre marqué avec cet attribut, ou <see langword="null" /> ou une chaîne vide ( "") pour utiliser le nom de contrat par défaut.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, en exportant le type ou le membre marqué avec cet attribut sous le nom de contrat spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de contrat par défaut est le résultat de l’appel la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur le type de propriété ou un champ, ou sur le type marqué avec cet attribut.  
  
 Méthodes marquées avec cet attribut doivent spécifier un nom de contrat ou un type à l’aide <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> ou <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">Type duquel dériver le nom de contrat utilisé pour exporter le type ou membre marqué avec cet attribut, ou <see langword="null" /> pour utiliser le nom de contrat par défaut.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, en exportant le type ou membre marqué avec cet attribut sous un nom de contrat dérivé du type spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de contrat est le résultat de l’appel le <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `contractType`.  
  
 Le nom de contrat par défaut est le résultat de l’appel la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur le type de propriété ou un champ, ou sur le type qui est marqué avec cet attribut.  
  
 Méthodes marquées avec cet attribut doivent spécifier un nom de contrat ou un type à l’aide <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> ou <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.  
  
 Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">Nom de contrat utilisé pour exporter le type ou membre marqué avec cet attribut, ou <see langword="null" /> ou une chaîne vide ( "") pour utiliser le nom de contrat par défaut.</param>
        <param name="contractType">Type à exporter.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, en exportant le type spécifié sous le nom de contrat spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

Le nom de contrat par défaut est le résultat de l’appel <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)?displayProperty=nameWithType> sur le type de propriété ou un champ, ou sur le type lui-même que cette fonctionnalité est marquée avec cet attribut. 
                
Le nom de contrat est comparé à l’aide d’une comparaison respectant la casse, non linguistique à l’aide <xref:System.StringComparer.Ordinal?displayProperty=nameWithType>.
                    
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de contrat utilisé pour exporter le type ou membre marqué avec cet attribut.</summary>
        <value>Nom de contrat utilisé pour exporter le type ou membre marqué avec cet attribut. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de contrat exporté par le membre auquel cet attribut est joint.</summary>
        <value>Type d'exportation fourni. La valeur par défaut est <see langword="null" />, ce qui signifie que le type sera obtenu en examinant le type sur le membre auquel cette exportation est jointe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
