<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b451b86a3f1309daea6673349b4569b41ce95c0" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156738" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="edfb0-101">Cette classe a été déconseillée à compter de Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="edfb0-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-102">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edfb0-103">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-104">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-105">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-105">Required.</span></span> <span data-ttu-id="edfb0-106">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-107">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-107">Required.</span></span> <span data-ttu-id="edfb0-108">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-109">Effectue une opération d’addition (+).</span><span class="sxs-lookup"><span data-stu-id="edfb0-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-110">Somme de <paramref name="o1" /> et <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-111">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="edfb0-112">+, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-112">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="edfb0-113">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-113">Required.</span></span> <span data-ttu-id="edfb0-114">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-114">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="edfb0-115">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-115">Required.</span></span> <span data-ttu-id="edfb0-116">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-116">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-117">Effectue une opération de bits <see langword="And" /> opération.</span><span class="sxs-lookup"><span data-stu-id="edfb0-117">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-118">1 si les deux <paramref name="obj1" /> et <paramref name="obj2" /> égaux à 1 ; sinon, 0.</span><span class="sxs-lookup"><span data-stu-id="edfb0-118">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-119">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="edfb0-120">And, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="edfb0-121">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-121">Required.</span></span> <span data-ttu-id="edfb0-122">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="edfb0-123">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-123">Required.</span></span> <span data-ttu-id="edfb0-124">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-124">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-125">Effectue une opération de bits <see langword="Or" /> opération.</span><span class="sxs-lookup"><span data-stu-id="edfb0-125">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-126">0 si <paramref name="obj1" /> et <paramref name="obj2" /> sont tous deux égaux à 0 ; sinon, 1.</span><span class="sxs-lookup"><span data-stu-id="edfb0-126">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-127">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-127">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="edfb0-128">Or, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-128">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="edfb0-129">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-129">Required.</span></span> <span data-ttu-id="edfb0-130">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-130">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="edfb0-131">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-131">Required.</span></span> <span data-ttu-id="edfb0-132">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-132">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-133">Effectue une <see langword="Xor" /> opération.</span><span class="sxs-lookup"><span data-stu-id="edfb0-133">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-134">Une valeur numérique représentant l’exclusion de bits (disjonction de bits exclusive) de deux modèles binaires numériques.</span><span class="sxs-lookup"><span data-stu-id="edfb0-134">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="edfb0-135">Pour plus d’informations, consultez <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor, opérateur</see>.</span><span class="sxs-lookup"><span data-stu-id="edfb0-135">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-136">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="edfb0-137">Xor, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-137">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-138">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-138">Required.</span></span> <span data-ttu-id="edfb0-139">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-139">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-140">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-140">Required.</span></span> <span data-ttu-id="edfb0-141">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-141">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-142">Effectue une opération de division (/).</span><span class="sxs-lookup"><span data-stu-id="edfb0-142">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-143">Quotient entier de <paramref name="o1" /> divisé par <paramref name="o2" />, y compris tout élément restant.</span><span class="sxs-lookup"><span data-stu-id="edfb0-143">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-144">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="edfb0-145">/, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-145">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="edfb0-146">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-146">Required.</span></span> <span data-ttu-id="edfb0-147">Toute expression.</span><span class="sxs-lookup"><span data-stu-id="edfb0-147">Any expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-148">Retourne une valeur primitive boxed.</span><span class="sxs-lookup"><span data-stu-id="edfb0-148">Returns a boxed primitive value.</span></span> <span data-ttu-id="edfb0-149">Cette méthode est utilisée pour empêcher la copie de structures plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="edfb0-149">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="edfb0-150">La valeur de primitive <paramref name="o" /> typée en tant qu’objet.</span><span class="sxs-lookup"><span data-stu-id="edfb0-150">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-151">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-152">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-152">Required.</span></span> <span data-ttu-id="edfb0-153">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-153">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-154">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-154">Required.</span></span> <span data-ttu-id="edfb0-155">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-155">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-156">Effectue une division (\\) entière.</span><span class="sxs-lookup"><span data-stu-id="edfb0-156">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-157">Quotient entier de <paramref name="o1" /> divisé par <paramref name="o2" />, qui abandonne tout élément restant et conserve uniquement la partie entière.</span><span class="sxs-lookup"><span data-stu-id="edfb0-157">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-158">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="edfb0-159">\, opérateur</span><span class="sxs-lookup"><span data-stu-id="edfb0-159">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="edfb0-160">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-160">Required.</span></span> <span data-ttu-id="edfb0-161">Toute expression.</span><span class="sxs-lookup"><span data-stu-id="edfb0-161">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="edfb0-162">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-162">Required.</span></span> <span data-ttu-id="edfb0-163">Toute expression de chaîne conforme aux critères spéciaux décrits dans opérateur Like.</span><span class="sxs-lookup"><span data-stu-id="edfb0-163">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="edfb0-164">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-164">Required.</span></span> <span data-ttu-id="edfb0-165">Un <see cref="T:Microsoft.VisualBasic.CompareMethod" /> valeur qui spécifie que l’opération utilise la comparaison de texte ou binaire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-165">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="edfb0-166">Effectue un <see langword="Like" /> comparaison.</span><span class="sxs-lookup"><span data-stu-id="edfb0-166">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="edfb0-167"><see langword="True" /> Si la représentation sous forme de chaîne de la valeur dans <paramref name="vLeft" /> est conforme au modèle qui est contenu dans <paramref name="vRight" />; sinon, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-167"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="edfb0-168"><see langword="True" /> Si les deux <paramref name="vLeft" /> et <paramref name="vRight" /> sont <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-168"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-169">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="edfb0-170">Like, opérateur</span><span class="sxs-lookup"><span data-stu-id="edfb0-170">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-171">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-171">Required.</span></span> <span data-ttu-id="edfb0-172">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-173">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-173">Required.</span></span> <span data-ttu-id="edfb0-174">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-175">Effectue un modulo (<see langword="Mod" />) opération.</span><span class="sxs-lookup"><span data-stu-id="edfb0-175">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-176">Le reste après <paramref name="o1" /> est divisé par <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-176">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-177">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="edfb0-178">Mod, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-178">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-179">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-179">Required.</span></span> <span data-ttu-id="edfb0-180">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-180">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-181">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-181">Required.</span></span> <span data-ttu-id="edfb0-182">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-182">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-183">Effectue une opération de multiplication (\*).</span><span class="sxs-lookup"><span data-stu-id="edfb0-183">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-184">Le produit de <paramref name="o1" /> et <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-184">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-185">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-185">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="edfb0-186">\*, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-186">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="edfb0-187">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-187">Required.</span></span> <span data-ttu-id="edfb0-188">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-188">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-189">Effectue une opération moins unaire (-).</span><span class="sxs-lookup"><span data-stu-id="edfb0-189">Performs a unary minus (-) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-190">La valeur négative de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-190">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-191">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-191">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="edfb0-192">-, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-192">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="edfb0-193">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-193">Required.</span></span> <span data-ttu-id="edfb0-194">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-194">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-195">Effectue une <see langword="Not" /> opération.</span><span class="sxs-lookup"><span data-stu-id="edfb0-195">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-196">Pour <see langword="Boolean" /> operations, <see langword="False" /> si <paramref name="obj" /> est <see langword="True" />; sinon, <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-196">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="edfb0-197">Pour les opérations au niveau du bit, 1 si <paramref name="obj" /> est 0 ; sinon, 0.</span><span class="sxs-lookup"><span data-stu-id="edfb0-197">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-198">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="edfb0-199">Not, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-199">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-200">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-200">Required.</span></span> <span data-ttu-id="edfb0-201">Toute expression.</span><span class="sxs-lookup"><span data-stu-id="edfb0-201">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-202">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-202">Required.</span></span> <span data-ttu-id="edfb0-203">Toute expression.</span><span class="sxs-lookup"><span data-stu-id="edfb0-203">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="edfb0-204">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-204">Required.</span></span> <span data-ttu-id="edfb0-205"><see langword="True" /> Pour effectuer une comparaison de chaînes respectant la casse ; Sinon, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-205"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="edfb0-206">Effectue une comparaison de chaîne binaire ou texte deux objets.</span><span class="sxs-lookup"><span data-stu-id="edfb0-206">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="edfb0-207">Value</span><span class="sxs-lookup"><span data-stu-id="edfb0-207">Value</span></span> 
 </term>
              <description> <span data-ttu-id="edfb0-208">Condition</span><span class="sxs-lookup"><span data-stu-id="edfb0-208">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="edfb0-209">-1</span><span class="sxs-lookup"><span data-stu-id="edfb0-209">-1</span></span> 
 </term>
              <description><span data-ttu-id="edfb0-210">
                <paramref name="o1" /> est inférieur à <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-210">
                <paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="edfb0-211">0</span><span class="sxs-lookup"><span data-stu-id="edfb0-211">0</span></span> 
 </term>
              <description><span data-ttu-id="edfb0-212">
                <paramref name="o1" /> est égal à <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-212">
                <paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="edfb0-213">1</span><span class="sxs-lookup"><span data-stu-id="edfb0-213">1</span></span> 
 </term>
              <description><span data-ttu-id="edfb0-214">
                <paramref name="o1" /> est supérieur à <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-214">
                <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-215">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="edfb0-216">Opérateurs de comparaison (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="edfb0-217">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-217">Required.</span></span> <span data-ttu-id="edfb0-218">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-218">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-219">Effectue une opération plus unaire (+).</span><span class="sxs-lookup"><span data-stu-id="edfb0-219">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-220">la valeur de la propriété <paramref name="obj" /> ;</span><span class="sxs-lookup"><span data-stu-id="edfb0-220">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="edfb0-221">(Le signe de la <paramref name="obj" /> est inchangé.)</span><span class="sxs-lookup"><span data-stu-id="edfb0-221">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-222">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="edfb0-223">+, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-223">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="edfb0-224">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-224">Required.</span></span> <span data-ttu-id="edfb0-225">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-225">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="edfb0-226">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-226">Required.</span></span> <span data-ttu-id="edfb0-227">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-227">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-228">Effectue une opération d’exposant (^).</span><span class="sxs-lookup"><span data-stu-id="edfb0-228">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-229">Le résultat de <paramref name="obj1" /> élevé à la puissance de <paramref name="obj2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-229">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-230">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="edfb0-231">^, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-231">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-232">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-232">Required.</span></span> <span data-ttu-id="edfb0-233">Expression numérique entière.</span><span class="sxs-lookup"><span data-stu-id="edfb0-233">Integral numeric expression.</span></span> <span data-ttu-id="edfb0-234">Le modèle de bits à décaler.</span><span class="sxs-lookup"><span data-stu-id="edfb0-234">The bit pattern to be shifted.</span></span> <span data-ttu-id="edfb0-235">Le type de données doit être un type intégral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, ou <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="edfb0-235">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="edfb0-236">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-236">Required.</span></span> <span data-ttu-id="edfb0-237">Expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-237">Numeric expression.</span></span> <span data-ttu-id="edfb0-238">Le nombre de bits pour décaler le modèle binaire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-238">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="edfb0-239">Le type de données doit être <see langword="Integer" /> ou s’étendre au <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-239">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="edfb0-240">Effectue un décalage arithmétique vers la gauche (&lt;&lt;).</span><span class="sxs-lookup"><span data-stu-id="edfb0-240">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-241">Valeur numérique entière.</span><span class="sxs-lookup"><span data-stu-id="edfb0-241">An integral numeric value.</span></span> <span data-ttu-id="edfb0-242">Le résultat du décalage du modèle de bit.</span><span class="sxs-lookup"><span data-stu-id="edfb0-242">The result of shifting the bit pattern.</span></span> <span data-ttu-id="edfb0-243">Le type de données est identique à celui de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-243">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-244">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-244">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="edfb0-245">&lt;&lt; Opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-245">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-246">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-246">Required.</span></span> <span data-ttu-id="edfb0-247">Expression numérique entière.</span><span class="sxs-lookup"><span data-stu-id="edfb0-247">Integral numeric expression.</span></span> <span data-ttu-id="edfb0-248">Le modèle de bits à décaler.</span><span class="sxs-lookup"><span data-stu-id="edfb0-248">The bit pattern to be shifted.</span></span> <span data-ttu-id="edfb0-249">Le type de données doit être un type intégral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, ou <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="edfb0-249">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="edfb0-250">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-250">Required.</span></span> <span data-ttu-id="edfb0-251">Expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-251">Numeric expression.</span></span> <span data-ttu-id="edfb0-252">Le nombre de bits pour décaler le modèle binaire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-252">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="edfb0-253">Le type de données doit être <see langword="Integer" /> ou s’étendre au <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-253">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="edfb0-254">Effectue un décalage arithmétique vers la droite (&gt;&gt;).</span><span class="sxs-lookup"><span data-stu-id="edfb0-254">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-255">Valeur numérique entière.</span><span class="sxs-lookup"><span data-stu-id="edfb0-255">An integral numeric value.</span></span> <span data-ttu-id="edfb0-256">Le résultat du décalage du modèle de bit.</span><span class="sxs-lookup"><span data-stu-id="edfb0-256">The result of shifting the bit pattern.</span></span> <span data-ttu-id="edfb0-257">Le type de données est identique à celui de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-257">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-258">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="edfb0-259">&gt;&gt; Opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-259">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="edfb0-260">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-260">Required.</span></span> <span data-ttu-id="edfb0-261">Toute expression.</span><span class="sxs-lookup"><span data-stu-id="edfb0-261">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="edfb0-262">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-262">Required.</span></span> <span data-ttu-id="edfb0-263">Toute expression.</span><span class="sxs-lookup"><span data-stu-id="edfb0-263">Any expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-264">Effectue une concaténation de chaînes (&amp;).</span><span class="sxs-lookup"><span data-stu-id="edfb0-264">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-265">Chaîne représentant la concaténation de <paramref name="vLeft" /> et <paramref name="vRight" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-265">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-266">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-266">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="edfb0-267">&amp; Opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-267">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="edfb0-268">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-268">Required.</span></span> <span data-ttu-id="edfb0-269">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-269">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="edfb0-270">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-270">Required.</span></span> <span data-ttu-id="edfb0-271">Toute expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-271">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-272">Effectue une soustraction (-).</span><span class="sxs-lookup"><span data-stu-id="edfb0-272">Performs a subtraction (-) operation.</span></span></summary>
        <returns><span data-ttu-id="edfb0-273">La différence entre <paramref name="o1" /> et <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="edfb0-273">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-274">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-274">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="edfb0-275">-, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-275">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="edfb0-276">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-276">Required.</span></span> <span data-ttu-id="edfb0-277">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-277">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="edfb0-278">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="edfb0-278">Required.</span></span> <span data-ttu-id="edfb0-279">N’importe quel <see langword="Boolean" /> ou expression numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-279">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="edfb0-280">Effectue une <see langword="Xor" /> comparaison.</span><span class="sxs-lookup"><span data-stu-id="edfb0-280">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="edfb0-281">Un <see langword="Boolean" /> ou une valeur numérique.</span><span class="sxs-lookup"><span data-stu-id="edfb0-281">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="edfb0-282">Pour un <see langword="Boolean" /> comparaison, la valeur de retour est l’exclusion logique (disjonction logique exclusive) de deux <see langword="Boolean" /> valeurs.</span><span class="sxs-lookup"><span data-stu-id="edfb0-282">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="edfb0-283">Pour les opérations au niveau du bit (numériques), la valeur de retour est une valeur numérique représentant l’exclusion de bits (disjonction de bits exclusive) de deux modèles binaires numériques.</span><span class="sxs-lookup"><span data-stu-id="edfb0-283">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="edfb0-284">Pour plus d’informations, consultez <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor, opérateur</see>.</span><span class="sxs-lookup"><span data-stu-id="edfb0-284">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edfb0-285">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="edfb0-285">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="edfb0-286">Xor, opérateur (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="edfb0-286">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>