<Type Name="InputBinding" FullName="System.Windows.Input.InputBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37250b1651d5943ef4919b9ad6f4ea73ea95ee5d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004762" /></Metadata><TypeSignature Language="C#" Value="public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputBinding extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class InputBinding&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputBinding : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type InputBinding = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9d167-101">Représente une liaison entre un <see cref="T:System.Windows.Input.InputGesture" /> et une commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-101">Represents a binding between an <see cref="T:System.Windows.Input.InputGesture" /> and a command.</span></span> <span data-ttu-id="9d167-102">La commande est potentiellement un <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-102">The command is potentially a <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-103">Vous pouvez spécifier que l’entrée d’utilisateur appelle une commande en créant un <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-103">You can specify that user input invokes a command by creating a <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="9d167-104">Lorsque l’utilisateur effectue l’entrée spécifiée, le <xref:System.Windows.Input.ICommand> dont la valeur est le <xref:System.Windows.Input.InputBinding.Command%2A> propriété est exécutée.</span><span class="sxs-lookup"><span data-stu-id="9d167-104">When the user performs the specified input, the <xref:System.Windows.Input.ICommand> that is set to the <xref:System.Windows.Input.InputBinding.Command%2A> property is executed.</span></span>  
  
 <span data-ttu-id="9d167-105">Vous pouvez spécifier que le <xref:System.Windows.Input.InputBinding> appelle une commande qui est définie sur un objet en créant une liaison sur le <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, et <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="9d167-105">You can specify that the <xref:System.Windows.Input.InputBinding> invokes a command that is defined on an object by creating a binding on the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties.</span></span> <span data-ttu-id="9d167-106">Cela vous permet de définir une commande personnalisée et l’associer à l’entrée d’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9d167-106">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="9d167-107">Pour plus d’informations, consultez le deuxième exemple dans la section Exemples.</span><span class="sxs-lookup"><span data-stu-id="9d167-107">For more information, see the second example in the Examples section.</span></span>  
  
 <span data-ttu-id="9d167-108">Un <xref:System.Windows.Input.InputBinding> peut être défini sur un objet spécifique ou au niveau de la classe en enregistrant un <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> avec le <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="9d167-108">An <xref:System.Windows.Input.InputBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> with the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="9d167-109">Le <xref:System.Windows.Input.InputBinding> classe lui-même ne prend pas en charge l’utilisation XAML, car elle n’expose pas un constructeur public par défaut (un constructeur par défaut, mais il est protégé).</span><span class="sxs-lookup"><span data-stu-id="9d167-109">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="9d167-110">Toutefois, les classes dérivées peuvent exposer un constructeur public et peuvent donc définir des propriétés sur la classe dérivée qui sont héritées de <xref:System.Windows.Input.InputBinding> avec une utilisation XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-110">However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="9d167-111">Deux existant <xref:System.Windows.Input.InputBinding>-les classes dérivées qui peuvent être instanciées dans XAML et définir des propriétés en XAML sont <xref:System.Windows.Input.KeyBinding> et <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-111">Two existing <xref:System.Windows.Input.InputBinding>-derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9d167-112">La propriété classique en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] de programmation qui est défini dans XAML et prend un ou plusieurs <xref:System.Windows.Input.InputBinding> objets sous forme de valeurs est le <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="9d167-112">The typical property in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming that is set in XAML and takes one or more <xref:System.Windows.Input.InputBinding> objects as values is the <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="xamlObjectElementUsage_InputBinding"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="9d167-113">Utilisation d'éléments objet XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-113">XAML Object Element Usage</span></span>  
 <span data-ttu-id="9d167-114">\<*inputBindingDerivedClass…/*></span><span class="sxs-lookup"><span data-stu-id="9d167-114">\<*inputBindingDerivedClass…/*></span></span>  
  
<a name="xamlValues_InputBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9d167-115">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-115">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9d167-116">Une classe dérivée de <xref:System.Windows.Input.InputBinding> qui prend en charge la syntaxe d’élément objet, tel que <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-116">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9d167-117">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="9d167-117">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d167-118">L’exemple suivant montre comment utiliser un <xref:System.Windows.Input.KeyBinding> pour lier un <xref:System.Windows.Input.KeyGesture> à la <xref:System.Windows.Input.ApplicationCommands.Open%2A> commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-118">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span> <span data-ttu-id="9d167-119">Lors de la combinaison de touches est effectuée, la commande Ouvrir est appelée.</span><span class="sxs-lookup"><span data-stu-id="9d167-119">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="9d167-120">Les exemples suivants montrent comment lier une commande personnalisée à <xref:System.Windows.Input.InputBinding> objets.</span><span class="sxs-lookup"><span data-stu-id="9d167-120">The following examples show how to bind a custom command to <xref:System.Windows.Input.InputBinding> objects.</span></span> <span data-ttu-id="9d167-121">Ces exemples créent une application qui permet à l’utilisateur modifier la couleur d’arrière-plan en effectuant l’une des actions suivantes :</span><span class="sxs-lookup"><span data-stu-id="9d167-121">These examples create an application that enables the user to change the background color by performing one of the following actions:</span></span>  
  
-   <span data-ttu-id="9d167-122">En cliquant sur un bouton.</span><span class="sxs-lookup"><span data-stu-id="9d167-122">Clicking a button.</span></span>  
  
-   <span data-ttu-id="9d167-123">En appuyant sur CTRL + C.</span><span class="sxs-lookup"><span data-stu-id="9d167-123">Pressing CTRL+C.</span></span>  
  
-   <span data-ttu-id="9d167-124">Clic droit sur un <xref:System.Windows.Controls.StackPanel> (en dehors de la <xref:System.Windows.Controls.ListBox>).</span><span class="sxs-lookup"><span data-stu-id="9d167-124">Right-clicking a <xref:System.Windows.Controls.StackPanel> (outside the <xref:System.Windows.Controls.ListBox>).</span></span>  
  
 <span data-ttu-id="9d167-125">Le premier exemple crée une classe nommée `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="9d167-125">The first example creates a class named `SimpleDelegateCommand`.</span></span> <span data-ttu-id="9d167-126">Cette classe accepte un délégué afin que l’objet de création de la commande peut définir l’action qui se produit lorsque la commande s’exécute.</span><span class="sxs-lookup"><span data-stu-id="9d167-126">This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</span></span> <span data-ttu-id="9d167-127">`SimpleDelegateCommand` définit également des propriétés qui spécifient ce que la clé et de la souris entrée appelle la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-127">`SimpleDelegateCommand` also defines properties that specify what key and mouse input invokes the command.</span></span> <span data-ttu-id="9d167-128">`GestureKey` et `GestureModifier` spécifier l’entrée de clavier ; `MouseGesture` Spécifie l’entrée de la souris.</span><span class="sxs-lookup"><span data-stu-id="9d167-128">`GestureKey` and `GestureModifier` specify the keyboard input; `MouseGesture` specifies the mouse input.</span></span>  
  
 [!code-csharp[InputCommandBinding#DelegateCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#delegatecommand)]
 [!code-vb[InputCommandBinding#DelegateCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#delegatecommand)]  
  
 <span data-ttu-id="9d167-129">L’exemple suivant crée et initialise le `ColorChangeCommand`, qui est un `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="9d167-129">The following example creates and initializes the `ColorChangeCommand`, which is a `SimpleDelegateCommand`.</span></span> <span data-ttu-id="9d167-130">L’exemple définit également la méthode qui s’exécute lorsque la commande est appelée et définit les `GestureKey`, `GestureModifier`, et `MouseGesture` propriétés.</span><span class="sxs-lookup"><span data-stu-id="9d167-130">The example also defines the method that executes when the command is invoked and sets the `GestureKey`, `GestureModifier`, and `MouseGesture` properties.</span></span> <span data-ttu-id="9d167-131">Une application appelle la `InitializeCommand` méthode lorsque le programme commence, comme dans le constructeur d’un <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="9d167-131">An application would call the `InitializeCommand` method when the program begins, such as in the constructor of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[InputCommandBinding#InitializeCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#initializecommand)]
 [!code-vb[InputCommandBinding#InitializeCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#initializecommand)]  
  
 <span data-ttu-id="9d167-132">Enfin, l’exemple suivant crée l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9d167-132">Finally, the following example creates the user interface.</span></span> <span data-ttu-id="9d167-133">L’exemple ajoute un <xref:System.Windows.Input.KeyBinding> et un <xref:System.Windows.Input.MouseBinding> à un <xref:System.Windows.Controls.StackPanel> qui contient un <xref:System.Windows.Controls.Button> et un <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="9d167-133">The example adds a <xref:System.Windows.Input.KeyBinding> and a <xref:System.Windows.Input.MouseBinding> to a <xref:System.Windows.Controls.StackPanel> that contains a <xref:System.Windows.Controls.Button> and a <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="9d167-134">Lorsque l’utilisateur sélectionne un élément dans le <xref:System.Windows.Controls.ListBox>, il ou elle peut modifier la couleur d’arrière-plan pour la couleur sélectionnée.</span><span class="sxs-lookup"><span data-stu-id="9d167-134">When the user selects an item in the <xref:System.Windows.Controls.ListBox>, he or she can change the color of the background to the selected color.</span></span> <span data-ttu-id="9d167-135">Dans chaque cas, le `CommandParameter` propriété est liée à l’élément sélectionné dans le <xref:System.Windows.Controls.ListBox>et le `Command` propriété est liée à la `ColorChangeCommand`.</span><span class="sxs-lookup"><span data-stu-id="9d167-135">In each case, the `CommandParameter` property is bound to the selected item in the <xref:System.Windows.Controls.ListBox>, and the `Command` property is bound to the `ColorChangeCommand`.</span></span> <span data-ttu-id="9d167-136">Le <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, et <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> propriétés sont liées aux propriétés correspondantes la `SimpleDelegateCommand` classe.</span><span class="sxs-lookup"><span data-stu-id="9d167-136">The <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, and <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> properties are bound to the corresponding properties on the `SimpleDelegateCommand` class.</span></span>  
  
 [!code-xaml[InputCommandBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.InputBindings" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d167-137">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-137">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d167-138">Fournit l’initialisation de base pour les classes dérivées de <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-138">Provides base initialization for classes derived from <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-139"><xref:System.Windows.Input.InputBinding> n’est pas techniquement une classe abstraite, mais le constructeur par défaut est délibérément un accès protégé.</span><span class="sxs-lookup"><span data-stu-id="9d167-139"><xref:System.Windows.Input.InputBinding> is not technically an abstract class, but the default constructor is deliberately protected access.</span></span> <span data-ttu-id="9d167-140">Cela a pour effet de rendre <xref:System.Windows.Input.InputBinding> une classe « abstract » pour XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-140">This has the effect of making <xref:System.Windows.Input.InputBinding> an "abstract" class for XAML.</span></span> <span data-ttu-id="9d167-141">Il existe des propriétés dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] qui ont des utilisations de XAML qui attendent des objets de type <xref:System.Windows.Input.InputBinding>, mais vous ne pouvez pas spécifier un <xref:System.Windows.Input.InputBinding> instance dans XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-141">There are existing properties in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that have XAML usages that expect objects of type <xref:System.Windows.Input.InputBinding>, but you cannot specify an <xref:System.Windows.Input.InputBinding> instance in XAML.</span></span> <span data-ttu-id="9d167-142">Au lieu de cela, vous pouvez spécifier un des spécifiques au périphérique <xref:System.Windows.Input.InputBinding> les classes dérivées en tant que valeurs, par exemple <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-142">Instead, you can specify one of the device-specific <xref:System.Windows.Input.InputBinding> derived classes as values, for instance <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9d167-143">Si vous implémentez un personnalisé <see cref="T:System.Windows.Input.InputBinding" /> qui prend en charge une utilisation XAML, utilisez ce constructeur pour l’initialisation de base.</span><span class="sxs-lookup"><span data-stu-id="9d167-143">If you implement a custom <see cref="T:System.Windows.Input.InputBinding" /> that supports a XAML usage, use this constructor for base initialization.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.InputGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As InputGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::InputGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputBinding : System.Windows.Input.ICommand * System.Windows.Input.InputGesture -&gt; System.Windows.Input.InputBinding" Usage="new System.Windows.Input.InputBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.InputGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="9d167-144">La commande à associer à <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-144">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="9d167-145">Le mouvement d’entrée à associer à <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-145">The input gesture to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="9d167-146">Initialise une nouvelle instance de la <see cref="T:System.Windows.Input.InputBinding" /> classe avec la commande spécifiée et le mouvement d’entrée.</span><span class="sxs-lookup"><span data-stu-id="9d167-146">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class with the specified command and input gesture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-147">Si vous êtes un développeur de logiciels à l’aide des classes de liaison d’entrée existantes, vous généralement pas utilisera ce constructeur, même si vous définissez des commandes personnalisées.</span><span class="sxs-lookup"><span data-stu-id="9d167-147">If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</span></span> <span data-ttu-id="9d167-148">Au lieu de cela, vous utilisez des constructeurs de classes dérivées (<xref:System.Windows.Input.KeyBinding> et <xref:System.Windows.Input.MouseBinding>), ou vous utilisez ce constructeur comme instanciation de base d’une classe personnalisée.</span><span class="sxs-lookup"><span data-stu-id="9d167-148">Instead, you will either use constructors of derived classes (<xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>), or you will use this constructor as the base instantiation of a custom class.</span></span> <span data-ttu-id="9d167-149">Bien que le <xref:System.Windows.Input.InputBinding> classe prend en charge les périphériques d’entrée différents en principe, dans la pratique, vous devez choisir un périphérique qui représente la liaison d’entrée.</span><span class="sxs-lookup"><span data-stu-id="9d167-149">Although the <xref:System.Windows.Input.InputBinding> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</span></span> <span data-ttu-id="9d167-150">Vous ne pouvez définir qu’un seul <xref:System.Windows.Input.InputBinding.Gesture%2A> valeur sur la liaison d’entrée et les mouvements sont spécifiques au périphérique.</span><span class="sxs-lookup"><span data-stu-id="9d167-150">You only can set only one <xref:System.Windows.Input.InputBinding.Gesture%2A> value on the input binding, and gestures are device-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d167-151">L’exemple suivant montre comment utiliser ce constructeur pour associer un <xref:System.Windows.Input.KeyGesture> avec un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9d167-151">The following example shows how to use this constructor to associate a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#InputBindingAddingCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#inputbindingaddingcommand)]
 [!code-vb[commandlibrarysnippets#InputBindingAddingCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#inputbindingaddingcommand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d167-152"><paramref name="command" /> ou <paramref name="gesture" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-152"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9d167-153">Objet à cloner.</span><span class="sxs-lookup"><span data-stu-id="9d167-153">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9d167-154">Copie les valeurs de base (non animées) des propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="9d167-154">Copies the base (non-animated) values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9d167-155">Objet à cloner.</span><span class="sxs-lookup"><span data-stu-id="9d167-155">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9d167-156">Copie les valeurs actuelles des propriétés de l’objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="9d167-156">Copies the current values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.InputBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-157">Obtient ou définit le <see cref="T:System.Windows.Input.ICommand" /> associé à cette liaison d’entrée.</span><span class="sxs-lookup"><span data-stu-id="9d167-157">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="9d167-158">Commande associée.</span><span class="sxs-lookup"><span data-stu-id="9d167-158">The associated command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-159">Le <xref:System.Windows.Input.InputBinding> classe ne prend pas en charge l’utilisation XAML, car elle n’expose pas un constructeur public par défaut (un constructeur par défaut, mais il est protégé).</span><span class="sxs-lookup"><span data-stu-id="9d167-159">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="9d167-160">Toutefois, les classes dérivées peuvent exposer un constructeur public et peuvent donc utiliser des propriétés qui sont héritées de <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-160">However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="9d167-161">Deux existant <xref:System.Windows.Input.InputBinding> sont des classes dérivées qui peuvent être instanciées dans XAML et peuvent définir des propriétés avec les utilisations XAML <xref:System.Windows.Input.KeyBinding> et <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-161">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties with XAML usages are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 <span data-ttu-id="9d167-162"><xref:System.Windows.Input.ICommand> fait référence à un convertisseur de type qui permet à certaines préexistant <xref:System.Windows.Input.ICommand> implémentations pour spécifier des valeurs sous la forme d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="9d167-162"><xref:System.Windows.Input.ICommand> references a type converter that enables certain preexisting <xref:System.Windows.Input.ICommand> implementations to specify values in the form of a string.</span></span> <span data-ttu-id="9d167-163">Ce comportement de conversion de type définit la forme de valeur d’attribut de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="9d167-163">This type conversion behavior sets the attribute value form of this property.</span></span> <span data-ttu-id="9d167-164">Vous pouvez également lier le <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, et <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriétés à un <xref:System.Windows.Input.ICommand> qui est défini sur un objet.</span><span class="sxs-lookup"><span data-stu-id="9d167-164">You can also bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="9d167-165">Cela vous permet de définir une commande personnalisée et l’associer à l’entrée d’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9d167-165">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="9d167-166">Pour plus d’informations, consultez le deuxième exemple dans <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-166">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9d167-167">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-167">XAML Attribute Usage</span></span>  
 <span data-ttu-id="9d167-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span><span class="sxs-lookup"><span data-stu-id="9d167-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span></span>  
  
<a name="xamlPropertyElementUsage_Command"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9d167-169">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-169">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Command>  
    <iCommandImplementation/>  
  </inputBindingDerivedClass.Command>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9d167-170">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-170">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9d167-171">Une classe dérivée de <xref:System.Windows.Input.InputBinding> qui prend en charge la syntaxe d’élément objet, tel que <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-171">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9d167-172">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="9d167-172">See Remarks.</span></span>  
  
 `iCommandImplementation`  
 <span data-ttu-id="9d167-173">Implémentation d’objet de <xref:System.Windows.Input.ICommand> qui prend en charge la syntaxe d’élément objet (a un constructeur public par défaut).</span><span class="sxs-lookup"><span data-stu-id="9d167-173">An object implementation of <xref:System.Windows.Input.ICommand> that supports object element syntax (has a public default constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d167-174">L’exemple suivant montre comment utiliser un <xref:System.Windows.Input.KeyBinding> pour lier un <xref:System.Windows.Input.KeyGesture> à la <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-174">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> command.</span></span> <span data-ttu-id="9d167-175">Lors de la combinaison de touches est effectuée, la commande Ouvrir est appelée.</span><span class="sxs-lookup"><span data-stu-id="9d167-175">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewkeybinding)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewkeybinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d167-176"><see cref="P:System.Windows.Input.InputBinding.Command" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-176">The <see cref="P:System.Windows.Input.InputBinding.Command" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Input.InputBinding.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-177">Obtient ou définit les données spécifiques à la commande pour une commande particulière.</span><span class="sxs-lookup"><span data-stu-id="9d167-177">Gets or sets the command-specific data for a particular command.</span></span></summary>
        <value><span data-ttu-id="9d167-178">Les données spécifiques à la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-178">The command-specific data.</span></span> <span data-ttu-id="9d167-179">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-179">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-180">Le <xref:System.Windows.Input.InputBinding.CommandParameter%2A> propriété est utilisée pour passer des informations spécifiques à la commande lorsqu’elle est exécutée.</span><span class="sxs-lookup"><span data-stu-id="9d167-180">The <xref:System.Windows.Input.InputBinding.CommandParameter%2A> property is used to pass specific information to the command when it is executed.</span></span> <span data-ttu-id="9d167-181">Le type de données est défini par la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-181">The type of the data is defined by the command.</span></span> <span data-ttu-id="9d167-182">Nombre de commandes n’attendre pas de paramètres de commande ; pour ces commandes, les paramètres de commande passés seront ignorés.</span><span class="sxs-lookup"><span data-stu-id="9d167-182">Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</span></span>  
  
 <span data-ttu-id="9d167-183">Si la commande qui est associée à une liaison d’entrée est un <xref:System.Windows.Input.RoutedCommand>, le <xref:System.Windows.Input.InputBinding.CommandParameter%2A> de la liaison d’entrée est passé à la <xref:System.Windows.Input.RoutedCommand> gestionnaires via le <xref:System.Windows.Input.ExecutedRoutedEventArgs> et le <xref:System.Windows.Input.CanExecuteRoutedEventArgs> les données d’événement lors du traitement de la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-183">If the command that an input binding is associated with is a <xref:System.Windows.Input.RoutedCommand>, the <xref:System.Windows.Input.InputBinding.CommandParameter%2A> of the input binding is passed to the <xref:System.Windows.Input.RoutedCommand> handlers through the <xref:System.Windows.Input.ExecutedRoutedEventArgs> and the <xref:System.Windows.Input.CanExecuteRoutedEventArgs> event data when the command is processed.</span></span>  
  
 <span data-ttu-id="9d167-184">Le type de données et l’objectif du paramètre de commande sont définis différemment pour chaque commande et peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="9d167-184">The data type and purpose of the command parameter are defined differently for each command and can be `null`.</span></span> <span data-ttu-id="9d167-185">Vous pouvez lier le <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, et <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriétés à un <xref:System.Windows.Input.ICommand> qui est défini sur un objet.</span><span class="sxs-lookup"><span data-stu-id="9d167-185">You can bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="9d167-186">Cela vous permet de définir une commande personnalisée et l’associer à l’entrée d’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9d167-186">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="9d167-187">Pour plus d’informations, consultez le deuxième exemple dans <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-187">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
 <span data-ttu-id="9d167-188">Le <xref:System.Windows.Input.InputBinding> classe ne prend pas en charge l’utilisation XAML, car elle n’expose pas un constructeur public par défaut (un constructeur par défaut, mais il est protégé).</span><span class="sxs-lookup"><span data-stu-id="9d167-188">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="9d167-189">Toutefois, les classes dérivées peuvent exposer un constructeur public et par conséquent, peut définir des propriétés qui sont héritées de <xref:System.Windows.Input.InputBinding> avec l’utilisation XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-189">However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with XAML usage.</span></span> <span data-ttu-id="9d167-190">Deux existant <xref:System.Windows.Input.InputBinding> sont des classes dérivées qui peuvent être instanciées dans XAML et définir des propriétés en XAML <xref:System.Windows.Input.KeyBinding> et <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-190">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9d167-191">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-191">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandParameter="commandParameterString"/>  
```  
  
<a name="xamlPropertyElementUsage_CommandParameter"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9d167-192">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-192">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.CommandParameter>  
    <commandParameterObject/>  
  </inputBindingDerivedClass.CommandParameter>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9d167-193">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-193">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9d167-194">Une classe dérivée de <xref:System.Windows.Input.InputBinding> qui prend en charge la syntaxe d’élément objet, tel que <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-194">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9d167-195">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="9d167-195">See Remarks.</span></span>  
  
 `commandParameterString`  
 <span data-ttu-id="9d167-196">Chaîne qui est traitée par une commande particulière.</span><span class="sxs-lookup"><span data-stu-id="9d167-196">A string that is processed by a particular command.</span></span> <span data-ttu-id="9d167-197">Les chaînes sont le type commun utilisé pour les paramètres de commande, car elles peuvent être facilement définies dans XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-197">Strings are the common type used for command parameters because they can be easily set in XAML.</span></span> <span data-ttu-id="9d167-198">Pour le format de chaîne attendu et son objectif, consultez la documentation pour la commande spécifique qui est associée à la liaison d’entrée.</span><span class="sxs-lookup"><span data-stu-id="9d167-198">For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</span></span> <span data-ttu-id="9d167-199">De nombreuses commandes n’attendent pas de paramètres.</span><span class="sxs-lookup"><span data-stu-id="9d167-199">Many commands do not expect parameters.</span></span>  
  
 `commandParameterObject`  
 <span data-ttu-id="9d167-200">Objet qui est traité par une commande particulière.</span><span class="sxs-lookup"><span data-stu-id="9d167-200">An object that is processed by a particular command.</span></span> <span data-ttu-id="9d167-201">Toutes les [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commandes utilisent des chaînes.</span><span class="sxs-lookup"><span data-stu-id="9d167-201">All existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commands use strings.</span></span> <span data-ttu-id="9d167-202">Par conséquent, cette syntaxe d’élément de propriété est uniquement pertinente pour les scénarios de commande personnalisée.</span><span class="sxs-lookup"><span data-stu-id="9d167-202">Therefore, this property element syntax is only relevant for custom command scenarios.</span></span> <span data-ttu-id="9d167-203">Pour prendre en charge cette syntaxe, la `commandParameterObject` objet doit prendre également en charge la syntaxe d’élément objet (doit disposer d’un constructeur public par défaut).</span><span class="sxs-lookup"><span data-stu-id="9d167-203">In order to support this syntax, the `commandParameterObject` object must also support object element syntax (must have a public default constructor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-204">Identifie la propriété de dépendance <see cref="P:System.Windows.Input.InputBinding.CommandParameter" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-204">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-205">Identifie la propriété de dépendance <see cref="P:System.Windows.Input.InputBinding.Command" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-205">Identifies the <see cref="P:System.Windows.Input.InputBinding.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.InputBinding.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-206">Obtient ou définit l’élément cible de la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-206">Gets or sets the target element of the command.</span></span></summary>
        <value><span data-ttu-id="9d167-207">La cible de la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-207">The target of the command.</span></span> <span data-ttu-id="9d167-208">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-208">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-209">Dans Windows Presentation Foundation commandes système, le <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriété sur une <xref:System.Windows.Input.ICommandSource> objet est applicable uniquement lorsque le <xref:System.Windows.Input.ICommand> est un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9d167-209">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on an <xref:System.Windows.Input.ICommandSource> object is applicable only when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="9d167-210">Si <xref:System.Windows.Input.InputBinding.CommandTarget%2A> est défini sur <xref:System.Windows.Input.ICommandSource> et si la commande correspondante n’est pas <xref:System.Windows.Input.RoutedCommand>, la cible de commande est ignorée.</span><span class="sxs-lookup"><span data-stu-id="9d167-210">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on an <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="9d167-211">Lorsqu’il est utilisé avec un <xref:System.Windows.Input.RoutedCommand>, la cible de commande est l’objet sur lequel le <xref:System.Windows.Input.CommandManager.Executed> et <xref:System.Windows.Input.CommandManager.CanExecute> sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="9d167-211">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="9d167-212">Si le <xref:System.Windows.Input.InputBinding.CommandTarget%2A> propriété n’est pas définie, l’élément ayant le focus clavier est utilisé comme cible.</span><span class="sxs-lookup"><span data-stu-id="9d167-212">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property is not set, the element with keyboard focus is used as the target.</span></span>  
  
 <span data-ttu-id="9d167-213">Le <xref:System.Windows.Input.InputBinding> classe lui-même ne prend pas en charge l’utilisation XAML, car elle n’expose pas un constructeur public par défaut (un constructeur par défaut, mais il est protégé).</span><span class="sxs-lookup"><span data-stu-id="9d167-213">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="9d167-214">Toutefois, les classes dérivées peuvent exposer un constructeur public et affecter ainsi les propriétés héritées de <xref:System.Windows.Input.InputBinding> avec une utilisation XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-214">However, derived classes can expose a public constructor and therefore can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="9d167-215">Deux existant <xref:System.Windows.Input.InputBinding> sont des classes dérivées qui peuvent être instanciées dans XAML et définir des propriétés en XAML <xref:System.Windows.Input.KeyBinding> et <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-215">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandTarget"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9d167-216">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-216">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandTarget="bindingToTarget"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9d167-217">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-217">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9d167-218">Une classe dérivée de <xref:System.Windows.Input.InputBinding> qui prend en charge la syntaxe d’élément objet, tel que <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-218">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9d167-219">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="9d167-219">See Remarks.</span></span>  
  
 `bindingToTarget`  
 <span data-ttu-id="9d167-220">Élément nommé de chaîne qui utilise un type de syntaxe de liaison qui peut retourner une référence d’objet à un existant.</span><span class="sxs-lookup"><span data-stu-id="9d167-220">A string that uses a type of binding syntax that can return an object reference to an existing named element.</span></span> <span data-ttu-id="9d167-221">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="9d167-221">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-222">Identifie la propriété de dépendance <see cref="P:System.Windows.Input.InputBinding.CommandTarget" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-222">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="inputBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d167-223">Crée une instance d’un <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-223">Creates an instance of an <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <returns><span data-ttu-id="9d167-224">Nouvel objet.</span><span class="sxs-lookup"><span data-stu-id="9d167-224">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.InputBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d167-225">Obtient ou définit le <see cref="T:System.Windows.Input.InputGesture" /> associé à cette liaison d’entrée.</span><span class="sxs-lookup"><span data-stu-id="9d167-225">Gets or sets the <see cref="T:System.Windows.Input.InputGesture" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="9d167-226">Combinaison associée.</span><span class="sxs-lookup"><span data-stu-id="9d167-226">The associated gesture.</span></span> <span data-ttu-id="9d167-227">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9d167-227">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d167-228">Le mouvement d’entrée est l’action qui appelle la commande.</span><span class="sxs-lookup"><span data-stu-id="9d167-228">The input gesture is the action that invokes the command.</span></span> <span data-ttu-id="9d167-229">Exemples de mouvements d’entrée dans [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sont <xref:System.Windows.Input.KeyGesture> et <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="9d167-229">Examples of input gestures in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are <xref:System.Windows.Input.KeyGesture> and <xref:System.Windows.Input.MouseGesture>.</span></span> <span data-ttu-id="9d167-230">Un <xref:System.Windows.Input.KeyGesture> est une combinaison d’un <xref:System.Windows.Input.Key> et un ensemble de <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="9d167-230">A <xref:System.Windows.Input.KeyGesture> is a combination of a <xref:System.Windows.Input.Key> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="9d167-231">Un <xref:System.Windows.Input.MouseGesture> est une combinaison d’un <xref:System.Windows.Input.MouseAction> et un ensemble de <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="9d167-231">A <xref:System.Windows.Input.MouseGesture> is a combination of a <xref:System.Windows.Input.MouseAction> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="9d167-232">Le <xref:System.Windows.Input.InputBinding> classe lui-même ne prend pas en charge l’utilisation XAML, car elle n’expose pas un constructeur public par défaut (un constructeur par défaut, mais il est protégé).</span><span class="sxs-lookup"><span data-stu-id="9d167-232">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="9d167-233">Toutefois, les classes dérivées peuvent exposer un constructeur public et affecter ainsi les propriétés héritées de <xref:System.Windows.Input.InputBinding> avec une utilisation XAML.</span><span class="sxs-lookup"><span data-stu-id="9d167-233">However, derived classes can expose a public constructor and thus can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="9d167-234">Deux existant <xref:System.Windows.Input.InputBinding> sont des classes dérivées qui peuvent être instanciées dans XAML et définir des propriétés en XAML <xref:System.Windows.Input.KeyBinding> et <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-234">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_gesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9d167-235">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-235">XAML Attribute Usage</span></span>  
 <span data-ttu-id="9d167-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span><span class="sxs-lookup"><span data-stu-id="9d167-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span></span>  
  
<span data-ttu-id="9d167-237">ou</span><span class="sxs-lookup"><span data-stu-id="9d167-237">-or-</span></span>
  
 <span data-ttu-id="9d167-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span><span class="sxs-lookup"><span data-stu-id="9d167-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span></span>  
  
<span data-ttu-id="9d167-239">ou</span><span class="sxs-lookup"><span data-stu-id="9d167-239">-or-</span></span>
  
 <span data-ttu-id="9d167-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span><span class="sxs-lookup"><span data-stu-id="9d167-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span></span>  
  
<a name="xamlPropertyElementUsage_gesture"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="9d167-241">Utilisation des éléments de propriété XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-241">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Gesture>  
    <inputGestureImplementation/>  
  </inputBindingDerivedClass.Gesture>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_gesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="9d167-242">Valeurs XAML</span><span class="sxs-lookup"><span data-stu-id="9d167-242">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="9d167-243">Une classe dérivée de <xref:System.Windows.Input.InputBinding> qui prend en charge la syntaxe d’élément objet, tel que <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="9d167-243">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="9d167-244">Consultez la section Notes.</span><span class="sxs-lookup"><span data-stu-id="9d167-244">See Remarks.</span></span>  
  
 `inputGestureImplementation`  
 <span data-ttu-id="9d167-245">Classe de dérivée personnalisée <xref:System.Windows.Input.InputGesture> qui prend en charge la syntaxe d’élément objet.</span><span class="sxs-lookup"><span data-stu-id="9d167-245">A custom derived class of <xref:System.Windows.Input.InputGesture> that supports object element syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d167-246">L’exemple suivant montre comment utiliser un <xref:System.Windows.Input.KeyBinding> pour lier un <xref:System.Windows.Input.KeyGesture> à un <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="9d167-246">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="9d167-247">Lorsque le <xref:System.Windows.Input.KeyGesture> appuyé sur ALT + L, le <xref:System.Windows.Input.ApplicationCommands.Close%2A> commande est appelée.</span><span class="sxs-lookup"><span data-stu-id="9d167-247">When the <xref:System.Windows.Input.KeyGesture> ALT+L is pressed, the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#KeyBindingWithKeyAndModifiersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#keybindingwithkeyandmodifiersxaml)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9d167-248">Objet à cloner.</span><span class="sxs-lookup"><span data-stu-id="9d167-248">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9d167-249">Convertit l’instance en clone figé du spécifié <see cref="T:System.Windows.Freezable" /> à l’aide des valeurs de propriété (non-animées) de base.</span><span class="sxs-lookup"><span data-stu-id="9d167-249">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> by using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="9d167-250">Objet à cloner.</span><span class="sxs-lookup"><span data-stu-id="9d167-250">The object to clone.</span></span></param>
        <summary><span data-ttu-id="9d167-251">Convertit l’instance actuelle en un clone figé du <see cref="T:System.Windows.Freezable" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="9d167-251">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="9d167-252">Si l’objet a des propriétés de dépendance animées, leurs valeurs animées actuelles sont copiées.</span><span class="sxs-lookup"><span data-stu-id="9d167-252">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>