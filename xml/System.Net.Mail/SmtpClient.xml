<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7806c7e0f0aedef5b28959d0b74918fa5f431f32" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65013884" /></Metadata><TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permet aux applications d’envoyer des e-mails à l’aide du protocole SMTP (Simple Mail Transfer Protocol).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `System.Net.Mail.SmtpClient` classe est utilisée pour envoyer un e-mail à un serveur SMTP pour remise. Le protocole SMTP est défini dans RFC 2821, qui est disponible à l’adresse [ https://www.ietf.org ](https://www.ietf.org/).  

> [!IMPORTANT]
>  Nous ne vous recommandons d’utiliser la `SmtpClient` classe pour tout nouveau développement. Pour plus d’informations, consultez [SmtpClient ne doit pas être utilisé](https://github.com/dotnet/platform-compat/blob/master/docs/DE0005.md) sur GitHub.

 Les classes répertoriées dans le tableau suivant sont utilisés pour construire des messages électroniques qui peuvent être envoyés à l’aide de <xref:System.Net.Mail.SmtpClient>.  
  
|Classe|Description|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Représente les pièces jointes. Cette classe permet de joindre des fichiers, flux ou du texte à un message électronique.|  
|<xref:System.Net.Mail.MailAddress>|Représente l’adresse de messagerie de l’expéditeur et les destinataires.|  
|<xref:System.Net.Mail.MailMessage>|Représente un message électronique.|  
  
 Pour construire et d’envoyer un message électronique à l’aide de <xref:System.Net.Mail.SmtpClient>, vous devez spécifier les informations suivantes :  
  
-   Le serveur hôte SMTP que vous utilisez pour envoyer un courrier électronique. Consultez le <xref:System.Net.Mail.SmtpClient.Host%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> propriétés.  
  
-   Informations d’identification pour l’authentification, si nécessaire par le serveur SMTP. Voir la propriété <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
-   L’adresse de messagerie de l’expéditeur. Consultez le <xref:System.Net.Mail.SmtpClient.Send%2A> et <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes qui prennent un `from` paramètre. Consultez également le <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> propriété.  
  
-   L’adresse de messagerie ou les adresses des destinataires. Consultez le <xref:System.Net.Mail.SmtpClient.Send%2A> et <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes qui prennent un `recipient` paramètre. Consultez également le <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> propriété.  
  
-   Le contenu du message. Consultez le <xref:System.Net.Mail.SmtpClient.Send%2A> et <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes qui prennent un `body` paramètre. Consultez également le <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> propriété.  
  
 Pour inclure une pièce jointe avec un message électronique, d’abord créer la pièce jointe à l’aide de la <xref:System.Net.Mail.Attachment> classe, puis l’ajouter au message à l’aide de la <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> propriété. Selon le lecteur de messagerie utilisé par les destinataires et le type de fichier de la pièce jointe, certains destinataires ne peuvent pas être en mesure de lire la pièce jointe. Pour les clients qui ne peut pas afficher la pièce jointe dans sa forme d’origine, vous pouvez spécifier d’autres affichages à l’aide de la <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> propriété.  
  
 Dans .NET Framework, vous pouvez utiliser l’application ou les fichiers de configuration machine pour spécifier par défaut hôte, port et valeurs des informations d’identification pour toutes les <xref:System.Net.Mail.SmtpClient> objets. Pour plus d’informations, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .NET core ne prend pas en charge les valeurs par défaut du paramètre. Pour résoudre ce problème, vous devez définir les propriétés pertinentes sur <xref:System.Net.Mail.SmtpClient> directement.  
  
 Pour envoyer le message électronique et les bloquer en attendant que l’e-mail doit être transmis au serveur SMTP, utilisez une des synchrones <xref:System.Net.Mail.SmtpClient.Send%2A> méthodes. Pour autoriser le thread principal de votre programme à continuer de s’exécuter pendant que le message électronique est transmis, utilisez un des asynchrone <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes. Le <xref:System.Net.Mail.SmtpClient.SendCompleted> événement est déclenché quand un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> opération se termine. Pour recevoir cet événement, vous devez ajouter un <xref:System.Net.Mail.SendCompletedEventHandler> déléguer à <xref:System.Net.Mail.SmtpClient.SendCompleted>. Le <xref:System.Net.Mail.SendCompletedEventHandler> délégué doit faire référence à une méthode de rappel qui gère les notifications de <xref:System.Net.Mail.SmtpClient.SendCompleted> événements. Pour annuler une transmission de la messagerie asynchrone, utilisez la <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> (méthode).  
  
> [!NOTE]
>  S’il existe une transmission de courrier électronique en cours et vous appelez <xref:System.Net.Mail.SmtpClient.SendAsync%2A> ou <xref:System.Net.Mail.SmtpClient.Send%2A> là encore, vous recevrez un <xref:System.InvalidOperationException>.  
  
 La connexion établie par l’instance actuelle de la <xref:System.Net.Mail.SmtpClient> classe au serveur SMTP peut être réutilisée si une application souhaite envoyer plusieurs messages au même serveur SMTP. Cela est particulièrement utile lors de l’authentification ou chiffrement sont utilisés établir une connexion au serveur SMTP. Le processus d’authentification et l’établissement d’une session TLS peut être des opérations coûteuses. Une exigence pour rétablir une connexion pour chaque message lors de l’envoi d’une grande quantité de courrier électronique sur le même serveur SMTP peut avoir un impact significatif sur les performances. Il existe un nombre d’applications de messagerie de gros volumes qui envoient des mises à jour de messagerie état, distributions de bulletin d’informations, ou d’alertes par courrier électronique. De nombreuses applications clientes de messagerie prennent également en charge un mode hors connexion où les utilisateurs peuvent composer de nombreux messages électroniques envoyés ultérieurement lorsqu’une connexion au serveur SMTP est établie. Il est courant pour un client de messagerie envoyer tous les messages SMTP à un serveur SMTP spécifique (fourni par le fournisseur de services Internet) qui transfère ensuite ce courrier électronique à d’autres serveurs SMTP.  
  
 Le <xref:System.Net.Mail.SmtpClient> implémentation de la classe regroupe les connexions SMTP pour éviter de rétablir une connexion pour chaque message sur le même serveur. Une application peut réutiliser le même <xref:System.Net.Mail.SmtpClient> objet pour l’envoi de nombreux messages électroniques différents sur le même serveur SMTP et à de nombreux serveurs SMTP différents. Par conséquent, il n’existe aucun moyen de déterminer quand une application est terminée à l’aide de la <xref:System.Net.Mail.SmtpClient> objet et il doivent être nettoyées.  
  
 Quand une session SMTP est terminée et que le client souhaite mettre fin à la connexion, il doit envoyer un message QUIT au serveur pour indiquer qu’il n’a plus aucun message à envoyer. Cela permet au serveur libérer les ressources associées à la connexion à partir du client et de traiter les messages qui ont été envoyés par le client.  
  
 Le <xref:System.Net.Mail.SmtpClient> classe n’a aucun `Finalize` (méthode), une application doit donc appeler <xref:System.Net.Mail.SmtpClient.Dispose%2A> pour libérer explicitement des ressources. Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode effectue une itération dans toutes les connexions établies au serveur SMTP spécifié dans le <xref:System.Net.Mail.SmtpClient.Host%2A> propriété et envoie un message QUIT suivi par l’arrêt de la connexion TCP. Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode libère également les ressources non managées utilisées par le <xref:System.Net.Sockets.Socket> et supprime éventuellement les ressources managées.  
  
 Appelez la méthode <xref:System.Net.Mail.SmtpClient.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Net.Mail.SmtpClient>. La méthode <xref:System.Net.Mail.SmtpClient.Dispose%2A> rend le <xref:System.Net.Mail.SmtpClient> inutilisable. Après avoir appelé <xref:System.Net.Mail.SmtpClient.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Net.Mail.SmtpClient> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Mail.SmtpClient> occupée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’envoi d’un message électronique asynchrone.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">Programmation réseau dans le .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">Exemples de programmation réseau</related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">Traçage réseau dans le .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">Sécurité dans la programmation réseau</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Net.Mail.SmtpClient" /> classe à l’aide du fichier de configuration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, et <xref:System.Net.Mail.SmtpClient.Port%2A> propriétés pour le nouveau <xref:System.Net.Mail.SmtpClient> en utilisant les paramètres de l’application ou les fichiers de configuration machine. Pour plus d’informations, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’envoi d’un message électronique.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Pour obtenir un exemple de la \<mailSettings > nœud dans l’application ou le fichier de configuration machine, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">pour construire un <see cref="T:System.Net.Mail.SmtpClient" />. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Un <see cref="T:System.String" /> qui contient le nom ou l’adresse IP de l’ordinateur hôte utilisé pour les transactions SMTP.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpClient" /> qui envoie des e-mails à l’aide du serveur SMTP spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `host` paramètre est utilisé pour initialiser la valeur de la <xref:System.Net.Mail.SmtpClient.Host%2A> propriété. Le <xref:System.Net.Mail.SmtpClient.Credentials%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> les propriétés sont initialisées en utilisant les paramètres de l’application ou les fichiers de configuration machine. Si `host` est `null` ou égale à <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> est initialisé en utilisant les paramètres dans l’application ou les fichiers de configuration machine.  
  
 Pour plus d’informations sur l’utilisation de l’application et les fichiers de configuration machine, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si les informations sont spécifiées à l’aide de <xref:System.Net.Mail.SmtpClient> constructeurs ou des propriétés, ces informations substituent les paramètres de fichier de configuration.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’appel de ce constructeur.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">pour construire un <see cref="T:System.Net.Mail.SmtpClient" />. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">Un <see cref="T:System.String" /> qui contient le nom ou l’adresse IP de l’hôte utilisé pour les transactions SMTP.</param>
        <param name="port">Un <see cref="T:System.Int32" /> supérieur à zéro qui contient le port à utiliser sur <paramref name="host" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Mail.SmtpClient" /> qui envoie des e-mails à l’aide du serveur SMTP et du port spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `host` et `port` paramètres définir la valeur de la <xref:System.Net.Mail.SmtpClient.Host%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> propriétés, respectivement. Si `host` est `null` ou égale à <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> est initialisé en utilisant les paramètres dans l’application ou les fichiers de configuration machine. Si `port` est égal à zéro, <xref:System.Net.Mail.SmtpClient.Port%2A> est initialisé en utilisant les paramètres dans l’application ou les fichiers de configuration machine. Le <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété est initialisée à l’aide des paramètres dans l’application ou les fichiers de configuration machine.  
  
 Pour plus d’informations sur l’utilisation de l’application et les fichiers de configuration machine, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si les informations sont spécifiées à l’aide de <xref:System.Net.Mail.SmtpClient> constructeurs ou des propriétés, ces informations substituent les paramètres de fichier de configuration.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’appel de ce constructeur.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> ne peut pas être inférieur à zéro.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Pour spécifier le port. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifiez quels certificats doivent être utilisés pour établir la connexion Secure Sockets Layer (SSL).</summary>
        <value>Un <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, contenant un ou plusieurs certificats clients. La valeur par défaut est dérivée à partir des attributs de configuration de messagerie dans un fichier de configuration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les certificats clients sont, par défaut, est facultatif ; Toutefois, la configuration du serveur peut nécessiter que le client présente un certificat valide dans le cadre de la négociation de connexion initiale.  
  
> [!NOTE]
>  Le Framework met en cache les sessions SSL lors de leur création et tente de réutiliser une session de mise en cache pour une nouvelle demande, si possible. Lorsque vous tentez de réutiliser une session SSL, le Framework utilise le premier élément du <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (s’il en existe un), ou tente de réutiliser une session anonyme si <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> est vide.  
  
   
  
## Examples  
 L’exemple de code suivant établit une connexion SSL avec le serveur SMTP et utilise la connexion pour envoyer un courrier électronique.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">MailSettings, élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations d’identification utilisées pour authentifier l’expéditeur.</summary>
        <value>Un <see cref="T:System.Net.ICredentialsByHost" /> qui représente les informations d’identification à utiliser pour l’authentification ; ou <see langword="null" /> si aucune information d’identification n’ont été spécifiées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certains serveurs SMTP exigent que le client soit authentifié avant que le serveur envoie un e-mail sur son nom. Pour utiliser vos informations d’identification du réseau par défaut, vous pouvez définir le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> à `true` au lieu de définir cette propriété. Si le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propriété est définie sur `false,` ensuite la valeur définie dans le <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété sera utilisée pour les informations d’identification lors de la connexion au serveur. Si le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propriété est définie sur `false` et <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété n’a pas été définie, puis le courrier est envoyé au serveur de façon anonyme.  
  
 Informations d’identification peuvent également être spécifiées à l’aide de l’application et les fichiers de configuration machine. Pour plus d’informations, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si les informations sont spécifiées à l’aide de la <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété, ces informations substitue aux paramètres de fichier de configuration.  
  
> [!CAUTION]
>  Si vous fournissez des informations d’identification pour l’authentification de base, elles sont envoyées au serveur en texte clair. Cela peut présenter un problème de sécurité, car vos informations d’identification peuvent être vu et ensuite utilisées par d’autres utilisateurs.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir des informations d’identification utilisées pour envoyer un courrier électronique.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas modifier la valeur de cette propriété lorsqu’un message électronique est envoyé.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le format de la livraison utilisé par <see cref="T:System.Net.Mail.SmtpClient" /> pour envoyer des e-mails.</summary>
        <value>Le format de remise utilisé par <see cref="T:System.Net.Mail.SmtpClient" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie comment sortant e-mail messages seront traités.</summary>
        <value>Un <see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> qui indique la façon dont les messages électroniques sont remis.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Méthodes de remise sont les suivantes :  
  
-   Un serveur SMTP.  
  
-   Déplacement du courrier électronique dans le répertoire de collecte pour IIS, ce qui remet le message.  
  
-   Déplacement du courrier électronique vers un répertoire spécifié par <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> pour une remise ultérieure par une autre application.  
  
 La valeur par défaut de cette propriété peut également être définie sur une machine ou un fichier de configuration d’application. Toute modification apportée à la <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> propriété remplacent les paramètres de fichier de configuration.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; , élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie un message QUIT au serveur SMTP, termine la connexion TCP normalement et libère toutes les ressources utilisées par l’instance actuelle de la <see cref="T:System.Net.Mail.SmtpClient" /> classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La connexion établie par l’instance actuelle de la <xref:System.Net.Mail.SmtpClient> classe au serveur SMTP peut être réutilisée si une application souhaite envoyer plusieurs messages au même serveur SMTP. Cela est particulièrement utile lors de l’authentification ou chiffrement sont utilisés établir une connexion au serveur SMTP. Le processus d’authentification et l’établissement d’une session TLS peut être des opérations coûteuses. Une exigence pour rétablir une connexion pour chaque message lors de l’envoi d’une grande quantité de courrier électronique sur le même serveur SMTP peut avoir un impact significatif sur les performances. Il existe un nombre d’applications de messagerie de gros volumes qui envoient des mises à jour de messagerie état, distributions de bulletin d’informations, ou d’alertes par courrier électronique. De nombreuses applications clientes de messagerie prennent également en charge un mode hors connexion où les utilisateurs peuvent composer de nombreux messages électroniques envoyés ultérieurement lorsqu’une connexion au serveur SMTP est établie. Il est courant pour un client de messagerie envoyer tous les messages SMTP à un serveur SMTP spécifique (fourni par le fournisseur de services Internet) qui transfère ensuite ce courrier électronique à d’autres serveurs SMTP.  
  
 Le <xref:System.Net.Mail.SmtpClient> implémentation de la classe regroupe les connexions SMTP pour éviter de rétablir une connexion pour chaque message sur le même serveur. Une application peut réutiliser le même <xref:System.Net.Mail.SmtpClient> objet pour l’envoi de nombreux messages électroniques différents sur le même serveur SMTP et à de nombreux serveurs SMTP différents. Par conséquent, il n’existe aucun moyen de déterminer quand une application est terminée à l’aide de la <xref:System.Net.Mail.SmtpClient> objet et il doivent être nettoyées.  
  
 Quand une session SMTP est terminée et que le client souhaite mettre fin à la connexion, il doit envoyer un message QUIT au serveur pour indiquer qu’il n’a plus aucun message à envoyer. Cela permet au serveur libérer les ressources associées à la connexion à partir du client et de traiter les messages qui ont été envoyés par le client.  
  
 Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthodes effectue une itération dans toutes les connexions établies et envoyer un message QUIT à chaque serveur SMTP, suivi par l’arrêt de la connexion TCP. Ces méthodes également libèrent les ressources non managées utilisées par le <xref:System.Net.Sockets.Socket> et supprime éventuellement les ressources managées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envoie un message QUIT au serveur SMTP, termine la connexion TCP normalement et libère toutes les ressources utilisées par l’instance actuelle de la <see cref="T:System.Net.Mail.SmtpClient" /> classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La connexion établie par l’instance actuelle de la <xref:System.Net.Mail.SmtpClient> classe au serveur SMTP peut être réutilisée si une application souhaite envoyer plusieurs messages au même serveur SMTP. Cela est particulièrement utile lors de l’authentification ou chiffrement sont utilisés établir une connexion au serveur SMTP. Le processus d’authentification et l’établissement d’une session TLS peut être des opérations coûteuses. Une exigence pour rétablir une connexion pour chaque message lors de l’envoi d’une grande quantité de courrier électronique sur le même serveur SMTP peut avoir un impact significatif sur les performances. Il existe un nombre d’applications de messagerie de gros volumes qui envoient des mises à jour de messagerie état, distributions de bulletin d’informations, ou d’alertes par courrier électronique. De nombreuses applications clientes de messagerie prennent également en charge un mode hors connexion où les utilisateurs peuvent composer de nombreux messages électroniques envoyés ultérieurement lorsqu’une connexion au serveur SMTP est établie. Il est courant pour un client de messagerie envoyer tous les messages SMTP à un serveur SMTP spécifique (fourni par le fournisseur de services Internet) qui transfère ensuite ce courrier électronique à d’autres serveurs SMTP.  
  
 Le <xref:System.Net.Mail.SmtpClient> implémentation de la classe regroupe les connexions SMTP pour éviter de rétablir une connexion pour chaque message sur le même serveur. Une application peut réutiliser le même <xref:System.Net.Mail.SmtpClient> objet pour l’envoi de nombreux messages électroniques différents sur le même serveur SMTP et à de nombreux serveurs SMTP différents. Par conséquent, il n’existe aucun moyen de déterminer quand une application est terminée à l’aide de la <xref:System.Net.Mail.SmtpClient> objet et il doivent être nettoyées.  
  
 Quand une session SMTP est terminée et que le client souhaite mettre fin à la connexion, il doit envoyer un message QUIT au serveur pour indiquer qu’il n’a plus aucun message à envoyer. Cela permet au serveur libérer les ressources associées à la connexion à partir du client et de traiter les messages qui ont été envoyés par le client.  
  
 Appel de la <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode sur un <xref:System.Net.Mail.SmtpClient> objet en cours d’exécution asynchrone <xref:System.Net.Mail.SmtpClient.SendAsync%2A> opération annulera l’opération d’envoi que lorsque la <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> méthode avait été appelée.  
  
 Le <xref:System.Net.Mail.SmtpClient> classe n’a aucun `Finalize` (méthode). Une application doit donc appeler <xref:System.Net.Mail.SmtpClient.Dispose%2A> pour libérer explicitement des ressources.  
  
 Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode effectue une itération dans toutes les connexions établies au serveur SMTP spécifié dans le <xref:System.Net.Mail.SmtpClient.Host%2A> propriété et envoie un message QUIT suivi par l’arrêt de la connexion TCP. Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode libère également les ressources non managées utilisées par sous-jacent <xref:System.Net.Sockets.Socket>.  
  
 Appelez la méthode <xref:System.Net.Mail.SmtpClient.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Net.Mail.SmtpClient>. La méthode <xref:System.Net.Mail.SmtpClient.Dispose%2A> rend le <xref:System.Net.Mail.SmtpClient> inutilisable. Après avoir appelé <xref:System.Net.Mail.SmtpClient.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Net.Mail.SmtpClient> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Mail.SmtpClient> occupée.  
  
 Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Net.Mail.SmtpClient.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Net.Mail.SmtpClient>. Sinon, les ressources qu’il utilise ne seront pas libérées pour que le garbage collector puisse récupérer la mémoire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
        <summary>Envoie un message QUIT au serveur SMTP, normalement se termine la connexion TCP, libère toutes les ressources utilisées par l’instance actuelle de la <see cref="T:System.Net.Mail.SmtpClient" /> classe et supprime éventuellement les ressources managées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La connexion établie par l’instance actuelle de la <xref:System.Net.Mail.SmtpClient> classe au serveur SMTP peut être réutilisée si une application souhaite envoyer plusieurs messages au même serveur SMTP. Cela est particulièrement utile lors de l’authentification ou chiffrement sont utilisés établir une connexion au serveur SMTP. Le processus d’authentification et l’établissement d’une session TLS peut être des opérations coûteuses. Une exigence pour rétablir une connexion pour chaque message lors de l’envoi d’une grande quantité de courrier électronique sur le même serveur SMTP peut avoir un impact significatif sur les performances. Il existe un nombre d’applications de messagerie de gros volumes qui envoient des mises à jour de messagerie état, distributions de bulletin d’informations, ou d’alertes par courrier électronique. De nombreuses applications clientes de messagerie prennent également en charge un mode hors connexion où les utilisateurs peuvent composer de nombreux messages électroniques envoyés ultérieurement lorsqu’une connexion au serveur SMTP est établie. Il est courant pour un client de messagerie envoyer tous les messages SMTP à un serveur SMTP spécifique (fourni par le fournisseur de services Internet) qui transfère ensuite ce courrier électronique à d’autres serveurs SMTP.  
  
 Le <xref:System.Net.Mail.SmtpClient> implémentation de la classe regroupe les connexions SMTP pour éviter de rétablir une connexion pour chaque message sur le même serveur. Une application peut réutiliser le même <xref:System.Net.Mail.SmtpClient> objet pour l’envoi de nombreux messages électroniques différents sur le même serveur SMTP et à de nombreux serveurs SMTP différents. Par conséquent, il n’existe aucun moyen de déterminer quand une application est terminée à l’aide de la <xref:System.Net.Mail.SmtpClient> objet et il doivent être nettoyées.  
  
 Quand une session SMTP est terminée et que le client souhaite mettre fin à la connexion, il doit envoyer un message QUIT au serveur pour indiquer qu’il n’a plus aucun message à envoyer. Cela permet au serveur libérer les ressources associées à la connexion à partir du client et de traiter les messages qui ont été envoyés par le client.  
  
 Appel de la <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode sur un <xref:System.Net.Mail.SmtpClient> objet en cours d’exécution asynchrone <xref:System.Net.Mail.SmtpClient.SendAsync%2A> opération annulera l’opération d’envoi que lorsque la <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> méthode avait été appelée.  
  
 Le <xref:System.Net.Mail.SmtpClient> classe n’a aucun `Finalize` (méthode). Une application doit donc appeler <xref:System.Net.Mail.SmtpClient.Dispose%2A> pour libérer explicitement des ressources.  
  
 Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode effectue une itération dans toutes les connexions établies au serveur SMTP spécifié dans le <xref:System.Net.Mail.SmtpClient.Host%2A> propriété et envoie un message QUIT suivi par l’arrêt de la connexion TCP. Le <xref:System.Net.Mail.SmtpClient.Dispose%2A> méthode libère également les ressources non managées utilisées par le <xref:System.Net.Sockets.Socket> et supprime éventuellement les ressources managées.  
  
 Appelez la méthode <xref:System.Net.Mail.SmtpClient.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Net.Mail.SmtpClient>. La méthode <xref:System.Net.Mail.SmtpClient.Dispose%2A> rend le <xref:System.Net.Mail.SmtpClient> inutilisable. Après avoir appelé <xref:System.Net.Mail.SmtpClient.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Net.Mail.SmtpClient> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Net.Mail.SmtpClient> occupée.  
  
 Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Net.Mail.SmtpClient.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Net.Mail.SmtpClient>. Sinon, les ressources qu’il utilise ne seront pas libérées pour que le garbage collector puisse récupérer la mémoire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifiez si le <see cref="T:System.Net.Mail.SmtpClient" /> utilise Secure Sockets Layer (SSL) pour chiffrer la connexion.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Net.Mail.SmtpClient" /> utilise SSL ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété indique si SSL est utilisé pour accéder au serveur de messagerie SMTP spécifié.  
  
 La valeur par défaut de cette propriété peut également être définie sur une machine ou un fichier de configuration d’application. Toute modification apportée à la <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété remplacent les paramètres de fichier de configuration.  
  
 Le <xref:System.Net.Mail.SmtpClient> classe prend uniquement en charge l’Extension de Service SMTP pour SMTP sécurisé sur le protocole TLS comme défini dans RFC 3207. Dans ce mode, la session SMTP commence sur un canal non chiffré, puis une commande STARTTLS est émise par le client au serveur pour basculer vers une communication sécurisée via SSL. Consultez RFC 3207 publiée par l’IETF Internet Engineering Task Force () pour plus d’informations.  
  
 Une autre méthode de connexion est où une session SSL est établie à l’avance avant n’importe quel protocole commandes sont envoyées. Cette méthode de connexion est parfois appelée SMTP/SSL, SMTP sur SSL ou SMTPS et par défaut utilise le port 465. Cette autre méthode de connexion à l’aide de SSL n’est pas pris en charge.  
  
 Vous pouvez utiliser <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> pour spécifier les certificats de client doivent être utilisés pour établir la connexion SSL. Le <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> vous permet de refuser le certificat fourni par le serveur SMTP. Le <xref:System.Net.ServicePointManager.SecurityProtocol%2A> propriété vous permet de spécifier la version du protocole SSL à utiliser.  
  
> [!NOTE]
>  Si le <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété est définie sur `true`, et le serveur de messagerie SMTP ne publie pas STARTTLS dans la réponse à la EHLO de commande, puis un appel à la <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes lèvent une <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 L’exemple de code suivant établit une connexion SSL avec le serveur SMTP et utilise la connexion pour envoyer un courrier électronique.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;réseau&gt; , élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom ou l’adresse IP de l’hôte utilisé pour les transactions SMTP.</summary>
        <value>Un <see cref="T:System.String" /> qui contient le nom ou l’adresse IP de l’ordinateur à utiliser pour les transactions SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Net.Mail.SmtpClient.Host%2A> propriété peut également être définie à l’aide de constructeurs ou l’application ou le fichier de configuration machine. Pour plus d’informations, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Si les informations sont spécifiées à l’aide de cette propriété, ces informations substituent les paramètres de fichier de configuration.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’envoi d’un message électronique à l’aide de l’hôte et le port spécifié dans un fichier de configuration d’application.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération set est égale à <see cref="F:System.String.Empty" /> (« »).</exception>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas modifier la valeur de cette propriété lorsqu’un message électronique est envoyé.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings pour system.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;réseau&gt; , élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les classes qui héritent de la <xref:System.Net.Mail.SmtpClient> classe peut substituer le <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> méthode pour effectuer les autres tâches lorsque la <xref:System.Net.Mail.SmtpClient.SendCompleted> événement se produit.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> autorise également les classes dérivées à gérer <xref:System.Net.Mail.SmtpClient.SendCompleted> sans attacher de délégué. Cette technique est recommandée pour la gestion des <xref:System.Net.Mail.SmtpClient.SendCompleted> dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lors de la substitution <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> méthode afin que les délégués inscrits recevoir le <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> événement.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le dossier dans lequel les applications enregistrent les messages électroniques à traiter par le serveur SMTP local.</summary>
        <value>Un <see cref="T:System.String" /> qui spécifie le répertoire de collecte pour les messages électroniques.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les messages électroniques dans le répertoire de collecte sont automatiquement envoyés par un serveur SMTP local (le cas échéant), par exemple IIS.  
  
 La valeur par défaut de cette propriété peut également être définie sur une machine ou un fichier de configuration d’application. Toute modification apportée à la <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> propriété remplacent les paramètres de fichier de configuration.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; , élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le port utilisé pour les transactions SMTP.</summary>
        <value>Un <see cref="T:System.Int32" /> qui contient le numéro de port sur l’hôte SMTP. La valeur par défaut est 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Net.Mail.SmtpClient.Port%2A> propriété peut également être définie à l’aide de constructeurs ou l’application ou le fichier de configuration machine. Pour plus d’informations sur l’utilisation de fichiers de configuration, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Si les informations sont spécifiées à l’aide de cette propriété, ces informations substituent les paramètres de fichier de configuration.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’envoi d’un message électronique à l’aide de l’hôte et le port spécifié dans un fichier de configuration d’application.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure ou égale à zéro.</exception>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas modifier la valeur de cette propriété lorsqu’un message électronique est envoyé.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Pour définir le <see cref="P:System.Net.Mail.SmtpClient.Port" /> propriété. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings pour system.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;réseau&gt; , élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie un e-mail à un serveur SMTP en vue de sa remise. Ces méthodes bloquent pendant que le message est transmis.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Un <see cref="T:System.Net.Mail.MailMessage" /> qui contient le message à envoyer.</param>
        <summary>Envoie le message spécifié à un serveur SMTP pour remise.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode se bloque pendant que l’e-mail est transmis. Vous pouvez spécifier une valeur de délai d’attente à l’aide de la <xref:System.Net.Mail.SmtpClient.Timeout%2A> propriété pour vous assurer que la méthode est retournée après un certain laps de temps.  
  
 Avant d’appeler cette méthode, le <xref:System.Net.Mail.SmtpClient.Host%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> propriétés doivent être définies via les fichiers de configuration en définissant les propriétés pertinentes, ou en passant ces informations dans le <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructeur.  
  
 Vous ne pouvez pas appeler cette méthode s’il existe un message est envoyé de façon asynchrone.  
  
 Si l’hôte SMTP requiert des informations d’identification, vous devez les définir avant d’appeler cette méthode. Pour spécifier les informations d’identification, utilisez le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> ou <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriétés.  
  
 Si vous recevez un <xref:System.Net.Mail.SmtpException> exception, vérifiez le <xref:System.Net.Mail.SmtpException.StatusCode%2A> propriété à rechercher la raison pour laquelle l’opération a échoué. Le <xref:System.Net.Mail.SmtpException> peut également contenir une exception interne qui indique la raison de l’opération a échoué.  
  
 Lors de l’envoi d’e-mails à l’aide <xref:System.Net.Mail.SmtpClient.Send%2A> à plusieurs destinataires et le protocole SMTP server accepte des destinataires valides et rejette les autres, <xref:System.Net.Mail.SmtpClient.Send%2A> envoie un e-mail aux destinataires acceptées, puis un <xref:System.Net.Mail.SmtpFailedRecipientsException> est levée (ou un <xref:System.Net.Mail.SmtpFailedRecipientException> si un seul destinataire est rejeté). Un <xref:System.Net.Mail.SmtpFailedRecipientsException> contient une liste de destinataires qui ont été rejetés.
  
> [!NOTE]
>  Si le <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété est définie sur `true`, et le serveur de messagerie SMTP ne publie pas STARTTLS dans la réponse à la EHLO de commande, puis un appel à la <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes lèvent une <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette méthode.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cela <see cref="T:System.Net.Mail.SmtpClient" /> a un <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> appel en cours.  
  
ou 
 <see cref="P:System.Net.Mail.MailMessage.From" /> a la valeur <see langword="null" />.  
  
ou 
Aucun destinataire spécifié dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, et <see cref="P:System.Net.Mail.MailMessage.Bcc" /> propriétés.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est <see langword="null" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est égal à la chaîne vide ( » »).  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Port" /> est égal à zéro, un nombre négatif ou supérieur à 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Cet objet a été supprimé.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Échec de la connexion au serveur SMTP.  
  
ou 
Échoué de l’authentification.  
  
ou 
L’opération a expiré. 
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true" /> mais le <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> ou <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true," /> , mais le serveur de messagerie SMTP n’a pas publié STARTTLS dans la réponse à la commande EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Le <paramref name="message" /> n’a pas pu être remis à l’un des destinataires dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> ou <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Le <paramref name="message" /> n’a pas pu être remis à deux destinataires ou plus dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> ou <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Pour se connecter au serveur SMTP. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">Un <see cref="T:System.String" /> qui contient les informations d’adresse de l’expéditeur du message.</param>
        <param name="recipients">Un <see cref="T:System.String" /> qui contient les adresses auxquelles le message est envoyé à.</param>
        <param name="to">Un <see cref="T:System.String" /> qui contient les adresses auxquelles le message est envoyé à.</param>
        <param name="subject">Un <see cref="T:System.String" /> qui contient la ligne d’objet pour le message.</param>
        <param name="body">Un <see cref="T:System.String" /> qui contient le corps du message.</param>
        <summary>Envoie l’e-mail spécifié à un serveur SMTP en vue de sa remise. L’expéditeur du message, destinataires, objet et le corps du message sont spécifiés à l’aide de <see cref="T:System.String" /> objets.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode se bloque pendant que l’e-mail est transmis. Vous pouvez spécifier une valeur de délai d’attente à l’aide de la <xref:System.Net.Mail.SmtpClient.Timeout%2A> propriété pour vous assurer que la méthode est retournée après un certain laps de temps.  
  
 Avant d’appeler cette méthode, le <xref:System.Net.Mail.SmtpClient.Host%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> propriétés doivent être définies via les fichiers de configuration en définissant les propriétés pertinentes, ou en passant ces informations dans le <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructeur.  
  
 Vous ne pouvez pas appeler cette méthode s’il existe un message est envoyé de façon asynchrone.  
  
 Si l’hôte SMTP requiert des informations d’identification, vous devez les définir avant d’appeler cette méthode. Pour spécifier les informations d’identification, utilisez le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> ou <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriétés.  
  
 Si vous recevez un <xref:System.Net.Mail.SmtpException> exception, vérifiez le <xref:System.Net.Mail.SmtpException.StatusCode%2A> propriété à rechercher la raison pour laquelle l’opération a échoué. Le <xref:System.Net.Mail.SmtpException> peut également contenir une exception interne qui indique la raison de l’opération a échoué.  

 Lors de l’envoi d’e-mails à l’aide <xref:System.Net.Mail.SmtpClient.Send%2A> à plusieurs destinataires et le protocole SMTP server accepte des destinataires valides et rejette les autres, <xref:System.Net.Mail.SmtpClient.Send%2A> envoie un e-mail aux destinataires acceptées, puis un <xref:System.Net.Mail.SmtpFailedRecipientsException> est levée (ou un <xref:System.Net.Mail.SmtpFailedRecipientException> si un seul destinataire est rejeté). Un <xref:System.Net.Mail.SmtpFailedRecipientsException> contient une liste de destinataires qui ont été rejetés.
 
> [!NOTE]
>  Si le <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété est définie sur `true`, et le serveur de messagerie SMTP ne publie pas STARTTLS dans la réponse à la EHLO de commande, puis un appel à la <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes lèvent une <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="recipients" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> a la valeur <see cref="F:System.String.Empty" />.  
  
- ou - 
 <paramref name="recipients" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cela <see cref="T:System.Net.Mail.SmtpClient" /> a un <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> appel en cours.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est <see langword="null" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est égal à la chaîne vide ( » »).  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Port" /> est égal à zéro, un nombre négatif ou supérieur à 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Cet objet a été supprimé.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Échec de la connexion au serveur SMTP.  
  
ou 
Échoué de l’authentification.  
  
ou 
L’opération a expiré. 
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true" /> mais le <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> ou <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true," /> , mais le serveur de messagerie SMTP n’a pas publié STARTTLS dans la réponse à la commande EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Le <paramref name="message" /> n’a pas pu être remis à l’un des destinataires dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> ou <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Le <paramref name="message" /> n’a pas pu être remis à deux destinataires ou plus dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> ou <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Pour se connecter au serveur SMTP. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie un e-mail. Ces méthodes ne bloquent pas le thread appelant.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Un <see cref="T:System.Net.Mail.MailMessage" /> qui contient le message à envoyer.</param>
        <param name="userToken">Un objet défini par l’utilisateur qui est passé à la méthode appelée lorsque l’opération asynchrone se termine.</param>
        <summary>Envoie l’e-mail spécifié à un serveur SMTP en vue de sa remise. Cette méthode ne bloque pas le thread appelant et permet à l’appelant de passer un objet à la méthode est appelée lorsque l’opération se termine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour recevoir une notification lorsque le message a été envoyé ou l’opération a été annulée, ajoutez un gestionnaire d’événements pour le <xref:System.Net.Mail.SmtpClient.SendCompleted> événement. Vous pouvez annuler une <xref:System.Net.Mail.SmtpClient.SendAsync%2A> opération en appelant le <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> (méthode).  
  
 Après avoir appelé <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, vous devez attendre la transmission du courrier électronique soit terminée avant d’envoyer un autre message électronique à l’aide <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Avant d’appeler cette méthode, le <xref:System.Net.Mail.SmtpClient.Host%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> doit être définie via les fichiers de configuration en définissant les propriétés pertinentes, ou en passant ces informations dans le <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructeur.  
  
 Si l’hôte SMTP requiert des informations d’identification, vous devez les définir avant d’appeler cette méthode. Pour spécifier les informations d’identification, utilisez le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> ou <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriétés.  
  
 Si vous recevez un <xref:System.Net.Mail.SmtpException> exception, vérifiez le <xref:System.Net.Mail.SmtpException.StatusCode%2A> propriété à rechercher la raison pour laquelle l’opération a échoué. Le <xref:System.Net.Mail.SmtpException> peut également contenir une exception interne qui indique la raison de l’opération a échoué.  
  
 Lors de l’envoi d’e-mails à l’aide <xref:System.Net.Mail.SmtpClient.SendAsync%2A> à plusieurs destinataires, si le serveur SMTP accepte des destinataires valides et rejette les autres, un <xref:System.Net.Mail.SmtpException> est levée avec un <xref:System.NullReferenceException> pour l’exception interne. Si cela se produit, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> ne parvient pas à envoyer un e-mail à un des destinataires.  
  
 Votre application peut détecter une erreur de validation de certificat de serveur en examinant le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété passé dans le <xref:System.Net.Mail.SendCompletedEventHandler> déléguer.  
  
 Le <xref:System.Net.Mail.SmtpClient.Timeout%2A> propriété n’a pas d’effet un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> appeler.  
  
 Pour envoyer le courrier et bloquer pendant leur transmission au serveur SMTP, utilisez une de la <xref:System.Net.Mail.SmtpClient.Send%2A> méthodes.  
  
> [!NOTE]
>  Si le <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété est définie sur `true`, et le serveur de messagerie SMTP ne publie pas STARTTLS dans la réponse à la EHLO de commande, puis un appel à la <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes lèvent une <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’appel de cette méthode.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> a la valeur <see langword="null" />.  
  
- ou - 
 <see cref="P:System.Net.Mail.MailMessage.From" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cela <see cref="T:System.Net.Mail.SmtpClient" /> a un <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> appel en cours.  
  
ou 
Aucun destinataire spécifié dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, et <see cref="P:System.Net.Mail.MailMessage.Bcc" /> propriétés.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est <see langword="null" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est égal à la chaîne vide ( » »).  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Port" /> est égal à zéro, un nombre négatif ou supérieur à 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Cet objet a été supprimé.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Échec de la connexion au serveur SMTP.  
  
ou 
Échoué de l’authentification.  
  
ou 
L’opération a expiré. 
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true" /> mais le <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> ou <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true," /> , mais le serveur de messagerie SMTP n’a pas publié STARTTLS dans la réponse à la commande EHLO.  
  
ou 
Le <paramref name="message" /> n’a pas pu être remis à un ou plusieurs des destinataires dans <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, ou <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Pour se connecter au serveur SMTP. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">Un <see cref="T:System.String" /> qui contient les informations d’adresse de l’expéditeur du message.</param>
        <param name="recipients">Un <see cref="T:System.String" /> qui contient l’adresse le message est envoyé à.</param>
        <param name="to">Un <see cref="T:System.String" /> qui contient l’adresse le message est envoyé à.</param>
        <param name="subject">Un <see cref="T:System.String" /> qui contient la ligne d’objet pour le message.</param>
        <param name="body">Un <see cref="T:System.String" /> qui contient le corps du message.</param>
        <param name="userToken">Un objet défini par l’utilisateur qui est passé à la méthode appelée lorsque l’opération asynchrone se termine.</param>
        <summary>Envoie un e-mail à un serveur SMTP en vue de sa remise. L’expéditeur du message, destinataires, objet et le corps du message sont spécifiés à l’aide de <see cref="T:System.String" /> objets. Cette méthode ne bloque pas le thread appelant et permet à l’appelant de passer un objet à la méthode est appelée lorsque l’opération se termine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour recevoir une notification lorsque le message a été envoyé ou l’opération a été annulée, ajoutez un gestionnaire d’événements pour le <xref:System.Net.Mail.SmtpClient.SendCompleted> événement. Vous pouvez annuler une <xref:System.Net.Mail.SmtpClient.SendAsync%2A> opération en appelant le <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> (méthode).  
  
 Après avoir appelé <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, vous devez attendre la transmission du courrier électronique soit terminée avant d’envoyer un autre message électronique à l’aide <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Avant d’appeler cette méthode, le <xref:System.Net.Mail.SmtpClient.Host%2A> et <xref:System.Net.Mail.SmtpClient.Port%2A> propriétés doivent être définies via les fichiers de configuration ou en définissant les propriétés ou en passant ces informations dans le <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructeur.  
  
 Si l’hôte SMTP requiert des informations d’identification, vous devez les définir avant d’appeler cette méthode. Pour spécifier les informations d’identification, utilisez le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> ou <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété.  
  
 Si vous recevez un <xref:System.Net.Mail.SmtpException> exception, vérifiez le <xref:System.Net.Mail.SmtpException.StatusCode%2A> propriété à rechercher la raison pour laquelle l’opération a échoué. Le <xref:System.Net.Mail.SmtpException> peut également contenir une exception interne qui indique la raison de l’opération a échoué.  
  
 Lors de l’envoi d’e-mails à l’aide <xref:System.Net.Mail.SmtpClient.SendAsync%2A> à plusieurs destinataires, si le serveur SMTP accepte des destinataires valides et rejette les autres, un <xref:System.Net.Mail.SmtpException> est levée avec un <xref:System.NullReferenceException> pour l’exception interne. Si cela se produit, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> ne parvient pas à envoyer un e-mail à un des destinataires.  
  
 Votre application peut détecter une erreur de validation de certificat de serveur en examinant le <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propriété passé dans le <xref:System.Net.Mail.SendCompletedEventHandler> déléguer.  
  
 Le <xref:System.Net.Mail.SmtpClient.Timeout%2A> propriété n’a pas d’effet un <xref:System.Net.Mail.SmtpClient.SendAsync%2A> appeler.  
  
 Pour envoyer le courrier et bloquer pendant leur transmission au serveur SMTP, utilisez une de la <xref:System.Net.Mail.SmtpClient.Send%2A> méthodes.  
  
> [!NOTE]
>  Si le <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> propriété est définie sur `true`, et le serveur de messagerie SMTP ne publie pas STARTTLS dans la réponse à la EHLO de commande, puis un appel à la <xref:System.Net.Mail.SmtpClient.Send%2A> ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes lèvent une <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="recipient" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> a la valeur <see cref="F:System.String.Empty" />.  
  
- ou - 
 <paramref name="recipient" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cela <see cref="T:System.Net.Mail.SmtpClient" /> a un <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> appel en cours.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est <see langword="null" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Host" /> est égal à la chaîne vide ( » »).  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> et <see cref="P:System.Net.Mail.SmtpClient.Port" /> est égal à zéro, un nombre négatif ou supérieur à 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Cet objet a été supprimé.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Échec de la connexion au serveur SMTP.  
  
ou 
Échoué de l’authentification.  
  
ou 
L’opération a expiré. 
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true" /> mais le <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> propriété est définie sur <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> ou <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> a la valeur <see langword="true," /> , mais le serveur de messagerie SMTP n’a pas publié STARTTLS dans la réponse à la commande EHLO.  
  
ou 
Le message n’a pas pu être remis à un ou plusieurs des destinataires dans <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Pour se connecter au serveur SMTP. Énumération associée : <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule une opération asynchrone pour envoyer un e-mail.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> méthode pour annuler une en attente <xref:System.Net.Mail.SmtpClient.SendAsync%2A> opération. S’il existe des messages attendant d’être envoyés, cette méthode libère les ressources utilisées pour stocker le courrier. S’il n’existe aucun message attendant d’être envoyés, cette méthode ne fait rien.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’envoi d’un message électronique asynchrone. L’utilisateur a la possibilité d’annuler le courrier s’il n’a pas été envoyé.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Cet objet a été supprimé.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu’une opération d’envoi d’e-mail asynchrone se termine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.SmtpClient.SendCompleted> événement est déclenché chaque fois qu’un message électronique est envoyé de manière asynchrone à l’issue de l’opération d’envoi. Pour envoyer un message électronique de façon asynchrone, utilisez la <xref:System.Net.Mail.SmtpClient.SendAsync%2A> méthodes.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> est le délégué de <xref:System.Net.Mail.SmtpClient.SendCompleted>. Le <xref:System.ComponentModel.AsyncCompletedEventArgs> classe fournit le Gestionnaire d’événements avec les données d’événement.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’envoi d’un message électronique asynchrone.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie le message spécifié à un serveur SMTP pour la remise en tant qu’une opération asynchrone.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">Un <see cref="T:System.Net.Mail.MailMessage" /> qui contient le message à envoyer.</param>
        <summary>Envoie le message spécifié à un serveur SMTP pour la remise en tant qu’une opération asynchrone.</summary>
        <returns>Objet de tâche représentant l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette opération ne bloque pas. Retourné <xref:System.Threading.Tasks.Task>> objet se termine une fois que le message a été envoyé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="from">Un <see cref="T:System.String" /> qui contient les informations d’adresse de l’expéditeur du message.</param>
        <param name="recipients">Un <see cref="T:System.String" /> qui contient les adresses auxquelles le message est envoyé à.</param>
        <param name="subject">Un <see cref="T:System.String" /> qui contient la ligne d’objet pour le message.</param>
        <param name="body">Un <see cref="T:System.String" /> qui contient le corps du message.</param>
        <summary>Envoie le message spécifié à un serveur SMTP pour la remise en tant qu’une opération asynchrone. . L’expéditeur du message, destinataires, objet et le corps du message sont spécifiés à l’aide de <see cref="T:System.String" /> objets.</summary>
        <returns>Objet de tâche représentant l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette opération ne bloque pas. Retourné <xref:System.Threading.Tasks.Task>> objet se termine une fois que le message a été envoyé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="recipients" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> a la valeur <see cref="F:System.String.Empty" />.  
  
- ou - 
 <paramref name="recipients" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la connexion réseau utilisée pour transmettre l’e-mail.</summary>
        <value>Un <see cref="T:System.Net.ServicePoint" /> qui se connecte à la <see cref="P:System.Net.Mail.SmtpClient.Host" /> propriété utilisée pour SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les paramètres pour le <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> propriété sont créés à l’aide des valeurs par défaut spécifiées dans l’application ou les fichiers de configuration machine et le <xref:System.Net.ServicePointManager> classe.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’accès à la <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> propriété.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.Mail.SmtpClient.Host" /> est <see langword="null" /> ou une chaîne vide ( » »).  
  
ou 
 <see cref="P:System.Net.Mail.SmtpClient.Port" /> est égal à zéro.</exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/connectionmanagement-element-network-settings.md">connectionManagement, élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Gestion des connexions</related>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de fournisseur de Service (SPN) à utiliser pour l’authentification lors de l’utilisation de la protection étendue.</summary>
        <value>Un <see cref="T:System.String" /> qui spécifie le SPN à utiliser pour la protection étendue. La valeur par défaut pour ce SPN est au format « SMTPSVC /&lt;hôte&gt;» où &lt;hôte&gt; est le nom d’hôte du serveur de messagerie SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.Mail.SmtpClient.TargetName%2A> propriété est utilisée avec l’authentification Windows intégrée lorsqu’une application à l’aide de la protection étendue. Le <xref:System.Net.Mail.SmtpClient> peut ensuite fournir une protection étendue pour vous assurer que réponses aux demandes d’informations d’identification contiennent des informations spécifiques au service (SPN) et, si nécessaire, spécifiques au canal informations (un jeton de liaison de canal ou CBT). Avec ces informations dans les échanges d’informations d’identification, les services sont en mesure de mieux protéger contre toute utilisation malveillante des réponses aux demandes d’informations d’identification qui peuvent avoir été obtenues de manière incorrecte.  
  
 La valeur par défaut de cette propriété peut également être définie sur une machine ou un fichier de configuration d’application. Toute modification apportée à la <xref:System.Net.Mail.SmtpClient.TargetName%2A> propriété remplacent les paramètres de fichier de configuration.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">Authentification Windows intégrée avec protection étendue</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; , élément (paramètres réseau)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;réseau&gt; , élément (paramètres réseau)</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie la quantité de temps après lequel synchrone <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> appel expire.</summary>
        <value>Un <see cref="T:System.Int32" /> qui spécifie la valeur de délai d’attente en millisecondes. La valeur par défaut est 100,000 (100 secondes).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, les appels à la <xref:System.Net.Mail.SmtpClient.Send%2A> un bloc de méthode jusqu'à ce que l’opération se termine. Si vous définissez la <xref:System.Net.Mail.SmtpClient.Timeout%2A> propriété à une valeur positive et un <xref:System.Net.Mail.SmtpClient.Send%2A> opération ne peut pas être exécutée dans le délai imparti, le <xref:System.Net.Mail.SmtpClient> classe lève une <xref:System.Net.Mail.SmtpException> exception.  
  
 Pour envoyer un message et continuer l’exécution dans le thread d’application, utilisez le <xref:System.Net.Mail.SmtpClient.SendAsync%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’obtention et de définition de la valeur de délai d’attente.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération set était inférieure à zéro.</exception>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas modifier la valeur de cette propriété lorsqu’un message électronique est envoyé.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si les <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> sont envoyés avec les demandes.</summary>
        <value><see langword="true" /> si les informations d'identification par défaut sont utilisées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certains serveurs SMTP exigent que le client soit authentifié avant que le serveur envoie un e-mail sur son nom. Définissez cette propriété sur `true` lorsque cela <xref:System.Net.Mail.SmtpClient> objet doit, si requis par le serveur, s’authentifier en utilisant les informations d’identification par défaut de l’utilisateur actuellement connecté. Pour les applications clientes, il s’agit du comportement souhaité dans la plupart des scénarios.  
  
 Informations d’identification peuvent également être spécifiées à l’aide de l’application et les fichiers de configuration machine. Pour plus d’informations, consultez [ &lt;mailSettings&gt; , élément (paramètres réseau)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Si le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propriété est définie sur `false,` ensuite la valeur définie dans le <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété sera utilisée pour les informations d’identification lors de la connexion au serveur. Si le <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> propriété est définie sur `false` et <xref:System.Net.Mail.SmtpClient.Credentials%2A> propriété n’a pas été définie, puis le courrier est envoyé au serveur de façon anonyme.  
  
> [!CAUTION]
>  Si vous fournissez des informations d’identification pour l’authentification de base, elles sont envoyées au serveur en texte clair. Cela peut présenter un problème de sécurité, car vos informations d’identification peuvent être vu et ensuite utilisées par d’autres utilisateurs.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette propriété.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas modifier la valeur de cette propriété lorsqu’un message électronique est envoyé.</exception>
      </Docs>
    </Member>
  </Members>
</Type>