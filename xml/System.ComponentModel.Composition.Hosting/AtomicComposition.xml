<Type Name="AtomicComposition" FullName="System.ComponentModel.Composition.Hosting.AtomicComposition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbe9ce6f5d7a4152209173e11f9afc6e806c397b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39744167" /></Metadata><TypeSignature Language="C#" Value="public class AtomicComposition : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AtomicComposition extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
  <TypeSignature Language="VB.NET" Value="Public Class AtomicComposition&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AtomicComposition : IDisposable" />
  <TypeSignature Language="F#" Value="type AtomicComposition = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a676f-101">Représente une opération de composition unique pour la composition transactionnelle.</span><span class="sxs-lookup"><span data-stu-id="a676f-101">Represents a single composition operation for transactional composition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a676f-102">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="a676f-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="a676f-103">Lorsque vous avez fini d’utiliser le type, vous devez supprimer il directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="a676f-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="a676f-104">Pour supprimer le type directement, appelez sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="a676f-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="a676f-105">Pour supprimer indirectement, utiliser une construction de langage tel que `using` (en C#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a676f-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="a676f-106">Pour plus d’informations, consultez la section « À l’aide un objet qui implémente IDisposable » dans le <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="a676f-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a676f-107">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicComposition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AtomicComposition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a676f-108">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicComposition (System.ComponentModel.Composition.Hosting.AtomicComposition outerAtomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.AtomicComposition outerAtomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (outerAtomicComposition As AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AtomicComposition(System::ComponentModel::Composition::Hosting::AtomicComposition ^ outerAtomicComposition);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AtomicComposition : System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; System.ComponentModel.Composition.Hosting.AtomicComposition" Usage="new System.ComponentModel.Composition.Hosting.AtomicComposition outerAtomicComposition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outerAtomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="outerAtomicComposition"><span data-ttu-id="a676f-109">Parent de cette opération de composition.</span><span class="sxs-lookup"><span data-stu-id="a676f-109">The parent of this composition operation.</span></span></param>
        <summary><span data-ttu-id="a676f-110">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> avec le <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> parent spécifié.</span><span class="sxs-lookup"><span data-stu-id="a676f-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> class with the specified parent <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCompleteAction">
      <MemberSignature Language="C#" Value="public void AddCompleteAction (Action completeAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCompleteAction(class System.Action completeAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCompleteAction (completeAction As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCompleteAction(Action ^ completeAction);" />
      <MemberSignature Language="F#" Value="member this.AddCompleteAction : Action -&gt; unit" Usage="atomicComposition.AddCompleteAction completeAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completeAction" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="completeAction"><span data-ttu-id="a676f-111">Action à exécuter.</span><span class="sxs-lookup"><span data-stu-id="a676f-111">The action to be executed.</span></span></param>
        <summary><span data-ttu-id="a676f-112">Ajoute une action à exécuter lorsque l'opération de composition globale se termine avec succès.</span><span class="sxs-lookup"><span data-stu-id="a676f-112">Adds an action to be executed when the overall composition operation completes successfully.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRevertAction">
      <MemberSignature Language="C#" Value="public void AddRevertAction (Action revertAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRevertAction(class System.Action revertAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRevertAction (revertAction As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRevertAction(Action ^ revertAction);" />
      <MemberSignature Language="F#" Value="member this.AddRevertAction : Action -&gt; unit" Usage="atomicComposition.AddRevertAction revertAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="revertAction" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="revertAction"><span data-ttu-id="a676f-113">Action à exécuter.</span><span class="sxs-lookup"><span data-stu-id="a676f-113">The action to be executed.</span></span></param>
        <summary><span data-ttu-id="a676f-114">Ajoute une action à exécuter si l'opération de composition globale échoue.</span><span class="sxs-lookup"><span data-stu-id="a676f-114">Adds an action to be executed if the overall composition operation fails.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="atomicComposition.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a676f-115">Marque cette opération de composition comme terminée.</span><span class="sxs-lookup"><span data-stu-id="a676f-115">Marks this composition operation as complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a676f-116">Si cette <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> est imbriqué, saisie semi-automatique actions ne seront pas exécutées jusqu'à ce que l’opération de composition parent est également terminée.</span><span class="sxs-lookup"><span data-stu-id="a676f-116">If this <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> is nested, completion actions will not be executed until the parent composition operation has also completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a676f-117">Libère les ressources utilisées par <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> et marque cette opération de composition comme non réussie.</span><span class="sxs-lookup"><span data-stu-id="a676f-117">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />, and mark this composition operation as failed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="atomicComposition.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a676f-118">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> et marque cette opération de composition comme non réussie.</span><span class="sxs-lookup"><span data-stu-id="a676f-118">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> class, and mark this composition operation as failed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a676f-119">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>.</span><span class="sxs-lookup"><span data-stu-id="a676f-119">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>.</span></span> <span data-ttu-id="a676f-120">La méthode `Dispose` rend le <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="a676f-120">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> in an unusable state.</span></span> <span data-ttu-id="a676f-121">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> occupée.</span><span class="sxs-lookup"><span data-stu-id="a676f-121">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> was occupying.</span></span>  
  
 <span data-ttu-id="a676f-122">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="a676f-122">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a676f-123">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>.</span><span class="sxs-lookup"><span data-stu-id="a676f-123">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>.</span></span> <span data-ttu-id="a676f-124">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="a676f-124">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="atomicComposition.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a676f-125"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="a676f-125"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a676f-126">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="a676f-126">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * obj -&gt; unit" Usage="atomicComposition.SetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a676f-127">Clé à enregistrer.</span><span class="sxs-lookup"><span data-stu-id="a676f-127">The key to save.</span></span></param>
        <param name="value"><span data-ttu-id="a676f-128">Valeur à enregistrer.</span><span class="sxs-lookup"><span data-stu-id="a676f-128">The value to save.</span></span></param>
        <summary><span data-ttu-id="a676f-129">Enregistre une paire clé-valeur dans la transaction pour assurer le suivi de l'état provisoire.</span><span class="sxs-lookup"><span data-stu-id="a676f-129">Saves a key-value pair in the transaction to track tentative state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a676f-130">Obtient une valeur enregistrée par la méthode <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-130">Gets a value saved by the <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetValue&lt;T&gt; (object key, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue&lt;T&gt;(object key, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue(Of T) (key As Object, ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; bool TryGetValue(System::Object ^ key, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj *  -&gt; bool" Usage="atomicComposition.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="a676f-131">Type de la valeur à récupérer.</span><span class="sxs-lookup"><span data-stu-id="a676f-131">The type of the value to be retrieved.</span></span></typeparam>
        <param name="key"><span data-ttu-id="a676f-132">Clé à partir de laquelle récupérer.</span><span class="sxs-lookup"><span data-stu-id="a676f-132">The key to retrieve from.</span></span></param>
        <param name="value"><span data-ttu-id="a676f-133">Valeur récupérée.</span><span class="sxs-lookup"><span data-stu-id="a676f-133">The retrieved value.</span></span></param>
        <summary><span data-ttu-id="a676f-134">Obtient une valeur enregistrée par la méthode <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-134">Gets a value saved by the <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a676f-135"><see langword="true" /> si la valeur a été correctement récupérée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-135"><see langword="true" /> if the value was successfully retrieved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetValue&lt;T&gt; (object key, bool localAtomicCompositionOnly, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue&lt;T&gt;(object key, bool localAtomicCompositionOnly, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue(Of T) (key As Object, localAtomicCompositionOnly As Boolean, ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; bool TryGetValue(System::Object ^ key, bool localAtomicCompositionOnly, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * bool *  -&gt; bool" Usage="atomicComposition.TryGetValue (key, localAtomicCompositionOnly, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="localAtomicCompositionOnly" Type="System.Boolean" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="a676f-136">Type de la valeur à récupérer.</span><span class="sxs-lookup"><span data-stu-id="a676f-136">The type of the value to be retrieved.</span></span></typeparam>
        <param name="key"><span data-ttu-id="a676f-137">Clé à partir de laquelle récupérer.</span><span class="sxs-lookup"><span data-stu-id="a676f-137">The key to retrieve from.</span></span></param>
        <param name="localAtomicCompositionOnly"><span data-ttu-id="a676f-138"><see langword="true" /> pour exclure des transactions parent ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-138"><see langword="true" /> to exclude parent transactions; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="a676f-139">Valeur récupérée.</span><span class="sxs-lookup"><span data-stu-id="a676f-139">The retrieved value.</span></span></param>
        <summary><span data-ttu-id="a676f-140">Obtient une valeur enregistrée par la méthode <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />, avec la possibilité de ne pas rechercher de transactions parent.</span><span class="sxs-lookup"><span data-stu-id="a676f-140">Gets a value saved by the <see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /> method, with the option of not searching parent transactions.</span></span></summary>
        <returns><span data-ttu-id="a676f-141"><see langword="true" /> si la valeur a été correctement récupérée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a676f-141"><see langword="true" /> if the value was successfully retrieved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>