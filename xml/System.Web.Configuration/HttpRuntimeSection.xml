<Type Name="HttpRuntimeSection" FullName="System.Web.Configuration.HttpRuntimeSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a56e9e6f5a646d42c51e5adb091051db92982102" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66005516" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRuntimeSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpRuntimeSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpRuntimeSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRuntimeSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRuntimeSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type HttpRuntimeSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Configure le runtime HTTP ASP.NET. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection> vous permet de gérer ces paramètres qui affectent le comportement du runtime ASP.NET.  
  
 Il fait référence au nœud dans le fichier de configuration qui est indiqué par la `<httpRuntime>` élément et peut être utilisée n’importe quel niveau dans la hiérarchie de configuration.  
  
 Le <xref:System.Web.Configuration.HttpRuntimeSection> section contient des directives qui gèrent les éléments suivants :  
  
-   Délais d’expiration de l’exécution de la demande.  
  
-   Directives de planification des threads au niveau de l’application.  
  
-   Directives qui régissent les limites de file d’attente d’application.  
  
-   Longueur de la requête.  
  
 Lorsque vous exécutez plusieurs applications dans un processus unique, vous devez verrouiller cette section afin que les applications ne peuvent pas élever leur priorité relative entre eux.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRuntimeSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRuntimeSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> en utilisant les paramètres par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.Configuration.HttpRuntimeSection> objet.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#2)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationAllowDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowDynamicModuleRegistration">
      <MemberSignature Language="C#" Value="public bool AllowDynamicModuleRegistration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDynamicModuleRegistration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDynamicModuleRegistration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDynamicModuleRegistration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDynamicModuleRegistration : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("allowDynamicModuleRegistration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les appels de méthode <see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" /> sont autorisés. La valeur par défaut est <see langword="true" />.</summary>
        <value><see langword="true" /> si les appels de méthode <see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" /> sont autorisés ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApartmentThreading">
      <MemberSignature Language="C#" Value="public bool ApartmentThreading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApartmentThreading" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberSignature Language="VB.NET" Value="Public Property ApartmentThreading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApartmentThreading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApartmentThreading : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("apartmentThreading", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le cloisonnement des threads d'application est activé.</summary>
        <value><see langword="true" /> si le cloisonnement des threads d'application est activé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut est `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRequestQueueLimit">
      <MemberSignature Language="C#" Value="public int AppRequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppRequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRequestQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppRequestQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppRequestQueueLimit : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("appRequestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique le nombre maximal de demandes qu'ASP.NET place en file d'attente pour l'application.</summary>
        <value>Nombre maximal de demandes pouvant être placées en file d'attente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Files d’attente les demandes lorsqu’il n’y a pas suffisamment de threads libres pour les traiter.  
  
> [!NOTE]
>  Lorsque le nombre de demandes en attente dépasse la limite imposée par ce paramètre, les demandes entrantes sont rejetées avec une « 503 - serveur occupé » erreur.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#16)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("asyncPreloadMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le mode de l'entité de requête qui est préchargé de façon asynchrone.</summary>
        <value>Mode de l'entité de requête.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété doit être définie avant <xref:System.Web.RequestNotification.ExecuteRequestHandler> est défini dans le pipeline ASP.NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRegexMatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultRegexMatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultRegexMatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultRegexMatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultRegexMatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRegexMatchTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("defaultRegexMatchTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le délai dont dispose une expression régulière pour effectuer une correspondance.</summary>
        <value>Durée autorisée pour la correspondance d'expression régulière.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayNotificationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DelayNotificationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DelayNotificationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayNotificationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DelayNotificationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DelayNotificationTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("delayNotificationTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le délai de notification de modification.</summary>
        <value>Durée, en secondes, qui spécifie le délai de notification de modification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez résoudre le problème provoqué par certaines applications antiviruss, lors de l’écriture des informations dans les fichiers analysés, en définissant le <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A> propriété.  
  
> [!NOTE]
>  Le problème se produit parce que les modifications de fichiers provoquées par l’analyse antivirus ne peut pas être distinguées de celles effectuées par l’utilisateur. Le résultat final est le redémarrage de l’application dont les fichiers sont en cours d’analyse.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#11)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enable : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le domaine d'application est activé.</summary>
        <value><see langword="true" /> si le domaine d'application est activé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce paramètre affecte le domaine d’application ou les domaines au niveau du nœud actuel et en dessous.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.Enable%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#14)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#14)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c6d99815-e022-4d2c-9420-1d7ab5b9d504">Utilisation des domaines d'application</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeaderChecking">
      <MemberSignature Language="C#" Value="public bool EnableHeaderChecking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeaderChecking" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeaderChecking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeaderChecking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeaderChecking : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableHeaderChecking", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la vérification d'en-tête est activée.</summary>
        <value><see langword="true" /> si la vérification d'en-tête est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objectif de cette propriété est d’activer le codage des caractères de saut de ligne, retour chariot `\r` et `\n`, qui se trouvent dans les en-têtes de réponse.  
  
 Dans les en-têtes de réponse sortants, les caractères qui sont représentés par les codes 0x1F et au-dessous sont encodés et également le caractère 0x7F (caractère de suppression). La seule exception est que le caractère 0 x 09 (tabulation) est non modifié.  
  
 Cet encodage permet d’éviter les attaques par injection qui exploitent une application qui renvoie des données non fiables contenues dans l’en-tête.  
  
> [!NOTE]
>  Cette propriété ne s’applique pas à la ligne d’état elle-même (code d’état et description de l’état), mais il doit s’appliquer à d’autres en-têtes. Bien que [ &lt;httpRuntime&gt; ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) peut être définie à tout niveau, cette propriété est applicable uniquement au niveau ordinateur et application.  
  
 Lorsque cette propriété a `true`, qui est la valeur par défaut, le `\r` ou `\n` caractères trouvés dans un en-tête de réponse sont codés en `%0d` et `%0a`. Cette action annule les attaques par injection d’en-tête en rendant la partie material injectée de la même ligne d’en-tête. Cela peut arrêter la réponse mais que vous ne devez pas ouvrir de vecteurs d’attaque contre le client. Renvoyant non fiables de données ne sont jamais une bonne idée dans n’importe quelle situation, cependant.  
  
> [!IMPORTANT]
>  Les continuations d’en-têtes HTTP s’appuient sur les en-têtes s’étendant sur plusieurs lignes et requièrent de nouvelles lignes dans les. Si vous devez utiliser des continuations d’en-tête, vous devez définir le <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A> propriété `false`. Étant donné qu’un impact sur les performances à partir de la consultation des en-têtes, si vous êtes certain que vous effectuez déjà les vérifications de droite, la désactivation de cette fonctionnalité peut améliorer les performances de votre application. Avant de désactiver cette fonctionnalité, veillez à ce que vous prenez déjà les précautions correctes dans cette zone.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#20)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/985fe5d8-eb71-4024-b361-41fbdc1618d8">HTTP</related>
      </Docs>
    </Member>
    <Member MemberName="EnableKernelOutputCache">
      <MemberSignature Language="C#" Value="public bool EnableKernelOutputCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableKernelOutputCache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableKernelOutputCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableKernelOutputCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableKernelOutputCache : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableKernelOutputCache", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la mise en cache de sortie est activée.</summary>
        <value><see langword="true" /> si la mise en cache de sortie est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour mettre en cache une réponse, les critères suivants doivent être remplis :  
  
-   La mise en cache doit être explicitement activée par une directive de page ou par l’API de mise en cache.  
  
-   La mise en cache doit avoir une stratégie d’expiration afin que le noyau sache quand l’ignorer.  
  
-   La mise en cache ne peut pas avoir des en-têtes de variables ou des paramètres.  
  
-   La demande ne doit pas exiger d’authentification.  
  
> [!NOTE]
>  Cette propriété est pertinente uniquement lorsque Internet Information Services (IIS) version 6.0 ou version ultérieure est installé.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#3)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce">Fonctionnalités de la mise en cache ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b">Vue d'ensemble des performances</related>
      </Docs>
    </Member>
    <Member MemberName="EnableVersionHeader">
      <MemberSignature Language="C#" Value="public bool EnableVersionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVersionHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableVersionHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableVersionHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableVersionHeader : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableVersionHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si ASP.NET doit sortir un en-tête de version.</summary>
        <value><see langword="true" /> si la sortie de l'en-tête de version est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet attribut est utilisé par Visual Studio pour déterminer quelle version d’ASP.NET est en cours d’utilisation. Il n’est pas nécessaire pour les sites de production et peut être désactivé.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#17)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#17)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/775ad4fb-914f-453c-98ef-ce1089b6f903">Versioning des assemblys</related>
      </Docs>
    </Member>
    <Member MemberName="EncoderType">
      <MemberSignature Language="C#" Value="public string EncoderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncoderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncoderType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncoderType : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("encoderType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom d'un type personnalisé qui peut être utilisé pour gérer l'encodage HTML et URL.</summary>
        <value>Nom d'un type qui peut être utilisé pour gérer l'encodage HTML et URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET utilise le <xref:System.Web.Util.HttpEncoder> type en tant que le gestionnaire par défaut pour les tâches d’encodage HTML et URL.  
  
 Pour personnaliser le comportement d’encodage, vous pouvez créer une classe qui hérite de la <xref:System.Web.Util.HttpEncoder> type. Dans le fichier de configuration pour une application, vous définissez ensuite la <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> attribut de la `httpRuntime` élément pour le nom qualifié complet de chaîne du type personnalisé. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ExecutionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ExecutionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ExecutionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("executionTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée d'exécution autorisée pour la demande.</summary>
        <value>Valeur <see cref="T:System.TimeSpan" /> qui indique la durée d'exécution autorisée pour la demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> propriété indique le nombre maximal de secondes pendant lesquelles une demande est autorisée à s’exécuter avant son arrêt automatique par ASP.NET. La valeur par défaut est de 110 secondes. Ce délai d’expiration s’applique uniquement si l’attribut de débogage dans le `<compilation>` élément est défini sur `false`.  
  
 Si le délai expire, une exception est levée. Vous pouvez enregistrer les informations associées dans le dossier d’Application du journal des événements. Pour cela, l’activation de l’application sur l’intégrité dans le `<healthMonitoring>` élément de configuration.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#10)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">La durée d'exécution de la requête dépasse la limite définie par le délai d'attente d'exécution.</exception>
      </Docs>
    </Member>
    <Member MemberName="FcnMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FcnMode FcnMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.FcnMode FcnMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FcnMode As FcnMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FcnMode FcnMode { System::Web::Configuration::FcnMode get(); void set(System::Web::Configuration::FcnMode value); };" />
      <MemberSignature Language="F#" Value="member this.FcnMode : System.Web.Configuration.FcnMode with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("fcnMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FcnMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur d'énumération spécifiant le mode de notification des modifications de fichier.</summary>
        <value>Valeur d'énumération de <see cref="T:System.Web.Configuration.FcnMode" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxQueryStringLength">
      <MemberSignature Language="C#" Value="public int MaxQueryStringLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxQueryStringLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxQueryStringLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxQueryStringLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxQueryStringLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("maxQueryStringLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la longueur maximale possible, en nombre de caractères, d'une chaîne de requête dans une requête HTTP.</summary>
        <value>Longueur maximale de la chaîne de requête, exprimée en nombre de caractères. La valeur par défaut est 2048.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength%2A> propriété peut être un entier, zéro ou supérieur. Si la longueur de chaîne de requête dépasse la limite de taille, ASP.NET retourne un `HTTP 400` code d’état (demande incorrecte).  
  
> [!NOTE]
>  Très petites valeurs peuvent rendre un site Web inutilisable.  
  
 Vous pouvez définir cette valeur dans un fichier de configuration en définissant le `maxQueryStringLength` attribut de la `httpRuntime` élément. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
> [!NOTE]
>  Il existe également un paramètre IIS qui contrôle la longueur de chaîne de requête. Consultez le `maxQueryString` attribut [limites des demandes \<requestLimits >](http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestLength">
      <MemberSignature Language="C#" Value="public int MaxRequestLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRequestLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRequestLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRequestLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la taille de demande maximale.</summary>
        <value>Taille de demande maximale en kilo-octets. La taille par défaut est de 4 096 Ko (4 Mo).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> propriété spécifie la limite du seuil de mise en mémoire tampon du flux d’entrée. Par exemple, cette limite peut être utilisée pour empêcher les refus de service qui sont générés par les utilisateurs qui publient des fichiers volumineux sur le serveur.  
  
 La valeur assignée à cette propriété doit être supérieure ou égale à la valeur affectée à la <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir des cours <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> valeur de propriété.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#19)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est inférieure à <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxUrlLength">
      <MemberSignature Language="C#" Value="public int MaxUrlLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUrlLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxUrlLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxUrlLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxUrlLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("maxUrlLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la longueur maximale possible, en nombre de caractères, d'une URL dans une requête HTTP.</summary>
        <value>Longueur de l'URL, exprimée en nombre de caractères. La valeur par défaut est 260.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> propriété peut être un entier, zéro ou supérieur.  
  
> [!NOTE]
>  Très petites valeurs peuvent rendre un site Web inutilisable.  
  
 Si la longueur de l’URL de requête (qui est la valeur de la <xref:System.Web.HttpRequest.Path%2A> propriété) dépasse la limite de taille configurée, ASP.NET retourne un code d’état HTTP 400 (demande incorrecte)  
  
 Vous pouvez définir cette valeur dans un fichier de configuration en définissant le <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> attribut de la `httpRuntime` élément. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWaitChangeNotification">
      <MemberSignature Language="C#" Value="public int MaxWaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWaitChangeNotification { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWaitChangeNotification : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxWaitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'intervalle de temps entre la première notification de modification et le moment auquel le domaine d'application est redémarré.</summary>
        <value>Intervalle de temps maximal, en secondes, entre la première notification de modification et le moment auquel le domaine d'application est redémarré.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une valeur suggérée pour le <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A> propriété dépasserait la longueur de l’achèvement d’une copie pendant le processus de déploiement.  
  
> [!NOTE]
>  Le contenu peut sembler mis en cache si vous l’affichez immédiatement après un processus de copie et de déploiement. Ce comportement est normal. Les modifications prennent effet lorsque le délai d’attente que vous avez spécifié est écoulé.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#4)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/app-domains/application-domains.md">Présentation de domaines d’application</related>
      </Docs>
    </Member>
    <Member MemberName="MinFreeThreads">
      <MemberSignature Language="C#" Value="public int MinFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinFreeThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinFreeThreads : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre minimal de threads qui doivent être libres avant qu'une demande de ressources dans cette portée de configuration puisse être traitée.</summary>
        <value>Nombre minimal de threads libres dans le pool de threads CLR (common language runtime) avant qu'une demande dans cette portée de configuration puisse être traitée. La valeur par défaut est <c>8</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> propriété définit le nombre minimal de threads libres pour exécuter une requête. Si un nombre suffisant de threads n’est pas disponible, la demande reste en file d’attente et des vérifications périodiques de la disponibilité des threads continuera jusqu'à ce que le nombre de threads requis sont présents. La valeur par défaut est `8`.  
  
> [!NOTE]
>  ASP.NET conserve ces threads libres pour les demandes qui nécessitent des threads supplémentaires leur traitement.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#8)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">Threads et threading</related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">Utilisation des threads et du threading</related>
      </Docs>
    </Member>
    <Member MemberName="MinLocalRequestFreeThreads">
      <MemberSignature Language="C#" Value="public int MinLocalRequestFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLocalRequestFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLocalRequestFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLocalRequestFreeThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLocalRequestFreeThreads : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minLocalRequestFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre minimal de threads libres nécessaires pour traiter une demande locale.</summary>
        <value>Nombre minimal de threads libres assignés aux demandes locales. La valeur par défaut est 4.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A> propriété définit le nombre de threads libres qu’ASP.NET garde disponibles pour permettre l’exécution de nouvelles demandes locales. L’objectif est d’éviter un blocage possible avec une nouvelle entrée récursive dans le serveur Web.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#5)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">Threads et threading</related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">Utilisation des threads et du threading</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelaxedUrlToFileSystemMapping">
      <MemberSignature Language="C#" Value="public bool RelaxedUrlToFileSystemMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property RelaxedUrlToFileSystemMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RelaxedUrlToFileSystemMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RelaxedUrlToFileSystemMapping : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("relaxedUrlToFileSystemMapping", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l’URL dans une requête HTTP doit obligatoirement être un chemin d’accès de fichier Windows valide.</summary>
        <value><see langword="true" /> si l'URL ne doit pas nécessairement se conformer aux règles de chemin d'accès Windows ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> propriété détermine le mode de validation de l’URL dans une demande HTTP entrante. Si cette propriété est `false`, l’URL est validée en utilisant les mêmes règles qui déterminent si un chemin d’accès de système de fichiers Windows est valide.  
  
 Vous pouvez définir cette valeur dans un fichier de configuration en définissant le <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> attribut de la `httpRuntime` élément. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLengthDiskThreshold">
      <MemberSignature Language="C#" Value="public int RequestLengthDiskThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLengthDiskThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLengthDiskThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestLengthDiskThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestLengthDiskThreshold : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestLengthDiskThreshold", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le seuil de mise en mémoire tampon du flux d'entrée.</summary>
        <value>Nombre d'octets qui indique le seuil de mise en mémoire tampon du flux d'entrée. La valeur par défaut est de 80 kilo-octets.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> propriété spécifie la limite de seuil mise en mémoire tampon de flux d’entrée dans le nombre d’octets. Sa valeur ne doit pas dépasser la <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> valeur de propriété. Une fois une entité de demande dépasse ce seuil, il est mis en mémoire tampon en toute transparence sur disque.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#12)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est supérieure à <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestPathInvalidCharacters">
      <MemberSignature Language="C#" Value="public string RequestPathInvalidCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPathInvalidCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathInvalidCharacters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPathInvalidCharacters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPathInvalidCharacters : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("requestPathInvalidCharacters", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une liste de caractères spécifiés comme étant non valides dans un chemin d’accès qui fait partie d’une requête HTTP.</summary>
        <value>Liste de caractères non valides séparée par des virgules. La liste suivante contient le jeu de caractères non valides par défaut : 
 <c>&lt;,&gt;,*,%,&amp;,:,\\</c></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir cette valeur dans un fichier de configuration, vous pouvez affecter une chaîne séparée par des virgules de caractères à la `requestPathInvalidCharacters` attribut de la `httpRuntime` élément. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationMode">
      <MemberSignature Language="C#" Value="public Version RequestValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RequestValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationMode As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ RequestValidationMode { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestValidationMode : Version with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("requestValidationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un numéro de version qui indique le mode de validation spécifique à la version d’ASP.NET qui sera utilisé.</summary>
        <value>Valeur qui indique le mode de validation spécifique à la version d’ASP.NET qui sera utilisé. La valeur par défaut est <c>4.5</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode%2A> propriété spécifie l’approche de validation ASP.NET qui sera utilisée. Cela peut être l’algorithme qui est utilisé dans les versions d’ASP.NET antérieures à la version 4, ou la version qui est utilisée dans [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. La propriété peut être définie sur les valeurs suivantes :  
  
-   `4.5 (the default).` Dans ce mode, les valeurs sont chargées en différé, autrement dit, ils ne sont pas lus jusqu'à ce qu’ils sont demandés.  
  
-   `4.0` Le <xref:System.Web.HttpRequest> objet définit en interne un indicateur qui indique que la validation de la demande doit être déclenchée chaque fois que l’accès à des données de demande HTTP. Cela garantit que la validation de demande est déclenchée avant que les données telles que les cookies et les URL sont accessibles lors de la demande. Les paramètres de validation de demande de la `<pages>` élément (le cas échéant) dans le fichier de configuration ou de la [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive dans une page individuelle sont ignorés.  
  
-   `2.0`. Validation de la demande est activée seulement pour les pages, pas pour toutes les requêtes HTTP. En outre, les paramètres de validation de demande de la `<pages>` élément (le cas échéant) dans le fichier de configuration ou de la [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive dans une page individuelle sont utilisés pour déterminer les demandes de page à valider.  

-   `0.0`. Validation de la demande est désactivée pour l’application. `0.0` est reconnu uniquement dans ASP.NET 4.6 et versions ultérieures.
  
 La valeur que vous affectez à cette propriété n’est pas validée pour correspondre à une version spécifique d’ASP.NET. 

 Dans ASP.NET 4.5 et les versions antérieures toute numérique valeur inférieure à `4.0` (par exemple, `3.7`, `2.9`, ou `2.0`) est interprété comme `2.0`. Toute valeur supérieure à `4.5` est interprété comme `4.5`.  

 Dans ASP.NET 4.6 et versions ultérieures toute numérique valeur supérieure `0.0` et moins de `4.0` (par exemple, `3.7`, `2.9`, ou `1.0`) est interprété comme `2.0`. Toute valeur supérieure à `4.5` est interprété en tant que `4.5`
  
 Pour définir cette valeur dans un fichier de configuration, vous pouvez affecter une valeur à la `requestValidationMode` attribut de la `httpRuntime` élément. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationType">
      <MemberSignature Language="C#" Value="public string RequestValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestValidationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestValidationType : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("requestValidationType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom d'un type utilisé pour valider les requêtes HTTP.</summary>
        <value>Nom d'un type qui gère les tâches de validation de requête. La valeur par défaut est le nom complet du type <see cref="T:System.Web.Util.RequestValidator" /> utilisé par ASP.NET pour la validation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour personnaliser le comportement de validation de demande ASP.NET, vous pouvez créer une classe qui hérite de la <xref:System.Web.Util.RequestValidator> type. Dans le fichier de configuration pour une application, vous définissez ensuite la `requestValidationType` attribut de la `httpRuntime` élément pour le nom qualifié complet de chaîne du type personnalisé. Pour plus d’informations, consultez [httpRuntime, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireRootedSaveAsPath">
      <MemberSignature Language="C#" Value="public bool RequireRootedSaveAsPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireRootedSaveAsPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireRootedSaveAsPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireRootedSaveAsPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireRootedSaveAsPath : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireRootedSaveAsPath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le nom de fichier doit être un chemin d’accès complet au fichier physique.</summary>
        <value><see langword="true" /> si le nom de fichier doit être un chemin d'accès complet au fichier physique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A> propriété spécifie si le fichier de nom de l’argument de `SaveAs` méthodes doivent être un chemin d’accès racine. Le processus ASP.NET doit avoir l’autorisation de créer des fichiers dans l’emplacement spécifié.  
  
 Pour plus d’informations, consultez les méthodes de sauvegarde définies dans le <xref:System.Configuration.Configuration> classe.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#7)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SendCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SendCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendCacheControlHeader : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sendCacheControlHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l’en-tête <c>cache-control:private</c> est envoyé dans le cadre de la réponse HTTP.</summary>
        <value><see langword="true" /> Si le <c>cache-contrôle : private</c> en-tête doit être envoyé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.HttpResponse> classe vérifie à la fois le <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A?displayProperty=nameWithType> propriété et la <xref:System.Web.Configuration.OutputCacheSection.SendCacheControlHeader%2A?displayProperty=nameWithType> propriété afin de déterminer s’il faut envoyer le `cache-control:private` en-tête dans la réponse HTTP. Si des propriétés sont définie sur `false`, l’en-tête ne sera pas envoyé. Quand l’en-tête cache-control est définie sur `private`, puis le client ne mettra pas en cache la réponse dans un cache partagé.  
  
 Prise en charge pour le <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> propriété dans la <xref:System.Web.Configuration.HttpRuntimeSection> classe est fournie pour la compatibilité avec les applications héritées ; cette propriété est obsolète dans le .NET Framework version 2.0. Pour plus d'informations, consultez la classe <xref:System.Web.Configuration.OutputCacheSection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="httpRuntimeSection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée d'inactivité autorisée de l'application avant qu'elle se ferme.</summary>
        <value>Valeur <see cref="T:System.TimeSpan" /> qui indique la durée d'inactivité autorisée de l'application avant qu'elle se ferme.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A> propriété indique la quantité de temps avant d’une application s’arrête normalement. La valeur par défaut est 90 secondes.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#6)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public string TargetFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFramework As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFramework { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetFramework : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("targetFramework", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le .NET Framework cible.</summary>
        <value>.NET Framework cible.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFullyQualifiedRedirectUrl">
      <MemberSignature Language="C#" Value="public bool UseFullyQualifiedRedirectUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFullyQualifiedRedirectUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFullyQualifiedRedirectUrl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseFullyQualifiedRedirectUrl : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useFullyQualifiedRedirectUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les redirections côté client sont complètes.</summary>
        <value><see langword="true" /> si les redirections côté client sont complètes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A> propriété indique si les redirections côté client sont qualifiées (sous la forme http://server/path) ou si les redirections relatives sont envoyées à la place au client.  
  
> [!NOTE]
>  Certains navigateurs peuvent avoir des problèmes lors du chargement des pages dans les sessions sans cookies lorsque cette valeur est `false`.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#15)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitChangeNotification">
      <MemberSignature Language="C#" Value="public int WaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WaitChangeNotification { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WaitChangeNotification : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("waitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée d'attente avant la notification de modification suivante.</summary>
        <value>Durée d'attente, en secondes, avant la notification de modification suivante qui déclenche le redémarrage d'un domaine d'application. La valeur par défaut est 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une valeur suggérée pour <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A> dépasserait la longueur de l’achèvement d’une copie pendant le processus de déploiement.  
  
> [!NOTE]
>  Le contenu peut sembler mis en cache si vous consultez immédiatement après une copie et processus de déploiement. Ce comportement est normal. Les modifications prennent effet lorsque le délai d’attente que vous avez spécifié est écoulé.  
  
   
  
## Examples  
 L'exemple suivant indique comment utiliser la propriété <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A>.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#18)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/app-domains/application-domains.md">Présentation de domaines d’application</related>
      </Docs>
    </Member>
  </Members>
</Type>
