<Type Name="IRangeValueProvider" FullName="System.Windows.Automation.Provider.IRangeValueProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a99486cf2c7dcaccd22a683e6d85f27bd710a98f" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65013098" /></Metadata><TypeSignature Language="C#" Value="public interface IRangeValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRangeValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRangeValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRangeValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRangeValueProvider" />
  <TypeSignature Language="F#" Value="type IRangeValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("36dc7aef-33e6-4691-afe1-2be7274b3d33")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0f227-101">Expose des méthodes et des propriétés pour prendre en charge l’accès du client UI Automation aux contrôles auxquels une valeur comprise dans une plage peut être affectée.</span><span class="sxs-lookup"><span data-stu-id="0f227-101">Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f227-102">Implémenté sur un fournisseur UI Automation qui doit prendre en charge la <xref:System.Windows.Automation.RangeValuePattern> modèle de contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.RangeValuePattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="0f227-103">Vue d'ensemble des modèles de contrôle UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-103">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="0f227-104">Implémentation de fournisseur côté serveur UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-104">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="0f227-105">Implémentation de fournisseur côté client UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-105">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="0f227-106">Prendre en charge des modèles de contrôle dans un fournisseur UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-106">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-107">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-107">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f227-108">Obtient une valeur qui spécifie si la valeur d’un contrôle est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0f227-108">Gets a value that specifies whether the value of a control is read-only.</span></span></summary>
        <value><span data-ttu-id="0f227-109"><see langword="true" /> si la valeur est en lecture seule ; <see langword="false" /> si elle peut être modifiée.</span><span class="sxs-lookup"><span data-stu-id="0f227-109"><see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f227-110">L’exemple suivant illustre une implémentation de cette méthode pour un contrôle qui n’est pas en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="0f227-110">The following example shows an implementation of this method for a control that is not read-only.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#isreadonly)]
 [!code-vb[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-111">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-111">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public double LargeChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LargeChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LargeChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LargeChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.LargeChange : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f227-112">Obtient la valeur qui est ajoutée à ou soustraite de la <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> propriété lorsqu’une modification majeure est effectuée, comme avec la PAGE suivante de clé.</span><span class="sxs-lookup"><span data-stu-id="0f227-112">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a large change is made, such as with the PAGE DOWN key.</span></span></summary>
        <value><span data-ttu-id="0f227-113">La valeur de changement important pris en charge par le contrôle ou nul (<see langword="Nothing" /> en Visual Basic) si le contrôle ne prend pas en charge <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</span><span class="sxs-lookup"><span data-stu-id="0f227-113">The large-change value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f227-114">L’exemple suivant illustre une implémentation de cette méthode pour un contrôle qui a une valeur de changement important de 5.0.</span><span class="sxs-lookup"><span data-stu-id="0f227-114">The following example shows an implementation of this method for a control that has a large change value of 5.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#largechange)]
 [!code-vb[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#largechange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-115">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-115">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f227-116">Obtient la valeur de plage maximale prise en charge par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-116">Gets the maximum range value supported by the control.</span></span></summary>
        <value><span data-ttu-id="0f227-117">La valeur maximale prise en charge par le contrôle ou nul (<see langword="Nothing" /> en Visual Basic) si le contrôle ne prend pas en charge <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</span><span class="sxs-lookup"><span data-stu-id="0f227-117">The maximum value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f227-118">L’exemple suivant illustre une implémentation de cette méthode pour un contrôle qui a une valeur maximale 255.0.</span><span class="sxs-lookup"><span data-stu-id="0f227-118">The following example shows an implementation of this method for a control that has a maximum value of 255.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#maximum)]
 [!code-vb[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#maximum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-119">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-119">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f227-120">Obtient la valeur de plage minimale prise en charge par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-120">Gets the minimum range value supported by the control.</span></span></summary>
        <value><span data-ttu-id="0f227-121">La valeur minimale prise en charge par le contrôle ou nul (<see langword="Nothing" /> en Visual Basic) si le contrôle ne prend pas en charge <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</span><span class="sxs-lookup"><span data-stu-id="0f227-121">The minimum value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f227-122">L’exemple suivant illustre une implémentation de cette méthode pour un contrôle qui a une valeur minimale de 0.0.</span><span class="sxs-lookup"><span data-stu-id="0f227-122">The following example shows an implementation of this method for a control that has a minimum value of 0.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#minimum)]
 [!code-vb[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#minimum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-123">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-123">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : double -&gt; unit" Usage="iRangeValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0f227-124">Valeur à définir.</span><span class="sxs-lookup"><span data-stu-id="0f227-124">The value to set.</span></span></param>
        <summary><span data-ttu-id="0f227-125">Définit la valeur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-125">Sets the value of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f227-126">L’ensemble de la valeur réelle dépend de l’implémentation du contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-126">The actual value set depends on the control implementation.</span></span> <span data-ttu-id="0f227-127">Le contrôle peut arrondir demandé `value` démarré ou arrêté.</span><span class="sxs-lookup"><span data-stu-id="0f227-127">The control may round the requested `value` up or down.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f227-128">L’exemple suivant montre une implémentation possible de cette méthode pour un contrôle personnalisé.</span><span class="sxs-lookup"><span data-stu-id="0f227-128">The following example shows one possible implementation of this method for a custom control.</span></span> <span data-ttu-id="0f227-129">Le contrôle personnalisé affiche sa valeur de plage par la valeur alpha de sa couleur de base.</span><span class="sxs-lookup"><span data-stu-id="0f227-129">The custom control displays its range value through the alpha value of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#setvalue)]
 [!code-vb[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0f227-130">Quand <paramref name="value" /> est inférieure à la valeur minimale ou supérieure à la valeur maximale du contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-130">When <paramref name="value" /> is less than the minimum or greater than the maximum value of the control.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-131">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-131">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public double SmallChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SmallChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmallChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SmallChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.SmallChange : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f227-132">Obtient la valeur qui est ajoutée à ou soustraite de la <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> propriété lorsqu’une petite modification est effectuée, par exemple avec une touche de direction.</span><span class="sxs-lookup"><span data-stu-id="0f227-132">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a small change is made, such as with an arrow key.</span></span></summary>
        <value><span data-ttu-id="0f227-133">La valeur SmallChange ou null (<see langword="Nothing" /> en Visual Basic) si le contrôle ne prend pas en charge <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</span><span class="sxs-lookup"><span data-stu-id="0f227-133">The small-change value or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f227-134">L’exemple suivant illustre une implémentation de cette méthode pour un contrôle qui a une petite modification valeur de 1.0.</span><span class="sxs-lookup"><span data-stu-id="0f227-134">The following example shows an implementation of this method for a control that has a small change value of 1.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#smallchange)]
 [!code-vb[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#smallchange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-135">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-135">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f227-136">Obtient la valeur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="0f227-136">Gets the value of the control.</span></span></summary>
        <value><span data-ttu-id="0f227-137">La valeur de contrôle ou nul (<see langword="Nothing" /> en Visual Basic) si le contrôle ne prend pas en charge <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</span><span class="sxs-lookup"><span data-stu-id="0f227-137">The value of the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f227-138">L’exemple suivant illustre une implémentation de cette méthode pour un contrôle personnalisé.</span><span class="sxs-lookup"><span data-stu-id="0f227-138">The following example shows an implementation of this method for a custom control.</span></span> <span data-ttu-id="0f227-139">Dans le cadre de cet exemple, le contrôle personnalisé affiche la valeur via le paramètre alpha de sa couleur de base.</span><span class="sxs-lookup"><span data-stu-id="0f227-139">For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#value)]
 [!code-vb[UIAIRangeValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#value)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
        <related type="Article" href="https://msdn.microsoft.com/library/225feaa4-918e-418b-938e-7389338d0a69"><span data-ttu-id="0f227-140">Implémentation du modèle de contrôle RangeValue d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="0f227-140">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>