<Type Name="IWindowProvider" FullName="System.Windows.Automation.Provider.IWindowProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6b93eff44e26ff3dc4bf761ae2182ed8e0cd795" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65012315" /></Metadata><TypeSignature Language="C#" Value="public interface IWindowProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWindowProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IWindowProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWindowProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWindowProvider" />
  <TypeSignature Language="F#" Value="type IWindowProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1dd7c-101">Expose des méthodes et des propriétés pour prendre en charge l’accès client UI Automation aux contrôles qui fournissent des fonctionnalités fondamentales basées sur des fenêtres dans une interface graphique utilisateur (GUI) traditionnelle.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-101">Exposes methods and properties to support UI Automation client access to controls that provide fundamental window-based functionality within a traditional graphical user interface (GUI).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd7c-102">Implémenté sur un fournisseur UI Automation qui doit prendre en charge la <xref:System.Windows.Automation.WindowPattern> modèle de contrôle.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.WindowPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.WindowPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="1dd7c-103">Vue d'ensemble des modèles de contrôle UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-103">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="1dd7c-104">Implémentation de fournisseur côté serveur UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-104">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="1dd7c-105">Implémentation de fournisseur côté client UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-105">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="1dd7c-106">Prendre en charge des modèles de contrôle dans un fournisseur UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-106">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-107">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-107">Implementing the UI Automation Window Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iWindowProvider.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dd7c-108">Tente de fermer la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-108">Attempts to close the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd7c-109"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> doit retourner immédiatement sans blocage.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-109"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> must return immediately without blocking.</span></span>  
  
 <span data-ttu-id="1dd7c-110"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> déclenche l'événement <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent>.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-110"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> raises the <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> event.</span></span> <span data-ttu-id="1dd7c-111">Si possible, l’événement doit être déclenché une fois que le contrôle a terminé son action associée.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-111">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="1dd7c-112">Lorsqu’elle est appelée sur un contrôle de volet de fractionnement, cette méthode ferme le volet et supprime le fractionnement associé.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-112">When called on a split pane control, this method will close the pane and remove the associated split.</span></span> <span data-ttu-id="1dd7c-113">Cette méthode peut également fermer tous les autres volets, en fonction de l’implémentation.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-113">This method might also close all other panes, depending on implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1dd7c-114">Lorsque la commande ne peut pas effectuer l’action demandée.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-114">When the control is unable to perform the requested action.</span></span></exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><span data-ttu-id="1dd7c-115">Lorsque l’élément cible n’est plus disponible (par exemple, la fenêtre s’est fermée).</span><span class="sxs-lookup"><span data-stu-id="1dd7c-115">When the target element is no longer available (for example, the window has closed).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-116">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-116">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InteractionState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowInteractionState InteractionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowInteractionState InteractionState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractionState As WindowInteractionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowInteractionState InteractionState { System::Windows::Automation::WindowInteractionState get(); };" />
      <MemberSignature Language="F#" Value="member this.InteractionState : System.Windows.Automation.WindowInteractionState" Usage="System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowInteractionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd7c-117">Obtient l’état de l’interaction de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-117">Gets the interaction state of the window.</span></span></summary>
        <value><span data-ttu-id="1dd7c-118"><see cref="T:System.Windows.Automation.WindowInteractionState" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-118">The <see cref="T:System.Windows.Automation.WindowInteractionState" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-119">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-119">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsModal">
      <MemberSignature Language="C#" Value="public bool IsModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModal : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd7c-120">Obtient une valeur qui spécifie si la fenêtre est modale.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-120">Gets a value that specifies whether the window is modal.</span></span></summary>
        <value><span data-ttu-id="1dd7c-121"><see langword="true" /> Si la fenêtre est modale ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-121"><see langword="true" /> if the window is modal; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-122">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-122">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsTopmost">
      <MemberSignature Language="C#" Value="public bool IsTopmost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTopmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTopmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTopmost { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTopmost : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd7c-123">Obtient une valeur qui spécifie si la fenêtre est l’élément le plus élevé dans l’ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-123">Gets a value that specifies whether the window is the topmost element in the z-order.</span></span></summary>
        <value><span data-ttu-id="1dd7c-124"><see langword="true" /> si la fenêtre est l’élément le plus élevé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-124"><see langword="true" /> if the window is topmost; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-125">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-125">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Maximizable">
      <MemberSignature Language="C#" Value="public bool Maximizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Maximizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Maximizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd7c-126">Obtient une valeur qui spécifie si la fenêtre peut être agrandie.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-126">Gets a value that specifies whether the window can be maximized.</span></span></summary>
        <value><span data-ttu-id="1dd7c-127"><see langword="true" /> Si la fenêtre peut être agrandie ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-127"><see langword="true" /> if the window can be maximized; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-128">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-128">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Minimizable">
      <MemberSignature Language="C#" Value="public bool Minimizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Minimizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Minimizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd7c-129">Obtient une valeur qui spécifie si la fenêtre peut être réduite.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-129">Gets a value that specifies whether the window can be minimized.</span></span></summary>
        <value><span data-ttu-id="1dd7c-130"><see langword="true" /> Si la fenêtre peut être réduite ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-130"><see langword="true" /> if the window can be minimized; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-131">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-131">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetVisualState">
      <MemberSignature Language="C#" Value="public void SetVisualState (System.Windows.Automation.WindowVisualState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVisualState(valuetype System.Windows.Automation.WindowVisualState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVisualState (state As WindowVisualState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVisualState(System::Windows::Automation::WindowVisualState state);" />
      <MemberSignature Language="F#" Value="abstract member SetVisualState : System.Windows.Automation.WindowVisualState -&gt; unit" Usage="iWindowProvider.SetVisualState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Automation.WindowVisualState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="1dd7c-132">État visuel demandé de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-132">The requested visual state of the window.</span></span></param>
        <summary><span data-ttu-id="1dd7c-133">Modifie l’état visuel de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-133">Changes the visual state of the window.</span></span> <span data-ttu-id="1dd7c-134">Par exemple, la réduit ou l’agrandit.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-134">For example, minimizes or maximizes it.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1dd7c-135">Quand la commande ne prend pas en charge le comportement demandé.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-135">When the control does not support the requested behavior.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-136">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-136">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisualState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowVisualState VisualState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowVisualState VisualState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisualState As WindowVisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowVisualState VisualState { System::Windows::Automation::WindowVisualState get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualState : System.Windows.Automation.WindowVisualState" Usage="System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowVisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dd7c-137">Obtient l’état visuel de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-137">Gets the visual state of the window.</span></span></summary>
        <value><span data-ttu-id="1dd7c-138">L’état visuel de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-138">The visual state of the window.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-139">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-139">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member WaitForInputIdle : int -&gt; bool" Usage="iWindowProvider.WaitForInputIdle milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds"><span data-ttu-id="1dd7c-140">Délai, en millisecondes, à attendre que le processus associé devienne inactif.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-140">The amount of time, in milliseconds, to wait for the associated process to become idle.</span></span> <span data-ttu-id="1dd7c-141">La valeur maximale est <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-141">The maximum is <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="1dd7c-142">Provoque le blocage du code appelant pendant la durée spécifiée ou jusqu’à ce que le processus associé bascule dans un état d’inactivité (en fonction de l’échéance la plus proche).</span><span class="sxs-lookup"><span data-stu-id="1dd7c-142">Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.</span></span></summary>
        <returns><span data-ttu-id="1dd7c-143"><see langword="true" /> si la fenêtre est passée à l’état inactif ; <see langword="false" /> si le délai d’attente a été atteint.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-143"><see langword="true" /> if the window has entered the idle state; <see langword="false" /> if the timeout occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dd7c-144">Cette méthode est généralement utilisée conjointement avec la gestion d’un <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-144">This method is typically used in conjunction with the handling of a <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</span></span>  
  
 <span data-ttu-id="1dd7c-145">L’implémentation dépend de l’infrastructure sous-jacente de l’application ; Par conséquent, cette méthode peut retourner un moment après que la fenêtre est prête pour l’entrée utilisateur.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-145">The implementation is dependent on the underlying application framework; therefore this method might return some time after the window is ready for user input.</span></span> <span data-ttu-id="1dd7c-146">Le code appelant ne doit pas dépendre de cette méthode afin de déterminer exactement quand la fenêtre est devenue inactive.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-146">The calling code should not rely on this method to ascertain exactly when the window has become idle.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1dd7c-147">Lorsque le paramètre passé n’est pas un nombre valide.</span><span class="sxs-lookup"><span data-stu-id="1dd7c-147">When the parameter passed in is not a valid number.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc"><span data-ttu-id="1dd7c-148">Implémentation du modèle de contrôle Window d’UI Automation</span><span class="sxs-lookup"><span data-stu-id="1dd7c-148">Implementing the UI Automation Window Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>