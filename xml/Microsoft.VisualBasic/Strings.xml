<Type Name="Strings" FullName="Microsoft.VisualBasic.Strings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55b8e873a26c9d2e0bbbdfd649eab50236389e84" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156330" /></Metadata><TypeSignature Language="C#" Value="public sealed class Strings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Strings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Strings" />
  <TypeSignature Language="VB.NET" Value="Public Module Strings" />
  <TypeSignature Language="C++ CLI" Value="public ref class Strings sealed" />
  <TypeSignature Language="F#" Value="type Strings = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9602-101">Le <see langword="Strings" /> module contient les procédures utilisées pour effectuer des opérations de chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-101">The <see langword="Strings" /> module contains procedures used to perform string operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-102">Ce module prend en charge les mots clés du langage Visual Basic et les membres de bibliothèque Runtime qui manipulent des chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-102">This module supports the Visual Basic language keywords and run-time library members that manipulate strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-103">L’exemple suivant montre comment fractionner une chaîne à ses espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-103">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-104">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-104">String Manipulation Summary</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="c9602-105">Mots clés (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-105">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="c9602-106">Membres de la bibliothèque d’exécution Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-106">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Asc">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-107">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-107">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(char String);" />
      <MemberSignature Language="F#" Value="static member Asc : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="c9602-108">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-108">Required.</span></span> <span data-ttu-id="c9602-109">Valide <see langword="Char" /> ou <see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-109">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="c9602-110">Si <paramref name="String" /> est un <see langword="String" /> expression, seul le premier caractère de la chaîne est utilisée pour l’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-110">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="c9602-111">Si <paramref name="String" /> est <see langword="Nothing" /> ou ne contient aucun caractère, une <see cref="T:System.ArgumentException" /> erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="c9602-111">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="c9602-112">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-112">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="c9602-113">Code de caractères correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-113">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-114">`Asc` Retourne le *point de code*, ou code de caractère, le caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-114">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="c9602-115">Cela peut être de 0 à 255 pour les valeurs les caractères codés sur un octet (SBCS) et entre-32 768 et 32 767 pour les valeurs sur deux octets (DBCS).</span><span class="sxs-lookup"><span data-stu-id="c9602-115">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="c9602-116">`AscW` Retourne le point de code Unicode du caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-116">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="c9602-117">Cela peut être 0 et 65 535.</span><span class="sxs-lookup"><span data-stu-id="c9602-117">This can be 0 through 65535.</span></span> <span data-ttu-id="c9602-118">La valeur retournée est indépendante des culture et le code des paramètres de page pour le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="c9602-118">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-119">Le `AscB` fonction des versions antérieures de Visual Basic retourne un code pour un octet, plutôt qu’un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-119">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="c9602-120">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-120">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-121">Toutes les chaînes Visual Basic 2005 sont au format Unicode, et `AscB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-121">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-122">L’exemple suivant utilise le `Asc` fonction pour retourner `Integer` codes correspondant à la première lettre de chaque chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-122">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="c9602-123">Fonctions (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-123">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public static int Asc (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Asc(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Asc(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Asc(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member Asc : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Asc String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="c9602-124">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-124">Required.</span></span> <span data-ttu-id="c9602-125">Valide <see langword="Char" /> ou <see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-125">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="c9602-126">Si <paramref name="String" /> est un <see langword="String" /> expression, seul le premier caractère de la chaîne est utilisée pour l’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-126">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="c9602-127">Si <paramref name="String" /> est <see langword="Nothing" /> ou ne contient aucun caractère, une <see cref="T:System.ArgumentException" /> erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="c9602-127">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="c9602-128">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-128">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="c9602-129">Code de caractères correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-129">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-130">`Asc` Retourne le *point de code*, ou code de caractère, le caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-130">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="c9602-131">Cela peut être de 0 à 255 pour les valeurs les caractères codés sur un octet (SBCS) et entre-32 768 et 32 767 pour les valeurs sur deux octets (DBCS).</span><span class="sxs-lookup"><span data-stu-id="c9602-131">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="c9602-132">`AscW` Retourne le point de code Unicode du caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-132">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="c9602-133">Cela peut être 0 et 65 535.</span><span class="sxs-lookup"><span data-stu-id="c9602-133">This can be 0 through 65535.</span></span> <span data-ttu-id="c9602-134">La valeur retournée est indépendante des culture et le code des paramètres de page pour le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="c9602-134">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-135">Le `AscB` fonction des versions antérieures de Visual Basic retourne un code pour un octet, plutôt qu’un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-135">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="c9602-136">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-136">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-137">Toutes les chaînes Visual Basic 2005 sont au format Unicode, et `AscB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-137">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-138">L’exemple suivant utilise le `Asc` fonction pour retourner `Integer` codes correspondant à la première lettre de chaque chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-138">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="c9602-139">Fonctions (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-139">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AscW">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-140">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-140">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (char String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(char String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function AscW (String As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(char String);" />
      <MemberSignature Language="F#" Value="static member AscW : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="c9602-141">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-141">Required.</span></span> <span data-ttu-id="c9602-142">Valide <see langword="Char" /> ou <see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-142">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="c9602-143">Si <paramref name="String" /> est un <see langword="String" /> expression, seul le premier caractère de la chaîne est utilisée pour l’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-143">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="c9602-144">Si <paramref name="String" /> est <see langword="Nothing" /> ou ne contient aucun caractère, une <see cref="T:System.ArgumentException" /> erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="c9602-144">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="c9602-145">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-145">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="c9602-146">Code de caractères correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-146">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-147">`Asc` Retourne le *point de code*, ou code de caractère, le caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-147">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="c9602-148">Cela peut être de 0 à 255 pour les valeurs les caractères codés sur un octet (SBCS) et entre-32 768 et 32 767 pour les valeurs sur deux octets (DBCS).</span><span class="sxs-lookup"><span data-stu-id="c9602-148">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="c9602-149">`AscW` Retourne le point de code Unicode du caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-149">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="c9602-150">Cela peut être 0 et 65 535.</span><span class="sxs-lookup"><span data-stu-id="c9602-150">This can be 0 through 65535.</span></span> <span data-ttu-id="c9602-151">La valeur retournée est indépendante des culture et le code des paramètres de page pour le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="c9602-151">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-152">Le `AscB` fonction des versions antérieures de Visual Basic retourne un code pour un octet, plutôt qu’un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-152">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="c9602-153">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-153">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-154">Toutes les chaînes Visual Basic 2005 sont au format Unicode, et `AscB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-154">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-155">L’exemple suivant utilise le `Asc` fonction pour retourner `Integer` codes correspondant à la première lettre de chaque chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-155">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="c9602-156">Fonctions (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-156">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AscW">
      <MemberSignature Language="C#" Value="public static int AscW (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 AscW(string String) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.AscW(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AscW(System::String ^ String);" />
      <MemberSignature Language="F#" Value="static member AscW : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.AscW String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="c9602-157">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-157">Required.</span></span> <span data-ttu-id="c9602-158">Valide <see langword="Char" /> ou <see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-158">Any valid <see langword="Char" /> or <see langword="String" /> expression.</span></span> <span data-ttu-id="c9602-159">Si <paramref name="String" /> est un <see langword="String" /> expression, seul le premier caractère de la chaîne est utilisée pour l’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-159">If <paramref name="String" /> is a <see langword="String" /> expression, only the first character of the string is used for input.</span></span> <span data-ttu-id="c9602-160">Si <paramref name="String" /> est <see langword="Nothing" /> ou ne contient aucun caractère, une <see cref="T:System.ArgumentException" /> erreur se produit.</span><span class="sxs-lookup"><span data-stu-id="c9602-160">If <paramref name="String" /> is <see langword="Nothing" /> or contains no characters, an <see cref="T:System.ArgumentException" /> error occurs.</span></span></param>
        <summary><span data-ttu-id="c9602-161">Retourne une valeur entière représentant le code de caractère correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-161">Returns an integer value representing the character code corresponding to a character.</span></span></summary>
        <returns><span data-ttu-id="c9602-162">Code de caractères correspondant à un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-162">The character code corresponding to a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-163">`Asc` Retourne le *point de code*, ou code de caractère, le caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-163">`Asc` returns the *code point*, or character code, for the input character.</span></span> <span data-ttu-id="c9602-164">Cela peut être de 0 à 255 pour les valeurs les caractères codés sur un octet (SBCS) et entre-32 768 et 32 767 pour les valeurs sur deux octets (DBCS).</span><span class="sxs-lookup"><span data-stu-id="c9602-164">This can be 0 through 255 for single-byte character set (SBCS) values and -32768 through 32767 for double-byte character set (DBCS) values.</span></span>  
  
 <span data-ttu-id="c9602-165">`AscW` Retourne le point de code Unicode du caractère d’entrée.</span><span class="sxs-lookup"><span data-stu-id="c9602-165">`AscW` returns the Unicode code point for the input character.</span></span> <span data-ttu-id="c9602-166">Cela peut être 0 et 65 535.</span><span class="sxs-lookup"><span data-stu-id="c9602-166">This can be 0 through 65535.</span></span> <span data-ttu-id="c9602-167">La valeur retournée est indépendante des culture et le code des paramètres de page pour le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="c9602-167">The returned value is independent of the culture and code page settings for the current thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-168">Le `AscB` fonction des versions antérieures de Visual Basic retourne un code pour un octet, plutôt qu’un caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-168">The `AscB` function of earlier versions of Visual Basic returns a code for a byte, rather than a character.</span></span> <span data-ttu-id="c9602-169">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-169">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-170">Toutes les chaînes Visual Basic 2005 sont au format Unicode, et `AscB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-170">All Visual Basic 2005 strings are in Unicode, and `AscB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-171">L’exemple suivant utilise le `Asc` fonction pour retourner `Integer` codes correspondant à la première lettre de chaque chaîne de caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-171">The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.</span></span>  
  
 [!code-vb[VbVbalrFunctions#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/index.md"><span data-ttu-id="c9602-172">Fonctions (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-172">Functions (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Chr">
      <MemberSignature Language="C#" Value="public static char Chr (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char Chr(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Chr (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Chr(int CharCode);" />
      <MemberSignature Language="F#" Value="static member Chr : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.Chr CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="c9602-173">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-173">Required.</span></span> <span data-ttu-id="c9602-174">Expression <see langword="Integer" /> représentant l’<c>élément de code</c>, ou code de caractère, du caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-174">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="c9602-175">Retourne le caractère associé au code de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-175">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="c9602-176">Le caractère associé au code de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-176">The character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-177">La plage asymétrique autorisée pour `CharCode` compense les différences de stockage entre le `Short` et `Integer`.</span><span class="sxs-lookup"><span data-stu-id="c9602-177">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="c9602-178">Par exemple,-29 183 est un `Short` mais + 36 353 est un `Integer`.</span><span class="sxs-lookup"><span data-stu-id="c9602-178">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="c9602-179">Cela facilite également la compatibilité avec Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="c9602-179">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="c9602-180">`Chr` utilise le <xref:System.Text.Encoding> classe dans le <xref:System.Text?displayProperty=nameWithType> (DBCS), espace de noms pour déterminer si le thread actuel utilise un jeu de caractères à un octet (SBCS) ou double-byte character set.</span><span class="sxs-lookup"><span data-stu-id="c9602-180">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="c9602-181">Il prend ensuite `CharCode` comme un code de point dans l’ensemble approprié.</span><span class="sxs-lookup"><span data-stu-id="c9602-181">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="c9602-182">La plage peut être de 0 à 255 pour les caractères SBCS et de-32 768 et 65 535 pour les caractères DBCS.</span><span class="sxs-lookup"><span data-stu-id="c9602-182">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="c9602-183">La valeur retournée dépend de la page de codes pour le thread actuel, qui est contenue dans le <xref:System.Globalization.TextInfo.ANSICodePage%2A> propriété de la <xref:System.Globalization.TextInfo> classe dans le <xref:System.Globalization> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="c9602-183">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c9602-184">Vous pouvez obtenir <xref:System.Globalization.TextInfo.ANSICodePage%2A> en spécifiant `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="c9602-184">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="c9602-185">`ChrW` prend `CharCode` point de code en tant qu’Unicode.</span><span class="sxs-lookup"><span data-stu-id="c9602-185">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="c9602-186">La plage est indépendante des culture et le code des paramètres de page pour le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="c9602-186">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="c9602-187">Valeurs comprise entre -32768 et-1 sont traitées comme valeurs dans la plage + 32 768 et + 65 535.</span><span class="sxs-lookup"><span data-stu-id="c9602-187">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="c9602-188">Nombres de 0 à 31 sont les mêmes que les codes ASCII imprimables standard.</span><span class="sxs-lookup"><span data-stu-id="c9602-188">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="c9602-189">Par exemple, `Chr(10)` renvoie un retour chariot.</span><span class="sxs-lookup"><span data-stu-id="c9602-189">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-190">Le `ChrB` fonction dans les versions antérieures de Visual Basic retourne un seul octet.</span><span class="sxs-lookup"><span data-stu-id="c9602-190">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="c9602-191">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-191">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-192">Toutes les chaînes en Visual Basic et .NET Framework sont au format Unicode, et `ChrB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-192">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-193">L’exemple suivant utilise le `Chr` fonction pour retourner le caractère associé au code de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-193">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-194"><paramref name="CharCode" /> &lt; 0 ou &gt; 255 pour <see langword="Chr" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-194"><paramref name="CharCode" /> &lt; 0 or &gt; 255 for <see langword="Chr" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-195">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-195">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChrW">
      <MemberSignature Language="C#" Value="public static char ChrW (int CharCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static char ChrW(int32 CharCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChrW (CharCode As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ChrW(int CharCode);" />
      <MemberSignature Language="F#" Value="static member ChrW : int -&gt; char" Usage="Microsoft.VisualBasic.Strings.ChrW CharCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CharCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="CharCode"><span data-ttu-id="c9602-196">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-196">Required.</span></span> <span data-ttu-id="c9602-197">Expression <see langword="Integer" /> représentant l’<c>élément de code</c>, ou code de caractère, du caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-197">An <see langword="Integer" /> expression representing the <c>code point</c>, or character code, for the character.</span></span></param>
        <summary><span data-ttu-id="c9602-198">Retourne le caractère associé au code de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-198">Returns the character associated with the specified character code.</span></span></summary>
        <returns><span data-ttu-id="c9602-199">Le caractère associé au code de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-199">The character associated with the specified character code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-200">La plage asymétrique autorisée pour `CharCode` compense les différences de stockage entre le `Short` et `Integer`.</span><span class="sxs-lookup"><span data-stu-id="c9602-200">The asymmetric range accepted for `CharCode` compensates for the storage differences between the `Short` and the `Integer`.</span></span> <span data-ttu-id="c9602-201">Par exemple,-29 183 est un `Short` mais + 36 353 est un `Integer`.</span><span class="sxs-lookup"><span data-stu-id="c9602-201">For example, -29183 is a `Short` but +36353 is an `Integer`.</span></span> <span data-ttu-id="c9602-202">Cela facilite également la compatibilité avec Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="c9602-202">This also facilitates compatibility with Visual Basic 6.0.</span></span>  
  
 <span data-ttu-id="c9602-203">`Chr` utilise le <xref:System.Text.Encoding> classe dans le <xref:System.Text?displayProperty=nameWithType> (DBCS), espace de noms pour déterminer si le thread actuel utilise un jeu de caractères à un octet (SBCS) ou double-byte character set.</span><span class="sxs-lookup"><span data-stu-id="c9602-203">`Chr` uses the <xref:System.Text.Encoding> class in the <xref:System.Text?displayProperty=nameWithType> namespace to determine if the current thread is using a single-byte character set (SBCS) or a double-byte character set (DBCS).</span></span> <span data-ttu-id="c9602-204">Il prend ensuite `CharCode` comme un code de point dans l’ensemble approprié.</span><span class="sxs-lookup"><span data-stu-id="c9602-204">It then takes `CharCode` as a code point in the appropriate set.</span></span> <span data-ttu-id="c9602-205">La plage peut être de 0 à 255 pour les caractères SBCS et de-32 768 et 65 535 pour les caractères DBCS.</span><span class="sxs-lookup"><span data-stu-id="c9602-205">The range can be 0 through 255 for SBCS characters and -32768 through 65535 for DBCS characters.</span></span>  
  
 <span data-ttu-id="c9602-206">La valeur retournée dépend de la page de codes pour le thread actuel, qui est contenue dans le <xref:System.Globalization.TextInfo.ANSICodePage%2A> propriété de la <xref:System.Globalization.TextInfo> classe dans le <xref:System.Globalization> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="c9602-206">The returned value depends on the code page for the current thread, which is contained in the <xref:System.Globalization.TextInfo.ANSICodePage%2A> property of the <xref:System.Globalization.TextInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="c9602-207">Vous pouvez obtenir <xref:System.Globalization.TextInfo.ANSICodePage%2A> en spécifiant `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span><span class="sxs-lookup"><span data-stu-id="c9602-207">You can obtain <xref:System.Globalization.TextInfo.ANSICodePage%2A> by specifying `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</span></span>  
  
 <span data-ttu-id="c9602-208">`ChrW` prend `CharCode` point de code en tant qu’Unicode.</span><span class="sxs-lookup"><span data-stu-id="c9602-208">`ChrW` takes `CharCode` as a Unicode code point.</span></span> <span data-ttu-id="c9602-209">La plage est indépendante des culture et le code des paramètres de page pour le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="c9602-209">The range is independent of the culture and code page settings for the current thread.</span></span> <span data-ttu-id="c9602-210">Valeurs comprise entre -32768 et-1 sont traitées comme valeurs dans la plage + 32 768 et + 65 535.</span><span class="sxs-lookup"><span data-stu-id="c9602-210">Values from -32768 through -1 are treated the same as values in the range +32768 through +65535.</span></span>  
  
 <span data-ttu-id="c9602-211">Nombres de 0 à 31 sont les mêmes que les codes ASCII imprimables standard.</span><span class="sxs-lookup"><span data-stu-id="c9602-211">Numbers from 0 through 31 are the same as standard nonprintable ASCII codes.</span></span> <span data-ttu-id="c9602-212">Par exemple, `Chr(10)` renvoie un retour chariot.</span><span class="sxs-lookup"><span data-stu-id="c9602-212">For example, `Chr(10)` returns a line feed character.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-213">Le `ChrB` fonction dans les versions antérieures de Visual Basic retourne un seul octet.</span><span class="sxs-lookup"><span data-stu-id="c9602-213">The `ChrB` function in earlier versions of Visual Basic returns a single byte.</span></span> <span data-ttu-id="c9602-214">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-214">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-215">Toutes les chaînes en Visual Basic et .NET Framework sont au format Unicode, et `ChrB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-215">All strings in Visual Basic and the .NET Framework are in Unicode, and `ChrB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-216">L’exemple suivant utilise le `Chr` fonction pour retourner le caractère associé au code de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-216">The following example uses the `Chr` function to return the character associated with the specified character code.</span></span>  
  
 [!code-vb[VbVbalrStrings#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-217"><paramref name="CharCode" /> &lt; -32768 ou &gt; 65535 pour <see langword="ChrW" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-217"><paramref name="CharCode" /> &lt; -32768 or &gt; 65535 for <see langword="ChrW" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Asc" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.AscW" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-218">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-218">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-219">Retourne un tableau de base zéro qui contient un sous-ensemble d’un <see langword="String" /> tableau basé sur des critères de filtre spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c9602-219">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(object[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As Object(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : obj[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Match" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Include" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="c9602-220">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-220">Required.</span></span> <span data-ttu-id="c9602-221">Tableau unidimensionnel de chaînes à rechercher.</span><span class="sxs-lookup"><span data-stu-id="c9602-221">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="c9602-222">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-222">Required.</span></span> <span data-ttu-id="c9602-223">Chaîne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="c9602-223">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="c9602-224">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-224">Optional.</span></span> <span data-ttu-id="c9602-225"><see langword="Boolean" /> valeur qui indique s’il faut retourner les sous-chaînes incluant ou excluant <paramref name="Match" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-225"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="c9602-226">Si <paramref name="Include" /> est <see langword="True" />, le <see langword="Filter" /> fonction retourne le sous-ensemble du tableau qui contient <paramref name="Match" /> comme sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-226">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="c9602-227">Si <paramref name="Include" /> est <see langword="False" />, le <see langword="Filter" /> fonction retourne le sous-ensemble du tableau ne contenant pas <paramref name="Match" /> comme sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-227">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-228">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-228">Optional.</span></span> <span data-ttu-id="c9602-229">Valeur numérique indiquant le type de comparaison de chaînes à utiliser.</span><span class="sxs-lookup"><span data-stu-id="c9602-229">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="c9602-230">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-230">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="c9602-231">Retourne un tableau de base zéro qui contient un sous-ensemble d’un <see langword="String" /> tableau basé sur des critères de filtre spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c9602-231">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="c9602-232">Un tableau de base zéro et contenant un sous-ensemble d’un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c9602-232">A zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-233">Si aucune correspondance de `Match` se trouvent dans `Source`, le `Filter` fonction retourne un tableau vide.</span><span class="sxs-lookup"><span data-stu-id="c9602-233">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="c9602-234">Une erreur se produit si `Source` est défini sur `Nothing` ou n’est pas un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-234">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="c9602-235">Le tableau retourné par la `Filter` fonction contient suffisamment d’éléments pour contenir le nombre d’éléments de mise en correspondance.</span><span class="sxs-lookup"><span data-stu-id="c9602-235">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="c9602-236">Le `Compare` argument peut prendre les valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-236">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="c9602-237">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-237">Constant</span></span>|<span data-ttu-id="c9602-238">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-238">Description</span></span>|  
|-|-|  
|<span data-ttu-id="c9602-239">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-239">Constant</span></span>|<span data-ttu-id="c9602-240">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-240">Description</span></span>|  
|`CompareMethod.Binary`|<span data-ttu-id="c9602-241">Effectue une comparaison binaire</span><span class="sxs-lookup"><span data-stu-id="c9602-241">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="c9602-242">Effectue une comparaison textuelle</span><span class="sxs-lookup"><span data-stu-id="c9602-242">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-243">Cet exemple illustre l’utilisation de la `Filter` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-243">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-244"><paramref name="Source" /> est <see langword="Nothing" /> ou n’est pas un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-244"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-245">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-245">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Filter(string[] Source, string Match, bool Include, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Filter (Source As String(), Match As String, Optional Include As Boolean = true, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Filter : string[] * string * bool * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Filter (Source, Match, Include, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Match" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Include" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="c9602-246">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-246">Required.</span></span> <span data-ttu-id="c9602-247">Tableau unidimensionnel de chaînes à rechercher.</span><span class="sxs-lookup"><span data-stu-id="c9602-247">One-dimensional array of strings to be searched.</span></span></param>
        <param name="Match"><span data-ttu-id="c9602-248">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-248">Required.</span></span> <span data-ttu-id="c9602-249">Chaîne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="c9602-249">String to search for.</span></span></param>
        <param name="Include"><span data-ttu-id="c9602-250">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-250">Optional.</span></span> <span data-ttu-id="c9602-251"><see langword="Boolean" /> valeur qui indique s’il faut retourner les sous-chaînes incluant ou excluant <paramref name="Match" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-251"><see langword="Boolean" /> value indicating whether to return substrings that include or exclude <paramref name="Match" />.</span></span> <span data-ttu-id="c9602-252">Si <paramref name="Include" /> est <see langword="True" />, le <see langword="Filter" /> fonction retourne le sous-ensemble du tableau qui contient <paramref name="Match" /> comme sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-252">If <paramref name="Include" /> is <see langword="True" />, the <see langword="Filter" /> function returns the subset of the array that contains <paramref name="Match" /> as a substring.</span></span> <span data-ttu-id="c9602-253">Si <paramref name="Include" /> est <see langword="False" />, le <see langword="Filter" /> fonction retourne le sous-ensemble du tableau ne contenant pas <paramref name="Match" /> comme sous-chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-253">If <paramref name="Include" /> is <see langword="False" />, the <see langword="Filter" /> function returns the subset of the array that does not contain <paramref name="Match" /> as a substring.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-254">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-254">Optional.</span></span> <span data-ttu-id="c9602-255">Valeur numérique indiquant le type de comparaison de chaînes à utiliser.</span><span class="sxs-lookup"><span data-stu-id="c9602-255">Numeric value indicating the kind of string comparison to use.</span></span> <span data-ttu-id="c9602-256">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-256">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="c9602-257">Retourne un tableau de base zéro qui contient un sous-ensemble d’un <see langword="String" /> tableau basé sur des critères de filtre spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c9602-257">Returns a zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></summary>
        <returns><span data-ttu-id="c9602-258">Un tableau de base zéro et contenant un sous-ensemble d’un tableau de chaînes (<see langword="String" />) basé sur des critères de filtre spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c9602-258">A zero-based array containing a subset of a <see langword="String" /> array based on specified filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-259">Si aucune correspondance de `Match` se trouvent dans `Source`, le `Filter` fonction retourne un tableau vide.</span><span class="sxs-lookup"><span data-stu-id="c9602-259">If no matches of `Match` are found within `Source`, the `Filter` function returns an empty array.</span></span> <span data-ttu-id="c9602-260">Une erreur se produit si `Source` est défini sur `Nothing` ou n’est pas un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-260">An error occurs if `Source` is set to `Nothing` or is not a one-dimensional array.</span></span>  
  
 <span data-ttu-id="c9602-261">Le tableau retourné par la `Filter` fonction contient suffisamment d’éléments pour contenir le nombre d’éléments de mise en correspondance.</span><span class="sxs-lookup"><span data-stu-id="c9602-261">The array returned by the `Filter` function contains only enough elements to contain the number of matched items.</span></span>  
  
 <span data-ttu-id="c9602-262">Le `Compare` argument peut prendre les valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-262">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="c9602-263">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-263">Constant</span></span>|<span data-ttu-id="c9602-264">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-264">Description</span></span>|  
|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="c9602-265">Effectue une comparaison binaire</span><span class="sxs-lookup"><span data-stu-id="c9602-265">Performs a binary comparison</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="c9602-266">Effectue une comparaison textuelle</span><span class="sxs-lookup"><span data-stu-id="c9602-266">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-267">Cet exemple illustre l’utilisation de la `Filter` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-267">This example demonstrates the use of the `Filter` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-268"><paramref name="Source" /> est <see langword="Nothing" /> ou n’est pas un tableau unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-268"><paramref name="Source" /> is <see langword="Nothing" /> or is not a one-dimensional array.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-269">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-269">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Format (Expression, Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Style" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-270">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-270">Required.</span></span> <span data-ttu-id="c9602-271">Toute expression valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-271">Any valid expression.</span></span></param>
        <param name="Style"><span data-ttu-id="c9602-272">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-272">Optional.</span></span> <span data-ttu-id="c9602-273">Un format nommé ou défini par l’utilisateur valide <see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-273">A valid named or user-defined format <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-274">Retourne une chaîne mise en forme conformément aux instructions contenues dans un format <see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-274">Returns a string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></summary>
        <returns><span data-ttu-id="c9602-275">Une chaîne mise en forme conformément aux instructions contenues dans une expression <see langword="String" /> de format.</span><span class="sxs-lookup"><span data-stu-id="c9602-275">A string formatted according to instructions contained in a format <see langword="String" /> expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-276">Le <xref:System.String.Format%2A?displayProperty=nameWithType> méthode fournit également des fonctionnalités similaires.</span><span class="sxs-lookup"><span data-stu-id="c9602-276">The <xref:System.String.Format%2A?displayProperty=nameWithType> method also provides similar functionality.</span></span>  
  
 <span data-ttu-id="c9602-277">Si vous mettez en forme une chaîne numérique non localisée, vous devez utiliser un format numérique défini par l’utilisateur pour vous assurer d’obtenir l’aspect souhaité.</span><span class="sxs-lookup"><span data-stu-id="c9602-277">If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.</span></span>  
  
 <span data-ttu-id="c9602-278">Si vous essayez de mettre en forme un nombre sans spécifier `Style`, le `Format` fonction fournit une fonctionnalité similaire à la `Str` fonctionner, bien qu’il soit respectent les conventions internationales.</span><span class="sxs-lookup"><span data-stu-id="c9602-278">If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware.</span></span> <span data-ttu-id="c9602-279">Toutefois, les nombres positifs mis en forme sous forme de chaînes à l’aide de la `Format` fonction n’incluez pas un espace à gauche réservé pour le signe de la valeur ; ceux convertis à l’aide de la `Str` fonction conserver l’espace de début.</span><span class="sxs-lookup"><span data-stu-id="c9602-279">However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.</span></span>  
  
## <a name="different-formats-for-different-numeric-values"></a><span data-ttu-id="c9602-280">Formats différents pour différentes valeurs numériques</span><span class="sxs-lookup"><span data-stu-id="c9602-280">Different Formats for Different Numeric Values</span></span>  
 <span data-ttu-id="c9602-281">Pour les nombres, une expression de format défini par l’utilisateur peut avoir d’une à trois sections séparées par des points-virgules.</span><span class="sxs-lookup"><span data-stu-id="c9602-281">A user-defined format expression for numbers can have from one to three sections separated by semicolons.</span></span> <span data-ttu-id="c9602-282">Si le `Style` argument de la `Format` (fonction) contient l’un des formats numériques prédéfinis, qu’une seule section est autorisée.</span><span class="sxs-lookup"><span data-stu-id="c9602-282">If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.</span></span>  
  
|<span data-ttu-id="c9602-283">Si vous utilisez</span><span class="sxs-lookup"><span data-stu-id="c9602-283">If you use</span></span>|<span data-ttu-id="c9602-284">C’est le résultat</span><span class="sxs-lookup"><span data-stu-id="c9602-284">This is the result</span></span>|  
|-|-|  
|<span data-ttu-id="c9602-285">Une seule section</span><span class="sxs-lookup"><span data-stu-id="c9602-285">One section only</span></span>|<span data-ttu-id="c9602-286">L’expression de format s’applique à toutes les valeurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-286">The format expression applies to all values.</span></span>|  
|<span data-ttu-id="c9602-287">Deux sections</span><span class="sxs-lookup"><span data-stu-id="c9602-287">Two sections</span></span>|<span data-ttu-id="c9602-288">La première section s’applique aux valeurs positives et aux zéros ; la seconde s’applique aux valeurs négatives.</span><span class="sxs-lookup"><span data-stu-id="c9602-288">The first section applies to positive values and zeros; the second applies to negative values.</span></span>|  
|<span data-ttu-id="c9602-289">Trois sections</span><span class="sxs-lookup"><span data-stu-id="c9602-289">Three sections</span></span>|<span data-ttu-id="c9602-290">La première section s’applique aux valeurs positives, la deuxième s’applique aux valeurs négatives, et la troisième aux zéros.</span><span class="sxs-lookup"><span data-stu-id="c9602-290">The first section applies to positive values, the second applies to negative values, and the third applies to zeros.</span></span>|  
  
 <span data-ttu-id="c9602-291">L’exemple suivant comprend deux sections : la première définit le format des valeurs positives et aux zéros ; la deuxième section définit le format pour les valeurs négatives.</span><span class="sxs-lookup"><span data-stu-id="c9602-291">The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values.</span></span> <span data-ttu-id="c9602-292">Dans la mesure où le `Style` argument de la `Format` fonction prend une chaîne, il est placé entre guillemets.</span><span class="sxs-lookup"><span data-stu-id="c9602-292">Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.</span></span>  
  
 [!code-vb[VbVbalrStrings#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#18)]  
  
 <span data-ttu-id="c9602-293">Si vous incluez des points-virgules sans rien entre eux, la section manquante est imprimée, en utilisant le format de la valeur positive.</span><span class="sxs-lookup"><span data-stu-id="c9602-293">If you include semicolons with nothing between them, the missing section is printed using the format of the positive value.</span></span> <span data-ttu-id="c9602-294">Par exemple, le format suivant affiche positif et négatif des valeurs en utilisant le format de la première section et affiche `Zero` si la valeur est égale à zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-294">For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.</span></span>  
  
 [!code-vb[VbVbalrStrings#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#19)]  
  
## <a name="predefined-numeric-formats"></a><span data-ttu-id="c9602-295">Formats numériques prédéfinis</span><span class="sxs-lookup"><span data-stu-id="c9602-295">Predefined Numeric Formats</span></span>  
 <span data-ttu-id="c9602-296">Le tableau suivant identifie les noms de formats numériques prédéfinis.</span><span class="sxs-lookup"><span data-stu-id="c9602-296">The following table identifies the predefined numeric format names.</span></span> <span data-ttu-id="c9602-297">Ceux-ci peuvent être utilisés par nom comme le `Style` argument pour le `Format` (fonction) :</span><span class="sxs-lookup"><span data-stu-id="c9602-297">These may be used by name as the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="c9602-298">Nom du format</span><span class="sxs-lookup"><span data-stu-id="c9602-298">Format name</span></span>|<span data-ttu-id="c9602-299">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-299">Description</span></span>|  
|-|-|  
|<span data-ttu-id="c9602-300">`General Number`, `G`ou `g`</span><span class="sxs-lookup"><span data-stu-id="c9602-300">`General Number`, `G`, or `g`</span></span>|<span data-ttu-id="c9602-301">Affiche le nombre sans séparateur de milliers.</span><span class="sxs-lookup"><span data-stu-id="c9602-301">Displays number with no thousand separator.</span></span><br /><br /> <span data-ttu-id="c9602-302">Par exemple, `Format(&H3FA, "g")` retourne `1018`.</span><span class="sxs-lookup"><span data-stu-id="c9602-302">For example, `Format(&H3FA, "g")` returns `1018`.</span></span>|  
|<span data-ttu-id="c9602-303">`Currency`, `C`ou `c`</span><span class="sxs-lookup"><span data-stu-id="c9602-303">`Currency`, `C`, or `c`</span></span>|<span data-ttu-id="c9602-304">Affiche le nombre avec séparateur de milliers, le cas échéant ; affiche deux chiffres à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-304">Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator.</span></span> <span data-ttu-id="c9602-305">Sortie est basée sur les paramètres régionaux du système.</span><span class="sxs-lookup"><span data-stu-id="c9602-305">Output is based on system locale settings.</span></span><br /><br /> <span data-ttu-id="c9602-306">Par exemple, `Format(1234567, "c")` retourne `$1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="c9602-306">For example, `Format(1234567, "c")` returns `$1,234,567.00`.</span></span>|  
|<span data-ttu-id="c9602-307">`Fixed`, `F`ou `f`</span><span class="sxs-lookup"><span data-stu-id="c9602-307">`Fixed`, `F`, or `f`</span></span>|<span data-ttu-id="c9602-308">Affiche au moins un chiffre à gauche et deux chiffres à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-308">Displays at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="c9602-309">Par exemple, `Format(1234567, "f")` retourne `1234567.00`.</span><span class="sxs-lookup"><span data-stu-id="c9602-309">For example, `Format(1234567, "f")` returns `1234567.00`.</span></span>|  
|<span data-ttu-id="c9602-310">`Standard`, `N`ou `n`</span><span class="sxs-lookup"><span data-stu-id="c9602-310">`Standard`, `N`, or `n`</span></span>|<span data-ttu-id="c9602-311">Affiche le nombre avec séparateur des milliers, au moins un chiffre à gauche et deux chiffres à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-311">Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="c9602-312">Par exemple, `Format(1234567, "n")` retourne `1,234,567.00`.</span><span class="sxs-lookup"><span data-stu-id="c9602-312">For example, `Format(1234567, "n")` returns `1,234,567.00`.</span></span>|  
|`Percent`|<span data-ttu-id="c9602-313">Affiche le nombre multiplié par 100 avec un signe de pourcentage (%) ajouté immédiatement à droite ; affiche toujours deux chiffres à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-313">Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="c9602-314">Par exemple, `Format(0.4744, "Percent")` retourne `47.44%`.</span><span class="sxs-lookup"><span data-stu-id="c9602-314">For example, `Format(0.4744, "Percent")` returns `47.44%`.</span></span>|  
|<span data-ttu-id="c9602-315">`P`, ou `p`</span><span class="sxs-lookup"><span data-stu-id="c9602-315">`P`, or `p`</span></span>|<span data-ttu-id="c9602-316">Affiche le nombre avec séparateur de milliers multiplié par 100 avec un signe de pourcentage (%) ajouté à droite et séparé par un seul espace ; affiche toujours deux chiffres à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-316">Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.</span></span><br /><br /> <span data-ttu-id="c9602-317">Par exemple, `Format(0.80345, "p")` retourne `80.35 %`.</span><span class="sxs-lookup"><span data-stu-id="c9602-317">For example, `Format(0.80345, "p")` returns `80.35 %`.</span></span>|  
|`Scientific`|<span data-ttu-id="c9602-318">Utilise la notation scientifique standard, en fournissant deux chiffres significatifs.</span><span class="sxs-lookup"><span data-stu-id="c9602-318">Uses standard scientific notation, providing two significant digits.</span></span><br /><br /> <span data-ttu-id="c9602-319">Par exemple, `Format(1234567, "Scientific")` retourne `1.23E+06`.</span><span class="sxs-lookup"><span data-stu-id="c9602-319">For example, `Format(1234567, "Scientific")` returns `1.23E+06`.</span></span>|  
|<span data-ttu-id="c9602-320">`E`, ou `e`</span><span class="sxs-lookup"><span data-stu-id="c9602-320">`E`, or `e`</span></span>|<span data-ttu-id="c9602-321">Utilise la notation scientifique standard, en fournissant six chiffres significatifs.</span><span class="sxs-lookup"><span data-stu-id="c9602-321">Uses standard scientific notation, providing six significant digits.</span></span><br /><br /> <span data-ttu-id="c9602-322">Par exemple, `Format(1234567, "e")` retourne `1.234567e+006`.</span><span class="sxs-lookup"><span data-stu-id="c9602-322">For example, `Format(1234567, "e")` returns `1.234567e+006`.</span></span>|  
|<span data-ttu-id="c9602-323">`D`, ou `d`</span><span class="sxs-lookup"><span data-stu-id="c9602-323">`D`, or `d`</span></span>|<span data-ttu-id="c9602-324">Affiche le nombre sous forme de chaîne qui contient la valeur du nombre au format décimal (base 10).</span><span class="sxs-lookup"><span data-stu-id="c9602-324">Displays number as a string that contains the value of the number in Decimal (base 10) format.</span></span> <span data-ttu-id="c9602-325">Cette option est prise en charge pour les types intégraux (`Byte`, `Short`, `Integer`, `Long`) uniquement.</span><span class="sxs-lookup"><span data-stu-id="c9602-325">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="c9602-326">Par exemple, `Format(&H7F, "d")` retourne `127`.</span><span class="sxs-lookup"><span data-stu-id="c9602-326">For example, `Format(&H7F, "d")` returns `127`.</span></span>|  
|<span data-ttu-id="c9602-327">`X`, ou `x`</span><span class="sxs-lookup"><span data-stu-id="c9602-327">`X`, or `x`</span></span>|<span data-ttu-id="c9602-328">Affiche le nombre sous forme de chaîne qui contient la valeur du nombre au format hexadécimal (base 16).</span><span class="sxs-lookup"><span data-stu-id="c9602-328">Displays number as a string that contains the value of the number in Hexadecimal (base 16) format.</span></span> <span data-ttu-id="c9602-329">Cette option est prise en charge pour les types intégraux (`Byte`, `Short`, `Integer`, `Long`) uniquement.</span><span class="sxs-lookup"><span data-stu-id="c9602-329">This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.</span></span><br /><br /> <span data-ttu-id="c9602-330">Par exemple, `Format(127, "x")` retourne `7f`.</span><span class="sxs-lookup"><span data-stu-id="c9602-330">For example, `Format(127, "x")` returns `7f`.</span></span>|  
|`Yes/No`|<span data-ttu-id="c9602-331">Affiche `No` si le nombre est 0 ; sinon, affiche `Yes`.</span><span class="sxs-lookup"><span data-stu-id="c9602-331">Displays `No` if number is 0; otherwise, displays `Yes`.</span></span><br /><br /> <span data-ttu-id="c9602-332">Par exemple, `Format(0, "Yes/No")` retourne `No`.</span><span class="sxs-lookup"><span data-stu-id="c9602-332">For example, `Format(0, "Yes/No")` returns `No`.</span></span>|  
|`True/False`|<span data-ttu-id="c9602-333">Affiche `False` si le nombre est 0 ; sinon, affiche `True`.</span><span class="sxs-lookup"><span data-stu-id="c9602-333">Displays `False` if number is 0; otherwise, displays `True`.</span></span><br /><br /> <span data-ttu-id="c9602-334">Par exemple, `Format(1, "True/False")` retourne `True`.</span><span class="sxs-lookup"><span data-stu-id="c9602-334">For example, `Format(1, "True/False")` returns `True`.</span></span>|  
|`On/Off`|<span data-ttu-id="c9602-335">Affiche `Off` si le nombre est 0 ; sinon, affiche `On`.</span><span class="sxs-lookup"><span data-stu-id="c9602-335">Displays `Off` if number is 0; otherwise, displays `On`.</span></span><br /><br /> <span data-ttu-id="c9602-336">Par exemple, `Format(1, "On/Off")` retourne `On`.</span><span class="sxs-lookup"><span data-stu-id="c9602-336">For example, `Format(1, "On/Off")` returns `On`.</span></span>|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-337">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-337">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-338">Le `Yes/No`, `True/False`, et `On/Off` formats ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-338">The `Yes/No`, `True/False`, and `On/Off` formats are not supported.</span></span>  
  
## <a name="user-defined-numeric-formats"></a><span data-ttu-id="c9602-339">Formats numériques définis par l’utilisateur</span><span class="sxs-lookup"><span data-stu-id="c9602-339">User-Defined Numeric Formats</span></span>  
 <span data-ttu-id="c9602-340">Le tableau suivant identifie les caractères que vous pouvez utiliser pour créer des formats numériques définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-340">The following table identifies characters you can use to create user-defined number formats.</span></span> <span data-ttu-id="c9602-341">Ceux-ci peuvent être utilisés pour générer le `Style` argument pour le `Format` (fonction) :</span><span class="sxs-lookup"><span data-stu-id="c9602-341">These may be used to build the `Style` argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="c9602-342">Caractère</span><span class="sxs-lookup"><span data-stu-id="c9602-342">Character</span></span>|<span data-ttu-id="c9602-343">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-343">Description</span></span>|  
|-|-|  
|<span data-ttu-id="c9602-344">None</span><span class="sxs-lookup"><span data-stu-id="c9602-344">None</span></span>|<span data-ttu-id="c9602-345">Affiche le nombre sans mise en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-345">Displays the number with no formatting.</span></span>|  
|<span data-ttu-id="c9602-346">(`0`)</span><span class="sxs-lookup"><span data-stu-id="c9602-346">(`0`)</span></span>|<span data-ttu-id="c9602-347">Espace réservé de chiffre.</span><span class="sxs-lookup"><span data-stu-id="c9602-347">Digit placeholder.</span></span> <span data-ttu-id="c9602-348">Affiche un chiffre ou un zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-348">Displays a digit or a zero.</span></span> <span data-ttu-id="c9602-349">Si l’expression a un chiffre dans la position où le zéro apparaît dans la chaîne de format, il est affiché ; Sinon, affiche un zéro dans cette position.</span><span class="sxs-lookup"><span data-stu-id="c9602-349">If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.</span></span><br /><br /> <span data-ttu-id="c9602-350">Si le nombre contient moins de chiffres que de zéros sont (chaque côté du séparateur décimal) dans l’expression de format, affiche des zéros à gauche et.</span><span class="sxs-lookup"><span data-stu-id="c9602-350">If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros.</span></span> <span data-ttu-id="c9602-351">Si le nombre comporte davantage de chiffres à droite du séparateur décimal qu’il existe des zéros à droite du séparateur décimal dans l’expression de format, arrondit les nombre à autant de décimales qu’il y a de zéros.</span><span class="sxs-lookup"><span data-stu-id="c9602-351">If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros.</span></span> <span data-ttu-id="c9602-352">Si le nombre comporte davantage de chiffres à gauche du séparateur décimal qu’il existe des zéros à gauche du séparateur décimal dans l’expression de format, les chiffres supplémentaires sans modification.</span><span class="sxs-lookup"><span data-stu-id="c9602-352">If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.</span></span>|  
|<span data-ttu-id="c9602-353">(`#`)</span><span class="sxs-lookup"><span data-stu-id="c9602-353">(`#`)</span></span>|<span data-ttu-id="c9602-354">Espace réservé de chiffre.</span><span class="sxs-lookup"><span data-stu-id="c9602-354">Digit placeholder.</span></span> <span data-ttu-id="c9602-355">Affiche un chiffre ou rien.</span><span class="sxs-lookup"><span data-stu-id="c9602-355">Displays a digit or nothing.</span></span> <span data-ttu-id="c9602-356">Si l’expression a un chiffre dans la position où le `#` caractère apparaît dans la chaîne de format, il affiche ; sinon, n’affiche rien dans cette position.</span><span class="sxs-lookup"><span data-stu-id="c9602-356">If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.</span></span><br /><br /> <span data-ttu-id="c9602-357">Ce symbole fonctionne comme le `0` espace réservé de chiffre, à ceci près que zéros ne sont pas affichées si le nombre contient moins de chiffres qu’il n’y `#` caractères de chaque côté du séparateur décimal dans l’expression de format.</span><span class="sxs-lookup"><span data-stu-id="c9602-357">This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.</span></span>|  
|<span data-ttu-id="c9602-358">(`.`)</span><span class="sxs-lookup"><span data-stu-id="c9602-358">(`.`)</span></span>|<span data-ttu-id="c9602-359">Espace réservé de décimale.</span><span class="sxs-lookup"><span data-stu-id="c9602-359">Decimal placeholder.</span></span> <span data-ttu-id="c9602-360">L’espace réservé de décimale détermine le nombre de chiffres affiché à gauche et à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-360">The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator.</span></span> <span data-ttu-id="c9602-361">Si l’expression de format contient uniquement `#` caractères à gauche de ce symbole ; les nombres inférieurs à 1 commencent par un séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-361">If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator.</span></span> <span data-ttu-id="c9602-362">Pour afficher un zéro non significatif avec des nombres fractionnaires, utilisez zéro comme le premier espace réservé de chiffre à gauche du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-362">To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator.</span></span> <span data-ttu-id="c9602-363">Dans certains paramètres régionaux, une virgule est utilisée comme séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-363">In some locales, a comma is used as the decimal separator.</span></span> <span data-ttu-id="c9602-364">Le caractère réel utilisé comme séparateur décimal dans la sortie mise en forme dépend du format numérique reconnu par votre système.</span><span class="sxs-lookup"><span data-stu-id="c9602-364">The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system.</span></span> <span data-ttu-id="c9602-365">Par conséquent, vous devez utiliser la période en tant qu’espace réservé de décimale dans vos formats même si vous êtes dans les paramètres régionaux qui utilise une virgule comme séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-365">Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder.</span></span> <span data-ttu-id="c9602-366">La chaîne mise en forme s’affiche dans le format correct pour les paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="c9602-366">The formatted string will appear in the format correct for the locale.</span></span>|  
|<span data-ttu-id="c9602-367">(`%`)</span><span class="sxs-lookup"><span data-stu-id="c9602-367">(`%`)</span></span>|<span data-ttu-id="c9602-368">Espace réservé de pourcentage.</span><span class="sxs-lookup"><span data-stu-id="c9602-368">Percent placeholder.</span></span> <span data-ttu-id="c9602-369">Multiplie l’expression par 100.</span><span class="sxs-lookup"><span data-stu-id="c9602-369">Multiplies the expression by 100.</span></span> <span data-ttu-id="c9602-370">Le caractère de pourcentage (`%`) est inséré à la position où il apparaît dans la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="c9602-370">The percent character (`%`) is inserted in the position where it appears in the format string.</span></span>|  
|<span data-ttu-id="c9602-371">(`,`)</span><span class="sxs-lookup"><span data-stu-id="c9602-371">(`,`)</span></span>|<span data-ttu-id="c9602-372">Séparateur des milliers.</span><span class="sxs-lookup"><span data-stu-id="c9602-372">Thousand separator.</span></span> <span data-ttu-id="c9602-373">Le séparateur de milliers sépare les milliers des centaines dans un nombre possédant quatre chiffres ou plus à gauche du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-373">The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator.</span></span> <span data-ttu-id="c9602-374">L’utilisation standard du séparateur de milliers est spécifiée si le format contient un séparateur de milliers entouré par des espaces réservés de chiffres (`0` ou `#`).</span><span class="sxs-lookup"><span data-stu-id="c9602-374">Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).</span></span><br /><br /> <span data-ttu-id="c9602-375">Un séparateur de milliers juste à gauche du séparateur décimal (ou non une valeur décimale est spécifiée) ou en tant que le plus à droite de caractères dans la chaîne, signifie « mettre à l’échelle le nombre en le divisant par 1 000, arrondi en fonction des besoins. »</span><span class="sxs-lookup"><span data-stu-id="c9602-375">A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means "scale the number by dividing it by 1,000, rounding as needed."</span></span> <span data-ttu-id="c9602-376">Nombres inférieures à 1 000 mais supérieurs ou égaux à 500 sont affichés en tant que `1`et inférieure à 500 sont affichés sous forme de nombres `0`.</span><span class="sxs-lookup"><span data-stu-id="c9602-376">Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`.</span></span> <span data-ttu-id="c9602-377">Deux séparateurs des milliers adjacents dans cette position mise à l’échelle par un facteur de 1 million et un facteur supplémentaire de 1 000 pour chaque séparateur supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="c9602-377">Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.</span></span><br /><br /> <span data-ttu-id="c9602-378">Plusieurs séparateurs placés dans toute position autre qu’immédiatement à gauche du séparateur décimal ou la position la plus à droite dans la chaîne sont traités simplement comme spécifiant l’utilisation d’un séparateur de milliers.</span><span class="sxs-lookup"><span data-stu-id="c9602-378">Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator.</span></span> <span data-ttu-id="c9602-379">Dans certains paramètres régionaux, un point est utilisé comme séparateur de milliers.</span><span class="sxs-lookup"><span data-stu-id="c9602-379">In some locales, a period is used as a thousand separator.</span></span> <span data-ttu-id="c9602-380">Le caractère réel utilisé comme séparateur des milliers dans la sortie mise en forme dépend du Format numérique reconnu par votre système.</span><span class="sxs-lookup"><span data-stu-id="c9602-380">The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system.</span></span> <span data-ttu-id="c9602-381">Par conséquent, vous devez utiliser la virgule comme séparateur des milliers dans vos formats même si vous êtes dans les paramètres régionaux qui utilisent un point comme séparateur de milliers.</span><span class="sxs-lookup"><span data-stu-id="c9602-381">Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator.</span></span> <span data-ttu-id="c9602-382">La chaîne mise en forme s’affiche dans le format correct pour les paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="c9602-382">The formatted string will appear in the format correct for the locale.</span></span><br /><br /> <span data-ttu-id="c9602-383">Par exemple, considérez les trois chaînes de format suivant :</span><span class="sxs-lookup"><span data-stu-id="c9602-383">For example, consider the three following format strings:</span></span><br /><br /> <span data-ttu-id="c9602-384">-   `"#,0."`, qui utilise les séparateur des milliers pour mettre en forme le nombre 100 millions comme chaîne « 100,000,000 ».</span><span class="sxs-lookup"><span data-stu-id="c9602-384">-   `"#,0."`, which uses the thousands separator to format the number 100 million as the string "100,000,000".</span></span><br /><span data-ttu-id="c9602-385">-   `"#0,."`, qui utilise la mise à l’échelle par un facteur de mille pour mettre en forme le nombre 100 millions comme chaîne « 100000 ».</span><span class="sxs-lookup"><span data-stu-id="c9602-385">-   `"#0,."`, which uses scaling by a factor of one thousand to format the number 100 million as the string "100000".</span></span><br /><span data-ttu-id="c9602-386">-   `"#,0,."`, qui utilise les séparateur des milliers et mise à l’échelle par mille pour mettre en forme le nombre 100 millions comme chaîne « 100,000 ».</span><span class="sxs-lookup"><span data-stu-id="c9602-386">-   `"#,0,."`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string "100,000".</span></span>|  
|<span data-ttu-id="c9602-387">(`:`)</span><span class="sxs-lookup"><span data-stu-id="c9602-387">(`:`)</span></span>|<span data-ttu-id="c9602-388">Séparateur d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-388">Time separator.</span></span> <span data-ttu-id="c9602-389">Dans certains paramètres régionaux, les autres caractères peuvent être utilisés pour représenter le séparateur d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-389">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="c9602-390">Le séparateur horaire sépare les heures, minutes et secondes lors de la mise en forme des valeurs d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-390">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="c9602-391">Le caractère réel utilisé comme séparateur horaire dans la sortie mise en forme est déterminé par les paramètres système.</span><span class="sxs-lookup"><span data-stu-id="c9602-391">The actual character used as the time separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="c9602-392">(`/`)</span><span class="sxs-lookup"><span data-stu-id="c9602-392">(`/`)</span></span>|<span data-ttu-id="c9602-393">Séparateur de date.</span><span class="sxs-lookup"><span data-stu-id="c9602-393">Date separator.</span></span> <span data-ttu-id="c9602-394">Dans certains paramètres régionaux, les autres caractères peuvent être utilisés pour représenter le séparateur de date.</span><span class="sxs-lookup"><span data-stu-id="c9602-394">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="c9602-395">Le séparateur de date sépare le jour, le mois et l’année lorsque les valeurs de date sont mises en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-395">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="c9602-396">Le caractère réel utilisé comme séparateur de date dans la sortie mise en forme est déterminé par les paramètres système.</span><span class="sxs-lookup"><span data-stu-id="c9602-396">The actual character used as the date separator in formatted output is determined by your system settings.</span></span>|  
|<span data-ttu-id="c9602-397">(`E-``E+``e-``e+`)</span><span class="sxs-lookup"><span data-stu-id="c9602-397">(`E-``E+``e-``e+`)</span></span>|<span data-ttu-id="c9602-398">Format scientifique.</span><span class="sxs-lookup"><span data-stu-id="c9602-398">Scientific format.</span></span> <span data-ttu-id="c9602-399">Si l’expression de format contient au moins un espace réservé de chiffre (`0` ou `#`) à gauche de `E-`, `E+`, `e-`, ou `e+`, le nombre est affiché au format scientifique et `E` ou `e` est inséré entre le nombre et son exposant.</span><span class="sxs-lookup"><span data-stu-id="c9602-399">If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent.</span></span> <span data-ttu-id="c9602-400">Le nombre d’espaces réservés de chiffres à gauche détermine le nombre de chiffres dans l’exposant.</span><span class="sxs-lookup"><span data-stu-id="c9602-400">The number of digit placeholders to the left determines the number of digits in the exponent.</span></span> <span data-ttu-id="c9602-401">Utilisez `E-` ou `e-` pour placer un signe moins à côté des exposants négatifs.</span><span class="sxs-lookup"><span data-stu-id="c9602-401">Use `E-` or `e-` to place a minus sign next to negative exponents.</span></span> <span data-ttu-id="c9602-402">Utilisez `E+` ou `e+` pour placer un signe moins à côté des exposants négatifs et un signe plus à côté des exposants positifs.</span><span class="sxs-lookup"><span data-stu-id="c9602-402">Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents.</span></span> <span data-ttu-id="c9602-403">Vous devez également inclure des espaces réservés de chiffres à droite de ce symbole pour obtenir la mise en forme correcte.</span><span class="sxs-lookup"><span data-stu-id="c9602-403">You must also include digit placeholders to the right of this symbol to get correct formatting.</span></span>|  
|<span data-ttu-id="c9602-404">`-` `+` `$` ( )</span><span class="sxs-lookup"><span data-stu-id="c9602-404">`-` `+` `$` ( )</span></span>|<span data-ttu-id="c9602-405">Caractères littéraux.</span><span class="sxs-lookup"><span data-stu-id="c9602-405">Literal characters.</span></span> <span data-ttu-id="c9602-406">Ces caractères sont affichés exactement comme vous avez tapé dans la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="c9602-406">These characters are displayed exactly as typed in the format string.</span></span> <span data-ttu-id="c9602-407">Pour afficher un caractère autre que ceux répertoriés, faites-le précéder d’une barre oblique inverse (`\`) ou placez-le entre guillemets doubles ( » «).</span><span class="sxs-lookup"><span data-stu-id="c9602-407">To display a character other than one of those listed, precede it with a backslash (`\`) or enclose it in double quotation marks (" ").</span></span>|  
|<span data-ttu-id="c9602-408">(`\`)</span><span class="sxs-lookup"><span data-stu-id="c9602-408">(`\`)</span></span>|<span data-ttu-id="c9602-409">Affiche le caractère suivant dans la chaîne de format.</span><span class="sxs-lookup"><span data-stu-id="c9602-409">Displays the next character in the format string.</span></span> <span data-ttu-id="c9602-410">Pour afficher un caractère ayant une signification spéciale en tant que caractère littéral, faites-le précéder d’une barre oblique inverse (`\`).</span><span class="sxs-lookup"><span data-stu-id="c9602-410">To display a character that has special meaning as a literal character, precede it with a backslash (`\`).</span></span> <span data-ttu-id="c9602-411">La barre oblique inverse elle-même n’est pas affichée.</span><span class="sxs-lookup"><span data-stu-id="c9602-411">The backslash itself isn't displayed.</span></span> <span data-ttu-id="c9602-412">À l’aide d’une barre oblique inverse est identique à placer le caractère suivant entre guillemets doubles.</span><span class="sxs-lookup"><span data-stu-id="c9602-412">Using a backslash is the same as enclosing the next character in double quotation marks.</span></span> <span data-ttu-id="c9602-413">Pour afficher une barre oblique inverse, utilisez deux barres obliques inverses (`\\`).</span><span class="sxs-lookup"><span data-stu-id="c9602-413">To display a backslash, use two backslashes (`\\`).</span></span><br /><br /> <span data-ttu-id="c9602-414">Exemples de caractères qui ne peuvent pas être affichés comme caractères littéraux sont les caractères de mise en forme de date et heure de mise en forme (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, et `:`), les caractères de mise en forme numérique (`#`, `0`, `%`, `E`, `e`, virgule et point) et les caractères de mise en forme de chaîne (`@`, `&`, `<`, `>`, et `!`).</span><span class="sxs-lookup"><span data-stu-id="c9602-414">Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).</span></span>|  
|<span data-ttu-id="c9602-415">(`"``ABC``"`)</span><span class="sxs-lookup"><span data-stu-id="c9602-415">(`"``ABC``"`)</span></span>|<span data-ttu-id="c9602-416">Affiche la chaîne placée entre les guillemets doubles ( » «).</span><span class="sxs-lookup"><span data-stu-id="c9602-416">Displays the string inside the double quotation marks (" ").</span></span> <span data-ttu-id="c9602-417">Pour inclure une chaîne dans l’argument de style à partir de code, vous devez utiliser `Chr(34)` pour inclure le texte (`34` est le code de caractère pour un guillemet («)).</span><span class="sxs-lookup"><span data-stu-id="c9602-417">To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (")).</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="c9602-418">Exemple de code hérité</span><span class="sxs-lookup"><span data-stu-id="c9602-418">Legacy Code Example</span></span>  
 <span data-ttu-id="c9602-419">Le tableau suivant contient des exemples d’expressions de format pour les nombres.</span><span class="sxs-lookup"><span data-stu-id="c9602-419">The following table contains some sample format expressions for numbers.</span></span> <span data-ttu-id="c9602-420">(Ces exemples supposent que les paramètres régionaux de votre système est anglais-US) La première colonne contient les chaînes de format pour le `Style` argument de la `Format` fonction ; les autres colonnes contiennent le résultat obtenu si les données mises en forme ont la valeur donnée dans les en-têtes de colonne.</span><span class="sxs-lookup"><span data-stu-id="c9602-420">(These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.</span></span>  
  
|<span data-ttu-id="c9602-421">Format (`Style`)</span><span class="sxs-lookup"><span data-stu-id="c9602-421">Format (`Style`)</span></span>|<span data-ttu-id="c9602-422">« 5 » sous la forme</span><span class="sxs-lookup"><span data-stu-id="c9602-422">"5" formatted as</span></span>|<span data-ttu-id="c9602-423">sous la forme « -5 »</span><span class="sxs-lookup"><span data-stu-id="c9602-423">"-5" formatted as</span></span>|<span data-ttu-id="c9602-424">« 0,5 » sous la forme</span><span class="sxs-lookup"><span data-stu-id="c9602-424">"0.5" formatted as</span></span>|  
|-|-|-|-|  
|`Zero-length string ("")`|`5`|`-5`|`0.5`|  
|`0`|`5`|`-5`|`1`|  
|`0.00`|`5.00`|`-5.00`|`0.50`|  
|`#,##0`|`5`|`-5`|`1`|  
|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  
|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  
|`0%`|`500%`|`-500%`|`50%`|  
|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  
|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  
|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  
  
## <a name="predefined-datetime-formats"></a><span data-ttu-id="c9602-425">Formats de Date et d’heure prédéfinis</span><span class="sxs-lookup"><span data-stu-id="c9602-425">Predefined Date/Time Formats</span></span>  
 <span data-ttu-id="c9602-426">Le tableau suivant identifie les noms de format de temps et de date prédéfinies.</span><span class="sxs-lookup"><span data-stu-id="c9602-426">The following table identifies the predefined date and time format names.</span></span> <span data-ttu-id="c9602-427">Ceux-ci peuvent être utilisés par nom comme argument de style pour le `Format` (fonction) :</span><span class="sxs-lookup"><span data-stu-id="c9602-427">These may be used by name as the style argument for the `Format` function:</span></span>  
  
|<span data-ttu-id="c9602-428">Nom de format</span><span class="sxs-lookup"><span data-stu-id="c9602-428">Format Name</span></span>|<span data-ttu-id="c9602-429">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-429">Description</span></span>|  
|-|-|  
|<span data-ttu-id="c9602-430">`General Date`, ou `G`</span><span class="sxs-lookup"><span data-stu-id="c9602-430">`General Date`, or `G`</span></span>|<span data-ttu-id="c9602-431">Affiche une date et/ou une heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-431">Displays a date and/or time.</span></span> <span data-ttu-id="c9602-432">Par exemple, `3/12/2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-432">For example, `3/12/2008 11:07:31 AM`.</span></span> <span data-ttu-id="c9602-433">Affichage de la date est déterminé par la valeur de culture actuelle de votre application.</span><span class="sxs-lookup"><span data-stu-id="c9602-433">Date display is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="c9602-434">`Long Date`, `Medium Date`ou `D`</span><span class="sxs-lookup"><span data-stu-id="c9602-434">`Long Date`, `Medium Date`, or `D`</span></span>|<span data-ttu-id="c9602-435">Affiche une date en fonction du format de date longue de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-435">Displays a date according to your current culture's long date format.</span></span> <span data-ttu-id="c9602-436">Par exemple, `Wednesday, March 12, 2008`.</span><span class="sxs-lookup"><span data-stu-id="c9602-436">For example, `Wednesday, March 12, 2008`.</span></span>|  
|<span data-ttu-id="c9602-437">`Short Date`, ou `d`</span><span class="sxs-lookup"><span data-stu-id="c9602-437">`Short Date`, or `d`</span></span>|<span data-ttu-id="c9602-438">Affiche une date à l’aide du format de date courte de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-438">Displays a date using your current culture's short date format.</span></span> <span data-ttu-id="c9602-439">Par exemple, `3/12/2008`.</span><span class="sxs-lookup"><span data-stu-id="c9602-439">For example, `3/12/2008`.</span></span><br /><br /> <span data-ttu-id="c9602-440">Le `d` caractère affiche le jour dans un format de date défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-440">The `d` character displays the day in a user-defined date format.</span></span>|  
|<span data-ttu-id="c9602-441">`Long Time`, `Medium Time`ou `T`</span><span class="sxs-lookup"><span data-stu-id="c9602-441">`Long Time`, `Medium Time`, or `T`</span></span>|<span data-ttu-id="c9602-442">Affiche une heure à l’aide du format d’heure longue de la culture actuelle ; inclut généralement les heures, minutes, secondes.</span><span class="sxs-lookup"><span data-stu-id="c9602-442">Displays a time using your current culture's long time format; typically includes hours, minutes, seconds.</span></span> <span data-ttu-id="c9602-443">Par exemple, `11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-443">For example, `11:07:31 AM`.</span></span>|  
|<span data-ttu-id="c9602-444">`Short Time` ou `t`</span><span class="sxs-lookup"><span data-stu-id="c9602-444">`Short Time` or `t`</span></span>|<span data-ttu-id="c9602-445">Affiche une heure à l’aide du format d’heure courte de la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-445">Displays a time using your current culture's short time format.</span></span> <span data-ttu-id="c9602-446">Par exemple, `11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-446">For example, `11:07 AM`.</span></span><br /><br /> <span data-ttu-id="c9602-447">Le `t` caractère affiche `AM` ou `PM` valeurs pour les paramètres régionaux qui utilisent une horloge de 12 heures dans un format d’heure défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-447">The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.</span></span>|  
|`f`|<span data-ttu-id="c9602-448">Affiche la date longue et heure courte d’après le format de votre la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-448">Displays the long date and short time according to your current culture's format.</span></span> <span data-ttu-id="c9602-449">Par exemple, `Wednesday, March 12, 2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-449">For example, `Wednesday, March 12, 2008 11:07 AM`.</span></span>|  
|`F`|<span data-ttu-id="c9602-450">Affiche la date longue et heure longue d’après le format de votre la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-450">Displays the long date and long time according to your current culture's format.</span></span> <span data-ttu-id="c9602-451">Par exemple, `Wednesday, March 12, 2008 11:07:31 AM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-451">For example, `Wednesday, March 12, 2008 11:07:31 AM`.</span></span>|  
|`g`|<span data-ttu-id="c9602-452">Affiche la date courte et heure courte d’après le format de votre la culture actuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-452">Displays the short date and short time according to your current culture's format.</span></span> <span data-ttu-id="c9602-453">Par exemple, `3/12/2008 11:07 AM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-453">For example, `3/12/2008 11:07 AM`.</span></span>|  
|<span data-ttu-id="c9602-454">`M`, `m`</span><span class="sxs-lookup"><span data-stu-id="c9602-454">`M`, `m`</span></span>|<span data-ttu-id="c9602-455">Affiche le mois et le jour d’une date.</span><span class="sxs-lookup"><span data-stu-id="c9602-455">Displays the month and the day of a date.</span></span> <span data-ttu-id="c9602-456">Par exemple, `March 12`.</span><span class="sxs-lookup"><span data-stu-id="c9602-456">For example, `March 12`.</span></span><br /><br /> <span data-ttu-id="c9602-457">Le `M` caractère affiche le mois dans un format de date défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-457">The `M` character displays the month in a user-defined date format.</span></span> <span data-ttu-id="c9602-458">Le `m` caractère affiche les minutes dans un format d’heure défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-458">The `m` character displays the minutes in a user-defined time format.</span></span>|  
|<span data-ttu-id="c9602-459">`R`, `r`</span><span class="sxs-lookup"><span data-stu-id="c9602-459">`R`, `r`</span></span>|<span data-ttu-id="c9602-460">Met en forme la date en fonction de la <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c9602-460">Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property.</span></span> <span data-ttu-id="c9602-461">Par exemple, `Wed, 12 Mar 2008 11:07:31 GMT`.</span><span class="sxs-lookup"><span data-stu-id="c9602-461">For example, `Wed, 12 Mar 2008 11:07:31 GMT`.</span></span> <span data-ttu-id="c9602-462">La date de mise en forme n’ajuste pas la valeur de date et d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-462">The formatted date does not adjust the value of the date and time.</span></span> <span data-ttu-id="c9602-463">Vous devez ajuster la valeur de Date/heure à GMT avant d’appeler le `Format` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-463">You must adjust the Date/Time value to GMT before calling the `Format` function.</span></span>|  
|`s`|<span data-ttu-id="c9602-464">Met en forme la date et l’heure sous la forme d’un index pouvant être trié.</span><span class="sxs-lookup"><span data-stu-id="c9602-464">Formats the date and time as a sortable index.</span></span> <span data-ttu-id="c9602-465">Par exemple, `2008-03-12T11:07:31`.</span><span class="sxs-lookup"><span data-stu-id="c9602-465">For example, `2008-03-12T11:07:31`.</span></span><br /><br /> <span data-ttu-id="c9602-466">Le `s` caractère affiche les secondes dans un format d’heure défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-466">The `s` character displays the seconds in a user-defined time format.</span></span>|  
|`u`|<span data-ttu-id="c9602-467">Met en forme la date et l’heure en tant qu’index triable GMT.</span><span class="sxs-lookup"><span data-stu-id="c9602-467">Formats the date and time as a GMT sortable index.</span></span> <span data-ttu-id="c9602-468">Par exemple, `2008-03-12 11:07:31Z`.</span><span class="sxs-lookup"><span data-stu-id="c9602-468">For example, `2008-03-12 11:07:31Z`.</span></span>|  
|`U`|<span data-ttu-id="c9602-469">Met en forme la date et heure avec la date et heure longues d’après GMT.</span><span class="sxs-lookup"><span data-stu-id="c9602-469">Formats the date and time with the long date and long time as GMT.</span></span> <span data-ttu-id="c9602-470">Par exemple, `Wednesday, March 12, 2008 6:07:31 PM`.</span><span class="sxs-lookup"><span data-stu-id="c9602-470">For example, `Wednesday, March 12, 2008 6:07:31 PM`.</span></span>|  
|<span data-ttu-id="c9602-471">`Y`, `y`</span><span class="sxs-lookup"><span data-stu-id="c9602-471">`Y`, `y`</span></span>|<span data-ttu-id="c9602-472">Met en forme la date en tant qu’année et mois.</span><span class="sxs-lookup"><span data-stu-id="c9602-472">Formats the date as the year and month.</span></span> <span data-ttu-id="c9602-473">Par exemple, `March, 2008`.</span><span class="sxs-lookup"><span data-stu-id="c9602-473">For example, `March, 2008`.</span></span><br /><br /> <span data-ttu-id="c9602-474">Le `Y` et `y` caractères affichent l’année dans un format de date défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-474">The `Y` and `y` characters display the year in a user-defined date format.</span></span>|  
  
 <span data-ttu-id="c9602-475">Pour plus d’informations sur les informations de culture actuelle de l’application, consultez [fonctionnement Culture affecte des chaînes en Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-475">For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
## <a name="user-defined-datetime-formats"></a><span data-ttu-id="c9602-476">Formats de Date/heure définis par l’utilisateur</span><span class="sxs-lookup"><span data-stu-id="c9602-476">User-Defined Date/Time Formats</span></span>  
 <span data-ttu-id="c9602-477">Le tableau suivant présente les caractères que vous pouvez utiliser pour créer des formats de date/heure définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-477">The following table shows characters you can use to create user-defined date/time formats.</span></span> <span data-ttu-id="c9602-478">Contrairement aux versions antérieures de Visual Basic, ces caractères de format respectent la casse.</span><span class="sxs-lookup"><span data-stu-id="c9602-478">Unlike in earlier versions of Visual Basic, these format characters are case-sensitive.</span></span>  
  
|<span data-ttu-id="c9602-479">Caractère</span><span class="sxs-lookup"><span data-stu-id="c9602-479">Character</span></span>|<span data-ttu-id="c9602-480">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-480">Description</span></span>|  
|-|-|  
|<span data-ttu-id="c9602-481">(`:`)</span><span class="sxs-lookup"><span data-stu-id="c9602-481">(`:`)</span></span>|<span data-ttu-id="c9602-482">Séparateur d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-482">Time separator.</span></span> <span data-ttu-id="c9602-483">Dans certains paramètres régionaux, les autres caractères peuvent être utilisés pour représenter le séparateur d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-483">In some locales, other characters may be used to represent the time separator.</span></span> <span data-ttu-id="c9602-484">Le séparateur horaire sépare les heures, minutes et secondes lors de la mise en forme des valeurs d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-484">The time separator separates hours, minutes, and seconds when time values are formatted.</span></span> <span data-ttu-id="c9602-485">Le caractère réel utilisé comme séparateur horaire dans le résultat mis en forme est déterminé par la valeur de culture actuelle de votre application.</span><span class="sxs-lookup"><span data-stu-id="c9602-485">The actual character that is used as the time separator in formatted output is determined by your application's current culture value.</span></span>|  
|<span data-ttu-id="c9602-486">(`/`)</span><span class="sxs-lookup"><span data-stu-id="c9602-486">(`/`)</span></span>|<span data-ttu-id="c9602-487">Séparateur de date.</span><span class="sxs-lookup"><span data-stu-id="c9602-487">Date separator.</span></span> <span data-ttu-id="c9602-488">Dans certains paramètres régionaux, les autres caractères peuvent être utilisés pour représenter le séparateur de date.</span><span class="sxs-lookup"><span data-stu-id="c9602-488">In some locales, other characters may be used to represent the date separator.</span></span> <span data-ttu-id="c9602-489">Le séparateur de date sépare le jour, le mois et l’année lorsque les valeurs de date sont mises en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-489">The date separator separates the day, month, and year when date values are formatted.</span></span> <span data-ttu-id="c9602-490">Le caractère réel utilisé comme séparateur de date dans la sortie mise en forme est déterminé par la culture actuelle de votre application.</span><span class="sxs-lookup"><span data-stu-id="c9602-490">The actual character that is used as the date separator in formatted output is determined by your application's current culture.</span></span>|  
|<span data-ttu-id="c9602-491">(`%`)</span><span class="sxs-lookup"><span data-stu-id="c9602-491">(`%`)</span></span>|<span data-ttu-id="c9602-492">Utilisé pour indiquer que le caractère suivant doit être lu comme un format de lettre unique sans tenir compte des éventuelles lettres de fin.</span><span class="sxs-lookup"><span data-stu-id="c9602-492">Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters.</span></span> <span data-ttu-id="c9602-493">Également utilisé pour indiquer qu’un format de lettre unique est lu comme un format défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-493">Also used to indicate that a single-letter format is read as a user-defined format.</span></span> <span data-ttu-id="c9602-494">Consultez les rubriques suivantes pour plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="c9602-494">See what follows for additional details.</span></span>|  
|`d`|<span data-ttu-id="c9602-495">Affiche le jour sous la forme d’un nombre sans zéro non significatif (par exemple, `1`).</span><span class="sxs-lookup"><span data-stu-id="c9602-495">Displays the day as a number without a leading zero (for example, `1`).</span></span> <span data-ttu-id="c9602-496">Utilisez `%d` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-496">Use `%d` if this is the only character in your user-defined numeric format.</span></span>|  
|`dd`|<span data-ttu-id="c9602-497">Affiche le jour sous la forme d’un nombre avec un zéro non significatif (par exemple, `01`).</span><span class="sxs-lookup"><span data-stu-id="c9602-497">Displays the day as a number with a leading zero (for example, `01`).</span></span>|  
|`ddd`|<span data-ttu-id="c9602-498">Affiche le jour sous forme abrégée (par exemple, `Sun`).</span><span class="sxs-lookup"><span data-stu-id="c9602-498">Displays the day as an abbreviation (for example, `Sun`).</span></span>|  
|`dddd`|<span data-ttu-id="c9602-499">Affiche le jour sous forme non abrégée (par exemple, `Sunday`).</span><span class="sxs-lookup"><span data-stu-id="c9602-499">Displays the day as a full name (for example, `Sunday`).</span></span>|  
|`M`|<span data-ttu-id="c9602-500">Affiche le mois sous la forme d’un nombre sans zéro non significatif (par exemple, janvier est représenté en tant que `1`).</span><span class="sxs-lookup"><span data-stu-id="c9602-500">Displays the month as a number without a leading zero (for example, January is represented as `1`).</span></span> <span data-ttu-id="c9602-501">Utilisez `%M` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-501">Use `%M` if this is the only character in your user-defined numeric format.</span></span>|  
|`MM`|<span data-ttu-id="c9602-502">Affiche le mois sous la forme d’un nombre avec un zéro non significatif (par exemple, `01/12/01`).</span><span class="sxs-lookup"><span data-stu-id="c9602-502">Displays the month as a number with a leading zero (for example, `01/12/01`).</span></span>|  
|`MMM`|<span data-ttu-id="c9602-503">Affiche le mois sous forme abrégée (par exemple, `Jan`).</span><span class="sxs-lookup"><span data-stu-id="c9602-503">Displays the month as an abbreviation (for example, `Jan`).</span></span>|  
|`MMMM`|<span data-ttu-id="c9602-504">Affiche le mois sous la forme d’un nom complet du mois (par exemple, `January`).</span><span class="sxs-lookup"><span data-stu-id="c9602-504">Displays the month as a full month name (for example, `January`).</span></span>|  
|`gg`|<span data-ttu-id="c9602-505">Affiche la chaîne de période/ère (par exemple, `A.D.`).</span><span class="sxs-lookup"><span data-stu-id="c9602-505">Displays the period/era string (for example, `A.D.`).</span></span>|  
|`h`|<span data-ttu-id="c9602-506">Affiche l’heure sous la forme d’un nombre sans zéros non significatifs à l’aide de l’horloge de 12 heures (par exemple, `1:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="c9602-506">Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`).</span></span> <span data-ttu-id="c9602-507">Utilisez `%h` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-507">Use `%h` if this is the only character in your user-defined numeric format.</span></span>|  
|`hh`|<span data-ttu-id="c9602-508">Affiche l’heure sous la forme d’un nombre avec des zéros non significatifs à l’aide de l’horloge de 12 heures (par exemple, `01:15:15 PM`).</span><span class="sxs-lookup"><span data-stu-id="c9602-508">Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).</span></span>|  
|`H`|<span data-ttu-id="c9602-509">Affiche l’heure sous la forme d’un nombre sans zéros non significatifs à l’aide de l’horloge de 24 heures (par exemple, `1:15:15`).</span><span class="sxs-lookup"><span data-stu-id="c9602-509">Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`).</span></span> <span data-ttu-id="c9602-510">Utilisez `%H` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-510">Use `%H` if this is the only character in your user-defined numeric format.</span></span>|  
|`HH`|<span data-ttu-id="c9602-511">Affiche l’heure sous la forme d’un nombre avec des zéros non significatifs à l’aide de l’horloge de 24 heures (par exemple, `01:15:15`).</span><span class="sxs-lookup"><span data-stu-id="c9602-511">Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).</span></span>|  
|`m`|<span data-ttu-id="c9602-512">Affiche la minute sous la forme d’un nombre sans zéro non significatif (par exemple, `12:1:15`).</span><span class="sxs-lookup"><span data-stu-id="c9602-512">Displays the minute as a number without leading zeros (for example, `12:1:15`).</span></span> <span data-ttu-id="c9602-513">Utilisez `%m` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-513">Use `%m` if this is the only character in your user-defined numeric format.</span></span>|  
|`mm`|<span data-ttu-id="c9602-514">Affiche la minute sous la forme d’un nombre avec des zéros non significatifs (par exemple, `12:01:15`).</span><span class="sxs-lookup"><span data-stu-id="c9602-514">Displays the minute as a number with leading zeros (for example, `12:01:15`).</span></span>|  
|`s`|<span data-ttu-id="c9602-515">Affiche la seconde sous la forme d’un nombre sans zéro non significatif (par exemple, `12:15:5`).</span><span class="sxs-lookup"><span data-stu-id="c9602-515">Displays the second as a number without leading zeros (for example, `12:15:5`).</span></span> <span data-ttu-id="c9602-516">Utilisez `%s` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-516">Use `%s` if this is the only character in your user-defined numeric format.</span></span>|  
|`ss`|<span data-ttu-id="c9602-517">Affiche la seconde sous la forme d’un nombre avec des zéros non significatifs (par exemple, `12:15:05`).</span><span class="sxs-lookup"><span data-stu-id="c9602-517">Displays the second as a number with leading zeros (for example, `12:15:05`).</span></span>|  
|`f`|<span data-ttu-id="c9602-518">Affiche les fractions de secondes.</span><span class="sxs-lookup"><span data-stu-id="c9602-518">Displays fractions of seconds.</span></span> <span data-ttu-id="c9602-519">Par exemple `ff` affiche les centièmes de secondes, tandis que `ffff` affiche les dix millièmes de secondes.</span><span class="sxs-lookup"><span data-stu-id="c9602-519">For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds.</span></span> <span data-ttu-id="c9602-520">Vous pouvez utiliser jusqu'à sept `f` symboles dans votre format défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-520">You may use up to seven `f` symbols in your user-defined format.</span></span> <span data-ttu-id="c9602-521">Utilisez `%f` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-521">Use `%f` if this is the only character in your user-defined numeric format.</span></span>|  
|`t`|<span data-ttu-id="c9602-522">Utilise l’horloge de 12 heures et affiche une majuscule `A` pour toute heure avant midi ; affiche une majuscule `P` pour toute heure comprise entre midi et 11:59 P.M.</span><span class="sxs-lookup"><span data-stu-id="c9602-522">Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M.</span></span> <span data-ttu-id="c9602-523">Utilisez `%t` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-523">Use `%t` if this is the only character in your user-defined numeric format.</span></span>|  
|`tt`|<span data-ttu-id="c9602-524">Pour les paramètres régionaux qui utilisent une horloge de 12 heures, affiche une majuscule `AM` avec toute heure avant midi ; affiche une majuscule `PM` avec toute heure comprise entre midi et 11:59 P.M.</span><span class="sxs-lookup"><span data-stu-id="c9602-524">For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.</span></span><br /><br /> <span data-ttu-id="c9602-525">Pour les paramètres régionaux qui utilisent une horloge de 24 heures, n’affiche rien.</span><span class="sxs-lookup"><span data-stu-id="c9602-525">For locales that use a 24-hour clock, displays nothing.</span></span>|  
|`y`|<span data-ttu-id="c9602-526">Affiche le numéro de l’année (0-9) sans zéro non significatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-526">Displays the year number (0-9) without leading zeros.</span></span> <span data-ttu-id="c9602-527">Utilisez `%y` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-527">Use `%y` if this is the only character in your user-defined numeric format.</span></span>|  
|`yy`|<span data-ttu-id="c9602-528">Affiche l’année au format à deux chiffres numérique avec un zéro non significatif, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="c9602-528">Displays the year in two-digit numeric format with a leading zero, if applicable.</span></span>|  
|`yyy`|<span data-ttu-id="c9602-529">Affiche l’année dans un format numérique à quatre chiffres.</span><span class="sxs-lookup"><span data-stu-id="c9602-529">Displays the year in four-digit numeric format.</span></span>|  
|`yyyy`|<span data-ttu-id="c9602-530">Affiche l’année dans un format numérique à quatre chiffres.</span><span class="sxs-lookup"><span data-stu-id="c9602-530">Displays the year in four-digit numeric format.</span></span>|  
|`z`|<span data-ttu-id="c9602-531">Affiche le décalage de fuseau horaire sans zéro non significatif (par exemple, `-8`).</span><span class="sxs-lookup"><span data-stu-id="c9602-531">Displays the timezone offset without a leading zero (for example, `-8`).</span></span> <span data-ttu-id="c9602-532">Utilisez `%z` s’il s’agit du seul caractère dans votre format numérique défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-532">Use `%z` if this is the only character in your user-defined numeric format.</span></span>|  
|`zz`|<span data-ttu-id="c9602-533">Affiche le décalage de fuseau horaire avec un zéro non significatif (par exemple, `-08`)</span><span class="sxs-lookup"><span data-stu-id="c9602-533">Displays the timezone offset with a leading zero (for example, `-08`)</span></span>|  
|`zzz`|<span data-ttu-id="c9602-534">Affiche le décalage de fuseau horaire complet (par exemple, `-08:00`)</span><span class="sxs-lookup"><span data-stu-id="c9602-534">Displays the full timezone offset (for example, `-08:00`)</span></span>|  
  
### <a name="legacy-code-example"></a><span data-ttu-id="c9602-535">Exemple de code hérité</span><span class="sxs-lookup"><span data-stu-id="c9602-535">Legacy Code Example</span></span>  
 <span data-ttu-id="c9602-536">Voici des exemples de date défini par l’utilisateur et les formats d’heure pour `December 7, 1958, 8:50 PM, 35 seconds`:</span><span class="sxs-lookup"><span data-stu-id="c9602-536">The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:</span></span>  
  
|<span data-ttu-id="c9602-537">Format</span><span class="sxs-lookup"><span data-stu-id="c9602-537">Format</span></span>|<span data-ttu-id="c9602-538">Affiche</span><span class="sxs-lookup"><span data-stu-id="c9602-538">Displays</span></span>|  
|-|-|  
|`M/d/yy`|`12/7/58`|  
|`d-MMM`|`7-Dec`|  
|`d-MMMM-yy`|`7-December-58`|  
|`d MMMM`|`7 December`|  
|`MMMM yy`|`December 58`|  
|`hh:mm tt`|`08:50 PM`|  
|`h:mm:ss t`|`8:50:35 P`|  
|`H:mm`|`20:50`|  
|`H:mm:ss`|`20:50:35`|  
|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  
  
### <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-539">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-539">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-540">La résolution de temps minimal pour un appareil est déterminée par le fabricant de l’appareil.</span><span class="sxs-lookup"><span data-stu-id="c9602-540">The minimum time resolution for a device is determined by the manufacturer of the device.</span></span> <span data-ttu-id="c9602-541">Si le temps de résolution de l’appareil est assez grossière le `f` caractère de format retourne 0 lorsque vous exécutez sur l’appareil.</span><span class="sxs-lookup"><span data-stu-id="c9602-541">If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-542">Cet exemple illustre différentes utilisations de la `Format` fonction des valeurs de format à l’aide de deux `String` formats et les formats définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-542">This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats.</span></span> <span data-ttu-id="c9602-543">Pour le séparateur de date (`/`), séparateur d’heure (`:`) et les indicateurs AM/PM (`t` et `tt`), la sortie mise en forme réelle affichée par votre système dépend des paramètres régionaux utilisés par le code.</span><span class="sxs-lookup"><span data-stu-id="c9602-543">For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using.</span></span> <span data-ttu-id="c9602-544">Lorsque heures et dates sont affichées dans l’environnement de développement, le format d’heure courte et le format de date courte des paramètres régionaux de code sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="c9602-544">When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-545">Pour les paramètres régionaux qui utilisent une horloge de 24 heures, les indicateurs AM/PM (`t` et `tt`) n’affichent rien.</span><span class="sxs-lookup"><span data-stu-id="c9602-545">For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.</span></span>  
  
 [!code-vb[VbVbalrStrings#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-546">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-546">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatCurrency">
      <MemberSignature Language="C#" Value="public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatCurrency(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatCurrency (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatCurrency : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatCurrency (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-547">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-547">Required.</span></span> <span data-ttu-id="c9602-548">Expression à mettre en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-548">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="c9602-549">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-549">Optional.</span></span> <span data-ttu-id="c9602-550">Valeur numérique indiquant le nombre de décimales affiché à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-550">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="c9602-551">La valeur par défaut est -1, ce qui indique que les paramètres régionaux de l’ordinateur sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="c9602-551">Default value is -1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="c9602-552">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-552">Optional.</span></span> <span data-ttu-id="c9602-553"><see cref="T:Microsoft.VisualBasic.TriState" /> énumération qui indique si un zéro non significatif s’affiche pour les valeurs décimales.</span><span class="sxs-lookup"><span data-stu-id="c9602-553"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not a leading zero is displayed for fractional values.</span></span> <span data-ttu-id="c9602-554">Pour les valeurs, consultez « Remarques ».</span><span class="sxs-lookup"><span data-stu-id="c9602-554">See "Remarks" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="c9602-555">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-555">Optional.</span></span> <span data-ttu-id="c9602-556"><see cref="T:Microsoft.VisualBasic.TriState" /> énumération qui indique s’il faut placer des valeurs négatives entre parenthèses.</span><span class="sxs-lookup"><span data-stu-id="c9602-556"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="c9602-557">Pour les valeurs, consultez « Remarques ».</span><span class="sxs-lookup"><span data-stu-id="c9602-557">See "Remarks" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="c9602-558">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-558">Optional.</span></span> <span data-ttu-id="c9602-559"><see cref="T:Microsoft.VisualBasic.TriState" /> énumération qui indique si les nombres sont regroupés en utilisant le délimiteur de groupe spécifié dans les paramètres régionaux de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-559"><see cref="T:Microsoft.VisualBasic.TriState" /> enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings.</span></span> <span data-ttu-id="c9602-560">Pour les valeurs, consultez « Remarques ».</span><span class="sxs-lookup"><span data-stu-id="c9602-560">See "Remarks" for values.</span></span></param>
        <summary><span data-ttu-id="c9602-561">Retourne une expression sous formatée de valeur monétaire utilisant le symbole monétaire défini dans le panneau de configuration système.</span><span class="sxs-lookup"><span data-stu-id="c9602-561">Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></summary>
        <returns><span data-ttu-id="c9602-562">Une expression sous forme de valeur monétaire utilisant le symbole monétaire défini dans le Panneau de configuration du système.</span><span class="sxs-lookup"><span data-stu-id="c9602-562">An expression formatted as a currency value using the currency symbol defined in the system control panel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-563">Lorsqu’un ou plusieurs arguments facultatifs sont omis, les valeurs de paramètres régionaux correspondants de l’ordinateur sont utilisés à la place.</span><span class="sxs-lookup"><span data-stu-id="c9602-563">When one or more optional arguments are omitted, the computer's matching regional-settings values are used instead.</span></span>  
  
 <span data-ttu-id="c9602-564">La position du symbole de devise par rapport à la valeur de devise est déterminée par les paramètres régionaux du système.</span><span class="sxs-lookup"><span data-stu-id="c9602-564">The position of the currency symbol relative to the currency value is determined by the system's regional settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-565">Tous les paramètres sont les paramètres régionaux de l’application.</span><span class="sxs-lookup"><span data-stu-id="c9602-565">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="c9602-566">Par défaut, il s’agit des paramètres régionaux définis dans le panneau de configuration.</span><span class="sxs-lookup"><span data-stu-id="c9602-566">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="c9602-567">Toutefois, il peut-être être modifié par programme à l’aide de .NET Framework, à l’exception de zéro non significatif, qui provient de la `Number` onglet.</span><span class="sxs-lookup"><span data-stu-id="c9602-567">However, it may be changed programmatically by using the .NET Framework, except leading zero, which comes from the `Number` tab.</span></span>  
  
 <span data-ttu-id="c9602-568">Le `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, et `GroupDigits` prennent les valeurs d’énumération trois états suivants.</span><span class="sxs-lookup"><span data-stu-id="c9602-568">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments take the following TriState enumeration values.</span></span>  
  
|<span data-ttu-id="c9602-569">Value</span><span class="sxs-lookup"><span data-stu-id="c9602-569">Value</span></span>|<span data-ttu-id="c9602-570">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-570">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="c9602-571">True</span><span class="sxs-lookup"><span data-stu-id="c9602-571">True</span></span>|  
|`TriState.False`|<span data-ttu-id="c9602-572">False</span><span class="sxs-lookup"><span data-stu-id="c9602-572">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="c9602-573">Paramètres régionaux de l’ordinateur</span><span class="sxs-lookup"><span data-stu-id="c9602-573">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-574">L'exemple ci-dessous illustre l'utilisation de la fonction `FormatCurrency`.</span><span class="sxs-lookup"><span data-stu-id="c9602-574">The following example illustrates the use of the `FormatCurrency` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-575">Nombre de chiffres après la virgule décimale est supérieure à 99.</span><span class="sxs-lookup"><span data-stu-id="c9602-575">Number of digits after decimal point is greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c9602-576">Le type n’est pas numérique.</span><span class="sxs-lookup"><span data-stu-id="c9602-576">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-577">Manipulation de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-577">String Manipulation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatDateTime">
      <MemberSignature Language="C#" Value="public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatDateTime(valuetype System.DateTime Expression, valuetype Microsoft.VisualBasic.DateFormat NamedFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatDateTime (Expression As DateTime, Optional NamedFormat As DateFormat = Microsoft.VisualBasic.DateFormat.GeneralDate) As String" />
      <MemberSignature Language="F#" Value="static member FormatDateTime : DateTime * Microsoft.VisualBasic.DateFormat -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatDateTime (Expression, NamedFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="NamedFormat" Type="Microsoft.VisualBasic.DateFormat" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-578">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-578">Required.</span></span> <span data-ttu-id="c9602-579"><see langword="Date" /> expression à mettre en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-579"><see langword="Date" /> expression to be formatted.</span></span></param>
        <param name="NamedFormat"><span data-ttu-id="c9602-580">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-580">Optional.</span></span> <span data-ttu-id="c9602-581">Valeur numérique qui indique le format de date/heure utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-581">Numeric value that indicates the date/time format used.</span></span> <span data-ttu-id="c9602-582">Si omis, <see langword="DateFormat.GeneralDate" /> est utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-582">If omitted, <see langword="DateFormat.GeneralDate" /> is used.</span></span></param>
        <summary><span data-ttu-id="c9602-583">Retourne une expression de chaîne représentant une valeur de date/heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-583">Returns a string expression representing a date/time value.</span></span></summary>
        <returns><span data-ttu-id="c9602-584">Une expression de chaîne représentant une valeur de date/d’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-584">A string expression representing a date/time value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-585">Le `Date` type de données contient toujours des informations de date / heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-585">The `Date` data type always contains both date and time information.</span></span> <span data-ttu-id="c9602-586">Dans le cadre de la conversion de type, Visual Basic considère 1/1/1 (le 1er janvier de l’année 1) comme une valeur neutre pour la date et 00:00:00 (minuit) comme une valeur neutre pour l’heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-586">For purposes of type conversion, Visual Basic considers 1/1/1 (January 1 of the year 1) to be a neutral value for the date, and 00:00:00 (midnight) to be a neutral value for the time.</span></span> <span data-ttu-id="c9602-587">Si vous formatez un `Date` valeur sous forme de chaîne date/heure, `FormatDateTime` n’inclut pas de valeurs neutres dans la chaîne résultante.</span><span class="sxs-lookup"><span data-stu-id="c9602-587">If you format a `Date` value as a date/time string, `FormatDateTime` does not include neutral values in the resulting string.</span></span> <span data-ttu-id="c9602-588">Par exemple, si vous convertissez #1/1/0001 9:30:00 # en une chaîne, le résultat est « 9:30:00 AM » ; les informations de date sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="c9602-588">For example, if you convert #1/1/0001 9:30:00# to a string, the result is "9:30:00 AM"; the date information is suppressed.</span></span> <span data-ttu-id="c9602-589">Toutefois, les informations de date sont toujours présentes dans la version d’origine `Date` valeur et peuvent être récupérées avec des fonctions telles que `DatePart`.</span><span class="sxs-lookup"><span data-stu-id="c9602-589">However, the date information is still present in the original `Date` value and can be recovered with functions such as `DatePart`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-590">Si vous passez le `Expression` argument comme un `String` littéral, `FormatDateTime` interprète en fonction le <xref:System.Globalization.CultureInfo.CurrentCulture%2A> définition de votre application.</span><span class="sxs-lookup"><span data-stu-id="c9602-590">If you pass the `Expression` argument as a `String` literal, `FormatDateTime` interprets it according to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> setting of your application.</span></span> <span data-ttu-id="c9602-591">Toutefois, si vous transmettez en tant qu’un `Date` littéral, utiliser le format #mm/dd/yyyy #, étant donné que `FormatDateTime` interprète toujours un `Date` littéral selon la culture anglais (États-Unis).</span><span class="sxs-lookup"><span data-stu-id="c9602-591">However, if you pass it as a `Date` literal, use the format #mm/dd/yyyy#, because `FormatDateTime` always interprets a `Date` literal according to the English (US) culture.</span></span> <span data-ttu-id="c9602-592">Cela est nécessaire car, si une application est développée et codée à l’aide `Date` littéraux d’une culture, mais il est ensuite exécutée sur une plateforme avec une autre culture, le `Date` littéraux peuvent être analysés de manière incorrecte.</span><span class="sxs-lookup"><span data-stu-id="c9602-592">This is necessary because, if an application is developed and coded using `Date` literals from one culture, but is then executed on a platform with a different culture, the `Date` literals could be parsed incorrectly.</span></span>  
  
 <span data-ttu-id="c9602-593">Le `NamedFormat` argument possède les paramètres suivants.</span><span class="sxs-lookup"><span data-stu-id="c9602-593">The `NamedFormat` argument has the following settings.</span></span>  
  
|<span data-ttu-id="c9602-594">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-594">Constant</span></span>|<span data-ttu-id="c9602-595">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-595">Description</span></span>|  
|-|-|  
|`DateFormat.GeneralDate`|<span data-ttu-id="c9602-596">Afficher une date et/ou une heure.</span><span class="sxs-lookup"><span data-stu-id="c9602-596">Display a date and/or time.</span></span> <span data-ttu-id="c9602-597">Afficher une partie de date comme une date courte.</span><span class="sxs-lookup"><span data-stu-id="c9602-597">Display a date part as a short date.</span></span> <span data-ttu-id="c9602-598">S’il existe une partie heure, affichez-la en tant que beaucoup de temps.</span><span class="sxs-lookup"><span data-stu-id="c9602-598">If there is a time part, display it as a long time.</span></span> <span data-ttu-id="c9602-599">Le cas échéant, les deux parties s’affiche.</span><span class="sxs-lookup"><span data-stu-id="c9602-599">If present, both parts display.</span></span>|  
|`DateFormat.LongDate`|<span data-ttu-id="c9602-600">Affiche une date en utilisant le format de date longue spécifié dans les paramètres régionaux de votre ordinateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-600">Display a date using the long date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortDate`|<span data-ttu-id="c9602-601">Affiche une date en utilisant le format de date courte spécifié dans les paramètres régionaux de votre ordinateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-601">Display a date using the short date format specified in your computer's regional settings.</span></span>|  
|`DateFormat.LongTime`|<span data-ttu-id="c9602-602">Affiche une heure au format spécifié dans les paramètres régionaux de votre ordinateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-602">Display a time using the time format specified in your computer's regional settings.</span></span>|  
|`DateFormat.ShortTime`|<span data-ttu-id="c9602-603">Affiche une heure en utilisant le format de 24 heures (hh : mm).</span><span class="sxs-lookup"><span data-stu-id="c9602-603">Display a time using the 24-hour format (hh:mm).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-604">Cet exemple illustre l’utilisation de la `FormatDateTime` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-604">This example demonstrates the use of the `FormatDateTime` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-605"><paramref name="NamedFormat" /> paramètre n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-605"><paramref name="NamedFormat" /> setting is not valid.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-606">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-606">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatNumber(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumber (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatNumber : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatNumber (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-607">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-607">Required.</span></span> <span data-ttu-id="c9602-608">Expression à mettre en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-608">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="c9602-609">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-609">Optional.</span></span> <span data-ttu-id="c9602-610">Valeur numérique indiquant le nombre de décimales affiché à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-610">Numeric value indicating how many places are displayed to the right of the decimal.</span></span> <span data-ttu-id="c9602-611">La valeur par défaut est -1, ce qui indique que les paramètres régionaux de l’ordinateur sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="c9602-611">The default value is -1, which indicates that the computer's regional settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="c9602-612">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-612">Optional.</span></span> <span data-ttu-id="c9602-613"><see cref="T:Microsoft.VisualBasic.TriState" /> constante qui indique si un 0 non significatif s’affiche pour les valeurs décimales.</span><span class="sxs-lookup"><span data-stu-id="c9602-613"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether a leading 0 is displayed for fractional values.</span></span> <span data-ttu-id="c9602-614">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-614">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="c9602-615">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-615">Optional.</span></span> <span data-ttu-id="c9602-616"><see cref="T:Microsoft.VisualBasic.TriState" /> constante qui indique si les valeurs négatives entre parenthèses.</span><span class="sxs-lookup"><span data-stu-id="c9602-616"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether to place negative values within parentheses.</span></span> <span data-ttu-id="c9602-617">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-617">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="c9602-618">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-618">Optional.</span></span> <span data-ttu-id="c9602-619">Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres sont regroupés ou non selon le délimiteur de groupe spécifié dans les paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="c9602-619"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="c9602-620">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-620">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="c9602-621">Retourne une expression sous formatée de nombre.</span><span class="sxs-lookup"><span data-stu-id="c9602-621">Returns an expression formatted as a number.</span></span></summary>
        <returns><span data-ttu-id="c9602-622">Une expression sous forme de nombre.</span><span class="sxs-lookup"><span data-stu-id="c9602-622">An expression formatted as a number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-623">Lorsqu’un ou plusieurs arguments facultatifs sont omis, les valeurs de ces arguments sont fournis par les paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="c9602-623">When one or more optional arguments are omitted the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-624">Tous les paramètres sont les paramètres régionaux de l’application.</span><span class="sxs-lookup"><span data-stu-id="c9602-624">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="c9602-625">Par défaut, il s’agit des paramètres régionaux définis dans le panneau de configuration.</span><span class="sxs-lookup"><span data-stu-id="c9602-625">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="c9602-626">Toutefois, il peut être modifié par programme à l’aide de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c9602-626">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="c9602-627">Le `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, et `GroupDigits` arguments ont les paramètres suivants.</span><span class="sxs-lookup"><span data-stu-id="c9602-627">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="c9602-628">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-628">Constant</span></span>|<span data-ttu-id="c9602-629">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-629">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="c9602-630">True</span><span class="sxs-lookup"><span data-stu-id="c9602-630">True</span></span>|  
|`TriState.False`|<span data-ttu-id="c9602-631">False</span><span class="sxs-lookup"><span data-stu-id="c9602-631">False</span></span>|  
|`TriState.UseDefault`|<span data-ttu-id="c9602-632">Paramètres régionaux de l’ordinateur</span><span class="sxs-lookup"><span data-stu-id="c9602-632">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-633">Cet exemple montre la `FormatNumber` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-633">This example demonstrates the `FormatNumber` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c9602-634">Le type n’est pas numérique.</span><span class="sxs-lookup"><span data-stu-id="c9602-634">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-635">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-635">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FormatPercent">
      <MemberSignature Language="C#" Value="public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FormatPercent(object Expression, int32 NumDigitsAfterDecimal, valuetype Microsoft.VisualBasic.TriState IncludeLeadingDigit, valuetype Microsoft.VisualBasic.TriState UseParensForNegativeNumbers, valuetype Microsoft.VisualBasic.TriState GroupDigits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatPercent (Expression As Object, Optional NumDigitsAfterDecimal As Integer = -1, Optional IncludeLeadingDigit As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional UseParensForNegativeNumbers As TriState = Microsoft.VisualBasic.TriState.UseDefault, Optional GroupDigits As TriState = Microsoft.VisualBasic.TriState.UseDefault) As String" />
      <MemberSignature Language="F#" Value="static member FormatPercent : obj * int * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState * Microsoft.VisualBasic.TriState -&gt; string" Usage="Microsoft.VisualBasic.Strings.FormatPercent (Expression, NumDigitsAfterDecimal, IncludeLeadingDigit, UseParensForNegativeNumbers, GroupDigits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="NumDigitsAfterDecimal" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="IncludeLeadingDigit" Type="Microsoft.VisualBasic.TriState" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="UseParensForNegativeNumbers" Type="Microsoft.VisualBasic.TriState" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="GroupDigits" Type="Microsoft.VisualBasic.TriState" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-636">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-636">Required.</span></span> <span data-ttu-id="c9602-637">Expression à mettre en forme.</span><span class="sxs-lookup"><span data-stu-id="c9602-637">Expression to be formatted.</span></span></param>
        <param name="NumDigitsAfterDecimal"><span data-ttu-id="c9602-638">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-638">Optional.</span></span> <span data-ttu-id="c9602-639">Valeur numérique indiquant le nombre de positions affichées à droite du séparateur décimal.</span><span class="sxs-lookup"><span data-stu-id="c9602-639">Numeric value indicating how many places to the right of the decimal are displayed.</span></span> <span data-ttu-id="c9602-640">La valeur par défaut est -1, ce qui indique que les paramètres régionaux sont utilisés.</span><span class="sxs-lookup"><span data-stu-id="c9602-640">Default value is -1, which indicates that the locale settings are used.</span></span></param>
        <param name="IncludeLeadingDigit"><span data-ttu-id="c9602-641">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-641">Optional.</span></span> <span data-ttu-id="c9602-642">Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si un zéro non significatif s’affiche pour les valeurs décimales.</span><span class="sxs-lookup"><span data-stu-id="c9602-642"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not a leading zero displays for fractional values.</span></span> <span data-ttu-id="c9602-643">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-643">See "Settings" for values.</span></span></param>
        <param name="UseParensForNegativeNumbers"><span data-ttu-id="c9602-644">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-644">Optional.</span></span> <span data-ttu-id="c9602-645">Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les valeurs négatives doivent être mises entre parenthèses.</span><span class="sxs-lookup"><span data-stu-id="c9602-645"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not to place negative values within parentheses.</span></span> <span data-ttu-id="c9602-646">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-646">See "Settings" for values.</span></span></param>
        <param name="GroupDigits"><span data-ttu-id="c9602-647">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-647">Optional.</span></span> <span data-ttu-id="c9602-648">Constante <see cref="T:Microsoft.VisualBasic.TriState" /> qui indique si les nombres sont regroupés ou non selon le délimiteur de groupe spécifié dans les paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="c9602-648"><see cref="T:Microsoft.VisualBasic.TriState" /> constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings.</span></span> <span data-ttu-id="c9602-649">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-649">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="c9602-650">Retourne une expression au format pourcentage (c’est-à-dire multipliée par 100) avec le caractère de fin %.</span><span class="sxs-lookup"><span data-stu-id="c9602-650">Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></summary>
        <returns><span data-ttu-id="c9602-651">Une expression au format pourcentage (c’est-à-dire multipliée par 100) avec le caractère de fin %.</span><span class="sxs-lookup"><span data-stu-id="c9602-651">An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-652">Lorsqu’un ou plusieurs arguments facultatifs sont omis, les valeurs de ces arguments sont fournis par les paramètres régionaux.</span><span class="sxs-lookup"><span data-stu-id="c9602-652">When one or more optional arguments are omitted, the values for omitted arguments are provided by the locale settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-653">Tous les paramètres sont les paramètres régionaux de l’application.</span><span class="sxs-lookup"><span data-stu-id="c9602-653">All settings information comes from the locale of the application.</span></span> <span data-ttu-id="c9602-654">Par défaut, il s’agit des paramètres régionaux définis dans le panneau de configuration.</span><span class="sxs-lookup"><span data-stu-id="c9602-654">By default, that will be the locale set in the control panel.</span></span> <span data-ttu-id="c9602-655">Toutefois, il peut être modifié par programme à l’aide de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c9602-655">However, it may be changed programmatically by using the .NET Framework.</span></span>  
  
 <span data-ttu-id="c9602-656">Le `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, et `GroupDigits` arguments ont les paramètres suivants.</span><span class="sxs-lookup"><span data-stu-id="c9602-656">The `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, and `GroupDigits` arguments have the following settings.</span></span>  
  
|<span data-ttu-id="c9602-657">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-657">Constant</span></span>|<span data-ttu-id="c9602-658">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-658">Description</span></span>|  
|-|-|  
|`TriState.True`|<span data-ttu-id="c9602-659">True</span><span class="sxs-lookup"><span data-stu-id="c9602-659">True</span></span>|  
|`TriState.False`|<span data-ttu-id="c9602-660">False</span><span class="sxs-lookup"><span data-stu-id="c9602-660">False</span></span>|  
|`TriState.Default`|<span data-ttu-id="c9602-661">Paramètres régionaux de l’ordinateur</span><span class="sxs-lookup"><span data-stu-id="c9602-661">The computer's regional settings</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-662">Cet exemple illustre l’utilisation de la `FormatPercent` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-662">This example illustrates the use of the `FormatPercent` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c9602-663">Le type n’est pas numérique.</span><span class="sxs-lookup"><span data-stu-id="c9602-663">Type is not numeric.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.TriState" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-664">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-664">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (string str, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static char GetChar(string str, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (str As String, Index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char GetChar(System::String ^ str, int Index);" />
      <MemberSignature Language="F#" Value="static member GetChar : string * int -&gt; char" Usage="Microsoft.VisualBasic.Strings.GetChar (str, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Index" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-665">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-665">Required.</span></span> <span data-ttu-id="c9602-666">Toute expression <see langword="String" /> valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-666">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Index"><span data-ttu-id="c9602-667">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-667">Required.</span></span> <span data-ttu-id="c9602-668"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-668"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-669">L’index (de base 1) du caractère dans <paramref name="str" /> à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-669">The (1-based) index of the character in <paramref name="str" /> to be returned.</span></span></param>
        <summary><span data-ttu-id="c9602-670">Retourne un <see langword="Char" /> valeur représentant le caractère à partir de l’index spécifié dans la chaîne fournie.</span><span class="sxs-lookup"><span data-stu-id="c9602-670">Returns a <see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></summary>
        <returns><span data-ttu-id="c9602-671"><see langword="Char" /> valeur représentant le caractère à partir de l’index spécifié dans la chaîne fournie.</span><span class="sxs-lookup"><span data-stu-id="c9602-671"><see langword="Char" /> value representing the character from the specified index in the supplied string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-672">Si `Index` est inférieur à 1 ou supérieur à l’index du dernier caractère dans `str`, un `ArgumentException` est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-672">If `Index` is less than 1 or greater than the index of the last character in `str`, an `ArgumentException` is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-673">Cet exemple montre comment utiliser le `GetChar` fonction pour retourner un caractère à partir d’un index spécifié dans un `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-673">This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.</span></span>  
  
 [!code-vb[VbVbalrStrings#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-674"><paramref name="str" /> a la valeur <see langword="Nothing" />, <paramref name="Index" /> &lt; 1 ou <paramref name="Index" /> est supérieur à l’index du dernier caractère de <paramref name="str" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-674"><paramref name="str" /> is <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, or <paramref name="Index" /> is greater than index of last character of <paramref name="str" />.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-675">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-675">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InStr">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-676">Retourne un entier spécifiant la position de début de la première occurrence d’une chaîne dans une autre.</span><span class="sxs-lookup"><span data-stu-id="c9602-676">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span>  <span data-ttu-id="c9602-677">L’entier est un index basé sur 1 si une correspondance est trouvée.</span><span class="sxs-lookup"><span data-stu-id="c9602-677">The integer is a one-based index if a match is found.</span></span>  <span data-ttu-id="c9602-678">Si aucune correspondance n’est trouvée, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-678">If no match is found, the function returns zero.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStr : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="String2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="c9602-679">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-679">Required.</span></span> <span data-ttu-id="c9602-680"><see langword="String" /> expression à rechercher.</span><span class="sxs-lookup"><span data-stu-id="c9602-680"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="c9602-681">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-681">Required.</span></span> <span data-ttu-id="c9602-682"><see langword="String" /> expression recherchée.</span><span class="sxs-lookup"><span data-stu-id="c9602-682"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-683">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-683">Optional.</span></span> <span data-ttu-id="c9602-684">Spécifie le type de comparaison de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-684">Specifies the type of string comparison.</span></span> <span data-ttu-id="c9602-685">Si <paramref name="Compare" /> est omis, le <see langword="Option Compare" /> paramètre détermine le type de comparaison.</span><span class="sxs-lookup"><span data-stu-id="c9602-685">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="c9602-686">Retourne un entier spécifiant la position de début de la première occurrence d’une chaîne dans une autre.</span><span class="sxs-lookup"><span data-stu-id="c9602-686">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="c9602-687">If</span><span class="sxs-lookup"><span data-stu-id="c9602-687">If</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-688">InStr retourne</span><span class="sxs-lookup"><span data-stu-id="c9602-688">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-689">
                <paramref name="String1" /> est de longueur nulle ou <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="c9602-689">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="c9602-690">0</span><span class="sxs-lookup"><span data-stu-id="c9602-690">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-691">
                <paramref name="String2" /> est de longueur nulle ou <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="c9602-691">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="c9602-692">Position de départ pour la recherche, qui est par défaut à la première position de caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-692">The starting position for the search, which defaults to the first character position.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-693">
                <paramref name="String2" /> est introuvable</span><span class="sxs-lookup"><span data-stu-id="c9602-693">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-694">0</span><span class="sxs-lookup"><span data-stu-id="c9602-694">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-695">
                <paramref name="String2" /> se trouve dans <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="c9602-695">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="c9602-696">Position où commence la correspondance</span><span class="sxs-lookup"><span data-stu-id="c9602-696">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term></term>
              <description></description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-697">En règle générale, le `InStr` fonction est utilisée lors de l’analyse de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-697">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-698">Le `InStrB` (fonction) dans les versions précédentes de Visual Basic retourne un nombre d’octets plutôt qu’une position de caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-698">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="c9602-699">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-699">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-700">Toutes les chaînes Visual Basic 2005 sont au format Unicode, et `InStrB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-700">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="c9602-701">Les paramètres de l’argument `Compare` sont :</span><span class="sxs-lookup"><span data-stu-id="c9602-701">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="c9602-702">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-702">Constant</span></span>|<span data-ttu-id="c9602-703">Value</span><span class="sxs-lookup"><span data-stu-id="c9602-703">Value</span></span>|<span data-ttu-id="c9602-704">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-704">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="c9602-705">0</span><span class="sxs-lookup"><span data-stu-id="c9602-705">0</span></span>|<span data-ttu-id="c9602-706">Effectue une comparaison binaire</span><span class="sxs-lookup"><span data-stu-id="c9602-706">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="c9602-707">1</span><span class="sxs-lookup"><span data-stu-id="c9602-707">1</span></span>|<span data-ttu-id="c9602-708">Effectue une comparaison de texte</span><span class="sxs-lookup"><span data-stu-id="c9602-708">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-709">Cet exemple utilise le `InStr` fonction pour retourner la position de la première occurrence d’une chaîne dans une autre.</span><span class="sxs-lookup"><span data-stu-id="c9602-709">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-710">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-710">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-711">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-711">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md"><span data-ttu-id="c9602-712">Option Compare, instruction</span><span class="sxs-lookup"><span data-stu-id="c9602-712">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStr">
      <MemberSignature Language="C#" Value="public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStr(int32 Start, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (Start As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member InStr : int * string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStr (Start, String1, String2, Compare)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static int InStr (int StartPos, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 InStr(int32 StartPos, string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function InStr (StartPos As Integer, String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="StartPos" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="String1" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="String2" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="c9602-713">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-713">Optional.</span></span> <span data-ttu-id="c9602-714">Expression numérique qui définit la position de départ de chaque recherche.</span><span class="sxs-lookup"><span data-stu-id="c9602-714">Numeric expression that sets the starting position for each search.</span></span> <span data-ttu-id="c9602-715">Si omis, la recherche commence à la première position de caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-715">If omitted, search begins at the first character position.</span></span> <span data-ttu-id="c9602-716">L’index de début est de base 1.</span><span class="sxs-lookup"><span data-stu-id="c9602-716">The start index is 1-based.</span></span></param>
        <param name="StartPos">To be added.</param>
        <param name="String1"><span data-ttu-id="c9602-717">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-717">Required.</span></span> <span data-ttu-id="c9602-718"><see langword="String" /> expression à rechercher.</span><span class="sxs-lookup"><span data-stu-id="c9602-718"><see langword="String" /> expression being searched.</span></span></param>
        <param name="String2"><span data-ttu-id="c9602-719">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-719">Required.</span></span> <span data-ttu-id="c9602-720"><see langword="String" /> expression recherchée.</span><span class="sxs-lookup"><span data-stu-id="c9602-720"><see langword="String" /> expression sought.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-721">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-721">Optional.</span></span> <span data-ttu-id="c9602-722">Spécifie le type de comparaison de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-722">Specifies the type of string comparison.</span></span> <span data-ttu-id="c9602-723">Si <paramref name="Compare" /> est omis, le <see langword="Option Compare" /> paramètre détermine le type de comparaison.</span><span class="sxs-lookup"><span data-stu-id="c9602-723">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="c9602-724">Retourne un entier spécifiant la position de début de la première occurrence d’une chaîne dans une autre.</span><span class="sxs-lookup"><span data-stu-id="c9602-724">Returns an integer specifying the start position of the first occurrence of one string within another.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="c9602-725">If</span><span class="sxs-lookup"><span data-stu-id="c9602-725">If</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-726">InStr retourne</span><span class="sxs-lookup"><span data-stu-id="c9602-726">InStr returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-727">
                <paramref name="String1" /> est de longueur nulle ou <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="c9602-727">
                <paramref name="String1" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description> <span data-ttu-id="c9602-728">0</span><span class="sxs-lookup"><span data-stu-id="c9602-728">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-729">
                <paramref name="String2" /> est de longueur nulle ou <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="c9602-729">
                <paramref name="String2" /> is zero length or <see langword="Nothing" /></span></span></term>
              <description>
                <paramref name="start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-730">
                <paramref name="String2" /> est introuvable</span><span class="sxs-lookup"><span data-stu-id="c9602-730">
                <paramref name="String2" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-731">0</span><span class="sxs-lookup"><span data-stu-id="c9602-731">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-732">
                <paramref name="String2" /> se trouve dans <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="c9602-732">
                <paramref name="String2" /> is found within <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="c9602-733">Position où commence la correspondance</span><span class="sxs-lookup"><span data-stu-id="c9602-733">Position where match begins</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-734">
                <paramref name="Start" /> &gt; longueur de <paramref name="String1" /></span><span class="sxs-lookup"><span data-stu-id="c9602-734">
                <paramref name="Start" /> &gt; length of <paramref name="String1" /></span></span></term>
              <description> <span data-ttu-id="c9602-735">0</span><span class="sxs-lookup"><span data-stu-id="c9602-735">0</span></span> 
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-736">En règle générale, le `InStr` fonction est utilisée lors de l’analyse de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-736">Typically, the `InStr` function is used when parsing strings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-737">Le `InStrB` (fonction) dans les versions précédentes de Visual Basic retourne un nombre d’octets plutôt qu’une position de caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-737">The `InStrB` function in previous versions of Visual Basic returns a number of bytes rather than a character position.</span></span> <span data-ttu-id="c9602-738">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-738">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-739">Toutes les chaînes Visual Basic 2005 sont au format Unicode, et `InStrB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-739">All Visual Basic 2005 strings are in Unicode, and `InStrB` is no longer supported.</span></span>  
  
 <span data-ttu-id="c9602-740">Les paramètres de l’argument `Compare` sont :</span><span class="sxs-lookup"><span data-stu-id="c9602-740">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="c9602-741">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-741">Constant</span></span>|<span data-ttu-id="c9602-742">Value</span><span class="sxs-lookup"><span data-stu-id="c9602-742">Value</span></span>|<span data-ttu-id="c9602-743">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-743">Description</span></span>|  
|-|-|-|  
|`Binary`|<span data-ttu-id="c9602-744">0</span><span class="sxs-lookup"><span data-stu-id="c9602-744">0</span></span>|<span data-ttu-id="c9602-745">Effectue une comparaison binaire</span><span class="sxs-lookup"><span data-stu-id="c9602-745">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="c9602-746">1</span><span class="sxs-lookup"><span data-stu-id="c9602-746">1</span></span>|<span data-ttu-id="c9602-747">Effectue une comparaison de texte</span><span class="sxs-lookup"><span data-stu-id="c9602-747">Performs a text comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-748">Cet exemple utilise le `InStr` fonction pour retourner la position de la première occurrence d’une chaîne dans une autre.</span><span class="sxs-lookup"><span data-stu-id="c9602-748">This example uses the `InStr` function to return the position of the first occurrence of one string within another.</span></span>  
  
 [!code-vb[VbVbalrStrings#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-749"><paramref name="Start" /> &lt; 1.</span><span class="sxs-lookup"><span data-stu-id="c9602-749"><paramref name="Start" /> &lt; 1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-750">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-750">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-751">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-751">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/option-compare-statement.md"><span data-ttu-id="c9602-752">Option Compare, instruction</span><span class="sxs-lookup"><span data-stu-id="c9602-752">Option Compare Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InStrRev">
      <MemberSignature Language="C#" Value="public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 InStrRev(string StringCheck, string StringMatch, int32 Start, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function InStrRev (StringCheck As String, StringMatch As String, Optional Start As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member InStrRev : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.InStrRev (StringCheck, StringMatch, Start, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringCheck" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="StringMatch" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Start" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="StringCheck"><span data-ttu-id="c9602-753">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-753">Required.</span></span> <span data-ttu-id="c9602-754">Expression String recherchée.</span><span class="sxs-lookup"><span data-stu-id="c9602-754">String expression being searched.</span></span></param>
        <param name="StringMatch"><span data-ttu-id="c9602-755">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-755">Required.</span></span> <span data-ttu-id="c9602-756">Expression de chaîne recherchée.</span><span class="sxs-lookup"><span data-stu-id="c9602-756">String expression being searched for.</span></span></param>
        <param name="Start"><span data-ttu-id="c9602-757">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-757">Optional.</span></span> <span data-ttu-id="c9602-758">Expression numérique définissant la position de départ par celui de chaque recherche, à partir du côté gauche de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-758">Numeric expression setting the one-based starting position for each search, starting from the left side of the string.</span></span> <span data-ttu-id="c9602-759">Si <paramref name="Start" /> est omis, la valeur -1 est utilisée, ce qui signifie que la recherche commence à la position du dernier caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-759">If <paramref name="Start" /> is omitted then -1 is used, meaning the search begins at the last character position.</span></span> <span data-ttu-id="c9602-760">Recherche se poursuit alors de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="c9602-760">Search then proceeds from right to left.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-761">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-761">Optional.</span></span> <span data-ttu-id="c9602-762">Valeur numérique indiquant le type de comparaison à utiliser lors de l’évaluation des sous-chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-762">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="c9602-763">Si omis, une comparaison binaire est effectuée.</span><span class="sxs-lookup"><span data-stu-id="c9602-763">If omitted, a binary comparison is performed.</span></span> <span data-ttu-id="c9602-764">Consultez les paramètres pour les valeurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-764">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="c9602-765">Retourne la position de la première occurrence d’une chaîne dans une autre, à partir du côté droit de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-765">Returns the position of the first occurrence of one string within another, starting from the right side of the string.</span></span></summary>
        <returns><list type="table">
            <item>
              <term> <span data-ttu-id="c9602-766">If</span><span class="sxs-lookup"><span data-stu-id="c9602-766">If</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-767">Retourne la fonction InStrRev</span><span class="sxs-lookup"><span data-stu-id="c9602-767">InStrRev returns</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-768">
                <paramref name="StringCheck" /> est de longueur nulle</span><span class="sxs-lookup"><span data-stu-id="c9602-768">
                <paramref name="StringCheck" /> is zero-length</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-769">0</span><span class="sxs-lookup"><span data-stu-id="c9602-769">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-770">
                <paramref name="StringMatch" /> est de longueur nulle</span><span class="sxs-lookup"><span data-stu-id="c9602-770">
                <paramref name="StringMatch" /> is zero-length</span></span> 
 </term>
              <description>
                <paramref name="Start" />
              </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-771">
                <paramref name="StringMatch" /> est introuvable</span><span class="sxs-lookup"><span data-stu-id="c9602-771">
                <paramref name="StringMatch" /> is not found</span></span> 
 </term>
              <description> <span data-ttu-id="c9602-772">0</span><span class="sxs-lookup"><span data-stu-id="c9602-772">0</span></span> 
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-773">
                <paramref name="StringMatch" /> se trouve dans <paramref name="StringCheck" /></span><span class="sxs-lookup"><span data-stu-id="c9602-773">
                <paramref name="StringMatch" /> is found within <paramref name="StringCheck" /></span></span></term>
              <description> <span data-ttu-id="c9602-774">Position à laquelle la première correspondance est trouvée, en commençant par le côté droit de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-774">Position at which the first match is found, starting with the right side of the string.</span></span>  
  
 </description>
            </item>
            <item>
              <term><span data-ttu-id="c9602-775">
                <paramref name="Start" /> est supérieur à la longueur de <paramref name="StringMatch" /></span><span class="sxs-lookup"><span data-stu-id="c9602-775">
                <paramref name="Start" /> is greater than length of <paramref name="StringMatch" /></span></span></term>
              <description> <span data-ttu-id="c9602-776">0</span><span class="sxs-lookup"><span data-stu-id="c9602-776">0</span></span> 
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-777">Notez que la syntaxe pour le `InStrRev` fonction n’est pas identique à la syntaxe pour le `InStr` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-777">Note that the syntax for the `InStrRev` function is not the same as the syntax for the `InStr` function.</span></span>  
  
 <span data-ttu-id="c9602-778">Le `Compare` argument peut prendre les valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-778">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="c9602-779">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-779">Constant</span></span>|<span data-ttu-id="c9602-780">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-780">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="c9602-781">Effectue une comparaison binaire.</span><span class="sxs-lookup"><span data-stu-id="c9602-781">Performs a binary comparison.</span></span>|  
|`Text`|<span data-ttu-id="c9602-782">Effectue une comparaison textuelle.</span><span class="sxs-lookup"><span data-stu-id="c9602-782">Performs a textual comparison.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-783">Cet exemple illustre l’utilisation de la `InStrRev` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-783">This example demonstrates the use of the `InStrRev` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-784"><paramref name="Start" /> = 0 ou <paramref name="Start" /> &lt; -1.</span><span class="sxs-lookup"><span data-stu-id="c9602-784"><paramref name="Start" /> = 0 or <paramref name="Start" /> &lt; -1.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-785">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-785">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-786">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-786">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-787">Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="c9602-787">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (object[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(object[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As Object(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : obj[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="c9602-788">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-788">Required.</span></span> <span data-ttu-id="c9602-789">Tableau unidimensionnel qui contient les sous-chaînes qui doivent être joints.</span><span class="sxs-lookup"><span data-stu-id="c9602-789">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="c9602-790">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-790">Optional.</span></span> <span data-ttu-id="c9602-791">Toute chaîne utilisée pour séparer les sous-chaînes dans la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-791">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="c9602-792">Si omis, le caractère espace ( » «) est utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-792">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="c9602-793">Si <paramref name="Delimiter" /> est une chaîne de longueur nulle (" ») ou <see langword="Nothing" />, tous les éléments dans la liste sont concaténés sans délimiteurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-793">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="c9602-794">Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="c9602-794">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="c9602-795">Une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="c9602-795">A string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-796">Il existe une parité entre le `Join` et `Split` fonctions.</span><span class="sxs-lookup"><span data-stu-id="c9602-796">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="c9602-797">Le `Join` fonction accepte un tableau de chaînes et les joint à l’aide d’une chaîne de délimiteur, pour retourner une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="c9602-797">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="c9602-798">Le `Split` fonction prend une chaîne et la sépare au niveau du délimiteur, pour retourner un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-798">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="c9602-799">Toutefois, la principale différence est que `Join` peut concaténer des chaînes avec n’importe quelle chaîne de délimiteur, `Split` peut uniquement séparer des chaînes à l’aide d’un délimiteur de caractère unique.</span><span class="sxs-lookup"><span data-stu-id="c9602-799">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-800">L’exemple suivant montre comment utiliser le `Join` (fonction) pour créer une liste à partir de plusieurs chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-800">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-801"><paramref name="SourceArray" /> n’est pas unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-801"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-802">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-802">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string[] SourceArray, string Delimiter = &quot; &quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Join(string[] SourceArray, string Delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (SourceArray As String(), Optional Delimiter As String = &quot; &quot;) As String" />
      <MemberSignature Language="F#" Value="static member Join : string[] * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Join (SourceArray, Delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.String[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="SourceArray"><span data-ttu-id="c9602-803">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-803">Required.</span></span> <span data-ttu-id="c9602-804">Tableau unidimensionnel qui contient les sous-chaînes qui doivent être joints.</span><span class="sxs-lookup"><span data-stu-id="c9602-804">One-dimensional array containing substrings to be joined.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="c9602-805">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-805">Optional.</span></span> <span data-ttu-id="c9602-806">Toute chaîne utilisée pour séparer les sous-chaînes dans la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-806">Any string, used to separate the substrings in the returned string.</span></span> <span data-ttu-id="c9602-807">Si omis, le caractère espace ( » «) est utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-807">If omitted, the space character (" ") is used.</span></span> <span data-ttu-id="c9602-808">Si <paramref name="Delimiter" /> est une chaîne de longueur nulle (" ») ou <see langword="Nothing" />, tous les éléments dans la liste sont concaténés sans délimiteurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-808">If <paramref name="Delimiter" /> is a zero-length string ("") or <see langword="Nothing" />, all items in the list are concatenated with no delimiters.</span></span></param>
        <summary><span data-ttu-id="c9602-809">Retourne une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="c9602-809">Returns a string created by joining a number of substrings contained in an array.</span></span></summary>
        <returns><span data-ttu-id="c9602-810">Une chaîne créée par la jonction de plusieurs sous-chaînes contenues dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="c9602-810">A string created by joining a number of substrings contained in an array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-811">Il existe une parité entre le `Join` et `Split` fonctions.</span><span class="sxs-lookup"><span data-stu-id="c9602-811">There is a parity between the `Join` and `Split` functions.</span></span> <span data-ttu-id="c9602-812">Le `Join` fonction accepte un tableau de chaînes et les joint à l’aide d’une chaîne de délimiteur, pour retourner une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="c9602-812">The `Join` function takes an array of strings and joins them using a delimiter string, to return a single string.</span></span> <span data-ttu-id="c9602-813">Le `Split` fonction prend une chaîne et la sépare au niveau du délimiteur, pour retourner un tableau de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-813">The `Split` function takes a string and separates it at the delimiter, to return an array of strings.</span></span> <span data-ttu-id="c9602-814">Toutefois, la principale différence est que `Join` peut concaténer des chaînes avec n’importe quelle chaîne de délimiteur, `Split` peut uniquement séparer des chaînes à l’aide d’un délimiteur de caractère unique.</span><span class="sxs-lookup"><span data-stu-id="c9602-814">However, a key difference is that `Join` can concatenate strings with any delimiter string, `Split` can only separate strings using a single character delimiter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-815">L’exemple suivant montre comment utiliser le `Join` (fonction) pour créer une liste à partir de plusieurs chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-815">The following example demonstrates how to use the `Join` function to create a list from several strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-816"><paramref name="SourceArray" /> n’est pas unidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-816"><paramref name="SourceArray" /> is not one dimensional.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-817">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-817">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="LCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-818">Retourne une chaîne ou un caractère converti en minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-818">Returns a string or character converted to lowercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static char LCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char LCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char LCase(char Value);" />
      <MemberSignature Language="F#" Value="static member LCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="c9602-819">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-819">Required.</span></span> <span data-ttu-id="c9602-820">Valide <see langword="String" /> ou <see langword="Char" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-820">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-821">Retourne une chaîne ou un caractère converti en minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-821">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="c9602-822">Une chaîne ou un caractère converti en lettres minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-822">A string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-823">Uniquement des lettres majuscules sont convertis en minuscules ; toutes les lettres minuscules et les caractères restent inchangées.</span><span class="sxs-lookup"><span data-stu-id="c9602-823">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="c9602-824">Cette fonction utilise les informations de culture de l’application lors de la manipulation de la chaîne afin que les changements de casse sont appropriés pour les paramètres régionaux dans lequel l’application est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c9602-824">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9602-825">Si votre application prend des décisions de sécurité en fonction du résultat d’une comparaison ou d’une opération de changement de casse, l’opération doit utiliser le <xref:System.String.Compare%2A?displayProperty=nameWithType> (méthode), puis transmettez <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> pour le `comparisonType` argument.</span><span class="sxs-lookup"><span data-stu-id="c9602-825">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="c9602-826">Pour plus d’informations, consultez [fonctionnement Culture affecte des chaînes en Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-826">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-827">Cet exemple utilise le `LCase` fonction pour retourner une version en minuscules d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-827">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-828">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-828">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-829">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-829">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LCase">
      <MemberSignature Language="C#" Value="public static string LCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member LCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="c9602-830">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-830">Required.</span></span> <span data-ttu-id="c9602-831">Valide <see langword="String" /> ou <see langword="Char" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-831">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-832">Retourne une chaîne ou un caractère converti en minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-832">Returns a string or character converted to lowercase.</span></span></summary>
        <returns><span data-ttu-id="c9602-833">Une chaîne ou un caractère converti en lettres minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-833">A string or character converted to lowercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-834">Uniquement des lettres majuscules sont convertis en minuscules ; toutes les lettres minuscules et les caractères restent inchangées.</span><span class="sxs-lookup"><span data-stu-id="c9602-834">Only uppercase letters are converted to lowercase; all lowercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="c9602-835">Cette fonction utilise les informations de culture de l’application lors de la manipulation de la chaîne afin que les changements de casse sont appropriés pour les paramètres régionaux dans lequel l’application est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c9602-835">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9602-836">Si votre application prend des décisions de sécurité en fonction du résultat d’une comparaison ou d’une opération de changement de casse, l’opération doit utiliser le <xref:System.String.Compare%2A?displayProperty=nameWithType> (méthode), puis transmettez <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> pour le `comparisonType` argument.</span><span class="sxs-lookup"><span data-stu-id="c9602-836">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="c9602-837">Pour plus d’informations, consultez [fonctionnement Culture affecte des chaînes en Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-837">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-838">Cet exemple utilise le `LCase` fonction pour retourner une version en minuscules d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-838">This example uses the `LCase` function to return a lowercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.UCase" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-839">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-839">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-840">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-840">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static string Left (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Left(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Left (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Left(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Left : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Left (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-841">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-841">Required.</span></span> <span data-ttu-id="c9602-842"><see langword="String" /> expression à partir de laquelle les caractères à l’extrême gauche sont retournés.</span><span class="sxs-lookup"><span data-stu-id="c9602-842"><see langword="String" /> expression from which the leftmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="c9602-843">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-843">Required.</span></span> <span data-ttu-id="c9602-844"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-844"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-845">Expression numérique indiquant le nombre de caractères à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-845">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="c9602-846">Si 0, une chaîne de longueur nulle (" ») est retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-846">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="c9602-847">Si supérieur ou égal au nombre de caractères dans <paramref name="str" />, la chaîne entière est retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-847">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="c9602-848">Retourne une chaîne contenant un nombre spécifié de caractères du côté gauche d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-848">Returns a string containing a specified number of characters from the left side of a string.</span></span></summary>
        <returns><span data-ttu-id="c9602-849">Une chaîne contenant un nombre spécifié de caractères en partant de la gauche d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-849">A string containing a specified number of characters from the left side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-850">Pour déterminer le nombre de caractères dans `str`, utilisez le `Len` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-850">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="c9602-851">Si utilisé dans une application Windows Forms ou toute autre classe qui a un `Left` propriété, vous devez qualifier complètement la fonction avec `Microsoft.VisualBasic.Left`.</span><span class="sxs-lookup"><span data-stu-id="c9602-851">If used in a Windows Forms application, or any other class that has a `Left` property, you must fully qualify the function with `Microsoft.VisualBasic.Left`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-852">Le `LeftB` (fonction) dans les versions précédentes de Visual Basic retourne une chaîne en octets plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-852">The `LeftB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="c9602-853">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-853">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-854">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LeftB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-854">All current Visual Basic strings are in Unicode, and `LeftB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-855">Cet exemple illustre l’utilisation de la `Left` fonction pour retourner une sous-chaîne d’une donnée `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-855">This example demonstrates the use of the `Left` function to return a substring of a given `String`.</span></span> <span data-ttu-id="c9602-856">Dans une classe qui a un `Left` propriété, il peut être nécessaire de qualifier entièrement le `Left` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-856">In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-857"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c9602-857"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-858">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-858">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Len">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-859">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-859">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (bool Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(bool Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(bool Expression);" />
      <MemberSignature Language="F#" Value="static member Len : bool -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-860">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-860">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-861">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-861">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-862">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-862">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-863">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-863">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-864">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-864">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-865">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-865">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-866">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-866">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-867">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-867">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-868">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-868">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-869">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-869">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-870">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-870">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-871">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-871">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-872">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-872">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-873">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-873">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-874">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-874">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-875">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-875">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-876">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-876">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-877">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-877">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-878">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-878">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-879">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-879">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-880">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-880">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (byte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Byte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : byte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-881">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-881">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-882">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-882">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-883">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-883">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-884">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-884">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-885">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-885">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-886">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-886">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-887">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-887">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-888">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-888">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-889">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-889">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-890">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-890">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-891">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-891">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-892">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-892">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-893">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-893">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-894">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-894">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-895">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-895">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-896">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-896">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-897">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-897">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-898">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-898">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-899">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-899">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-900">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-900">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-901">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-901">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(char Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(char Expression);" />
      <MemberSignature Language="F#" Value="static member Len : char -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-902">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-902">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-903">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-903">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-904">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-904">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-905">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-905">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-906">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-906">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-907">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-907">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-908">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-908">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-909">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-909">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-910">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-910">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-911">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-911">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-912">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-912">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-913">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-913">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-914">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-914">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-915">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-915">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-916">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-916">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-917">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-917">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-918">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-918">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-919">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-919">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-920">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-920">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-921">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-921">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-922">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-922">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (DateTime Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.DateTime Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(DateTime Expression);" />
      <MemberSignature Language="F#" Value="static member Len : DateTime -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-923">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-923">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-924">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-924">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-925">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-925">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-926">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-926">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-927">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-927">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-928">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-928">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-929">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-929">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-930">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-930">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-931">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-931">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-932">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-932">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-933">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-933">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-934">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-934">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-935">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-935">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-936">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-936">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-937">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-937">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-938">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-938">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-939">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-939">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-940">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-940">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-941">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-941">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-942">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-942">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-943">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-943">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (decimal Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(valuetype System.Decimal Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Decimal Expression);" />
      <MemberSignature Language="F#" Value="static member Len : decimal -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-944">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-944">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-945">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-945">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-946">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-946">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-947">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-947">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-948">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-948">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-949">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-949">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-950">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-950">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-951">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-951">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-952">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-952">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-953">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-953">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-954">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-954">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-955">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-955">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-956">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-956">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-957">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-957">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-958">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-958">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-959">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-959">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-960">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-960">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-961">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-961">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-962">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-962">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-963">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-963">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-964">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-964">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (double Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(double Expression);" />
      <MemberSignature Language="F#" Value="static member Len : double -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-965">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-965">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-966">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-966">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-967">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-967">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-968">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-968">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-969">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-969">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-970">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-970">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-971">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-971">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-972">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-972">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-973">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-973">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-974">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-974">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-975">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-975">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-976">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-976">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-977">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-977">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-978">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-978">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-979">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-979">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-980">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-980">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-981">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-981">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-982">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-982">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-983">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-983">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-984">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-984">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-985">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-985">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (short Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(short Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int16" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-986">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-986">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-987">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-987">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-988">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-988">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-989">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-989">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-990">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-990">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-991">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-991">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-992">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-992">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-993">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-993">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-994">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-994">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-995">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-995">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-996">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-996">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-997">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-997">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-998">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-998">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-999">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-999">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1000">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1000">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1001">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1001">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1002">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1002">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1003">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1003">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1004">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1004">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1005">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1005">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1006">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1006">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(int Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1007">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1007">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1008">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1008">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1009">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1009">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1010">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1010">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1011">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1011">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1012">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1012">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1013">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1013">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1014">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1014">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1015">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1015">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1016">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1016">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1017">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1017">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1018">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1018">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1019">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1019">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1020">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1020">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1021">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1021">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1022">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1022">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1023">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1023">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1024">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1024">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1025">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1025">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1026">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1026">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1027">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1027">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (long Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(long Expression);" />
      <MemberSignature Language="F#" Value="static member Len : int64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int64" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1028">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1028">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1029">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1029">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1030">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1030">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1031">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1031">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1032">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1032">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1033">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1033">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1034">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1034">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1035">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1035">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1036">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1036">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1037">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1037">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1038">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1038">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1039">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1039">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1040">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1040">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1041">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1041">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1042">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1042">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1043">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1043">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1044">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1044">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1045">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1045">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1046">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1046">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1047">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1047">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1048">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1048">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : obj -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1049">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1049">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1050">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1050">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1051">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1051">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1052">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1052">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1053">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1053">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1054">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1054">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1055">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1055">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1056">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1056">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1057">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1057">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1058">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1058">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1059">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1059">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1060">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1060">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1061">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1061">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1062">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1062">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1063">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1063">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1064">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1064">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1065">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1065">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1066">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1066">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1067">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1067">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1068">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1068">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1069">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1069">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (sbyte Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(int8 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::SByte Expression);" />
      <MemberSignature Language="F#" Value="static member Len : sbyte -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.SByte" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1070">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1070">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1071">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1071">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1072">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1072">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1073">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1073">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1074">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1074">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1075">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1075">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1076">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1076">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1077">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1077">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1078">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1078">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1079">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1079">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1080">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1080">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1081">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1081">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1082">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1082">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1083">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1083">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1084">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1084">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1085">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1085">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1086">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1086">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1087">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1087">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1088">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1088">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Byte)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1089">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1089">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1090">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1090">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (float Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(float32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(float Expression);" />
      <MemberSignature Language="F#" Value="static member Len : single -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Single" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1091">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1091">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1092">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1092">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1093">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1093">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1094">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1094">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1095">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1095">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1096">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1096">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1097">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1097">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1098">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1098">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1099">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1099">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1100">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1100">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1101">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1101">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1102">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1102">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1103">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1103">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1104">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1104">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1105">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1105">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1106">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1106">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1107">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1107">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1108">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1108">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1109">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1109">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1110">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1110">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1111">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1111">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Len : string -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1112">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1112">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1113">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1113">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1114">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1114">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1115">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1115">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1116">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1116">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1117">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1117">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1118">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1118">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1119">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1119">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1120">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1120">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1121">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1121">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1122">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1122">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1123">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1123">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1124">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1124">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1125">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1125">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1126">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1126">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1127">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1127">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1128">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1128">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1129">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1129">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1130">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1130">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1131">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1131">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1132">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1132">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ushort Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int16 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UShort) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt16 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint16 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1133">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1133">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1134">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1134">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1135">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1135">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1136">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1136">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1137">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1137">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1138">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1138">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1139">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1139">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1140">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1140">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1141">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1141">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1142">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1142">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1143">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1143">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1144">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1144">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1145">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1145">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1146">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1146">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1147">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1147">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1148">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1148">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1149">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1149">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1150">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1150">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1151">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1151">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int16)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1152">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1152">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1153">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1153">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (uint Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt32 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint32 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1154">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1154">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1155">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1155">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1156">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1156">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1157">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1157">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1158">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1158">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1159">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1159">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1160">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1160">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1161">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1161">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1162">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1162">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1163">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1163">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1164">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1164">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1165">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1165">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1166">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1166">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1167">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1167">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1168">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1168">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1169">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1169">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1170">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1170">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1171">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1171">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1172">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1172">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1173">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1173">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1174">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1174">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Len">
      <MemberSignature Language="C#" Value="public static int Len (ulong Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Len(unsigned int64 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Len (Expression As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Len(System::UInt64 Expression);" />
      <MemberSignature Language="F#" Value="static member Len : uint64 -&gt; int" Usage="Microsoft.VisualBasic.Strings.Len Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1175">Valide <see langword="String" /> expression ou nom de variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1175">Any valid <see langword="String" /> expression or variable name.</span></span> <span data-ttu-id="c9602-1176">Si <paramref name="Expression" /> est de type <see langword="Object" />, le <see langword="Len" /> fonction retourne la taille telle qu’elle sera écrite dans le fichier par le <see langword="FilePut" /> (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1176">If <paramref name="Expression" /> is of type <see langword="Object" />, the <see langword="Len" /> function returns the size as it will be written to the file by the <see langword="FilePut" /> function.</span></span></param>
        <summary><span data-ttu-id="c9602-1177">Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1177">Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></summary>
        <returns><span data-ttu-id="c9602-1178">Un entier contenant le nombre de caractères contenus dans une chaîne ou le nombre nominal d’octets requis pour stocker une variable.</span><span class="sxs-lookup"><span data-stu-id="c9602-1178">An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1179">Les types définis par l’utilisateur et `Object` variables, le `Len` fonction retourne la taille telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1179">With user-defined types and `Object` variables, the `Len` function returns the size as it will be written to the file by the `FilePut` function.</span></span> <span data-ttu-id="c9602-1180">Si un `Object` contient un `String`, il retourne la longueur de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1180">If an `Object` contains a `String`, it will return the length of the string.</span></span> <span data-ttu-id="c9602-1181">Si un `Object` contient un autre type, il retournera la taille de l’objet telle qu’elle sera écrite dans le fichier par le `FilePut` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1181">If an `Object` contains any other type, it will return the size of the object as it will be written to the file by the `FilePut` function.</span></span>  
  
 <span data-ttu-id="c9602-1182">Le `VBFixedString` attribut peut être appliqué aux champs de chaîne dans les objets pour indiquer la taille de la chaîne, en octets, lors de l’écriture sur le disque.</span><span class="sxs-lookup"><span data-stu-id="c9602-1182">The `VBFixedString` attribute can be applied to string fields in objects to indicate the size of the string, in bytes, when written to disk.</span></span> <span data-ttu-id="c9602-1183">Le `Len` fonction utilise le `VBFixedString` d’attribut, si elle est disponible, lors de la détermination de la taille de `Object` variables.</span><span class="sxs-lookup"><span data-stu-id="c9602-1183">The `Len` function uses the `VBFixedString` attribute, if available, when determining the size of `Object` variables.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1184">Le `Len` fonction ne peut pas être en mesure de déterminer le nombre réel d’octets de stockage requis lorsqu’il est utilisé avec des chaînes de longueur variable dans des types de données définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1184">The `Len` function may not be able to determine the actual number of storage bytes required when used with variable-length strings in user-defined data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1185">Le `LenB` fonction dans les versions antérieures de Visual Basic retourne le nombre d’octets dans une chaîne plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1185">The `LenB` function in earlier versions of Visual Basic returns the number of bytes in a string rather than characters.</span></span> <span data-ttu-id="c9602-1186">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1186">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1187">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `LenB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1187">All current Visual Basic strings are in Unicode, and `LenB` is no longer supported.</span></span>  
  
## <a name="smart-device-developer-notes"></a><span data-ttu-id="c9602-1188">Remarques sur le développement Smart Device</span><span class="sxs-lookup"><span data-stu-id="c9602-1188">Smart Device Developer Notes</span></span>  
 <span data-ttu-id="c9602-1189">Le `Len` fonction accepte uniquement `String` et `Object` variables en tant que paramètres.</span><span class="sxs-lookup"><span data-stu-id="c9602-1189">The `Len` function accepts only `String` and `Object` variables as parameters.</span></span> <span data-ttu-id="c9602-1190">Si un `Object` contient un `String`, elle retournera la longueur de la `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1190">If an `Object` contains a `String`, it will return the length of the `String`.</span></span> <span data-ttu-id="c9602-1191">Si un paramètre est une valeur NULL `Object` référence, la fonction retourne zéro.</span><span class="sxs-lookup"><span data-stu-id="c9602-1191">If a parameter is a NULL `Object` reference, the function returns zero.</span></span> <span data-ttu-id="c9602-1192">Si un `Object` contient un autre type, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1192">If an `Object` contains any other type, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1193">Cet exemple utilise `Len` pour retourner le nombre de caractères dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1193">This example uses `Len` to return the number of characters in a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Strings.Len(System.Int64)" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileSystem.FilePut" />
        <altmember cref="T:Microsoft.VisualBasic.VBFixedStringAttribute" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1194">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1194">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1195">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1195">Data Type Summary (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LSet">
      <MemberSignature Language="C#" Value="public static string LSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member LSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.LSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="c9602-1196">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1196">Required.</span></span> <span data-ttu-id="c9602-1197"><see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1197"><see langword="String" /> expression.</span></span> <span data-ttu-id="c9602-1198">Nom de variable de chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1198">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="c9602-1199">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1199">Required.</span></span> <span data-ttu-id="c9602-1200"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1200"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1201">Longueur de la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1201">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="c9602-1202">Retourne une chaîne alignée à gauche contenant la chaîne spécifiée ajustée à la longueur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1202">Returns a left-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="c9602-1203">Une chaîne alignée à gauche contenant la chaîne spécifiée ajustée à la longueur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1203">A left-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1204">Si la chaîne spécifiée est supérieure à la longueur spécifiée, la chaîne retournée est raccourcie à la longueur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1204">If the specified string is longer than the specified length, the returned string is shortened to the specified length.</span></span> <span data-ttu-id="c9602-1205">Si la chaîne spécifiée est inférieure à la longueur spécifiée, les espaces sont ajoutés à l’extrémité droite de la chaîne retournée pour obtenir la longueur appropriée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1205">If the specified string is shorter than the specified length, spaces are added to the right end of the returned string to produce the appropriate length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1206">Cet exemple illustre l’utilisation de la `LSet` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1206">This example demonstrates the use of the `LSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1207">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1207">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1208">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1208">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md"><span data-ttu-id="c9602-1209">Utilisation efficace des types de données</span><span class="sxs-lookup"><span data-stu-id="c9602-1209">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LTrim">
      <MemberSignature Language="C#" Value="public static string LTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member LTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.LTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1210">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1210">Required.</span></span> <span data-ttu-id="c9602-1211">Toute expression <see langword="String" /> valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1211">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-1212">Retourne une chaîne contenant une copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), aucun des espaces de fin (<see langword="RTrim" />), ou sans espaces à gauche ou (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="c9602-1212">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="c9602-1213">Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="c9602-1213">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1214">Le `LTrim`, `RTrim`, et `Trim` fonctions suppriment les espaces à la fin des chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1214">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1215">Cet exemple utilise le `LTrim` fonction pour supprimer les espaces de début et la `RTrim` des espaces à partir d’une variable de chaîne de fonction à la fin de la frange.</span><span class="sxs-lookup"><span data-stu-id="c9602-1215">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="c9602-1216">Il utilise le `Trim` (fonction) pour supprimer les deux types d’espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1216">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1217">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1217">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Mid">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-1218">Retourne une chaîne qui contient des caractères à partir d’une chaîne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1218">Returns a string that contains characters from a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1219">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1219">Required.</span></span> <span data-ttu-id="c9602-1220"><see langword="String" /> expression à partir de laquelle les caractères sont retournés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1220"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="c9602-1221">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1221">Required.</span></span> <span data-ttu-id="c9602-1222"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1222"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1223">Position de départ des caractères à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1223">Starting position of the characters to return.</span></span> <span data-ttu-id="c9602-1224">Si <paramref name="Start" /> est supérieur au nombre de caractères dans <paramref name="str" />, le <see langword="Mid" /> fonction retourne une chaîne de longueur nulle ( » »).</span><span class="sxs-lookup"><span data-stu-id="c9602-1224">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="c9602-1225"><paramref name="Start" /> est basé sur un.</span><span class="sxs-lookup"><span data-stu-id="c9602-1225"><paramref name="Start" /> is one-based.</span></span></param>
        <summary><span data-ttu-id="c9602-1226">Retourne une chaîne qui contient tous les caractères à partir d’une position spécifiée dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1226">Returns a string that contains all the characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="c9602-1227">Chaîne qui se compose de tous les caractères à partir de la position spécifiée dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1227">A string that consists of all the characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1228">Pour déterminer le nombre de caractères dans `str`, utilisez le `Len` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1228">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="c9602-1229">Visual Basic a un `Mid` (fonction) et un `Mid` instruction.</span><span class="sxs-lookup"><span data-stu-id="c9602-1229">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="c9602-1230">Ces éléments fonctionnent à la fois sur un nombre spécifié de caractères dans une chaîne, mais la `Mid` fonction retourne les caractères lors de la `Mid` instruction remplace les caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1230">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="c9602-1231">Pour plus d’informations, consultez [Mid, instruction](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-1231">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1232">Le `MidB` (fonction) dans les versions précédentes de Visual Basic retourne une chaîne en octets plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1232">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="c9602-1233">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1233">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1234">Toutes les chaînes Visual Basic sont au format Unicode, et `MidB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1234">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1235">La dernière ligne dans cet exemple utilise cette surcharge de la `Mid` fonction pour retourner les caractères de la cinquième et ultérieures à partir d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1235">The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1236"><paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c9602-1236"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1237">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1237">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-1238">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1238">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-1239">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1239">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md"><span data-ttu-id="c9602-1240">Mid, instruction</span><span class="sxs-lookup"><span data-stu-id="c9602-1240">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Mid">
      <MemberSignature Language="C#" Value="public static string Mid (string str, int Start, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Mid(string str, int32 Start, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mid (str As String, Start As Integer, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Mid(System::String ^ str, int Start, int Length);" />
      <MemberSignature Language="F#" Value="static member Mid : string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Mid (str, Start, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Start" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Length" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1241">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1241">Required.</span></span> <span data-ttu-id="c9602-1242"><see langword="String" /> expression à partir de laquelle les caractères sont retournés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1242"><see langword="String" /> expression from which characters are returned.</span></span></param>
        <param name="Start"><span data-ttu-id="c9602-1243">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1243">Required.</span></span> <span data-ttu-id="c9602-1244"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1244"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1245">Position de départ des caractères à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1245">Starting position of the characters to return.</span></span> <span data-ttu-id="c9602-1246">Si <paramref name="Start" /> est supérieur au nombre de caractères dans <paramref name="str" />, le <see langword="Mid" /> fonction retourne une chaîne de longueur nulle ( » »).</span><span class="sxs-lookup"><span data-stu-id="c9602-1246">If <paramref name="Start" /> is greater than the number of characters in <paramref name="str" />, the <see langword="Mid" /> function returns a zero-length string ("").</span></span> <span data-ttu-id="c9602-1247"><paramref name="Start" /> est de base 1.</span><span class="sxs-lookup"><span data-stu-id="c9602-1247"><paramref name="Start" /> is one based.</span></span></param>
        <param name="Length"><span data-ttu-id="c9602-1248">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1248">Optional.</span></span> <span data-ttu-id="c9602-1249"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1249"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1250">Nombre de caractères à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1250">Number of characters to return.</span></span> <span data-ttu-id="c9602-1251">Si omis ou s’il y a moins de <paramref name="Length" /> caractères dans le texte (y compris le caractère à la position <paramref name="Start" />), tous les caractères à partir de la position de départ à la fin de la chaîne sont retournés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1251">If omitted or if there are fewer than <paramref name="Length" /> characters in the text (including the character at position <paramref name="Start" />), all characters from the start position to the end of the string are returned.</span></span></param>
        <summary><span data-ttu-id="c9602-1252">Retourne une chaîne qui contient un nombre spécifié de caractères à partir d’une position spécifiée dans une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1252">Returns a string that contains a specified number of characters starting from a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="c9602-1253">Chaîne qui se compose du nombre spécifié de caractères à partir de la position spécifiée dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1253">A string that consists of the specified number of characters starting from the specified position in the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1254">Pour déterminer le nombre de caractères dans `str`, utilisez le `Len` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1254">To determine the number of characters in `str`, use the `Len` function.</span></span>  
  
 <span data-ttu-id="c9602-1255">Visual Basic a un `Mid` (fonction) et un `Mid` instruction.</span><span class="sxs-lookup"><span data-stu-id="c9602-1255">Visual Basic has a `Mid` function and a `Mid` statement.</span></span> <span data-ttu-id="c9602-1256">Ces éléments fonctionnent à la fois sur un nombre spécifié de caractères dans une chaîne, mais la `Mid` fonction retourne les caractères lors de la `Mid` instruction remplace les caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1256">These elements both operate on a specified number of characters in a string, but the `Mid` function returns the characters while the `Mid` statement replaces the characters.</span></span> <span data-ttu-id="c9602-1257">Pour plus d’informations, consultez [Mid, instruction](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-1257">For more information, see [Mid Statement](~/docs/visual-basic/language-reference/statements/mid-statement.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1258">Le `MidB` (fonction) dans les versions précédentes de Visual Basic retourne une chaîne en octets plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1258">The `MidB` function in previous versions of Visual Basic returns a string in bytes rather than characters.</span></span> <span data-ttu-id="c9602-1259">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1259">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1260">Toutes les chaînes Visual Basic sont au format Unicode, et `MidB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1260">All Visual Basic strings are in Unicode, and `MidB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1261">Les deux premiers `Mid` fonctions dans cet exemple renvoient le nombre spécifié de caractères à partir d’une chaîne, en commençant par la position donnée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1261">The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions.</span></span> <span data-ttu-id="c9602-1262">(La dernière fonction illustre le <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> surcharge et spécifie uniquement le point de départ pour l’extraction de chaîne.)</span><span class="sxs-lookup"><span data-stu-id="c9602-1262">(The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)</span></span>  
  
 [!code-vb[VbVbalrStrings#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1263"><paramref name="Start" /> &lt;= 0 ou <paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c9602-1263"><paramref name="Start" /> &lt;= 0 or <paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1264">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1264">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-1265">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1265">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-1266">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1266">Introduction to Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/mid-statement.md"><span data-ttu-id="c9602-1267">Mid, instruction</span><span class="sxs-lookup"><span data-stu-id="c9602-1267">Mid Statement</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Replace(string Expression, string Find, string Replacement, int32 Start, int32 Count, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Expression As String, Find As String, Replacement As String, Optional Start As Integer = 1, Optional Count As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String" />
      <MemberSignature Language="F#" Value="static member Replace : string * string * string * int * int * Microsoft.VisualBasic.CompareMethod -&gt; string" Usage="Microsoft.VisualBasic.Strings.Replace (Expression, Find, Replacement, Start, Count, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Find" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Replacement" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Start" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Count" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1268">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1268">Required.</span></span> <span data-ttu-id="c9602-1269">Expression de chaîne contenant la sous-chaîne à remplacer.</span><span class="sxs-lookup"><span data-stu-id="c9602-1269">String expression containing substring to replace.</span></span></param>
        <param name="Find"><span data-ttu-id="c9602-1270">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1270">Required.</span></span> <span data-ttu-id="c9602-1271">Sous-chaîne recherchée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1271">Substring being searched for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="c9602-1272">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1272">Required.</span></span> <span data-ttu-id="c9602-1273">Sous-chaîne de remplacement.</span><span class="sxs-lookup"><span data-stu-id="c9602-1273">Replacement substring.</span></span></param>
        <param name="Start"><span data-ttu-id="c9602-1274">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1274">Optional.</span></span> <span data-ttu-id="c9602-1275">Positionner dans <paramref name="Expression" /> qui démarre une sous-chaîne utilisée pour le remplacement.</span><span class="sxs-lookup"><span data-stu-id="c9602-1275">Position within <paramref name="Expression" /> that starts a substring used for replacement.</span></span> <span data-ttu-id="c9602-1276">La valeur de retour de <see langword="Replace" /> est une chaîne qui commence à <paramref name="Start" />, avec les substitutions appropriées.</span><span class="sxs-lookup"><span data-stu-id="c9602-1276">The return value of <see langword="Replace" /> is a string that begins at <paramref name="Start" />, with appropriate substitutions.</span></span> <span data-ttu-id="c9602-1277">Si cet argument est omis, la position 1 est utilisée par défaut.</span><span class="sxs-lookup"><span data-stu-id="c9602-1277">If omitted, 1 is assumed.</span></span></param>
        <param name="Count"><span data-ttu-id="c9602-1278">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1278">Optional.</span></span> <span data-ttu-id="c9602-1279">Nombre de remplacements de la sous-chaîne à effectuer.</span><span class="sxs-lookup"><span data-stu-id="c9602-1279">Number of substring substitutions to perform.</span></span> <span data-ttu-id="c9602-1280">Si cet argument est omis, la valeur par défaut est -1, ce qui signifie « faire tous les remplacements possibles ».</span><span class="sxs-lookup"><span data-stu-id="c9602-1280">If omitted, the default value is -1, which means "make all possible substitutions."</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-1281">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1281">Optional.</span></span> <span data-ttu-id="c9602-1282">Valeur numérique indiquant le type de comparaison à utiliser lors de l’évaluation des sous-chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1282">Numeric value indicating the kind of comparison to use when evaluating substrings.</span></span> <span data-ttu-id="c9602-1283">Consultez les paramètres pour les valeurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-1283">See Settings for values.</span></span></param>
        <summary><span data-ttu-id="c9602-1284">Retourne une chaîne dans laquelle une sous-chaîne spécifiée a été remplacée par une autre sous-chaîne, un nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1284">Returns a string in which a specified substring has been replaced with another substring a specified number of times.</span></span></summary>
        <returns><span data-ttu-id="c9602-1285"><see langword="Replace" /> Retourne les valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1285"><see langword="Replace" /> returns the following values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="c9602-1286">If</span><span class="sxs-lookup"><span data-stu-id="c9602-1286">If</span></span> 
 </term><description> <span data-ttu-id="c9602-1287">La fonction Replace renvoie</span><span class="sxs-lookup"><span data-stu-id="c9602-1287">Replace returns</span></span> 
 </description></item><item><term><span data-ttu-id="c9602-1288"><paramref name="Find" /> est de longueur nulle ou <see langword="Nothing" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1288"><paramref name="Find" /> is zero-length or <see langword="Nothing" /></span></span></term><description> <span data-ttu-id="c9602-1289">Copie de <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1289">Copy of <paramref name="Expression" /></span></span></description></item><item><term><span data-ttu-id="c9602-1290"><paramref name="Replace" /> est de longueur nulle</span><span class="sxs-lookup"><span data-stu-id="c9602-1290"><paramref name="Replace" /> is zero-length</span></span> 
 </term><description> <span data-ttu-id="c9602-1291">Copie de <paramref name="Expression" /> sans occurrence de <paramref name="Find" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1291">Copy of <paramref name="Expression" /> with no occurrences of <paramref name="Find" /></span></span></description></item><item><term><span data-ttu-id="c9602-1292"><paramref name="Expression" /> est de longueur nulle ou <see langword="Nothing" />, ou <paramref name="Start" /> est supérieure à la longueur de <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1292"><paramref name="Expression" /> is zero-length or <see langword="Nothing" />, or <paramref name="Start" /> is greater than length of <paramref name="Expression" /></span></span></term><description><see langword="Nothing" /></description></item><item><term><span data-ttu-id="c9602-1293"><paramref name="Count" /> est égal à 0</span><span class="sxs-lookup"><span data-stu-id="c9602-1293"><paramref name="Count" /> is 0</span></span> 
 </term><description> <span data-ttu-id="c9602-1294">Copie de <paramref name="Expression" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1294">Copy of <paramref name="Expression" /></span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1295">La valeur de retour de la `Replace` (fonction) est une chaîne qui commence à la position spécifiée par `Start` et se termine à la fin de la `Expression` chaîne, avec les substitutions sont effectuées comme spécifié par le `Find` et `Replace` valeurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-1295">The return value of the `Replace` function is a string that begins at the position specified by `Start` and concludes at the end of the `Expression` string, with the substitutions made as specified by the `Find` and `Replace` values.</span></span>  
  
 <span data-ttu-id="c9602-1296">Le `Compare` argument peut prendre les valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1296">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="c9602-1297">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-1297">Constant</span></span>|<span data-ttu-id="c9602-1298">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-1298">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="c9602-1299">Effectue une comparaison binaire</span><span class="sxs-lookup"><span data-stu-id="c9602-1299">Performs a binary comparison</span></span>|  
|`Text`|<span data-ttu-id="c9602-1300">Effectue une comparaison textuelle</span><span class="sxs-lookup"><span data-stu-id="c9602-1300">Performs a textual comparison</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1301">Cet exemple montre la `Replace` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1301">This example demonstrates the `Replace` function.</span></span>  
  
```vb  
Dim TestString As String = "Shopping List"  
' Returns "Shipping List".  
Dim aString As String = Replace(TestString, "o", "i")  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1302"><paramref name="Count" /> &lt; -1 ou <paramref name="Start" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="c9602-1302"><paramref name="Count" /> &lt; -1 or <paramref name="Start" /> &lt;= 0.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Filter" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1303">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1303">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static string Right (string str, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Right(string str, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Right (str As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Right(System::String ^ str, int Length);" />
      <MemberSignature Language="F#" Value="static member Right : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Right (str, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1304">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1304">Required.</span></span> <span data-ttu-id="c9602-1305"><see langword="String" /> expression à partir de laquelle les caractères plus à droite sont retournés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1305"><see langword="String" /> expression from which the rightmost characters are returned.</span></span></param>
        <param name="Length"><span data-ttu-id="c9602-1306">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1306">Required.</span></span> <span data-ttu-id="c9602-1307"><see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1307"><see langword="Integer" />.</span></span> <span data-ttu-id="c9602-1308">Expression numérique indiquant le nombre de caractères à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1308">Numeric expression indicating how many characters to return.</span></span> <span data-ttu-id="c9602-1309">Si 0, une chaîne de longueur nulle (" ») est retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1309">If 0, a zero-length string ("") is returned.</span></span> <span data-ttu-id="c9602-1310">Si supérieur ou égal au nombre de caractères dans <paramref name="str" />, la chaîne entière est retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1310">If greater than or equal to the number of characters in <paramref name="str" />, the entire string is returned.</span></span></param>
        <summary><span data-ttu-id="c9602-1311">Retourne une chaîne contenant un nombre spécifié de caractères depuis la partie droite d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1311">Returns a string containing a specified number of characters from the right side of a string.</span></span></summary>
        <returns><span data-ttu-id="c9602-1312">Une chaîne contenant un nombre spécifié de caractères depuis la partie droite d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1312">A string containing a specified number of characters from the right side of a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1313">Pour déterminer le nombre de caractères dans `str`, utilisez le `Len` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1313">To determine the number of characters in `str`, use the `Len` function.</span></span> <span data-ttu-id="c9602-1314">Si utilisé dans un formulaire Windows ou toute autre classe qui a un `Right` propriété, vous devez qualifier complètement la fonction avec `Microsoft.VisualBasic.Strings.Right`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1314">If used in a Windows Form, or any other class that has a `Right` property, you must fully qualify the function with `Microsoft.VisualBasic.Strings.Right`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1315">Le `RightB` (fonction) dans les versions antérieures de Visual Basic retourne une chaîne en octets, plutôt que des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1315">The `RightB` function in earlier versions of Visual Basic returns a string in bytes, rather than characters.</span></span> <span data-ttu-id="c9602-1316">Il est utilisé principalement pour la conversion de chaînes dans les applications de jeu codés sur deux octets.</span><span class="sxs-lookup"><span data-stu-id="c9602-1316">It is used primarily for converting strings in double-byte character set (DBCS) applications.</span></span> <span data-ttu-id="c9602-1317">Toutes les chaînes Visual Basic en cours sont au format Unicode, et `RightB` n’est plus pris en charge.</span><span class="sxs-lookup"><span data-stu-id="c9602-1317">All current Visual Basic strings are in Unicode, and `RightB` is no longer supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1318">Cet exemple illustre l’utilisation de la `Right` fonction pour retourner une sous-chaîne d’une donnée `String`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1318">This example demonstrates the use of the `Right` function to return a substring of a given `String`.</span></span> <span data-ttu-id="c9602-1319">Dans une classe qui a un `Right` propriété, il peut être nécessaire de qualifier entièrement le `Right` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1319">In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1320"><paramref name="Length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c9602-1320"><paramref name="Length" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Len" />
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Mid" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1321">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1321">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RSet">
      <MemberSignature Language="C#" Value="public static string RSet (string Source, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RSet(string Source, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSet (Source As String, Length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RSet(System::String ^ Source, int Length);" />
      <MemberSignature Language="F#" Value="static member RSet : string * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.RSet (Source, Length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Length" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="c9602-1322">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1322">Required.</span></span> <span data-ttu-id="c9602-1323"><see langword="String" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1323"><see langword="String" /> expression.</span></span> <span data-ttu-id="c9602-1324">Nom de variable de chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1324">Name of string variable.</span></span></param>
        <param name="Length"><span data-ttu-id="c9602-1325">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1325">Required.</span></span> <span data-ttu-id="c9602-1326"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1326"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1327">Longueur de la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1327">Length of returned string.</span></span></param>
        <summary><span data-ttu-id="c9602-1328">Retourne une chaîne alignée à droite contenant la chaîne spécifiée ajustée à la longueur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1328">Returns a right-aligned string containing the specified string adjusted to the specified length.</span></span></summary>
        <returns><span data-ttu-id="c9602-1329">Une chaîne alignée à droite contenant la chaîne spécifiée ajustée à la longueur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1329">A right-aligned string containing the specified string adjusted to the specified length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1330">Si `Source` dépasse `Length`, `RSet` place uniquement les caractères les plus à gauche, jusqu'à la longueur de `Source`, dans la chaîne retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1330">If `Source` is longer than `Length`, `RSet` places only the leftmost characters, up to the length of `Source`, in the returned string.</span></span> <span data-ttu-id="c9602-1331">Si la chaîne spécifiée est inférieure à la longueur spécifiée, les espaces sont ajoutés à l’extrémité gauche de la chaîne à obtenir la longueur appropriée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1331">If the specified string is shorter than the specified length, spaces are added to the left end of the string to produce the appropriate length.</span></span> <span data-ttu-id="c9602-1332">Si la chaîne spécifiée est supérieure à la longueur spécifiée, elle est raccourcie à la longueur spécifiée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1332">If the specified string is longer than the specified length, it is shortened to the specified length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1333">Cet exemple illustre l’utilisation de la `RSet` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1333">This example demonstrates the use of the `RSet` function.</span></span>  
  
 [!code-vb[VbVbalrStrings#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1334">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1334">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md"><span data-ttu-id="c9602-1335">Liste des types de données (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="c9602-1335">Data Type Summary (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md"><span data-ttu-id="c9602-1336">Utilisation efficace des types de données</span><span class="sxs-lookup"><span data-stu-id="c9602-1336">Efficient Use of Data Types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RTrim">
      <MemberSignature Language="C#" Value="public static string RTrim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string RTrim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTrim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RTrim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member RTrim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.RTrim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1337">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1337">Required.</span></span> <span data-ttu-id="c9602-1338">Toute expression <see langword="String" /> valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1338">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-1339">Retourne une chaîne contenant une copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), aucun des espaces de fin (<see langword="RTrim" />), ou sans espaces à gauche ou (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="c9602-1339">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="c9602-1340">Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="c9602-1340">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1341">Le `LTrim`, `RTrim`, et `Trim` fonctions suppriment les espaces à la fin des chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1341">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1342">Cet exemple utilise le `LTrim` fonction pour supprimer les espaces de début et la `RTrim` des espaces à partir d’une variable de chaîne de fonction à la fin de la frange.</span><span class="sxs-lookup"><span data-stu-id="c9602-1342">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="c9602-1343">Il utilise le `Trim` (fonction) pour supprimer les deux types d’espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1343">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1344">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1344">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Space(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Space (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Space(int Number);" />
      <MemberSignature Language="F#" Value="static member Space : int -&gt; string" Usage="Microsoft.VisualBasic.Strings.Space Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="c9602-1345">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1345">Required.</span></span> <span data-ttu-id="c9602-1346"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1346"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1347">Le nombre d’espaces voulu dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1347">The number of spaces you want in the string.</span></span></param>
        <summary><span data-ttu-id="c9602-1348">Retourne une chaîne composée d’un nombre spécifié d’espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1348">Returns a string consisting of the specified number of spaces.</span></span></summary>
        <returns><span data-ttu-id="c9602-1349">Une chaîne composée d’un nombre spécifié d’espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1349">A string consisting of the specified number of spaces.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1350">Le `Space` fonction est utile pour la mise en forme la sortie et effacer des données dans les chaînes de longueur fixe.</span><span class="sxs-lookup"><span data-stu-id="c9602-1350">The `Space` function is useful for formatting output and clearing data in fixed-length strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1351">Cet exemple utilise le `Space` fonction pour retourner une chaîne composée d’un nombre spécifié d’espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1351">This example uses the `Space` function to return a string consisting of a specified number of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1352"><paramref name="Number" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="c9602-1352"><paramref name="Number" /> &lt; 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1353">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1353">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public static string[] Split (string Expression, string Delimiter = &quot; &quot;, int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[] Split(string Expression, string Delimiter, int32 Limit, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (Expression As String, Optional Delimiter As String = &quot; &quot;, Optional Limit As Integer = -1, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As String()" />
      <MemberSignature Language="F#" Value="static member Split : string * string * int * Microsoft.VisualBasic.CompareMethod -&gt; string[]" Usage="Microsoft.VisualBasic.Strings.Split (Expression, Delimiter, Limit, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Delimiter" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Limit" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1354">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1354">Required.</span></span> <span data-ttu-id="c9602-1355"><see langword="String" /> expression contenant des sous-chaînes et des délimiteurs.</span><span class="sxs-lookup"><span data-stu-id="c9602-1355"><see langword="String" /> expression containing substrings and delimiters.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="c9602-1356">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1356">Optional.</span></span> <span data-ttu-id="c9602-1357">N’importe quel caractère unique utilisé pour identifier les limites des sous-chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1357">Any single character used to identify substring limits.</span></span> <span data-ttu-id="c9602-1358">Si <paramref name="Delimiter" /> est omis, le caractère espace ( » «) est supposé pour être le délimiteur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1358">If <paramref name="Delimiter" /> is omitted, the space character (" ") is assumed to be the delimiter.</span></span></param>
        <param name="Limit"><span data-ttu-id="c9602-1359">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1359">Optional.</span></span> <span data-ttu-id="c9602-1360">Nombre maximal de sous-chaînes dans lesquelles la chaîne d’entrée doit être fractionnée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1360">Maximum number of substrings into which the input string should be split.</span></span> <span data-ttu-id="c9602-1361">La valeur par défaut, -1, indique que la chaîne d’entrée doit être fractionnée à chaque occurrence de la chaîne <paramref name="Delimiter" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1361">The default, -1, indicates that the input string should be split at every occurrence of the <paramref name="Delimiter" /> string.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-1362">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1362">Optional.</span></span> <span data-ttu-id="c9602-1363">Valeur numérique indiquant la comparaison à utiliser lors de l’évaluation des sous-chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1363">Numeric value indicating the comparison to use when evaluating substrings.</span></span> <span data-ttu-id="c9602-1364">Pour connaître les valeurs, consultez la rubrique « Paramètres ».</span><span class="sxs-lookup"><span data-stu-id="c9602-1364">See "Settings" for values.</span></span></param>
        <summary><span data-ttu-id="c9602-1365">Retourne un tableau unidimensionnel de base zéro qui contient un nombre spécifié de sous-chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1365">Returns a zero-based, one-dimensional array containing a specified number of substrings.</span></span></summary>
        <returns><span data-ttu-id="c9602-1366">Tableau<see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="c9602-1366"><see langword="String" /> array.</span></span> <span data-ttu-id="c9602-1367">Si <paramref name="Expression" /> est une chaîne de longueur nulle (" »), <see langword="Split" /> retourne un tableau de l’élément qui contient une chaîne de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="c9602-1367">If <paramref name="Expression" /> is a zero-length string (""), <see langword="Split" /> returns a single-element array containing a zero-length string.</span></span> <span data-ttu-id="c9602-1368">Si <paramref name="Delimiter" /> est une chaîne de longueur nulle, ou si elle n’apparaît pas n’importe où dans <paramref name="Expression" />, <see langword="Split" /> retourne un tableau de seul élément contenant l’intégralité de <paramref name="Expression" /> chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1368">If <paramref name="Delimiter" /> is a zero-length string, or if it does not appear anywhere in <paramref name="Expression" />, <see langword="Split" /> returns a single-element array containing the entire <paramref name="Expression" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1369">Par défaut, ou lorsque `Limit` est égal à -1, le `Split` fonction fractionne la chaîne d’entrée à chaque occurrence de la chaîne de délimiteur et retourne les sous-chaînes dans un tableau.</span><span class="sxs-lookup"><span data-stu-id="c9602-1369">By default, or when `Limit` equals -1, the `Split` function splits the input string at every occurrence of the delimiter string, and returns the substrings in an array.</span></span> <span data-ttu-id="c9602-1370">Lorsque le `Limit` paramètre est supérieur à zéro, le `Split` fonction fractionne la chaîne au premier `Limit`occurrences de-1 du délimiteur et retourne un tableau avec les sous-chaînes résultantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1370">When the `Limit` parameter is greater than zero, the `Split` function splits the string at the first `Limit`-1 occurrences of the delimiter, and returns an array with the resulting substrings.</span></span> <span data-ttu-id="c9602-1371">Par exemple, `Split("a:b:c", ":")` retourne le tableau `{"a", "b", "c"}`, tandis que `Split("a:b:c", ":", 2)` retourne le tableau `{"a", "b:c"}`.</span><span class="sxs-lookup"><span data-stu-id="c9602-1371">For example, `Split("a:b:c", ":")` returns the array `{"a", "b", "c"}`, while `Split("a:b:c", ":", 2)` returns the array `{"a", "b:c"}`.</span></span>  
  
 <span data-ttu-id="c9602-1372">Lorsque le `Split` fonction rencontre deux séparateurs dans une ligne ou un séparateur au début ou à la fin de la chaîne, elle les interprète comme entourant une chaîne vide ( » »).</span><span class="sxs-lookup"><span data-stu-id="c9602-1372">When the `Split` function encounters two delimiters in a row, or a delimiter at the beginning or end of the string, it interprets them as surrounding an empty string ("").</span></span> <span data-ttu-id="c9602-1373">Par exemple, `Split("xx", "x")` retourne le tableau contenant trois chaînes vides : une située entre le début de la chaîne et le premier « x », une située entre les deux chaînes « x » et située entre le dernier « x » et la fin de la chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1373">For example, `Split("xx", "x")` returns the array containing three empty strings: one from between the beginning of the string and the first "x", one from between the two "x" strings, and one from between the last "x" and the end of the string.</span></span>  
  
 <span data-ttu-id="c9602-1374">Ce tableau montre comment le paramètre facultatif `Delimiter`, `Limit`, et `Compare` paramètres peuvent modifier le comportement de la `Split` (fonction).</span><span class="sxs-lookup"><span data-stu-id="c9602-1374">This table demonstrates how the optional `Delimiter`, `Limit`, and `Compare` parameters can change the behavior of the `Split` function.</span></span>  
  
|<span data-ttu-id="c9602-1375">Appel de fractionnement</span><span class="sxs-lookup"><span data-stu-id="c9602-1375">Split Call</span></span>|<span data-ttu-id="c9602-1376">Valeur de retour</span><span class="sxs-lookup"><span data-stu-id="c9602-1376">Return Value</span></span>|  
|-|-|  
|`Split("42, 12, 19")`|<span data-ttu-id="c9602-1377">{"42," , "12," , "19"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1377">{"42," , "12," , "19"}</span></span>|  
|`Split("42, 12, 19", ", ")`|<span data-ttu-id="c9602-1378">{"42", "12", "19"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1378">{"42", "12", "19"}</span></span>|  
|`Split("42, 12, 19", ", ", 2)`|<span data-ttu-id="c9602-1379">{"42", "12, 19"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1379">{"42", "12, 19"}</span></span>|  
|`Split("192.168.0.1", ".")`|<span data-ttu-id="c9602-1380">{"192", "168", "0", "1"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1380">{"192", "168", "0", "1"}</span></span>|  
|`Split("Alice and Bob", " AND ")`|<span data-ttu-id="c9602-1381">{« Alice et Bob »}</span><span class="sxs-lookup"><span data-stu-id="c9602-1381">{"Alice and Bob"}</span></span>|  
|`Split("Alice and Bob", " AND ", ,CompareMethod.Text)`|<span data-ttu-id="c9602-1382">{"Alice", "Bob"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1382">{"Alice", "Bob"}</span></span>|  
|`Split("someone@example.com", "@",1)`|<span data-ttu-id="c9602-1383">{"someone@example.com"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1383">{"someone@example.com"}</span></span>|  
|`Split("someone@example.com", "@",2)`|<span data-ttu-id="c9602-1384">{"someone", "example.com"}</span><span class="sxs-lookup"><span data-stu-id="c9602-1384">{"someone", "example.com"}</span></span>|  
  
 <span data-ttu-id="c9602-1385">Le `Compare` argument peut prendre les valeurs suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1385">The `Compare` argument can have the following values.</span></span>  
  
|<span data-ttu-id="c9602-1386">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-1386">Constant</span></span>|<span data-ttu-id="c9602-1387">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-1387">Description</span></span>|<span data-ttu-id="c9602-1388">Value</span><span class="sxs-lookup"><span data-stu-id="c9602-1388">Value</span></span>|  
|-|-|-|  
|`CompareMethod.Binary`|<span data-ttu-id="c9602-1389">Effectue une comparaison binaire</span><span class="sxs-lookup"><span data-stu-id="c9602-1389">Performs a binary comparison</span></span>|<span data-ttu-id="c9602-1390">0</span><span class="sxs-lookup"><span data-stu-id="c9602-1390">0</span></span>|  
|`CompareMethod.Text`|<span data-ttu-id="c9602-1391">Effectue une comparaison textuelle</span><span class="sxs-lookup"><span data-stu-id="c9602-1391">Performs a textual comparison</span></span>|<span data-ttu-id="c9602-1392">1</span><span class="sxs-lookup"><span data-stu-id="c9602-1392">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1393">L’exemple suivant montre comment fractionner une chaîne à ses espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1393">The following example demonstrates how to split a string at its spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#13)]  
  
 <span data-ttu-id="c9602-1394">L’exemple suivant montre comment fractionner des chaînes avec plusieurs délimiteurs dans une ligne et éliminer les chaînes vides.</span><span class="sxs-lookup"><span data-stu-id="c9602-1394">The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.</span></span>  
  
 [!code-vb[VbVbalrStrings#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.Join" />
        <altmember cref="T:Microsoft.VisualBasic.CompareMethod" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1395">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1395">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrComp">
      <MemberSignature Language="C#" Value="public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrComp(string String1, string String2, valuetype Microsoft.VisualBasic.CompareMethod Compare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrComp (String1 As String, String2 As String, Optional Compare As CompareMethod = Microsoft.VisualBasic.CompareMethod.Binary) As Integer" />
      <MemberSignature Language="F#" Value="static member StrComp : string * string * Microsoft.VisualBasic.CompareMethod -&gt; int" Usage="Microsoft.VisualBasic.Strings.StrComp (String1, String2, Compare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String1" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
        <Parameter Name="String2" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
        <Parameter Name="Compare" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.VisualBasic.CompilerServices.OptionCompare</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="String1"><span data-ttu-id="c9602-1396">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1396">Required.</span></span> <span data-ttu-id="c9602-1397">Toute expression <see langword="String" /> valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1397">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="String2"><span data-ttu-id="c9602-1398">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1398">Required.</span></span> <span data-ttu-id="c9602-1399">Toute expression <see langword="String" /> valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1399">Any valid <see langword="String" /> expression.</span></span></param>
        <param name="Compare"><span data-ttu-id="c9602-1400">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1400">Optional.</span></span> <span data-ttu-id="c9602-1401">Spécifie le type de comparaison de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1401">Specifies the type of string comparison.</span></span> <span data-ttu-id="c9602-1402">Si <paramref name="Compare" /> est omis, le <see langword="Option Compare" /> paramètre détermine le type de comparaison.</span><span class="sxs-lookup"><span data-stu-id="c9602-1402">If <paramref name="Compare" /> is omitted, the <see langword="Option Compare" /> setting determines the type of comparison.</span></span></param>
        <summary><span data-ttu-id="c9602-1403">Retourne -1, 0 ou 1, selon le résultat d’une comparaison de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1403">Returns -1, 0, or 1, based on the result of a string comparison.</span></span></summary>
        <returns><span data-ttu-id="c9602-1404">Le <see langword="StrComp" /> (fonction) a les valeurs de retournés suivantes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1404">The <see langword="StrComp" /> function has the following return values.</span></span>  
  
 <list type="table"><item><term> <span data-ttu-id="c9602-1405">If</span><span class="sxs-lookup"><span data-stu-id="c9602-1405">If</span></span> 
 </term><description> <span data-ttu-id="c9602-1406">La fonction StrComp retourne</span><span class="sxs-lookup"><span data-stu-id="c9602-1406">StrComp returns</span></span> 
 </description></item><item><term><span data-ttu-id="c9602-1407"><paramref name="String1" /> se situe avant <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1407"><paramref name="String1" /> sorts ahead of <paramref name="String2" /></span></span></term><description> <span data-ttu-id="c9602-1408">-1</span><span class="sxs-lookup"><span data-stu-id="c9602-1408">-1</span></span> 
 </description></item><item><term><span data-ttu-id="c9602-1409"><paramref name="String1" /> est égal à <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1409"><paramref name="String1" /> is equal to <paramref name="String2" /></span></span></term><description> <span data-ttu-id="c9602-1410">0</span><span class="sxs-lookup"><span data-stu-id="c9602-1410">0</span></span> 
 </description></item><item><term><span data-ttu-id="c9602-1411"><paramref name="String1" /> se situe après <paramref name="String2" /></span><span class="sxs-lookup"><span data-stu-id="c9602-1411"><paramref name="String1" /> sorts after <paramref name="String2" /></span></span></term><description> <span data-ttu-id="c9602-1412">1</span><span class="sxs-lookup"><span data-stu-id="c9602-1412">1</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1413">Les chaînes sont comparées à des valeurs de tri alphanumérique commençant par le premier caractère.</span><span class="sxs-lookup"><span data-stu-id="c9602-1413">The strings are compared by alphanumeric sort values beginning with the first character.</span></span> <span data-ttu-id="c9602-1414">Pour plus d’informations sur les comparaisons binaires, les comparaisons textuelles et ordre de tri, consultez [instruction Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-1414">For further information on binary comparisons, textual comparisons, and sort order, see [Option Compare Statement](~/docs/visual-basic/language-reference/statements/option-compare-statement.md).</span></span>  
  
 <span data-ttu-id="c9602-1415">Les paramètres de l’argument `Compare` sont :</span><span class="sxs-lookup"><span data-stu-id="c9602-1415">The `Compare` argument settings are:</span></span>  
  
|<span data-ttu-id="c9602-1416">Constante</span><span class="sxs-lookup"><span data-stu-id="c9602-1416">Constant</span></span>|<span data-ttu-id="c9602-1417">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-1417">Description</span></span>|  
|-|-|  
|`Binary`|<span data-ttu-id="c9602-1418">Effectue une comparaison binaire, selon un ordre de tri dérivé des représentations binaires internes des caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1418">Performs a binary comparison, based on a sort order derived from the internal binary representations of the characters.</span></span>|  
|`Text`|<span data-ttu-id="c9602-1419">Effectue une comparaison de texte, selon un ordre de tri de texte respectant la casse déterminé par votre système `LocaleID` valeur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1419">Performs a text comparison, based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1420">Cet exemple utilise le `StrComp` fonction pour retourner les résultats d’une comparaison de chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1420">This example uses the `StrComp` function to return the results of a string comparison.</span></span>  
  
 [!code-vb[VbVbalrStrings#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1421">La valeur <paramref name="Compare" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1421"><paramref name="Compare" /> value is not valid.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.InStr" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1422">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1422">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-1423">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1423">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-1424">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1424">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrConv">
      <MemberSignature Language="C#" Value="public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrConv(string str, valuetype Microsoft.VisualBasic.VbStrConv Conversion, int32 LocaleID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrConv (str As String, Conversion As VbStrConv, Optional LocaleID As Integer = 0) As String" />
      <MemberSignature Language="F#" Value="static member StrConv : string * Microsoft.VisualBasic.VbStrConv * int -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrConv (str, Conversion, LocaleID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Conversion" Type="Microsoft.VisualBasic.VbStrConv" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="LocaleID" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1425">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1425">Required.</span></span> <span data-ttu-id="c9602-1426"><see langword="String" /> expression à convertir.</span><span class="sxs-lookup"><span data-stu-id="c9602-1426"><see langword="String" /> expression to be converted.</span></span></param>
        <param name="Conversion"><span data-ttu-id="c9602-1427">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1427">Required.</span></span> <span data-ttu-id="c9602-1428"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> membre.</span><span class="sxs-lookup"><span data-stu-id="c9602-1428"><see cref="T:Microsoft.VisualBasic.VbStrConv" /> member.</span></span> <span data-ttu-id="c9602-1429">La valeur d’énumération qui spécifie le type de conversion à effectuer.</span><span class="sxs-lookup"><span data-stu-id="c9602-1429">The enumeration value specifying the type of conversion to perform.</span></span></param>
        <param name="LocaleID"><span data-ttu-id="c9602-1430">Facultatif.</span><span class="sxs-lookup"><span data-stu-id="c9602-1430">Optional.</span></span> <span data-ttu-id="c9602-1431">Le <see langword="LocaleID" /> valeur, s’il est différent du système <see langword="LocaleID" /> valeur.</span><span class="sxs-lookup"><span data-stu-id="c9602-1431">The <see langword="LocaleID" /> value, if different from the system <see langword="LocaleID" /> value.</span></span> <span data-ttu-id="c9602-1432">(Le système <see langword="LocaleID" /> valeur est la valeur par défaut.)</span><span class="sxs-lookup"><span data-stu-id="c9602-1432">(The system <see langword="LocaleID" /> value is the default.)</span></span></param>
        <summary><span data-ttu-id="c9602-1433">Retourne une chaîne convertie comme spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1433">Returns a string converted as specified.</span></span></summary>
        <returns><span data-ttu-id="c9602-1434">Une chaîne convertie comme spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1434">A string converted as specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1435">Les constantes `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, et `VbStrConv.Hiragana` peut provoquer des erreurs d’exécution lorsqu’il est utilisé dans les paramètres régionaux où elles ne s’appliquent pas, mais pas toujours : les constantes `VbStrConv.Katakana` et `VbStrConv.Hiragana`peut être utilisé dans un système non japonais avec le module linguistique japonais est installé.</span><span class="sxs-lookup"><span data-stu-id="c9602-1435">The constants `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, and `VbStrConv.Hiragana` can cause run-time errors when used in locales where they do not apply, but not always: the constants `VbStrConv.Katakana` and `VbStrConv.Hiragana` can be used in a non-Japanese system with the Japanese Language Pack installed.</span></span> <span data-ttu-id="c9602-1436">En outre, l’utilisation des constantes `VbStrConv.Wide` et `VbStrConv.Narrow` est pris en charge sur n’importe quel système avec une langue d’Extrême-Orient installée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1436">In addition, use of the constants `VbStrConv.Wide` and `VbStrConv.Narrow` is supported on any system with an East Asian language installed.</span></span>  
  
 <span data-ttu-id="c9602-1437">Cette fonction utilise les informations de culture de l’application lors de la manipulation de la chaîne afin que les changements de casse sont appropriés pour les paramètres régionaux dans lequel l’application est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1437">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9602-1438">Si votre application prend des décisions de sécurité en fonction du résultat d’une comparaison ou d’une opération de changement de casse, l’opération doit utiliser le <xref:System.String.Compare%2A?displayProperty=nameWithType> (méthode), puis transmettez <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> pour le `comparisonType` argument.</span><span class="sxs-lookup"><span data-stu-id="c9602-1438">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="c9602-1439">Pour plus d’informations, consultez [fonctionnement Culture affecte des chaînes en Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-1439">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
 <span data-ttu-id="c9602-1440">Les paramètres de l’argument `Conversion` sont :</span><span class="sxs-lookup"><span data-stu-id="c9602-1440">The `Conversion` argument settings are:</span></span>  
  
|<span data-ttu-id="c9602-1441">Membre d’énumération</span><span class="sxs-lookup"><span data-stu-id="c9602-1441">Enumeration member</span></span>|<span data-ttu-id="c9602-1442">Description</span><span class="sxs-lookup"><span data-stu-id="c9602-1442">Description</span></span>|  
|-|-|  
|`VbStrConv.None`|<span data-ttu-id="c9602-1443">N’exécute aucune conversion</span><span class="sxs-lookup"><span data-stu-id="c9602-1443">Performs no conversion</span></span>|  
|`VbStrConv.LinguisticCasing`|<span data-ttu-id="c9602-1444">Utilise les règles linguistiques pour la casse, plutôt que le système de fichiers (par défaut).</span><span class="sxs-lookup"><span data-stu-id="c9602-1444">Uses linguistic rules for casing, rather than File System (default).</span></span> <span data-ttu-id="c9602-1445">Valide avec `VbStrConv.UpperCase` et `VbStrConv.LowerCase` uniquement.</span><span class="sxs-lookup"><span data-stu-id="c9602-1445">Valid with `VbStrConv.UpperCase` and `VbStrConv.LowerCase` only.</span></span>|  
|`VbStrConv.UpperCase`|<span data-ttu-id="c9602-1446">Convertit la chaîne spécifiée en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1446">Converts the string to uppercase characters.</span></span>|  
|`VbStrConv.LowerCase`|<span data-ttu-id="c9602-1447">Convertit la chaîne spécifiée en minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1447">Converts the string to lowercase characters.</span></span>|  
|`VbStrConv.ProperCase`|<span data-ttu-id="c9602-1448">Convertit la première lettre de chaque mot dans la chaîne en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1448">Converts the first letter of every word in string to uppercase.</span></span>|  
|<span data-ttu-id="c9602-1449">`VbStrConv.Wide` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="c9602-1449">`VbStrConv.Wide` <sup>\*</sup></span></span>|<span data-ttu-id="c9602-1450">Convertit les caractères étroits (demi-chasse) les caractères dans la chaîne à caractères larges (pleine chasse).</span><span class="sxs-lookup"><span data-stu-id="c9602-1450">Converts narrow (half-width) characters in the string to wide (full-width) characters.</span></span> [!INCLUDE[vbstrconv-wide](~/includes/vbstrconv-wide-md.md)]|  
|<span data-ttu-id="c9602-1451">`VbStrConv.Narrow` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="c9602-1451">`VbStrConv.Narrow` <sup>\*</sup></span></span>|<span data-ttu-id="c9602-1452">Convertit les caractères larges (pleine chasse) dans la chaîne de caractères étroits (demi-chasse) caractères.</span><span class="sxs-lookup"><span data-stu-id="c9602-1452">Converts wide (full-width) characters in the string to narrow (half-width) characters.</span></span>|  
|<span data-ttu-id="c9602-1453">`VbStrConv.Katakana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="c9602-1453">`VbStrConv.Katakana` <sup>\*\*</sup></span></span>|<span data-ttu-id="c9602-1454">Convertit les caractères Hiragana dans la chaîne en caractères Katakana.</span><span class="sxs-lookup"><span data-stu-id="c9602-1454">Converts Hiragana characters in the string to Katakana characters.</span></span>|  
|<span data-ttu-id="c9602-1455">`VbStrConv.Hiragana` <sup>\*\*</sup></span><span class="sxs-lookup"><span data-stu-id="c9602-1455">`VbStrConv.Hiragana` <sup>\*\*</sup></span></span>|<span data-ttu-id="c9602-1456">Convertit les caractères Katakana dans la chaîne en caractères Hiragana .</span><span class="sxs-lookup"><span data-stu-id="c9602-1456">Converts Katakana characters in the string to Hiragana characters.</span></span>|  
|<span data-ttu-id="c9602-1457">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="c9602-1457">`VbStrConv.SimplifiedChinese` <sup>\*</sup></span></span>|<span data-ttu-id="c9602-1458">Convertit des caractères en chinois traditionnel en chinois simplifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1458">Converts Traditional Chinese characters to Simplified Chinese.</span></span>|  
|<span data-ttu-id="c9602-1459">`VbStrConv.TraditionalChinese` <sup>\*</sup></span><span class="sxs-lookup"><span data-stu-id="c9602-1459">`VbStrConv.TraditionalChinese` <sup>\*</sup></span></span>|<span data-ttu-id="c9602-1460">Convertit les caractères chinois simplifié en chinois traditionnel.</span><span class="sxs-lookup"><span data-stu-id="c9602-1460">Converts Simplified Chinese characters to Traditional Chinese.</span></span>|  
  
 <span data-ttu-id="c9602-1461"><sup>\*</sup> S’applique aux paramètres régionaux asiatiques.</span><span class="sxs-lookup"><span data-stu-id="c9602-1461"><sup>\*</sup> Applies to Asian locales.</span></span>  
  
 <span data-ttu-id="c9602-1462"><sup>\*\*</sup> S’applique uniquement au Japon.</span><span class="sxs-lookup"><span data-stu-id="c9602-1462"><sup>\*\*</sup> Applies to Japan only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9602-1463">Ces constantes sont spécifiées dans le common language runtime du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c9602-1463">These constants are specified in the .NET Framework common language runtime.</span></span> <span data-ttu-id="c9602-1464">Par conséquent, elles peuvent servir n’importe où dans votre code à la place les valeurs réelles.</span><span class="sxs-lookup"><span data-stu-id="c9602-1464">As a result, they can be used anywhere in your code in place of the actual values.</span></span> <span data-ttu-id="c9602-1465">La plupart peut être combinée (par exemple, `UpperCase + Wide`), sauf lorsqu’elles s’excluent mutuellement (par exemple, `VbStrConv.Wide + VbStrConv.Narrow`).</span><span class="sxs-lookup"><span data-stu-id="c9602-1465">Most can be combined (for example, `UpperCase + Wide`), except when they are mutually exclusive (for example, `VbStrConv.Wide + VbStrConv.Narrow`).</span></span>  
  
 <span data-ttu-id="c9602-1466">Séparateurs de mots valides pour la casse adéquate sont les suivants : Null (`Chr$(0)`), tabulation horizontale (`Chr$(9)`), saut de ligne (`Chr$(10)`), tabulation verticale (`Chr$(11)`), saut de page (`Chr$(12)`), retour chariot (`Chr$(13)`), espace (codés sur un jeu de caractères) (`Chr$(32)`).</span><span class="sxs-lookup"><span data-stu-id="c9602-1466">The following are valid word separators for proper casing: Null (`Chr$(0)`), horizontal tab (`Chr$(9)`), line feed (`Chr$(10)`), vertical tab (`Chr$(11)`), form feed (`Chr$(12)`), carriage return (`Chr$(13)`), space (single-byte character set) (`Chr$(32)`).</span></span> <span data-ttu-id="c9602-1467">La valeur réelle pour un espace, ce qui peut être full ou demi-chasse, varie par pays/région pour les cultures d’Extrême-Orient.</span><span class="sxs-lookup"><span data-stu-id="c9602-1467">The actual value for a space, which can be full or half width, varies by country/region for East Asian cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1468">Cet exemple convertit le texte en lettres minuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1468">This example converts text into all lowercase letters.</span></span>  
  
 [!code-vb[VbVbalrStrings#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1469"><paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 ou &gt; 2048 non pris en charge, ou conversion non prise en charge pour les paramètres régionaux spécifiés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1469">Unsupported <paramref name="LocaleID" />, <paramref name="Conversion" /> &lt; 0 or &gt; 2048, or unsupported conversion for specified locale.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1470">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1470">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md"><span data-ttu-id="c9602-1471">Type Conversion Functions</span><span class="sxs-lookup"><span data-stu-id="c9602-1471">Type Conversion Functions</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrDup">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-1472">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1472">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, char Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, char Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, char Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * char -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Character" Type="System.Char" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="c9602-1473">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1473">Required.</span></span> <span data-ttu-id="c9602-1474"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1474"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1475">La longueur de la chaîne à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1475">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="c9602-1476">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1476">Required.</span></span> <span data-ttu-id="c9602-1477">Valide <see langword="Char" />, <see langword="String" />, ou <see langword="Object" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1477">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="c9602-1478">Seul le premier caractère de l’expression sera être utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-1478">Only the first character of the expression will be used.</span></span> <span data-ttu-id="c9602-1479">Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1479">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="c9602-1480">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1480">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="c9602-1481">Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1481">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1482">Cette fonction retourne un `String` composé de caractères répétés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1482">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="c9602-1483">Le caractère qui constitue la chaîne est le premier caractère dans le `Character` argument et il est dupliqué `Number` nombre de fois.</span><span class="sxs-lookup"><span data-stu-id="c9602-1483">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1484">Cet exemple utilise le `StrDup` fonction pour retourner une chaîne de caractères de dupliqués.</span><span class="sxs-lookup"><span data-stu-id="c9602-1484">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1485"><paramref name="Number" /> est inférieur à 0 ou <paramref name="Character" /> type n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1485"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9602-1486"><paramref name="Character" /> a la valeur <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1486"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1487">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1487">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static object StrDup (int Number, object Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrDup(int32 Number, object Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrDup(int Number, System::Object ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * obj -&gt; obj" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Character" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="c9602-1488">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1488">Required.</span></span> <span data-ttu-id="c9602-1489"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1489"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1490">La longueur de la chaîne à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1490">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="c9602-1491">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1491">Required.</span></span> <span data-ttu-id="c9602-1492">Valide <see langword="Char" />, <see langword="String" />, ou <see langword="Object" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1492">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="c9602-1493">Seul le premier caractère de l’expression sera être utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-1493">Only the first character of the expression will be used.</span></span> <span data-ttu-id="c9602-1494">Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1494">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="c9602-1495">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1495">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="c9602-1496">Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1496">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1497">Cette fonction retourne un `String` composé de caractères répétés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1497">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="c9602-1498">Le caractère qui constitue la chaîne est le premier caractère dans le `Character` argument et il est dupliqué `Number` nombre de fois.</span><span class="sxs-lookup"><span data-stu-id="c9602-1498">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1499">Cet exemple utilise le `StrDup` fonction pour retourner une chaîne de caractères de dupliqués.</span><span class="sxs-lookup"><span data-stu-id="c9602-1499">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1500"><paramref name="Number" /> est inférieur à 0 ou <paramref name="Character" /> type n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1500"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9602-1501"><paramref name="Character" /> a la valeur <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1501"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1502">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1502">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrDup">
      <MemberSignature Language="C#" Value="public static string StrDup (int Number, string Character);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrDup(int32 Number, string Character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrDup (Number As Integer, Character As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrDup(int Number, System::String ^ Character);" />
      <MemberSignature Language="F#" Value="static member StrDup : int * string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrDup (Number, Character)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Character" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="c9602-1503">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1503">Required.</span></span> <span data-ttu-id="c9602-1504"><see langword="Integer" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1504"><see langword="Integer" /> expression.</span></span> <span data-ttu-id="c9602-1505">La longueur de la chaîne à retourner.</span><span class="sxs-lookup"><span data-stu-id="c9602-1505">The length to the string to be returned.</span></span></param>
        <param name="Character"><span data-ttu-id="c9602-1506">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1506">Required.</span></span> <span data-ttu-id="c9602-1507">Valide <see langword="Char" />, <see langword="String" />, ou <see langword="Object" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1507">Any valid <see langword="Char" />, <see langword="String" />, or <see langword="Object" /> expression.</span></span> <span data-ttu-id="c9602-1508">Seul le premier caractère de l’expression sera être utilisé.</span><span class="sxs-lookup"><span data-stu-id="c9602-1508">Only the first character of the expression will be used.</span></span> <span data-ttu-id="c9602-1509">Si le caractère est de type <see langword="Object" />, il doit contenir une valeur <see langword="Char" /> ou <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1509">If Character is of type <see langword="Object" />, it must contain either a <see langword="Char" /> or a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="c9602-1510">Retourne une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1510">Returns a string or object consisting of the specified character repeated the specified number of times.</span></span></summary>
        <returns><span data-ttu-id="c9602-1511">Une chaîne ou un objet constitué du caractère spécifié répété le nombre de fois spécifié.</span><span class="sxs-lookup"><span data-stu-id="c9602-1511">A string or object consisting of the specified character repeated the specified number of times.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1512">Cette fonction retourne un `String` composé de caractères répétés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1512">This function returns a `String` made up of repeated characters.</span></span> <span data-ttu-id="c9602-1513">Le caractère qui constitue la chaîne est le premier caractère dans le `Character` argument et il est dupliqué `Number` nombre de fois.</span><span class="sxs-lookup"><span data-stu-id="c9602-1513">The character that makes up the string is the first character in the `Character` argument, and it is duplicated `Number` number of times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1514">Cet exemple utilise le `StrDup` fonction pour retourner une chaîne de caractères de dupliqués.</span><span class="sxs-lookup"><span data-stu-id="c9602-1514">This example uses the `StrDup` function to return a string of duplicated characters.</span></span>  
  
 [!code-vb[VbVbalrStrings#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9602-1515"><paramref name="Number" /> est inférieur à 0 ou <paramref name="Character" /> type n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1515"><paramref name="Number" /> is less than 0 or <paramref name="Character" /> type is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9602-1516"><paramref name="Character" /> a la valeur <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="c9602-1516"><paramref name="Character" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1517">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1517">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrReverse">
      <MemberSignature Language="C#" Value="public static string StrReverse (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string StrReverse(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StrReverse (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ StrReverse(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member StrReverse : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.StrReverse Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="Expression"><span data-ttu-id="c9602-1518">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1518">Required.</span></span> <span data-ttu-id="c9602-1519">Expression de chaîne dont les caractères doivent être inversés.</span><span class="sxs-lookup"><span data-stu-id="c9602-1519">String expression whose characters are to be reversed.</span></span> <span data-ttu-id="c9602-1520">Si <paramref name="Expression" /> est une chaîne de longueur nulle (" »), une chaîne de longueur nulle est retournée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1520">If <paramref name="Expression" /> is a zero-length string (""), a zero-length string is returned.</span></span></param>
        <summary><span data-ttu-id="c9602-1521">Retourne une chaîne dans laquelle l’ordre des caractères d’une chaîne spécifiée est inversé.</span><span class="sxs-lookup"><span data-stu-id="c9602-1521">Returns a string in which the character order of a specified string is reversed.</span></span></summary>
        <returns><span data-ttu-id="c9602-1522">Une chaîne dans laquelle l’ordre des caractères d’une chaîne donnée a été inversé.</span><span class="sxs-lookup"><span data-stu-id="c9602-1522">A string in which the character order of a specified string is reversed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1523">Le `StrReverse` fonction retourne une chaîne qui contient les mêmes caractères que `Expression`, mais dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="c9602-1523">The `StrReverse` function returns a string that contains the same characters as `Expression`, but in the opposite order.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrStrings#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1524">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1524">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static string Trim (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Trim(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Trim(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Trim : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.Trim str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c9602-1525">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1525">Required.</span></span> <span data-ttu-id="c9602-1526">Toute expression <see langword="String" /> valide.</span><span class="sxs-lookup"><span data-stu-id="c9602-1526">Any valid <see langword="String" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-1527">Retourne une chaîne contenant une copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), aucun des espaces de fin (<see langword="RTrim" />), ou sans espaces à gauche ou (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="c9602-1527">Returns a string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></summary>
        <returns><span data-ttu-id="c9602-1528">Une chaîne contenant la copie d’une chaîne spécifiée sans espaces à gauche (<see langword="LTrim" />), sans espaces à droite (<see langword="RTrim" />) ou sans espaces à droite ni à gauche (<see langword="Trim" />).</span><span class="sxs-lookup"><span data-stu-id="c9602-1528">A string containing a copy of a specified string with no leading spaces (<see langword="LTrim" />), no trailing spaces (<see langword="RTrim" />), or no leading or trailing spaces (<see langword="Trim" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1529">Le `LTrim`, `RTrim`, et `Trim` fonctions suppriment les espaces à la fin des chaînes.</span><span class="sxs-lookup"><span data-stu-id="c9602-1529">The `LTrim`, `RTrim`, and `Trim` functions remove spaces from the ends of strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1530">Cet exemple utilise le `LTrim` fonction pour supprimer les espaces de début et la `RTrim` des espaces à partir d’une variable de chaîne de fonction à la fin de la frange.</span><span class="sxs-lookup"><span data-stu-id="c9602-1530">This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable.</span></span> <span data-ttu-id="c9602-1531">Il utilise le `Trim` (fonction) pour supprimer les deux types d’espaces.</span><span class="sxs-lookup"><span data-stu-id="c9602-1531">It uses the `Trim` function to strip both types of spaces.</span></span>  
  
 [!code-vb[VbVbalrStrings#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.RTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.LTrim(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Space(System.Int32)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1532">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1532">String Manipulation Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UCase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9602-1533">Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1533">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static char UCase (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static char UCase(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char UCase(char Value);" />
      <MemberSignature Language="F#" Value="static member UCase : char -&gt; char" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="c9602-1534">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1534">Required.</span></span> <span data-ttu-id="c9602-1535">Valide <see langword="String" /> ou <see langword="Char" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1535">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-1536">Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1536">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="c9602-1537">Une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1537">A string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1538">Seulement des lettres minuscules sont convertis en majuscules ; toutes les lettres majuscules et les caractères restent inchangées.</span><span class="sxs-lookup"><span data-stu-id="c9602-1538">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="c9602-1539">Cette fonction utilise les informations de culture de l’application lors de la manipulation de la chaîne afin que les changements de casse sont appropriés pour les paramètres régionaux dans lequel l’application est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1539">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9602-1540">Si votre application prend des décisions de sécurité en fonction du résultat d’une comparaison ou d’une opération de changement de casse, l’opération doit utiliser le <xref:System.String.Compare%2A?displayProperty=nameWithType> (méthode), puis transmettez <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> pour le `comparisonType` argument.</span><span class="sxs-lookup"><span data-stu-id="c9602-1540">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="c9602-1541">Pour plus d’informations, consultez [fonctionnement Culture affecte des chaînes en Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-1541">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1542">Cet exemple utilise le `UCase` fonction pour retourner une version en majuscules d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1542">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1543">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1543">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-1544">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1544">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-1545">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1545">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UCase">
      <MemberSignature Language="C#" Value="public static string UCase (string Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string UCase(string Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Strings.UCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UCase (Value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UCase(System::String ^ Value);" />
      <MemberSignature Language="F#" Value="static member UCase : string -&gt; string" Usage="Microsoft.VisualBasic.Strings.UCase Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="c9602-1546">Obligatoire.</span><span class="sxs-lookup"><span data-stu-id="c9602-1546">Required.</span></span> <span data-ttu-id="c9602-1547">Valide <see langword="String" /> ou <see langword="Char" /> expression.</span><span class="sxs-lookup"><span data-stu-id="c9602-1547">Any valid <see langword="String" /> or <see langword="Char" /> expression.</span></span></param>
        <summary><span data-ttu-id="c9602-1548">Retourne une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1548">Returns a string or character containing the specified string converted to uppercase.</span></span></summary>
        <returns><span data-ttu-id="c9602-1549">Une chaîne ou un caractère contenant la chaîne spécifiée convertie en majuscules.</span><span class="sxs-lookup"><span data-stu-id="c9602-1549">A string or character containing the specified string converted to uppercase.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9602-1550">Seulement des lettres minuscules sont convertis en majuscules ; toutes les lettres majuscules et les caractères restent inchangées.</span><span class="sxs-lookup"><span data-stu-id="c9602-1550">Only lowercase letters are converted to uppercase; all uppercase letters and nonletter characters remain unchanged.</span></span>  
  
 <span data-ttu-id="c9602-1551">Cette fonction utilise les informations de culture de l’application lors de la manipulation de la chaîne afin que les changements de casse sont appropriés pour les paramètres régionaux dans lequel l’application est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c9602-1551">This function uses the application's culture information when manipulating the string so that the case changes are appropriate for the locale in which the application is being used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9602-1552">Si votre application prend des décisions de sécurité en fonction du résultat d’une comparaison ou d’une opération de changement de casse, l’opération doit utiliser le <xref:System.String.Compare%2A?displayProperty=nameWithType> (méthode), puis transmettez <xref:System.StringComparison.Ordinal> ou <xref:System.StringComparison.OrdinalIgnoreCase> pour le `comparisonType` argument.</span><span class="sxs-lookup"><span data-stu-id="c9602-1552">If your application makes security decisions based on the result of a comparison or case-change operation, then the operation should use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and pass <xref:System.StringComparison.Ordinal> or <xref:System.StringComparison.OrdinalIgnoreCase> for the `comparisonType` argument.</span></span> <span data-ttu-id="c9602-1553">Pour plus d’informations, consultez [fonctionnement Culture affecte des chaînes en Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span><span class="sxs-lookup"><span data-stu-id="c9602-1553">For more information, see [How Culture Affects Strings in Visual Basic](~/docs/visual-basic/programming-guide/language-features/strings/how-culture-affects-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9602-1554">Cet exemple utilise le `UCase` fonction pour retourner une version en majuscules d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c9602-1554">This example uses the `UCase` function to return an uppercase version of a string.</span></span>  
  
 [!code-vb[VbVbalrStrings#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.Strings.LCase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/string-manipulation-summary.md"><span data-ttu-id="c9602-1555">Liste des manipulations de chaînes</span><span class="sxs-lookup"><span data-stu-id="c9602-1555">String Manipulation Summary</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/index.md"><span data-ttu-id="c9602-1556">Chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1556">Strings in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/introduction-to-strings.md"><span data-ttu-id="c9602-1557">Introduction aux chaînes en Visual Basic</span><span class="sxs-lookup"><span data-stu-id="c9602-1557">Introduction to Strings in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>