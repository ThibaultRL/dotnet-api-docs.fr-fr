<Type Name="SqlDataSourceEnumerator" FullName="System.Data.Sql.SqlDataSourceEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28285789fe3205faffd487aaf559b5ecbfe70ee1" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006426" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlDataSourceEnumerator : System.Data.Common.DbDataSourceEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataSourceEnumerator extends System.Data.Common.DbDataSourceEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Sql.SqlDataSourceEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataSourceEnumerator&#xA;Inherits DbDataSourceEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceEnumerator sealed : System::Data::Common::DbDataSourceEnumerator" />
  <TypeSignature Language="F#" Value="type SqlDataSourceEnumerator = class&#xA;    inherit DbDataSourceEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataSourceEnumerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un mécanisme pour énumérer toutes les instances disponibles de SQL Server dans le réseau local.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server rend possible pour les applications déterminer l’existence de ses instances au sein du réseau actuel. Le <xref:System.Data.Sql.SqlDataSourceEnumerator> classe expose ces informations au développeur d’applications, en fournissant un <xref:System.Data.DataTable> contenant des informations sur tous les serveurs disponibles. Cette table retournée contient une liste d’instances de serveur qui correspond à la liste fournie lorsqu’un utilisateur tente de créer une nouvelle connexion et sur le `Connection Properties` boîte de dialogue se développe la liste déroulante contenant tous les serveurs disponibles.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server">Énumération des Instances de SQL Server</related>
  </Docs>
  <Members>
    <Member MemberName="GetDataSources">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetDataSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetDataSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataSources () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetDataSources();" />
      <MemberSignature Language="F#" Value="override this.GetDataSources : unit -&gt; System.Data.DataTable" Usage="sqlDataSourceEnumerator.GetDataSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un <see cref="T:System.Data.DataTable" /> contenant des informations sur toutes les instances SQL Server visibles.</summary>
        <returns><see cref="T:System.Data.DataTable" /> contenant des informations sur les instances SQL Server visibles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau retourné par cette méthode contient les colonnes suivantes, qui contiennent toutes des chaînes :  
  
|Colonne|Description|  
|------------|-----------------|  
|**ServerName**|Nom du serveur.|  
|**InstanceName**|Nom de l'instance du serveur. Vide si le serveur s'exécute comme instance par défaut.|  
|**IsClustered**|Indique si le serveur fait partie d'un cluster.|  
|**Version**|Version du serveur :<br /><br />10.0.xx pour SQL Server 2008<br />10.50.x pour SQL Server 2008 R2<br />11.0.xx pour SQL Server 2012<br />12.0.xx pour SQL Server 2014<br />13.0.xx pour SQL Server 2016<br />14.0.xx pour SQL Server 2017|  
  
> [!NOTE]
>  En raison de la nature du mécanisme utilisé par <xref:System.Data.Sql.SqlDataSourceEnumerator> pour localiser des sources de données sur un réseau, la méthode ne retourne pas toujours une liste complète des serveurs disponibles, et la liste ne peut pas être le même sur chaque appel. Si vous envisagez d’utiliser cette fonction pour permettre aux utilisateurs de sélectionner un serveur dans une liste, veillez à fournir également une option permettant de taper un nom qui n’est pas dans la liste, au cas où l’énumération des serveurs ne retourne pas de tous les serveurs disponibles. En outre, cette méthode peut prendre beaucoup de temps à exécuter, par conséquent, veillez à appeler lorsque les performances sont essentielles.  
  
   
  
## Examples  
 L’application console suivante récupère des informations sur toutes les instances SQL Server visibles et affiche les informations dans la fenêtre de console.  
  
```vb  
Imports System.Data.Sql  
  
Module Module1  
  Sub Main()  
    ' Retrieve the enumerator instance and then the data.  
    Dim instance As SqlDataSourceEnumerator = _  
     SqlDataSourceEnumerator.Instance  
    Dim table As System.Data.DataTable = instance.GetDataSources()  
  
    ' Display the contents of the table.  
    DisplayData(table)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal table As DataTable)  
    For Each row As DataRow In table.Rows  
      For Each col As DataColumn In table.Columns  
        Console.WriteLine("{0} = {1}", col.ColumnName, row(col))  
      Next  
      Console.WriteLine("============================")  
    Next  
  End Sub  
End Module  
```  
  
```csharp  
using System.Data.Sql;  
  
class Program  
{  
  static void Main()  
  {  
    // Retrieve the enumerator instance and then the data.  
    SqlDataSourceEnumerator instance =  
      SqlDataSourceEnumerator.Instance;  
    System.Data.DataTable table = instance.GetDataSources();  
  
    // Display the contents of the table.  
    DisplayData(table);  
  
    Console.WriteLine("Press any key to continue.");  
    Console.ReadKey();  
  }  
  
  private static void DisplayData(System.Data.DataTable table)  
  {  
    foreach (System.Data.DataRow row in table.Rows)  
    {  
      foreach (System.Data.DataColumn col in table.Columns)  
      {  
        Console.WriteLine("{0} = {1}", col.ColumnName, row[col]);  
      }  
      Console.WriteLine("============================");  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server">Énumération des Instances de SQL Server</related>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Data.Sql.SqlDataSourceEnumerator Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Sql.SqlDataSourceEnumerator Instance" />
      <MemberSignature Language="DocId" Value="P:System.Data.Sql.SqlDataSourceEnumerator.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As SqlDataSourceEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Sql::SqlDataSourceEnumerator ^ Instance { System::Data::Sql::SqlDataSourceEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Data.Sql.SqlDataSourceEnumerator" Usage="System.Data.Sql.SqlDataSourceEnumerator.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlDataSourceEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une instance de la <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />, qui peut être utilisé pour récupérer des informations sur les instances de SQL Server disponibles.</summary>
        <value>Une instance de la <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> utilisée pour récupérer des informations sur les instances de SQL Server disponibles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Sql.SqlDataSourceEnumerator> classe ne fournit pas de constructeur. Utilisez le <xref:System.Data.Sql.SqlDataSourceEnumerator.Instance%2A> propriété à récupérer une instance de la classe à la place.  
  
   
  
## Examples  
 L’application console suivante affiche une liste de toutes les instances de SQL Server 2005 disponibles au sein du réseau local. Ce code utilise le <xref:System.Data.DataTable.Select%2A> méthode pour filtrer les lignes dans la table retournée par la <xref:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources%2A> (méthode).  
  
```vb  
Imports System.Data.Sql  
  
Module Module1  
  Sub Main()  
    ' Retrieve the enumerator instance, and  
    ' then retrieve the data sources.  
    Dim instance As SqlDataSourceEnumerator = _  
     SqlDataSourceEnumerator.Instance  
    Dim table As System.Data.DataTable = instance.GetDataSources()  
  
    ' Filter the sources to just show SQL Server 2005 instances.  
    Dim rows() As DataRow = table.Select("Version LIKE '9%'")  
    For Each row As DataRow In rows  
      Console.WriteLine(row("ServerName"))  
    Next  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
End Module  
```  
  
```csharp  
using System.Data.Sql;  
  
class Program  
{  
  static void Main()  
  {  
    // Retrieve the enumerator instance, and  
    // then retrieve the data sources.  
    SqlDataSourceEnumerator instance =  
      SqlDataSourceEnumerator.Instance;  
    System.Data.DataTable table = instance.GetDataSources();  
  
    // Filter the sources to just show SQL Server 2005 instances.  
    System.Data.DataRow[] rows = table.Select("Version LIKE '9%'");  
    foreach (System.Data.DataRow row in rows)  
    {  
      Console.WriteLine(row["ServerName"]);  
    }  
    Console.WriteLine("Press any key to continue.");  
    Console.ReadKey();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/sql/enumerating-instances-of-sql-server">Énumération des Instances de SQL Server</related>
      </Docs>
    </Member>
  </Members>
</Type>