<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f75d704bbe231919966e4fc5a123f6ed1bb202ac" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66005934" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="170d1-101">Définit des méthodes pour gérer des scripts clients dans des applications Web.</span><span class="sxs-lookup"><span data-stu-id="170d1-101">Defines methods for managing client scripts in Web applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-102">Le <xref:System.Web.UI.ClientScriptManager> classe est utilisée pour gérer des scripts clients et les ajouter aux applications Web.</span><span class="sxs-lookup"><span data-stu-id="170d1-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="170d1-103">Vous pouvez obtenir une référence à la <xref:System.Web.UI.ClientScriptManager> classe à partir de la <xref:System.Web.UI.Page.ClientScript%2A> propriété de la <xref:System.Web.UI.Page> objet.</span><span class="sxs-lookup"><span data-stu-id="170d1-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="170d1-104">Vous pouvez ajouter de manière déclarative un script client à une page Web en incluant le script dans le balisage HTML de la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="170d1-105">Toutefois, il existe des situations lors de l’ajout dynamique de script client est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="170d1-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="170d1-106">Pour ajouter dynamiquement un script, utilisez la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (méthode), le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> (méthode), le <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (méthode), ou le <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> (méthode), en fonction de quand et comment vous souhaitez ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="170d1-107">Pour plus d'informations, voir [Procédure : Ajouter dynamiquement un Script Client à des Pages Web ASP.NET](https://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="170d1-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](https://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="170d1-108">Le <xref:System.Web.UI.ClientScriptManager> classe identifie de façon unique les scripts par une clé <xref:System.String> et un <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="170d1-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="170d1-109">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-110">En utilisant le type de script permet d’éviter de confondre des scripts semblables à partir de différents contrôles utilisateur qui peuvent être utilisé dans la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="170d1-111">Le <xref:System.Web.UI.ClientScriptManager> classe peut être utilisée pour appeler des rappels de client dans les situations lorsqu’il est recommandé d’exécuter un code serveur à partir du client sans effectuer une publication (postback).</span><span class="sxs-lookup"><span data-stu-id="170d1-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="170d1-112">Cela est appelé pour effectuer un rappel hors-bande au serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="170d1-113">Dans un rappel client, une fonction de script client envoie une demande asynchrone à une page Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="170d1-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="170d1-114">La page Web s’exécute une version modifiée de son cycle de vie normal pour traiter le rappel.</span><span class="sxs-lookup"><span data-stu-id="170d1-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="170d1-115">Utilisez le <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode pour obtenir une référence à une fonction cliente qui, lorsqu’elle est appelée, lance un rappel de client à un événement de serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="170d1-116">Pour plus d’informations, consultez [implémentant les rappels de Client sans Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="170d1-116">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170d1-117">Rappels de script ne fonctionnent pas dans les navigateurs plus anciens qui ne prennent pas en charge le modèle DOM (Document Object), et dont ils ont besoin que ECMAScript est activé sur le client.</span><span class="sxs-lookup"><span data-stu-id="170d1-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="170d1-118">Pour vérifier si le navigateur prend en charge les rappels, utilisez la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propriété, qui est accessible via la <xref:System.Web.HttpRequest.Browser%2A> propriété de l’ASP.NET intrinsèque <xref:System.Web.HttpContext.Request%2A> objet.</span><span class="sxs-lookup"><span data-stu-id="170d1-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="170d1-119">Utilisez le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> (méthode) et le <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> méthode pour définir un événement de publication (postback) du client.</span><span class="sxs-lookup"><span data-stu-id="170d1-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="170d1-120">Ces méthodes permettent aux fonctions de script client, lorsqu’elle est appelée, pour que le serveur de publication sur la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="170d1-121">Un événement de publication (postback) du client est différent à partir d’un rappel de client dans la mesure où la page Web effectue un cycle de vie normal pour traiter l’événement de publication (postback) du client.</span><span class="sxs-lookup"><span data-stu-id="170d1-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170d1-122">Si vous utilisez un <xref:System.Web.UI.WebControls.Button> contrôle et le <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propriété est définie sur `false`, vous pouvez ensuite utiliser le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> événement de publication de méthode pour retourner le client le <xref:System.Web.UI.WebControls.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="170d1-123">Le <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> propriété de la <xref:System.Web.UI.WebControls.Button> contrôle, <xref:System.Web.UI.WebControls.ImageButton> contrôle, et <xref:System.Web.UI.WebControls.LinkButton> contrôle peut être utilisé pour exécuter le script client.</span><span class="sxs-lookup"><span data-stu-id="170d1-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-124">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> méthode de la <xref:System.Web.UI.ClientScriptManager> classe.</span><span class="sxs-lookup"><span data-stu-id="170d1-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="170d1-125">Deux scripts clients sont définis dans la page : `PopupScript`, qui affiche un message d’alerte lorsque la page est chargée, et `ButtonClickScript`, qui définit un gestionnaire de client pour un bouton HTML `onClick` événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
    <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa"><span data-ttu-id="170d1-126">Script client dans les Pages Web ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-126">Client Script in ASP.NET Web Pages</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-127">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-127">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-128">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'un événement serveur par le client.</span><span class="sxs-lookup"><span data-stu-id="170d1-128">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-129">Serveur <see cref="T:System.Web.UI.Control" /> qui gère le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-129">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="170d1-130">Le contrôle doit implémenter l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> et fournir une méthode <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-130">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-131">Argument passé du script client au serveur</span><span class="sxs-lookup"><span data-stu-id="170d1-131">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="170d1-132">Méthode<see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> .</span><span class="sxs-lookup"><span data-stu-id="170d1-132"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="170d1-133">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</span><span class="sxs-lookup"><span data-stu-id="170d1-133">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="170d1-134">Le script client qui est évalué sur le client avant l'initialisation du rappel.</span><span class="sxs-lookup"><span data-stu-id="170d1-134">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="170d1-135">Le résultat du script est repassé au gestionnaire d'événements client.</span><span class="sxs-lookup"><span data-stu-id="170d1-135">The result of the script is passed back to the client event handler.</span></span></param>
        <summary><span data-ttu-id="170d1-136">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'un événement serveur par le client.</span><span class="sxs-lookup"><span data-stu-id="170d1-136">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span> <span data-ttu-id="170d1-137">La fonction cliente de cette méthode surchargée inclut un contrôle, un argument, un script client et un contexte spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-137">The client function for this overloaded method includes a specified control, argument, client script, and context.</span></span></summary>
        <returns><span data-ttu-id="170d1-138">Nom d'une fonction cliente qui appelle le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-138">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-139">Le <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> méthode effectue un rappel hors-bande au serveur qui est une version modifiée du cycle de vie normal d’une page.</span><span class="sxs-lookup"><span data-stu-id="170d1-139">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="170d1-140">Pour plus d’informations, consultez [implémentant les rappels de Client sans Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="170d1-140">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170d1-141">Lorsque le navigateur est Microsoft Internet Explorer (version 5.0 ou version ultérieure), le mécanisme de rappel de script est implémenté via l’objet Microsoft.XmlHttp COM et nécessite que le navigateur soit configuré pour exécuter des contrôles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="170d1-141">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="170d1-142">D’autres navigateurs, un XMLHttpRequest à l’aide local modèle DOM du navigateur (Document Object) est utilisé.</span><span class="sxs-lookup"><span data-stu-id="170d1-142">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="170d1-143">Pour vérifier si un navigateur prend en charge les rappels de client, utilisez le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="170d1-143">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="170d1-144">Pour vérifier si un navigateur prend en charge XML sur HTTP, utilisez le <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="170d1-144">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="170d1-145">Les deux propriétés sont accessibles via le <xref:System.Web.HttpRequest.Browser%2A> propriété de l’ASP.NET intrinsèque <xref:System.Web.HttpContext.Request%2A> objet.</span><span class="sxs-lookup"><span data-stu-id="170d1-145">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="170d1-146">Le <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> surcharge de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode effectue un rappel de façon synchrone à l’aide de XML sur HTTP.</span><span class="sxs-lookup"><span data-stu-id="170d1-146">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="170d1-147">Lors de l’envoi des données de façon synchrone dans un scénario de rappel, les rappels synchrones retournent immédiatement et ne bloquent pas le navigateur.</span><span class="sxs-lookup"><span data-stu-id="170d1-147">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="170d1-148">Aucun deux rappels synchrones ne peuvent exécuter simultanément dans le navigateur.</span><span class="sxs-lookup"><span data-stu-id="170d1-148">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="170d1-149">Si un deuxième rappel synchrone est déclenché quand un est actuellement en attente, le deuxième annule le premier et retourne uniquement le deuxième rappel.</span><span class="sxs-lookup"><span data-stu-id="170d1-149">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="170d1-150">Pour envoyer des données en mode asynchrone, utilisez une des surcharges qui acceptent le `useAsync` paramètre, qui est une valeur booléenne valeur contrôler ce comportement.</span><span class="sxs-lookup"><span data-stu-id="170d1-150">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="170d1-151">Dans le scénario asynchrone, vous pouvez avoir plusieurs rappels en attente ; Toutefois, l’ordre dans lequel elles retournent n’est pas garanti pour correspondre à l’ordre dans lequel ils ont été lancées.</span><span class="sxs-lookup"><span data-stu-id="170d1-151">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="170d1-152">En outre, cette surcharge de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode ne spécifie aucune fonction cliente pour gérer le cas d’une condition d’erreur généré par le <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-152">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="170d1-153">Pour spécifier un gestionnaire de rappel d’erreur client, utilisez une des surcharges qui acceptent le `clientErrorCallback` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-153">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="170d1-154">Le <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> méthode prend une chaîne facultative `argument` paramètre et retourne une chaîne.</span><span class="sxs-lookup"><span data-stu-id="170d1-154">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="170d1-155">Pour transmettre ou recevoir plusieurs valeurs, concaténer des valeurs dans l’entrée ou renvoyer de chaîne, respectivement.</span><span class="sxs-lookup"><span data-stu-id="170d1-155">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170d1-156">Évitez d’utiliser l’état d’affichage dans l’implémentation des propriétés de page ou un contrôle qui doivent être mis à jour pendant les opérations de rappel de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-156">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="170d1-157">Si les propriétés sont nécessaire pour surmonter les demandes de page, vous pouvez utiliser l’état de session.</span><span class="sxs-lookup"><span data-stu-id="170d1-157">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-158">L’exemple de code suivant montre comment utiliser deux surcharges de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode dans un scénario de rappel client qui incrémente des entiers.</span><span class="sxs-lookup"><span data-stu-id="170d1-158">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="170d1-159">Deux mécanismes de rappel sont affichées ; la différence entre eux est l’utilisation de la `context` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-159">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="170d1-160">Un `ReceiveServerData1` fonction de rappel de client est fournie à l’aide de le `context` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-160">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="170d1-161">En revanche, le `ReceiveServerData2` fonction de rappel de client est définie dans un `<script>` bloc sur la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-161">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="170d1-162">Un <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> méthode est le Gestionnaire de serveur qui incrémente la valeur qui lui est passée et le <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> méthode retourne la valeur incrémentée sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="170d1-162">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="170d1-163">Si le <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> méthode retourne une erreur, puis le `ProcessCallBackError` client fonction est appelée.</span><span class="sxs-lookup"><span data-stu-id="170d1-163">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-164"><see cref="T:System.Web.UI.Control" /> spécifié est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-164">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="170d1-165">Le <see cref="T:System.Web.UI.Control" /> spécifié n'implémente pas l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-165">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-166">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-166">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-167">Serveur <see cref="T:System.Web.UI.Control" /> qui gère le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-167">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="170d1-168">Le contrôle doit implémenter l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> et fournir une méthode <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-168">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-169">Argument passé du script client au serveur</span><span class="sxs-lookup"><span data-stu-id="170d1-169">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="170d1-170">Méthode<see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> .</span><span class="sxs-lookup"><span data-stu-id="170d1-170"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="170d1-171">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</span><span class="sxs-lookup"><span data-stu-id="170d1-171">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="170d1-172">Le script client qui est évalué sur le client avant l'initialisation du rappel.</span><span class="sxs-lookup"><span data-stu-id="170d1-172">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="170d1-173">Le résultat du script est repassé au gestionnaire d'événements client.</span><span class="sxs-lookup"><span data-stu-id="170d1-173">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="170d1-174"><see langword="true" /> pour exécuter le rappel de manière asynchrone ; <see langword="false" /> pour l'exécuter de manière synchrone.</span><span class="sxs-lookup"><span data-stu-id="170d1-174"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="170d1-175">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'événements serveur par le client.</span><span class="sxs-lookup"><span data-stu-id="170d1-175">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="170d1-176">La fonction cliente de cette méthode surchargée inclut un contrôle, un argument, un script client, un contexte et une valeur booléenne spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-176">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="170d1-177">Nom d'une fonction cliente qui appelle le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-177">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-178">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode requiert un `useAsync` paramètre, qui vous permet d’effectuer de façon asynchrone le rappel du client en définissant la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="170d1-178">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="170d1-179">Les versions de surcharge de cette méthode qui ne nécessitent pas la `useAsync` paramètre la valeur sur `false` par défaut.</span><span class="sxs-lookup"><span data-stu-id="170d1-179">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="170d1-180">Pour plus d’informations sur cette méthode, consultez la section Notes pour la surcharge <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-180">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-181"><see cref="T:System.Web.UI.Control" /> spécifié est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-181">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="170d1-182">Le <see cref="T:System.Web.UI.Control" /> spécifié n'implémente pas l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-182">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-183">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-183">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="170d1-184">Nom d'un <see cref="T:System.Web.UI.Control" /> serveur qui gère le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-184">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="170d1-185">Le contrôle doit implémenter l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> et fournir une méthode <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-185">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-186">Argument passé du script client au serveur</span><span class="sxs-lookup"><span data-stu-id="170d1-186">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="170d1-187">Méthode<see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> .</span><span class="sxs-lookup"><span data-stu-id="170d1-187"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="170d1-188">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</span><span class="sxs-lookup"><span data-stu-id="170d1-188">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="170d1-189">Le script client qui est évalué sur le client avant l'initialisation du rappel.</span><span class="sxs-lookup"><span data-stu-id="170d1-189">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="170d1-190">Le résultat du script est repassé au gestionnaire d'événements client.</span><span class="sxs-lookup"><span data-stu-id="170d1-190">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="170d1-191">Nom du gestionnaire d'événements client qui reçoit le résultat lorsqu'une erreur se produit au niveau du gestionnaire d'événements serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-191">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="170d1-192"><see langword="true" /> pour exécuter le rappel de manière asynchrone ; <see langword="false" /> pour l'exécuter de manière synchrone.</span><span class="sxs-lookup"><span data-stu-id="170d1-192"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="170d1-193">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'événements serveur par le client.</span><span class="sxs-lookup"><span data-stu-id="170d1-193">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="170d1-194">La fonction cliente de cette méthode surchargée inclut une cible, un argument, un script client, un contexte, un gestionnaire d'erreurs et une valeur booléenne spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-194">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="170d1-195">Nom d'une fonction cliente qui appelle le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-195">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-196">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode prend un `target` chaîne de paramètre au lieu d’un <xref:System.Web.UI.Control> paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-196">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="170d1-197">Utilisez cette surcharge lorsque vous souhaitez que le rappel pour revenir à autre chose qu’une chaîne contenant le <xref:System.Web.UI.Control.UniqueID%2A> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-197">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="170d1-198">En outre, cette surcharge de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode requiert un `useAsync` et un `clientErrorCallback` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-198">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="170d1-199">Le `useAsync` paramètre vous permet d’effectuer le rappel du client en mode asynchrone en définissant la valeur sur `true`.</span><span class="sxs-lookup"><span data-stu-id="170d1-199">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="170d1-200">Les versions de surcharge de cette méthode qui ne nécessitent pas la `useAsync` paramètre la valeur sur `false` par défaut.</span><span class="sxs-lookup"><span data-stu-id="170d1-200">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="170d1-201">Le `clientErrorCallback` paramètre vous permet de définir le nom de la fonction cliente qui est appelée si le Gestionnaire de serveur, le <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> méthode, retourne une erreur.</span><span class="sxs-lookup"><span data-stu-id="170d1-201">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="170d1-202">Les versions de surcharge de cette méthode qui ne nécessitent pas le `clientErrorCallback` paramètre la valeur sur null.</span><span class="sxs-lookup"><span data-stu-id="170d1-202">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="170d1-203">Pour plus d’informations sur cette méthode, consultez la section Notes pour la surcharge <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-203">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-204">L’exemple de code suivant montre comment utiliser deux surcharges de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode dans un scénario de rappel client qui incrémente des entiers.</span><span class="sxs-lookup"><span data-stu-id="170d1-204">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="170d1-205">Deux mécanismes de rappel sont affichées ; la différence entre eux est l’utilisation de la `context` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-205">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="170d1-206">Un `ReceiveServerData1` fonction de rappel de client est fournie à l’aide de le `context` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-206">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="170d1-207">En revanche, le `ReceiveServerData2` fonction de rappel de client est définie dans un `<script>` bloc sur la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-207">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="170d1-208">Un <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> méthode est le Gestionnaire de serveur qui incrémente la valeur qui lui est passée et le <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> méthode retourne la valeur incrémentée sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="170d1-208">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="170d1-209">Si le <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> méthode retourne une erreur, puis la fonction cliente `ProcessCallBackError` est appelée.</span><span class="sxs-lookup"><span data-stu-id="170d1-209">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-210">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-210">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-211">Serveur <see cref="T:System.Web.UI.Control" /> qui gère le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-211">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="170d1-212">Le contrôle doit implémenter l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> et fournir une méthode <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-212">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-213">Argument passé du script client à la méthode <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> du serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-213">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="170d1-214">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</span><span class="sxs-lookup"><span data-stu-id="170d1-214">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="170d1-215">Le script client qui est évalué sur le client avant l'initialisation du rappel.</span><span class="sxs-lookup"><span data-stu-id="170d1-215">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="170d1-216">Le résultat du script est repassé au gestionnaire d'événements client.</span><span class="sxs-lookup"><span data-stu-id="170d1-216">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="170d1-217">Nom du gestionnaire d'événements client qui reçoit le résultat lorsqu'une erreur se produit au niveau du gestionnaire d'événements serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-217">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="170d1-218"><see langword="true" /> pour exécuter le rappel de manière asynchrone ; <see langword="false" /> pour l'exécuter de manière synchrone.</span><span class="sxs-lookup"><span data-stu-id="170d1-218"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="170d1-219">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'événements serveur par le client.</span><span class="sxs-lookup"><span data-stu-id="170d1-219">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="170d1-220">La fonction cliente de cette méthode surchargée inclut un contrôle, un argument, un script client, un contexte, un gestionnaire d'erreurs et une valeur booléenne spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-220">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="170d1-221">Nom d'une fonction cliente qui appelle le rappel client.</span><span class="sxs-lookup"><span data-stu-id="170d1-221">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-222">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> méthode requiert un `useAsync` et un `clientErrorCallback` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-222">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="170d1-223">Le `useAsync` paramètre vous permet d’effectuer le rappel du client en mode asynchrone en définissant la valeur sur `true`.</span><span class="sxs-lookup"><span data-stu-id="170d1-223">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="170d1-224">Les versions de surcharge de cette méthode qui ne nécessitent pas la `useAsync` paramètre la valeur sur `false` par défaut.</span><span class="sxs-lookup"><span data-stu-id="170d1-224">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="170d1-225">Le `clientErrorCallback` paramètre vous permet de définir le nom de la fonction cliente qui est appelée si le Gestionnaire de serveur (le <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (méthode)) retourne une erreur.</span><span class="sxs-lookup"><span data-stu-id="170d1-225">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="170d1-226">Les versions de surcharge de cette méthode qui ne nécessitent pas le `clientErrorCallback` paramètre la valeur sur null.</span><span class="sxs-lookup"><span data-stu-id="170d1-226">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="170d1-227">Pour plus d’informations sur cette méthode, consultez la section Notes pour la surcharge <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-227">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-228"><see cref="T:System.Web.UI.Control" /> spécifié est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-228">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="170d1-229">Le <see cref="T:System.Web.UI.Control" /> spécifié n'implémente pas l'interface <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-229">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-230">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-230">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-231">Obtient une référence, avec <see langword="javascript:" /> ajouté en début, pouvant être utilisée dans un événement client pour effectuer une publication sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-231">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-232">Contrôle serveur pour traiter la publication.</span><span class="sxs-lookup"><span data-stu-id="170d1-232">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-233">Paramètre passé au contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-233">The parameter passed to the server control.</span></span></param>
        <summary><span data-ttu-id="170d1-234">Obtient une référence, avec <see langword="javascript:" /> ajouté en début, pouvant être utilisée dans un événement client pour republier sur le serveur pour le contrôle spécifié et avec les arguments d'événement spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-234">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span></span></summary>
        <returns><span data-ttu-id="170d1-235">Chaîne représentant un appel JavaScript à la fonction de publication (postback) qui inclut l'ID du contrôle cible et les arguments d'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-235">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-236">À l’aide de la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode requiert le contrôle qui gère la publication (postback) pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="170d1-236">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="170d1-237">Pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface pour un <xref:System.Web.UI.Page>, utilisez la directive.</span><span class="sxs-lookup"><span data-stu-id="170d1-237">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-238">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-238">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="170d1-239">Le contrôle personnalisé, `MyControl`, implémente la <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="170d1-239">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="170d1-240">Un clic sur l’élément d’ancrage HTML sur la page, le <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> méthode du contrôle personnalisé est appelée.</span><span class="sxs-lookup"><span data-stu-id="170d1-240">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="170d1-241">L’exemple de code suivant a les mêmes fonctionnalités que le précédent, mais au lieu d’un contrôle personnalisé, le <xref:System.Web.UI.Page> la classe implémente le <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="170d1-241">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-242">Contrôle serveur pour traiter la publication.</span><span class="sxs-lookup"><span data-stu-id="170d1-242">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-243">Paramètre passé au contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-243">The parameter passed to the server control.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="170d1-244"><see langword="true" /> pour inscrire l'événement de publication en vue de la validation ; <see langword="false" /> pour ne pas inscrire l'événement de publication en vue de la validation.</span><span class="sxs-lookup"><span data-stu-id="170d1-244"><see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span></span></param>
        <summary><span data-ttu-id="170d1-245">Obtient une référence, avec <see langword="javascript:" /> ajouté en début, pouvant être utilisée dans un événement client pour republier sur le serveur pour le contrôle spécifié avec les arguments d'événement spécifiés et une indication booléenne précisant s'il faut inscrire la publication pour la validation d'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-245">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span></span></summary>
        <returns><span data-ttu-id="170d1-246">Chaîne représentant un appel JavaScript à la fonction de publication (postback) qui inclut l'ID du contrôle cible et les arguments d'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-246">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-247">À l’aide de la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode requiert le contrôle qui gère la publication (postback) pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="170d1-247">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="170d1-248">Pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface pour un <xref:System.Web.UI.Page>, utilisez la directive.</span><span class="sxs-lookup"><span data-stu-id="170d1-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-249">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-249">Returns a string that can be used in a client event to cause postback to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="170d1-250"><see cref="T:System.Web.UI.PostBackOptions" /> qui définit une publication.</span><span class="sxs-lookup"><span data-stu-id="170d1-250">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <summary><span data-ttu-id="170d1-251">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-251">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="170d1-252">La chaîne de référence est définie par l'instance de <see cref="T:System.Web.UI.PostBackOptions" /> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="170d1-252">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span></span></summary>
        <returns><span data-ttu-id="170d1-253">Chaîne qui, traitée comme un script sur le client, initialise la publication cliente.</span><span class="sxs-lookup"><span data-stu-id="170d1-253">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-254">Pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface pour un <xref:System.Web.UI.Page>, utilisez la directive.</span><span class="sxs-lookup"><span data-stu-id="170d1-254">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="170d1-255">Le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode peut être utilisée avec le <xref:System.Web.UI.WebControls.Button> contrôler quand le <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="170d1-255">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="170d1-256">Dans ce scénario, le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode retourne la publication cliente événement pour le <xref:System.Web.UI.WebControls.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-256">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-257">Le paramètre <see cref="T:System.Web.UI.PostBackOptions" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-257">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-258">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-258">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-259"><see cref="T:System.Web.UI.Control" /> serveur qui traite la publication sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-259">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-260">Chaîne d'arguments facultative à passer au contrôle qui traite la publication.</span><span class="sxs-lookup"><span data-stu-id="170d1-260">A string of optional arguments to pass to the control that processes the postback.</span></span></param>
        <summary><span data-ttu-id="170d1-261">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-261">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="170d1-262">La chaîne de référence est définie par le contrôle spécifié qui gère la publication (postback) et un argument de chaîne d'autres informations d'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-262">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span></summary>
        <returns><span data-ttu-id="170d1-263">Chaîne qui, traitée comme un script sur le client, initialise la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="170d1-263">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-264">Pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface pour un <xref:System.Web.UI.Page>, utilisez la directive.</span><span class="sxs-lookup"><span data-stu-id="170d1-264">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="170d1-265">Le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode peut être utilisée avec le <xref:System.Web.UI.WebControls.Button> contrôler quand le <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="170d1-265">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="170d1-266">Dans ce scénario, le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode retourne la publication cliente événement pour le <xref:System.Web.UI.WebControls.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-266">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-267">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-267">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="170d1-268">Le contrôle personnalisé, `MyControl`, implémente la <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="170d1-268">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="170d1-269">Lorsque l’utilisateur clique sur le bouton sur la page, le <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> méthode du contrôle personnalisé est appelée.</span><span class="sxs-lookup"><span data-stu-id="170d1-269">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="170d1-270">L’exemple de code suivant a les mêmes fonctionnalités que le précédent, mais au lieu d’un contrôle personnalisé, le <xref:System.Web.UI.Page> la classe implémente le <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="170d1-270">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-271">Le <see cref="T:System.Web.UI.Control" /> spécifié a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-271">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-272">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-272">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="170d1-273"><see cref="T:System.Web.UI.PostBackOptions" /> qui définit une publication.</span><span class="sxs-lookup"><span data-stu-id="170d1-273">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="170d1-274"><see langword="true" /> pour inscrire la référence d'événement en vue de la validation ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-274"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="170d1-275">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-275">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="170d1-276">La chaîne de référence est définie par l'objet <see cref="T:System.Web.UI.PostBackOptions" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="170d1-276">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span></span> <span data-ttu-id="170d1-277">Inscrit en option la référence d'événement pour la validation.</span><span class="sxs-lookup"><span data-stu-id="170d1-277">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="170d1-278">Chaîne qui, traitée comme un script sur le client, initialise la publication cliente.</span><span class="sxs-lookup"><span data-stu-id="170d1-278">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-279">Pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface pour un <xref:System.Web.UI.Page> d’objet, utilisez la directive.</span><span class="sxs-lookup"><span data-stu-id="170d1-279">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="170d1-280">Le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode peut être utilisée avec le <xref:System.Web.UI.WebControls.Button> contrôler quand le <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="170d1-280">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="170d1-281">Dans ce scénario, le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode retourne la publication cliente événement pour le <xref:System.Web.UI.WebControls.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-281">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="170d1-282">Si `registerForEventValidation` est `true`, le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> les appels de méthode le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> méthode pour inscrire la référence d’événement pour la validation avec un ID de contrôle unique qui représente le contrôle client qui génère l’événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-282">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-283"><see cref="T:System.Web.UI.PostBackOptions" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-283">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-284">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-284">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="170d1-285"><see cref="T:System.Web.UI.Control" /> serveur qui traite la publication sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-285">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-286">Chaîne d'arguments facultatifs à passer à <paramref name="control" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-286">A string of optional arguments to pass to <paramref name="control" />.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="170d1-287"><see langword="true" /> pour inscrire la référence d'événement en vue de la validation ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-287"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="170d1-288">Retourne une chaîne à utiliser dans un événement client pour provoquer une publication sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="170d1-288">Returns a string to use in a client event to cause postback to the server.</span></span> <span data-ttu-id="170d1-289">La chaîne de référence est définie par le contrôle spécifié qui gère la publication (postback) et un argument de chaîne d'autres informations d'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-289">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span> <span data-ttu-id="170d1-290">Inscrit en option la référence d'événement pour la validation.</span><span class="sxs-lookup"><span data-stu-id="170d1-290">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="170d1-291">Chaîne qui, traitée comme un script sur le client, initialise la publication (postback).</span><span class="sxs-lookup"><span data-stu-id="170d1-291">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-292">Pour implémenter le <xref:System.Web.UI.IPostBackEventHandler> interface pour un <xref:System.Web.UI.Page>, utilisez la directive.</span><span class="sxs-lookup"><span data-stu-id="170d1-292">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="170d1-293">Le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode peut être utilisée avec le <xref:System.Web.UI.WebControls.Button> contrôler quand le <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="170d1-293">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="170d1-294">Dans ce scénario, le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> méthode retourne la publication cliente événement pour le <xref:System.Web.UI.WebControls.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-294">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="170d1-295">Si `registerForEventValidation` a la valeur true, le <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> les appels de méthode le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> méthode pour inscrire la référence d’événement pour la validation avec un ID de contrôle unique qui représente le contrôle client qui génère l’événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-295">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-296">Le <see cref="T:System.Web.UI.Control" /> spécifié a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-296">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="170d1-297">Rappels de client sans publications (postback) dans les Pages ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-297">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-298">Le type de la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-298">The type of the resource.</span></span></param>
        <param name="resourceName"><span data-ttu-id="170d1-299">Nom qualifié complet de la ressource dans l'assembly.</span><span class="sxs-lookup"><span data-stu-id="170d1-299">The fully qualified name of the resource in the assembly.</span></span></param>
        <summary><span data-ttu-id="170d1-300">Obtient une référence de type URL à une ressource dans un assembly.</span><span class="sxs-lookup"><span data-stu-id="170d1-300">Gets a URL reference to a resource in an assembly.</span></span></summary>
        <returns><span data-ttu-id="170d1-301">Référence de type URL à la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-301">The URL reference to the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-302">Le <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> méthode retourne une référence URL à une ressource incorporée dans un assembly.</span><span class="sxs-lookup"><span data-stu-id="170d1-302">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="170d1-303">La référence retournée n’est pas encodé URL.</span><span class="sxs-lookup"><span data-stu-id="170d1-303">The returned reference is not URL encoded.</span></span> <span data-ttu-id="170d1-304">Ressources peuvent être n’importe quel fichier statique, des images ou des fichiers de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-304">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="170d1-305">Vous spécifiez le type en fonction de l’objet qui accédera à la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-305">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="170d1-306">Une ressource Web inscrite avec la page est identifiée par son type et son nom.</span><span class="sxs-lookup"><span data-stu-id="170d1-306">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="170d1-307">Qu’une seule ressource avec une paire de nom et un type donné peut être enregistrée avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-307">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="170d1-308">Tente d’inscrire une ressource qui est déjà inscrit ne crée pas un doublon de la ressource inscrite.</span><span class="sxs-lookup"><span data-stu-id="170d1-308">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="170d1-309">Le <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> méthode est utilisée conjointement avec la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> méthode pour accéder aux ressources incorporés dans des assemblys.</span><span class="sxs-lookup"><span data-stu-id="170d1-309">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="170d1-310">Pour plus d’informations sur l’utilisation des ressources dans les applications, consultez [ASP.NET Web Page Resources Overview](https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="170d1-310">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-311">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-311">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="170d1-312">Le *type* dans cet exemple est affectée au type de classe dans l’assembly contenant la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-312">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="170d1-313">Le `resourceName` paramètre est spécifié avec le chemin d’accès complet à la ressource, qui inclut l’espace de noms par défaut.</span><span class="sxs-lookup"><span data-stu-id="170d1-313">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="170d1-314">L’exemple de code suivant montre comment appliquer par programmation le <xref:System.Web.UI.WebResourceAttribute> attribut de métadonnées pour marquer l’assembly pour les ressources qui seront traitées.</span><span class="sxs-lookup"><span data-stu-id="170d1-314">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="170d1-315">Compilez la classe suivante dans une bibliothèque de classes avec un espace de noms par défaut la valeur `Samples.AspNet.CS.Controls` ou `Samples.AspNet.VB.Controls`, selon le langage que vous utilisez.</span><span class="sxs-lookup"><span data-stu-id="170d1-315">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="170d1-316">Cet exemple nécessite un fichier JavaScript nommé `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="170d1-316">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="170d1-317">Le fichier .js est une ressource incorporée dans l’assembly qui contient le `ClientScriptResourceLabel` objet.</span><span class="sxs-lookup"><span data-stu-id="170d1-317">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="170d1-318">Si vous utilisez Visual Studio, dans la fenêtre Propriétés du projet de bibliothèque de classes, définissez **Action de génération** à **ressource incorporée** lorsque le fichier de script est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="170d1-318">If you are using Visual Studio, in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="170d1-319">Si vous compilez la bibliothèque en ligne de commande, utilisez le [/resource](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md) commutateur pour intégrer la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-319">If you are compiling the library at the command line, use the [/resource](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md) switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-320">Le type de la ressource Web est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-320">The web resource type is <see langword="null" />.</span></span>

<span data-ttu-id="170d1-321">ou</span><span class="sxs-lookup"><span data-stu-id="170d1-321">-or-</span></span>

<span data-ttu-id="170d1-322">Le nom de la ressource Web est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-322">The web resource name is <see langword="null" />.</span></span>  
  
<span data-ttu-id="170d1-323">ou</span><span class="sxs-lookup"><span data-stu-id="170d1-323">-or-</span></span> 
<span data-ttu-id="170d1-324">La longueur du nom de la ressource Web est de zéro.</span><span class="sxs-lookup"><span data-stu-id="170d1-324">The web resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <related type="Article" href="https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd"><span data-ttu-id="170d1-325">Vue d’ensemble des ressources de Page Web ASP.NET</span><span class="sxs-lookup"><span data-stu-id="170d1-325">ASP.NET Web Page Resources Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5212666e-98ab-47e4-a497-b5545ab15c7f"><span data-ttu-id="170d1-326">/Resource (incorporer un fichier de ressources dans le fichier de sortie) (Options du compilateur C#)</span><span class="sxs-lookup"><span data-stu-id="170d1-326">/resource (Embed Resource File to Output) (C# Compiler Options)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/eee2f227-91f2-4f2b-a9d6-1c51c5320858"><span data-ttu-id="170d1-327">/resource (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="170d1-327">/resource (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-328">Détermine si le bloc de script client est inscrit avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-328">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="170d1-329">Clé du bloc de script client à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-329">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-330">Détermine si le bloc de script client est inscrit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide de la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="170d1-330">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="170d1-331"><see langword="true" /> si le bloc de script client est enregistré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-331"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-332">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> méthode afin d’éviter l’enregistrement des scripts en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-332">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="170d1-333">Cela est particulièrement important si le script nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-333">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-334">Un script client est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-334">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-335">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-335">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="170d1-336">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> méthode appelle la surcharge qui accepte à la fois un `key` et un `type` paramètre avec le type défini comme un <xref:System.Web.UI.Page> objet</span><span class="sxs-lookup"><span data-stu-id="170d1-336">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-337">Type du bloc de script client à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-337">The type of the client script block to search for.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-338">Clé du bloc de script client à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-338">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-339">Détermine si le bloc de script client est inscrit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'une clé et d'un type.</span><span class="sxs-lookup"><span data-stu-id="170d1-339">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns><span data-ttu-id="170d1-340"><see langword="true" /> si le bloc de script client est enregistré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-340"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-341">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> méthode afin d’éviter l’enregistrement des scripts en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-341">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="170d1-342">Cela est particulièrement important si le script nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-342">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-343">Un script client est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-343">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-344">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-344">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-345">Vous spécifiez le type en fonction de l’objet qui accédera à la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-345">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="170d1-346">Par exemple, lorsque vous utilisez un `Page` instance pour accéder à la ressource, vous spécifiez le `Page` type.</span><span class="sxs-lookup"><span data-stu-id="170d1-346">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-347">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-347">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="170d1-348">Notez que, si la logique à vérifier pour le bloc de script client existants ont été supprimée, il ne serait pas deux scripts clients en double dans le code source HTML de la page rendue, car la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> méthode vérifie les doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-348">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="170d1-349">L’avantage de la vérification est de réduire les calculs inutiles.</span><span class="sxs-lookup"><span data-stu-id="170d1-349">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-350">Le type du script client est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-350">The client script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-351">Détermine si le script client Include est inscrit avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-351">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="170d1-352">Clé du script client Include à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-352">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-353">Détermine si le script client Include est inscrit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide de la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="170d1-353">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="170d1-354"><see langword="true" /> si le script client Include est enregistré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-354"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-355">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> méthode afin d’éviter l’enregistrement des scripts en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-355">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="170d1-356">Cela est particulièrement important si le script nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-356">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-357">Un script client include est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-357">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-358">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-358">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="170d1-359">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> méthode appelle la surcharge qui accepte à la fois un `key` et un `type` paramètre avec le type défini comme un <xref:System.Web.UI.Page> objet.</span><span class="sxs-lookup"><span data-stu-id="170d1-359">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-360">Type du script client Include à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-360">The type of the client script include to search for.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-361">Clé du script client Include à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-361">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-362">Détermine si le script client Include est inscrit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'une clé et d'un type.</span><span class="sxs-lookup"><span data-stu-id="170d1-362">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns><span data-ttu-id="170d1-363"><see langword="true" /> si le script client Include est enregistré ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-363"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-364">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> inclut de la méthode pour éviter d’inscrire le script client en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="170d1-365">Cela est particulièrement important si le script nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-365">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-366">Un script client include est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-366">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-367">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-367">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-368">Vous spécifiez le type en fonction de l’objet qui accédera à la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-368">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="170d1-369">Par exemple, lorsque vous utilisez une instance de Page pour accéder à la ressource, vous spécifiez le `Page` type.</span><span class="sxs-lookup"><span data-stu-id="170d1-369">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-370">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-370">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="170d1-371">Notez que, si la logique à vérifier pour le script client include existant ont été supprimée, il ne serait pas deux scripts clients en double dans le code source HTML de la page rendue, car la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> méthode vérifie les doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-371">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="170d1-372">L’avantage de la vérification est de réduire les calculs inutiles.</span><span class="sxs-lookup"><span data-stu-id="170d1-372">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="170d1-373">Cet exemple nécessite un fichier JavaScript nommé `Script_include.js`, avec le contenu suivant :</span><span class="sxs-lookup"><span data-stu-id="170d1-373">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-374">Le type du script client Include est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-374">The client script include type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-375">Détermine si l'instruction OnSubmit est inscrite avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-375">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="170d1-376">Clé de l'instruction OnSubmit à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-376">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-377">Détermine si l'instruction OnSubmit est inscrite avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide de la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="170d1-377">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="170d1-378"><see langword="true" /> si l'instruction OnSubmit est inscrite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-378"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-379">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> méthode pour éviter d’inscrire des instructions OnSubmit en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-379">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="170d1-380">Cela est particulièrement important si l’instruction nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-380">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-381">Une instruction est identifiée par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-381">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-382">Instructions avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-382">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="170d1-383">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> méthode appelle la surcharge qui accepte à la fois un `key` et un `type` paramètre avec le type défini comme un <xref:System.Web.UI.Page> objet</span><span class="sxs-lookup"><span data-stu-id="170d1-383">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-384">Type de l'instruction OnSubmit à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-384">The type of the OnSubmit statement to search for.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-385">Clé de l'instruction OnSubmit à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-385">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-386">Détermine si l'instruction OnSubmit est inscrite avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide de la clé et du type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-386">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns><span data-ttu-id="170d1-387"><see langword="true" /> si l'instruction OnSubmit est inscrite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-387"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-388">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> méthode pour éviter d’inscrire des instructions en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-388">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="170d1-389">Cela est particulièrement important si l’instruction nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-389">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-390">Une instruction est identifiée par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-390">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-391">Instructions avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-391">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-392">Vous spécifiez le type en fonction de l’objet qui accédera à la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-392">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="170d1-393">Par exemple, lorsque vous utilisez un `Page` instance pour accéder à la ressource, vous spécifiez le `Page` type.</span><span class="sxs-lookup"><span data-stu-id="170d1-393">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-394">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-394">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="170d1-395">Un script nommé `OnSubmitScript` est inscrit avec le <xref:System.Web.UI.Page> afin que lorsque le formulaire de la page est soumis le script est appelé.</span><span class="sxs-lookup"><span data-stu-id="170d1-395">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-396">Le type de l'instruction OnSubmit est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-396">The OnSubmit statement type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-397">Détermine si le script de démarrage est inscrit avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-397">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="170d1-398">Clé du script de démarrage à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-398">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-399">Détermine si le script de démarrage est inscrit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide de la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="170d1-399">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="170d1-400"><see langword="true" /> si le script de démarrage est inscrit ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-400"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-401">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> méthode afin d’éviter l’enregistrement des scripts en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-401">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="170d1-402">Cela est particulièrement important si le script nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-402">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-403">Un script de démarrage est identifié par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-403">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-404">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-404">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="170d1-405">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> méthode appelle la surcharge qui accepte les deux une chaîne `key` et un `type` paramètre avec le type défini comme un <xref:System.Web.UI.Page> objet</span><span class="sxs-lookup"><span data-stu-id="170d1-405">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-406">Type du script de démarrage à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-406">The type of the startup script to search for.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-407">Clé du script de démarrage à rechercher.</span><span class="sxs-lookup"><span data-stu-id="170d1-407">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="170d1-408">Détermine si le script de démarrage est inscrit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide de la clé et du type spécifiés.</span><span class="sxs-lookup"><span data-stu-id="170d1-408">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns><span data-ttu-id="170d1-409"><see langword="true" /> si le script de démarrage est inscrit ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-409"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-410">Appelez cette méthode avant d’appeler le <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> méthode afin d’éviter l’enregistrement des scripts en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-410">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="170d1-411">Cela est particulièrement important si le script nécessite une grande quantité de ressources serveur à créer.</span><span class="sxs-lookup"><span data-stu-id="170d1-411">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="170d1-412">Un script de démarrage du client est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-412">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-413">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-413">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-414">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-414">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="170d1-415">Notez que, si la logique à vérifier pour le bloc de script de démarrage existantes ont été supprimée, il ne serait pas deux scripts de démarrage en double dans le code source HTML de la page rendue, car la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> méthode vérifie les doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-415">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="170d1-416">L’avantage de la vérification est de réduire les calculs inutiles.</span><span class="sxs-lookup"><span data-stu-id="170d1-416">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-417">Le type du script de démarrage est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-417">The startup script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName"><span data-ttu-id="170d1-418">Nom de tableau à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-418">The array name to register.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="170d1-419">Valeur(s) de tableau à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-419">The array value or values to register.</span></span></param>
        <summary><span data-ttu-id="170d1-420">Inscrit une déclaration de tableau JavaScript avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un nom de tableau et d'une valeur de tableau.</span><span class="sxs-lookup"><span data-stu-id="170d1-420">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-421">Le <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> vérifie l’existence d’un tableau inscrit avec le même nom que le nom spécifié dans le `arrayName` paramètre et, dans l’affirmative, ajoute les valeurs spécifiées dans le `arrayValue` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-421">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="170d1-422">Étant donné que le mécanisme de stockage sous-jacent est basé sur un <xref:System.Collections.ArrayList>, les doublons sont autorisés.</span><span class="sxs-lookup"><span data-stu-id="170d1-422">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="170d1-423">Si un tableau inscrit avec le même nom que le `arrayName` paramètre n’existe pas, il est créé et les valeurs dans le `arrayValue` paramètre ajouté à ce dernier.</span><span class="sxs-lookup"><span data-stu-id="170d1-423">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="170d1-424">Si vous souhaitez que les littéraux de chaîne dans le tableau JavaScript résultant, inclure des guillemets simples (') ou des guillemets doubles (\\») dans le `arrayValue` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-424">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="170d1-425">La valeur de la `arrayValue` paramètre doit être un seul élément.</span><span class="sxs-lookup"><span data-stu-id="170d1-425">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="170d1-426">Si plusieurs valeurs doit être ajouté au tableau, effectuer plusieurs appels à l’aide de la <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-426">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-427">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> et <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="170d1-427">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="170d1-428">L’exemple inscrit un tableau et une valeur masquée et définit le `OnClick` événement d’un `<input>` bouton permettant de calculer la somme des deux valeurs du tableau et la valeur masquée.</span><span class="sxs-lookup"><span data-stu-id="170d1-428">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-429"><paramref name="arrayName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-429"><paramref name="arrayName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-430">Inscrit le script client avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-431">Type du script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-431">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-432">Clé du script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-432">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="170d1-433">Littéral du script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-433">The client script literal to register.</span></span></param>
        <summary><span data-ttu-id="170d1-434">Inscrit le script client avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type, d'une clé et d'un littéral de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-435">Un script client est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-436">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-437">Qu’un seul script avec un type donné et une paire de clés peut être inscrit avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="170d1-438">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</span><span class="sxs-lookup"><span data-stu-id="170d1-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="170d1-439">Appelez le <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> méthode pour déterminer si un script client avec une paire de clé et le type donné est déjà inscrit et d’éviter toute tentative d’ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="170d1-440">Dans cette surcharge de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (méthode), vous devez vous assurer que le script fourni dans le `script` paramètre est encapsulé dans un `<script>` bloc d’élément.</span><span class="sxs-lookup"><span data-stu-id="170d1-440">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="170d1-441">Le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> méthode ajoute un bloc de script en haut de la page rendue.</span><span class="sxs-lookup"><span data-stu-id="170d1-441">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="170d1-442">Les blocs de script ne sont pas garanti que la sortie dans l’ordre, qu'ils sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="170d1-442">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="170d1-443">Si l’ordre des blocs de script est important, utilisez un <xref:System.Text.StringBuilder> pour rassembler les scripts dans une chaîne unique de l’objet et ensuite tous les enregistrer dans un bloc de script client unique.</span><span class="sxs-lookup"><span data-stu-id="170d1-443">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-444">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-444">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-445">Type du script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-445">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-446">Clé du script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-446">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="170d1-447">Littéral du script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-447">The client script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="170d1-448">Valeur Boolean qui indique s'il faut ajouter des balises de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-448">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="170d1-449">Inscrit le script client avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type, d'une clé, d'un littéral de script et d'une valeur Boolean indiquant s'il faut ajouter des balises de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-449">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-450">Un script client est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-450">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-451">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-451">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-452">Qu’un seul script avec un type donné et une paire de clés peut être inscrit avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-452">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="170d1-453">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</span><span class="sxs-lookup"><span data-stu-id="170d1-453">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="170d1-454">Appelez le <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> méthode pour déterminer si un script client avec une paire de clé et le type donné est déjà inscrit.</span><span class="sxs-lookup"><span data-stu-id="170d1-454">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="170d1-455">Cela vous permet d’éviter toute tentative d’ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-455">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="170d1-456">Dans cette surcharge de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (méthode), vous pouvez indiquer si le script fourni dans le `script` paramètre est encapsulé avec un `<script>` bloc d’élément à l’aide de le `addScriptTags` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-456">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="170d1-457">Paramètre `addScriptTags` à `true` indique que les balises de script sont ajoutés automatiquement.</span><span class="sxs-lookup"><span data-stu-id="170d1-457">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="170d1-458">Le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> méthode ajoute un bloc de script en haut de la page rendue.</span><span class="sxs-lookup"><span data-stu-id="170d1-458">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="170d1-459">Les blocs de script ne sont pas garanti que la sortie dans l’ordre, qu'ils sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="170d1-459">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="170d1-460">Si l’ordre des blocs de script est important, utilisez un <xref:System.Text.StringBuilder> pour rassembler les scripts dans une chaîne unique de l’objet et ensuite tous les enregistrer dans un bloc de script client unique.</span><span class="sxs-lookup"><span data-stu-id="170d1-460">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-461">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-461">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="170d1-462">Notez que le `addScriptTags` paramètre est défini sur `true` le début et la fermeture des balises de script sont donc pas inclus dans le `script` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-462">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-463">Le type du bloc de script client est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-463">The client script block type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-464">Inscrit le script client Include avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-464">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="170d1-465">Clé du script client Include à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-465">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="170d1-466">URL du script client Include à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-466">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="170d1-467">Enregistre le script client avec l'objet <see cref="T:System.Web.UI.Page" />, à l'aide d'une clé et d'une URL, qui active le script à appeler à partir du client.</span><span class="sxs-lookup"><span data-stu-id="170d1-467">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-468">Un script client include est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-468">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-469">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-469">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-470">Qu’un seul script avec un type donné et une paire de clés peut être inscrit avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-470">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="170d1-471">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</span><span class="sxs-lookup"><span data-stu-id="170d1-471">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="170d1-472">Appelez le <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> méthode pour déterminer si un script client include avec une clé donnée et paire de type est déjà inscrit et éviter toute tentative d’ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-472">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170d1-473">Pour résoudre l’URL de client, utilisez le <xref:System.Web.UI.Control.ResolveClientUrl%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-473">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="170d1-474">Cette méthode utilise le contexte de l’URL sur laquelle elle est appelée pour résoudre le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="170d1-474">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="170d1-475">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> méthode appelle la surcharge qui accepte un `key`, un `URL`et un `type` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-475">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="170d1-476">La méthode ajoute un bloc de script en haut de la page rendue.</span><span class="sxs-lookup"><span data-stu-id="170d1-476">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-477">Pour plus d’informations, notamment la syntaxe, l’utilisation et un exemple, consultez <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="170d1-477">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-478">Type du script client Include à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-478">The type of the client script include to register.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-479">Clé du script client Include à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-479">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="170d1-480">URL du script client Include à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-480">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="170d1-481">Inscrit le script client Include avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type, d'une clé et d'une URL.</span><span class="sxs-lookup"><span data-stu-id="170d1-481">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-482">Cette surcharge de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> méthode prend *clé* et *url* paramètres pour identifier le script, ainsi qu’un `type` inclure de paramètre pour spécifier l’identification du script client.</span><span class="sxs-lookup"><span data-stu-id="170d1-482">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="170d1-483">Vous spécifiez le type en fonction de l’objet qui accédera à la ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-483">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="170d1-484">Par exemple, lorsque vous utilisez un `Page` instance pour accéder à la ressource, vous spécifiez le `Page` type.</span><span class="sxs-lookup"><span data-stu-id="170d1-484">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="170d1-485">Pour résoudre l’URL de client, utilisez le <xref:System.Web.UI.Control.ResolveClientUrl%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-485">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="170d1-486">Cette méthode utilise le contexte de l’URL sur laquelle elle est appelée pour résoudre le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="170d1-486">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="170d1-487">Cette méthode ajoute un bloc de script en haut de la page rendue.</span><span class="sxs-lookup"><span data-stu-id="170d1-487">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-488">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-488">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="170d1-489">Notez que si la logique à vérifier pour le script client include existant ont été supprimée, il est toujours pas les scripts clients en double dans la page rendue, car la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> méthode vérifie les doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-489">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="170d1-490">L’avantage de la vérification est de réduire les calculs inutiles.</span><span class="sxs-lookup"><span data-stu-id="170d1-490">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="170d1-491">Cet exemple nécessite un fichier JavaScript nommé Script_include.js avec le contenu suivant :</span><span class="sxs-lookup"><span data-stu-id="170d1-491">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-492">Le type du script client Include est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-492">The client script include type is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="170d1-493">L'URL est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-493">The URL is <see langword="null" />.</span></span>  
  
<span data-ttu-id="170d1-494">- ou -</span><span class="sxs-lookup"><span data-stu-id="170d1-494">-or-</span></span> 
<span data-ttu-id="170d1-495">L'URL est vide.</span><span class="sxs-lookup"><span data-stu-id="170d1-495">The URL is empty.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-496">Type de la ressource de script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-496">The type of the client script resource to register.</span></span></param>
        <param name="resourceName"><span data-ttu-id="170d1-497">Nom de la ressource de script client à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-497">The name of the client script resource to register.</span></span></param>
        <summary><span data-ttu-id="170d1-498">Inscrit la ressource de script client avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type et d'un nom de ressource.</span><span class="sxs-lookup"><span data-stu-id="170d1-498">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-499">Le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> méthode est utilisée lorsque l’accès à des ressources compilées en provenant d’assemblys par le gestionnaire HTTP WebResource.axd.</span><span class="sxs-lookup"><span data-stu-id="170d1-499">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="170d1-500">Le <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> méthode inscrit le script avec le <xref:System.Web.UI.Page> de l’objet et empêche les scripts en double.</span><span class="sxs-lookup"><span data-stu-id="170d1-500">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="170d1-501">Cette méthode encapsule le contenu de l’URL de ressource avec un `<script>` bloc d’élément.</span><span class="sxs-lookup"><span data-stu-id="170d1-501">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-502">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-502">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="170d1-503">L’exemple de code suivant montre comment appliquer par programmation le <xref:System.Web.UI.WebResourceAttribute> attribut de métadonnées pour marquer l’assembly pour les ressources qui seront traitées.</span><span class="sxs-lookup"><span data-stu-id="170d1-503">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="170d1-504">Cet exemple nécessite un fichier JavaScript nommé `Script_include.js`, avec le contenu suivant :</span><span class="sxs-lookup"><span data-stu-id="170d1-504">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="170d1-505">Compilez le `Script_include.js` fichier en tant que ressource dans le `Samples.AspNet.CS.Controls` assembly qui contient le `ClientScriptResourceLabel` classe.</span><span class="sxs-lookup"><span data-stu-id="170d1-505">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-506">Le type de la ressource cliente est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-506">The client resource type is <see langword="null" />.</span></span>

<span data-ttu-id="170d1-507">ou</span><span class="sxs-lookup"><span data-stu-id="170d1-507">-or-</span></span>

<span data-ttu-id="170d1-508">Le nom de la ressource cliente est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-508">The client resource name is <see langword="null" />.</span></span>  
  
<span data-ttu-id="170d1-509">- ou -</span><span class="sxs-lookup"><span data-stu-id="170d1-509">-or-</span></span> 
<span data-ttu-id="170d1-510">La longueur du nom de la ressource cliente est de zéro.</span><span class="sxs-lookup"><span data-stu-id="170d1-510">The client resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-511">Inscrit une paire nom/valeur en tant qu'attribut personnalisé (expando) du contrôle spécifié.</span><span class="sxs-lookup"><span data-stu-id="170d1-511">Registers a name/value pair as a custom (expando) attribute of the specified control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="170d1-512"><see cref="T:System.Web.UI.Control" /> sur la page qui contient l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="170d1-512">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="170d1-513">Nom de l'attribut personnalisé à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-513">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="170d1-514">Valeur de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="170d1-514">The value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="170d1-515">Inscrit une paire nom/valeur en tant qu'attribut personnalisé (expando) du contrôle spécifié en fonction d'un ID de contrôle, d'un nom d'attribut et d'une valeur d'attribut.</span><span class="sxs-lookup"><span data-stu-id="170d1-515">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-516">Le <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> méthode inscrit une paire nom/valeur en tant qu’un attribut personnalisé (expando) spécifié <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="170d1-516">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="170d1-517">L’attribut expando est défini dynamiquement à partir de JavaScript pour préserver la compatibilité XHTML pour le balisage du rendu du contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-517">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="170d1-518">Guillemets et des barres obliques inverses dans les valeurs de l’attribut personnalisé (expando) sont échappés.</span><span class="sxs-lookup"><span data-stu-id="170d1-518">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="170d1-519">Si vous ne souhaitez pas échapper les guillemets et les barres obliques inverses, appelez le <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> surcharge de méthode et définissez la `encode` paramètre `false`.</span><span class="sxs-lookup"><span data-stu-id="170d1-519">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="170d1-520">Si l’attribut expando est introuvable ou le contrôle auquel ajouter l’attribut expando est introuvable, le script client est toujours émis, mais cela n’affectera pas le contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-520">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="170d1-521"><see cref="T:System.Web.UI.Control" /> sur la page qui contient l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="170d1-521">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="170d1-522">Nom de l'attribut personnalisé à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-522">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="170d1-523">Valeur de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="170d1-523">The value of the custom attribute.</span></span></param>
        <param name="encode"><span data-ttu-id="170d1-524">Valeur Boolean qui indique s'il faut ou non encoder l'attribut personnalisé à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-524">A Boolean value indicating whether to encode the custom attribute to register.</span></span></param>
        <summary><span data-ttu-id="170d1-525">Inscrit une paire nom/valeur en tant qu'attribut personnalisé (expando) du contrôle spécifié selon un ID de contrôle, un nom d'attribut, une valeur d'attribut et une valeur Boolean qui indique s'il faut ou non encoder la valeur d'attribut.</span><span class="sxs-lookup"><span data-stu-id="170d1-525">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-526">Le <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> méthode inscrit une paire nom/valeur en tant qu’un attribut personnalisé (expando) spécifié <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="170d1-526">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="170d1-527">L’attribut expando est défini dynamiquement à partir de JavaScript pour préserver la compatibilité XHTML pour le balisage du rendu du contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-527">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="170d1-528">Définir le `encode` paramètre `true` si vous devez échapper des guillemets et des barres obliques inverses dans la valeur de votre attribut expando.</span><span class="sxs-lookup"><span data-stu-id="170d1-528">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="170d1-529">Si l’attribut expando est introuvable ou le contrôle auquel ajouter l’attribut expando est introuvable, le script client est toujours émis, mais cela n’affectera pas le contrôle.</span><span class="sxs-lookup"><span data-stu-id="170d1-529">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-530">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> méthode de la <xref:System.Web.UI.ClientScriptManager> classe.</span><span class="sxs-lookup"><span data-stu-id="170d1-530">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="170d1-531">Le script client dans la page rendue définit le `title` attribut d’un `<span>` élément.</span><span class="sxs-lookup"><span data-stu-id="170d1-531">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-532">Inscrit une référence d'événement pour la validation.</span><span class="sxs-lookup"><span data-stu-id="170d1-532">Registers an event reference for validation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="170d1-533">ID unique représentant le contrôle client qui génère l'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-533">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="170d1-534">Inscrit une référence d'événement pour la validation avec un ID de contrôle unique qui représente le contrôle client qui génère l'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-534">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-535">Pour plus d’informations et des exemples, consultez le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-535">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-536">L’exemple suivant montre comment utiliser le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (méthode) et le <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> méthode pour inscrire un rappel pour la validation et comment valider que le rappel provenait de la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-536">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="170d1-537">Objet <see cref="T:System.Web.UI.PostBackOptions" /> qui spécifie la façon dont le code JavaScript client est généré pour initier un événement de publication.</span><span class="sxs-lookup"><span data-stu-id="170d1-537">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span></span></param>
        <summary><span data-ttu-id="170d1-538">Inscrit une référence d'événement pour la validation avec <see cref="T:System.Web.UI.PostBackOptions" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-538">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-539">Pour plus d’informations et des exemples, consultez le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-539">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="170d1-540">ID unique représentant le contrôle client qui génère l'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-540">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-541">Les arguments d'événement sont passés avec l'événement client.</span><span class="sxs-lookup"><span data-stu-id="170d1-541">Event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="170d1-542">Inscrit une référence d'événement pour la validation avec un ID de contrôle unique et des arguments d'événement représentant le contrôle client qui génère l'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-542">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="170d1-543">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (méthode) et le <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> méthode pour inscrire un rappel pour la validation et de valider que le rappel provenait de la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-543">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="170d1-544">Pour améliorer la validation illustrée dans l’exemple, vous pouvez modifier la validation `argument` paramètre contiennent des informations spécifiques à l’utilisateur comme une identité ou un rôle</span><span class="sxs-lookup"><span data-stu-id="170d1-544">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="170d1-545">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> méthode pour inscrire un rappel pour la validation.</span><span class="sxs-lookup"><span data-stu-id="170d1-545">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="170d1-546">La méthode est appelée avant la méthode <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-546">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/18fc94c9-56fc-46c3-9f29-7358f18667df"><span data-ttu-id="170d1-547">Rappel de client avec l’exemple d’implémentation de Validation</span><span class="sxs-lookup"><span data-stu-id="170d1-547">Client Callback with Validation Implementation Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName"><span data-ttu-id="170d1-548">Nom du champ masqué à inscrire</span><span class="sxs-lookup"><span data-stu-id="170d1-548">The name of the hidden field to register.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="170d1-549">Valeur initiale du champ à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-549">The initial value of the field to register.</span></span></param>
        <summary><span data-ttu-id="170d1-550">Inscrit une valeur masquée avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-550">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-551">Le <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> méthode crée une zone masquée `<input>` élément sur la page HTML rendue.</span><span class="sxs-lookup"><span data-stu-id="170d1-551">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-552">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> et <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="170d1-552">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="170d1-553">L’exemple inscrit un tableau et une valeur masquée et définit le `OnClick` événement d’un `<input>` bouton permettant de calculer la somme des deux valeurs du tableau et la valeur masquée.</span><span class="sxs-lookup"><span data-stu-id="170d1-553">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-554"><paramref name="hiddenFieldName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-554"><paramref name="hiddenFieldName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-555">Type de l'instruction OnSubmit à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-555">The type of the OnSubmit statement to register.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-556">Clé de l'instruction OnSubmit à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-556">The key of the OnSubmit statement to register.</span></span></param>
        <param name="script"><span data-ttu-id="170d1-557">Littéral de script de l'instruction OnSubmit à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-557">The script literal of the OnSubmit statement to register.</span></span></param>
        <summary><span data-ttu-id="170d1-558">Inscrit une instruction OnSubmit avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type, d'une clé et d'un littéral de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-558">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span> <span data-ttu-id="170d1-559">L'instruction s'exécute lorsque le <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> est envoyé.</span><span class="sxs-lookup"><span data-stu-id="170d1-559">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-560">Une instruction OnSubmit est identifiée par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-560">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-561">Instructions avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-561">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-562">Une seule instruction avec un type donné et une paire de clés peut être inscrits avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-562">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="170d1-563">Tentative d’inscription d’une instruction qui est déjà inscrit ne crée pas un doublon de l’instruction.</span><span class="sxs-lookup"><span data-stu-id="170d1-563">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="170d1-564">Appelez le <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> méthode pour déterminer si une instruction OnSubmit est déjà inscrite avec une paire de clé et le type donnée et d’éviter toute tentative d’ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-564">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="170d1-565">Le `script` paramètre de la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> méthode peut contenir plusieurs commandes de script tant qu’ils sont correctement délimitées par un point-virgule ( ;).</span><span class="sxs-lookup"><span data-stu-id="170d1-565">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="170d1-566">Le <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> ajoute un script qui est exécuté avant que la page est envoyée et vous donne la possibilité d’annuler la soumission.</span><span class="sxs-lookup"><span data-stu-id="170d1-566">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="170d1-567">Pour plus d’informations sur les formulaires HTML et le `OnSubmit` d’attribut, consultez le [site Web du World Wide Web Consortium (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="170d1-567">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-568">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-568">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-569"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-569"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-570">Inscrit le script de démarrage avec l'objet <see cref="T:System.Web.UI.Page" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-570">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-571">Type du script de démarrage à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-571">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-572">Clé du script de démarrage à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-572">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="170d1-573">Littéral du script de démarrage à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-573">The startup script literal to register.</span></span></param>
        <summary><span data-ttu-id="170d1-574">Inscrit le script de démarrage avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type, d'une clé et d'un littéral de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-574">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-575">Un script client est identifié de manière unique par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-575">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-576">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-576">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-577">Qu’un seul script avec un type donné et une paire de clés peut être inscrit avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-577">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="170d1-578">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</span><span class="sxs-lookup"><span data-stu-id="170d1-578">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="170d1-579">Appelez le <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> méthode pour déterminer si un script de démarrage avec une paire de clé et le type donné est déjà inscrit et d’éviter toute tentative d’ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-579">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="170d1-580">Dans cette surcharge de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (méthode), vous devez vous assurer que le script fourni dans le `script` paramètre est encapsulé avec un `<script>` bloc d’élément.</span><span class="sxs-lookup"><span data-stu-id="170d1-580">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="170d1-581">Le bloc de script ajouté par le <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> méthode s’exécute lors de la fin du chargement de la page, mais avant de la page <xref:System.Web.UI.Control.OnLoad%2A> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="170d1-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="170d1-582">Les blocs de script ne sont pas garanti que la sortie dans l’ordre, qu'ils sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="170d1-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="170d1-583">Si l’ordre des blocs de script est important, utilisez un <xref:System.Text.StringBuilder> pour rassembler les scripts dans une chaîne unique de l’objet et ensuite tous les enregistrer dans un bloc de script client unique.</span><span class="sxs-lookup"><span data-stu-id="170d1-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-584">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="170d1-585">Notez que le début et la fermeture des balises de script sont inclus dans le `script` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-585">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="170d1-586">Pour que le script d’ajout de balises en fonction d’un paramètre supplémentaire, consultez le <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-586">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="170d1-587">Type du script de démarrage à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-587">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="170d1-588">Clé du script de démarrage à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-588">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="170d1-589">Littéral du script de démarrage à inscrire.</span><span class="sxs-lookup"><span data-stu-id="170d1-589">The startup script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="170d1-590">Valeur Boolean qui indique s'il faut ajouter des balises de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-590">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="170d1-591">Inscrit le script de démarrage avec l'objet <see cref="T:System.Web.UI.Page" /> à l'aide d'un type, d'une clé, d'un littéral de script et d'une valeur Boolean indiquant s'il faut ajouter des balises de script.</span><span class="sxs-lookup"><span data-stu-id="170d1-591">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="170d1-592">Un script de démarrage est identifié par sa clé et son type.</span><span class="sxs-lookup"><span data-stu-id="170d1-592">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="170d1-593">Scripts avec la même clé et le même type sont considérés comme des doublons.</span><span class="sxs-lookup"><span data-stu-id="170d1-593">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="170d1-594">Qu’un seul script avec un type donné et une paire de clés peut être inscrit avec la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-594">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="170d1-595">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</span><span class="sxs-lookup"><span data-stu-id="170d1-595">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="170d1-596">Appelez le <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> méthode pour déterminer si un script de démarrage avec une paire de clé et le type donné est déjà inscrit et d’éviter toute tentative d’ajouter le script.</span><span class="sxs-lookup"><span data-stu-id="170d1-596">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="170d1-597">Dans cette surcharge de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (méthode), vous pouvez indiquer si le script fourni dans le `script` paramètre est encapsulé avec un `<script>` bloc d’élément à l’aide de le `addScriptTags` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-597">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="170d1-598">Paramètre `addScriptTags` à `true` indique que les balises de script sont ajoutés automatiquement.</span><span class="sxs-lookup"><span data-stu-id="170d1-598">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="170d1-599">Le bloc de script ajouté par le <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> méthode s’exécute lors de la fin du chargement de la page, mais avant de la page <xref:System.Web.UI.Control.OnLoad%2A> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="170d1-599">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="170d1-600">Les blocs de script ne sont pas garanti que la sortie dans l’ordre, qu'ils sont inscrits.</span><span class="sxs-lookup"><span data-stu-id="170d1-600">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="170d1-601">Si l’ordre des blocs de script est important, utilisez un <xref:System.Text.StringBuilder> pour rassembler les scripts dans une chaîne unique de l’objet et ensuite tous les enregistrer dans un bloc de script client unique.</span><span class="sxs-lookup"><span data-stu-id="170d1-601">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="170d1-602">L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="170d1-602">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="170d1-603">Notez que le `addScriptTags` paramètre est défini sur `false` par conséquent, le début et la fermeture des balises de script sont inclus avec le `script` paramètre.</span><span class="sxs-lookup"><span data-stu-id="170d1-603">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="170d1-604"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-604"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="170d1-605">Valide un événement client.</span><span class="sxs-lookup"><span data-stu-id="170d1-605">Validates a client event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="170d1-606">ID unique représentant le contrôle client qui génère l'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-606">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="170d1-607">Valide un événement client qui a été inscrit pour la validation d'événement à l'aide de la méthode <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-607">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="170d1-608">ID unique représentant le contrôle client qui génère l'événement.</span><span class="sxs-lookup"><span data-stu-id="170d1-608">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="170d1-609">Les arguments d'événement passés avec l'événement client.</span><span class="sxs-lookup"><span data-stu-id="170d1-609">The event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="170d1-610">Valide un événement client qui a été inscrit pour la validation d'événement à l'aide de la méthode <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="170d1-610">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="170d1-611">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> (méthode) et le <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> méthode pour inscrire un rappel pour la validation et de valider que le rappel provenait de la page.</span><span class="sxs-lookup"><span data-stu-id="170d1-611">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="170d1-612">Pour améliorer la validation illustrée ici, vous pouvez modifier la validation `argument` paramètre contiennent des informations spécifiques à l’utilisateur comme une identité ou un rôle</span><span class="sxs-lookup"><span data-stu-id="170d1-612">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="170d1-613"><paramref name="uniqueId" /> ou <see langword="null" /> est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="170d1-613"><paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>