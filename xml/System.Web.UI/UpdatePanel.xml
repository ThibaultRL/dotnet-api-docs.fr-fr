<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c140c6aafe2e9fca00c355b3814e159dfa2e4abe" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994902" /></Metadata><TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permet le rendu partiel de sections d’une page sans publication (postback).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Actualisation du contenu UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Utilisation de UpdatePanel](#updatepanel_usage)  
  
-   [Application de Styles](#applying_styles)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 <xref:System.Web.UI.UpdatePanel> les contrôles sont une partie centrale de la fonctionnalité AJAX dans ASP.NET. Ils sont utilisés avec la <xref:System.Web.UI.ScriptManager> contrôle pour activer le rendu de page partiel. Rendu de page partielle réduit le besoin de publications synchrones et les mises à jour de la page terminé lorsque qu’une partie de la page doit être mis à jour. Rendu de page partielle améliore l’expérience utilisateur, car elle réduit le scintillement de l’écran qui se produit pendant une publication (postback) de page entière et améliore l’interactivité de la page Web.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Actualisation du contenu UpdatePanel  
 Lorsque le rendu de page partielle est activé, un contrôle peut effectuer une publication (postback) qui met à jour la page entière ou une publication (postback) asynchrone qui met à jour le contenu d’un ou plusieurs <xref:System.Web.UI.UpdatePanel> contrôles. Si un contrôle provoque une publication (postback) asynchrone et les mises à jour un <xref:System.Web.UI.UpdatePanel> contrôle dépend des éléments suivants :  
  
-   Si le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété de la <xref:System.Web.UI.UpdatePanel> contrôle est défini sur <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, le <xref:System.Web.UI.UpdatePanel> contenu du contrôle est mis à jour sur chaque publication (postback) qui provient de la page. Cela inclut les publications asynchrones à partir de contrôles qui se trouvent dans les autres <xref:System.Web.UI.UpdatePanel> contrôles et les publications de contrôles qui ne sont pas à l’intérieur <xref:System.Web.UI.UpdatePanel> contrôles.  
  
-   Si le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, le <xref:System.Web.UI.UpdatePanel> contenu du contrôle est mis à jour dans les circonstances suivantes :  
  
    -   Lorsque vous appelez le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode de la <xref:System.Web.UI.UpdatePanel> contrôler explicitement.  
  
    -   Lorsque le <xref:System.Web.UI.UpdatePanel> contrôle est imbriqué dans un autre <xref:System.Web.UI.UpdatePanel> contrôle et le panneau parent est mis à jour.  
  
    -   Lorsqu’une publication est provoquée par un contrôle qui est défini comme un déclencheur à l’aide de la `Triggers` propriété de la <xref:System.Web.UI.UpdatePanel> contrôle. Dans ce scénario, le contrôle déclenche explicitement une mise à jour du contenu du panneau. Le contrôle peut être à l’intérieur ou à l’extérieur du <xref:System.Web.UI.UpdatePanel> contrôle auquel le déclencheur est associé.  
  
    -   Lorsque le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est définie sur `true` et un contrôle enfant de le <xref:System.Web.UI.UpdatePanel> contrôle entraîne une publication (postback). Imbriqué des contrôles enfants du <xref:System.Web.UI.UpdatePanel> contrôles n’entraînent pas une mise à jour externe <xref:System.Web.UI.UpdatePanel> contrôler, sauf si elles sont explicitement définies en tant que déclencheurs.  
  
 La combinaison du paramètre de la <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété `false` et <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété <xref:System.Web.UI.UpdatePanelUpdateMode.Always> n’est pas autorisée et lève une exception.  
  
 Lorsque le <xref:System.Web.UI.UpdatePanel> contrôle effectue une publication asynchrone, il ajoute un en-tête HTTP personnalisé. Certains proxys suppriment cet en-tête HTTP personnalisé. Si cela se produit, le serveur gère la requête comme une publication (postback) standard, ce qui provoque une erreur de client. Pour résoudre ce problème, insérez un champ de formulaire personnalisé lorsque vous effectuez des publications asynchrones. Vérifiez ensuite l’en-tête ou le champ de formulaire personnalisée dans le code serveur.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Utilisation de UpdatePanel  
 Vous pouvez utiliser plusieurs <xref:System.Web.UI.UpdatePanel> contrôles pour mettre à jour indépendamment de plusieurs régions de page. Lorsque la page qui contient un ou plusieurs <xref:System.Web.UI.UpdatePanel> contrôles est restitué en premier, tout le contenu de tous les <xref:System.Web.UI.UpdatePanel> contrôles sont rendues et envoyés au navigateur. Sur les publications asynchrones ultérieures, le contenu de chaque <xref:System.Web.UI.UpdatePanel> contrôle ne peut pas être mis à jour selon les paramètres du Panneau de configuration et de la logique de client ou serveur des panneaux individuels.  
  
 Vous pouvez également utiliser <xref:System.Web.UI.UpdatePanel> contrôles pour les éléments suivants :
  
-   Dans les contrôles utilisateur.  
  
-   Sur les pages maîtres et de contenu.  
  
-   Imbriquée dans autre <xref:System.Web.UI.UpdatePanel> contrôles.  
  
-   À l’intérieur basé sur un modèle contrôles tels que le <xref:System.Web.UI.WebControls.GridView> ou <xref:System.Web.UI.WebControls.Repeater> contrôles.  
  
 <xref:System.Web.UI.UpdatePanel> contrôles peuvent être ajoutés de manière déclarative ou par programmation.  
  
 Vous pouvez ajouter un <xref:System.Web.UI.UpdatePanel> contrôler par programmation, mais vous ne pouvez pas ajouter des déclencheurs par programmation. Pour créer un comportement semblable à un déclencheur, vous pouvez inscrire un contrôle dans la page en tant que contrôle de publication (postback) asynchrone. Pour cela, vous devez appeler la <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> méthode de la <xref:System.Web.UI.ScriptManager> contrôle. Vous pouvez ensuite créer un gestionnaire d’événements qui s’exécute en réponse à la publication (postback) asynchrone et dans le gestionnaire, appeler le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode de la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Application de Styles  
 Le <xref:System.Web.UI.UpdatePanel> contrôle accepte des attributs expando. Cela vous permet de définir une classe CSS pour les éléments HTML qui restituent les contrôles. Par exemple, vous pouvez créer le balisage illustré dans l’exemple suivant :  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 Le balisage dans l’exemple précédent génère le rendu HTML similaire à ce qui suit lors de la page s’exécute :  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Les exemples suivants montrent différentes utilisations de le <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 **Contrôles à l’intérieur d’un contrôle UpdatePanel**  
  
 L’exemple suivant montre comment placer des contrôles à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle pour réduire le scintillement de l’écran lorsque vous publiez sur le serveur. Dans cet exemple, un <xref:System.Web.UI.WebControls.Calendar> et un <xref:System.Web.UI.WebControls.DropDownList> contrôle sont à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle. Par défaut, le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est <xref:System.Web.UI.UpdatePanelUpdateMode.Always> et <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est `true`. Par conséquent, les contrôles enfants du Panneau de provoquent une publication (postback) asynchrone.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Scénario maître/détail avec les contrôles UpdatePanel**  
  
 Dans l’exemple suivant, un <xref:System.Web.UI.UpdatePanel> contrôle est utilisé dans un scénario maître/détail qui affiche des commandes et les détails de la commande à partir de la base de données Northwind. Un <xref:System.Web.UI.UpdatePanel> contrôle contient le <xref:System.Web.UI.WebControls.GridView> contrôle qui affiche une liste de commandes. Une seconde <xref:System.Web.UI.UpdatePanel> contrôle contient un <xref:System.Web.UI.WebControls.DetailsView> contrôle qui affiche les détails d’une commande. Lorsque vous sélectionnez une commande à partir de la première table, les détails de cette commande sont affichés dans la seconde table. La deuxième table est mise à jour asynchrone basée sur la sélection de la première table. Les opérations de tri et de pagination dans la table de résumé de commandes provoquent également mises à jour partielles.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Si vous placez un <xref:System.Web.UI.WebControls.GridView> contrôler à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> paramètre de contrôle, le <xref:System.Web.UI.WebControls.GridView> du contrôle <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> propriété `true` n’est pas pris en charge. Toutefois, étant donné que le <xref:System.Web.UI.UpdatePanel> contrôle prend en charge les publications asynchrones, toute publication qui modifie le <xref:System.Web.UI.WebControls.GridView> contrôler à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle provoquer le même comportement que le tri et la pagination des rappels.  
  
 **À l’aide d’un contrôle UpdatePanel dans un modèle**  
  
 Dans l’exemple suivant, un <xref:System.Web.UI.UpdatePanel> contrôle est utilisé dans le modèle d’élément d’un <xref:System.Web.UI.WebControls.GridView> contrôle. <xref:System.Web.UI.UpdatePanel> contrôles dans chaque ligne de données sont générés automatiquement. De chaque ligne <xref:System.Web.UI.UpdatePanel> contrôle contient un <xref:System.Web.UI.WebControls.Label> contrôle pour afficher la quantité de l’élément de cette ligne et un <xref:System.Web.UI.WebControls.Button> contrôle pour réduire et augmenter la quantité.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a">Vue d’ensemble de la technologie de UpdatePanel</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b0156068-0d33-48e4-80fe-9ef76670ed26">Vue d’ensemble de la technologie de ScriptManager</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour initialiser une nouvelle instance de la <xref:System.Web.UI.UpdatePanel> classe. Pour ajouter dynamiquement un <xref:System.Web.UI.UpdatePanel> le contrôle à une page, créez une nouvelle <xref:System.Web.UI.UpdatePanel> instance, puis ajoutez les contrôles enfants à l’objet de contrôle qui est exposé par l’instance <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer dynamiquement une <xref:System.Web.UI.UpdatePanel> contrôle et l’ajouter à une page. Lorsque vous cliquez sur le bouton à l’intérieur de la <xref:System.Web.UI.UpdatePanel> contrôle, le message est actualisé avec la date et l’heure. Les contrôles enfants sont ajoutés à l’aide de la <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la feuille de style en cascade (CSS) de collection d’attributs le <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</summary>
        <value>Les noms de la feuille CSS des règles de style dans la collection d’attributs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.Attributes%2A> propriété constituée une collection d’attributs de style CSS qui peut être utilisé dans la forme `div` élément de la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les publications à partir de l’enfant immédiat contrôles d’un <see cref="T:System.Web.UI.UpdatePanel" /> contrôle mettre à jour le contenu du panneau.</summary>
        <value><see langword="true" /> Si les publications à partir de l’enfant immédiat contrôles de la <see cref="T:System.Web.UI.UpdatePanel" /> mise à jour de contrôle du Panneau de contenu ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définir le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété `true` si vous souhaitez que les publications de contrôles enfants immédiats de le <xref:System.Web.UI.UpdatePanel> contrôle entraînent une mise à jour du contenu du panneau. Imbriqué des contrôles enfants du <xref:System.Web.UI.UpdatePanel> contrôles n’entraîne pas une mise à jour du parent <xref:System.Web.UI.UpdatePanel> contenu du contrôle, sauf si vous appelez le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode explicitement ou définir les contrôles enfants en tant que déclencheurs.  
  
> [!NOTE]
>  Lorsque le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelUpdateMode.Always> et le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est définie sur `false`, un <xref:System.InvalidOperationException> exception est levée pendant la <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> (méthode). Cette combinaison de propriétés n’est pas autorisée pour le <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Un scénario où vous pouvez définir <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> à `false` est lorsque vous disposez de deux <xref:System.Web.UI.UpdatePanel> contrôles et que vous souhaitez une publication (postback) du premier panneau pour mettre à jour le contenu du deuxième panneau mais pas mettre à jour son propre contenu. Par exemple, le premier panneau peut être une liste de produits à acheter et le deuxième panneau peut être un panier d’achat.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle qui définit le contenu de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</summary>
        <value>Un <see cref="T:System.Web.UI.ITemplate" /> instance qui définit le contenu de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôle. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriété contient le contenu qui s’affiche à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle lorsqu’il est restitué. Vous pouvez créer le contenu du modèle de manière déclarative ou par programmation. Le modèle de contenu d’un <xref:System.Web.UI.UpdatePanel> contrôle est un modèle à instance unique. Par conséquent, les propriétés des contrôles qu’il contient sont accessibles directement sur la page sans utiliser le <xref:System.Web.UI.Page.FindControl%2A> (méthode). Pour plus d’informations, consultez le <xref:System.Web.UI.TemplateInstanceAttribute> vue d’ensemble de la classe.  
  
 Pour ajouter des éléments à la <xref:System.Web.UI.UpdatePanel> contrôler de façon déclarative, ajoutez un `<ContentTemplate>` élément entre les balises d’ouverture et fermeture de la <xref:System.Web.UI.UpdatePanel> contrôle. À l’intérieur de la `<ContentTemplate>` balises d’élément, déclarez les autres contrôles et les éléments HTML.  
  
 Pour ajouter des éléments à la <xref:System.Web.UI.UpdatePanel> contrôler de manière dynamique, utilisez le <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété, ce qui vous permet d’ajouter des contrôles enfants sans avoir à créer un modèle personnalisé qui implémente le <xref:System.Web.UI.ITemplate> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> propriété de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôle est défini après la création d’une instance du modèle ou une fois que le conteneur de modèle de contenu est créé.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">Modèles de contrôles serveur Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet de contrôle à laquelle vous pouvez ajouter par programmation des contrôles enfants.</summary>
        <value>Un <see cref="T:System.Web.UI.Control" /> objet qui définit le contenu de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété vous permet d’ajouter par programme des contrôles enfants à la <xref:System.Web.UI.UpdatePanel> contrôle sans avoir à définir un modèle personnalisé qui hérite de la <xref:System.Web.UI.ITemplate> interface. Si vous ajoutez du contenu à la <xref:System.Web.UI.UpdatePanel> contrôler de manière déclarative ou via un concepteur, vous devez ajouter le contenu à la <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriété à l’aide un `<ContentTemplate>` élément.  
  
   
  
## Examples  
 L’exemple suivant montre comment spécifier par programme le <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété d’un <xref:System.Web.UI.UpdatePanel> contrôle. Le <xref:System.Web.UI.WebControls.Label.Text%2A> propriété d’un <xref:System.Web.UI.WebControls.Label> contrôle est défini lorsque `Button1` est cliqué.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Web.UI.ControlCollection" /> contrôle de l’objet qui contient l’enfant pour le <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</summary>
        <value>La collection de contrôles enfants pour le <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.Controls%2A> est substituée à partir de la base de <xref:System.Web.UI.Control> classe et sealed pour empêcher toute dérivation supplémentaire. Pour ajouter des contrôles à la <xref:System.Web.UI.UpdatePanel> contrôler de façon déclarative, créez un `<ContentTemplate>` élément à l’intérieur la <xref:System.Web.UI.UpdatePanel> balisage du contrôle. Pour ajouter des contrôles à la <xref:System.Web.UI.UpdatePanel> contrôler par programmation, utilisez le <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />, ou <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> méthode de la <see cref="T:System.Web.UI.ControlCollection" /> classe a été appelée. Pour modifier le contenu de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôler, modifier les contrôles enfants de la <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> propriété.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un <see cref="T:System.Web.UI.Control" /> objet agit comme un conteneur pour les contrôles enfants qui définissent le <see cref="T:System.Web.UI.UpdatePanel" /> contenu du contrôle.</summary>
        <returns>Un <see cref="T:System.Web.UI.Control" /> conteneur pour le <see cref="T:System.Web.UI.UpdatePanel" /> contenu du contrôle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est conçue pour une utilisation par les développeurs de contrôles qui souhaitent étendre le <xref:System.Web.UI.UpdatePanel> contrôle. Par exemple, dans les classes dérivées, vous pouvez fournir un contrôle racine différent qui agit comme un conteneur pour votre <xref:System.Web.UI.UpdatePanel> contenu du contrôle. L’implémentation par défaut retourne un <xref:System.Web.UI.Control> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment substituer la <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> méthode personnalisé <xref:System.Web.UI.UpdatePanel> contrôle restitue toujours le `<fieldset>` et `<legend>` éléments pour le contenu du panneau. Personnalisé <xref:System.Web.UI.UpdatePanel> contrôle définit une propriété publique nommée `GroupingText` qui est un littéral de chaîne à l’intérieur du `<legend>` élément.  
  
 Personnalisé <xref:System.Web.UI.UpdatePanel> contrôle nommé `CustomUpdatePanel` dérive <xref:System.Web.UI.UpdatePanel> et remplace le <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> (méthode). Placez le `CustomUpdatePanel` code source dans le dossier App_Code du site Web de classe.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 Personnalisé <xref:System.Web.UI.UpdatePanel> contrôle est utilisé dans la page comme le <xref:System.Web.UI.UpdatePanel> est de contrôle. L’exemple suivant montre une page qui contient le personnalisé <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la collection de tous les contrôles contenus dans le contrôle <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Un <see cref="T:System.Web.UI.ControlCollection" /> objet se compose de tous les contrôles qui définissent le contenu de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> méthode est utilisée par les développeurs de contrôles.  
  
 Étant donné que cette méthode est protégée et sealed, elle est visible pour les classes qui héritent de la <xref:System.Web.UI.UpdatePanel> classe, mais il ne peut pas être substituée. Cette méthode substitue l’implémentation de base pour retourner spécialisé <xref:System.Web.UI.ControlCollection> objet lève une exception une <xref:System.InvalidOperationException> lorsque le <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, ou <xref:System.Web.UI.ControlCollection.RemoveAt%2A> méthode de la <xref:System.Web.UI.ControlCollection> classe est appelée. Pour modifier le contenu de la <xref:System.Web.UI.UpdatePanel> contrôler, modifier les contrôles enfants de la <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise le <see cref="T:System.Web.UI.UpdatePanel" /> contrôler la collecte de déclencheur si le rendu de page partielle est activé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le rendu de page partielle n’est pas activé, les déclencheurs qui sont définies dans le <xref:System.Web.UI.UpdatePanel.Triggers%2A> propriété ne sont pas initialisés, car ils n’ont aucun effet. Le <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> propriété de la <xref:System.Web.UI.ScriptManager> contrôle Obtient ou définit une valeur qui indique si le rendu de page partielle est activé. Le <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> propriété de la <xref:System.Web.UI.ScriptManager> contrôle Obtient ou définit une valeur qui indique si le rendu de page partielle est prise en charge.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous substituez le <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> (méthode), veillez à appeler la classe de base afin que les déclencheurs sont enregistrés si le rendu de page partielle est activé.</para></block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le <see cref="T:System.Web.UI.UpdatePanel" /> contrôle est mis à jour à la suite d’une publication (postback) asynchrone.</summary>
        <value><see langword="true" /> Si actuel <see cref="T:System.Web.UI.UpdatePanel" /> contrôle est en cours de mise à jour à la suite d’une publication (postback) asynchrone ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> propriété est destinée aux développeurs de contrôles qui souhaitent savoir quand un <xref:System.Web.UI.UpdatePanel> contrôle est mis à jour à la suite d’une publication (postback) asynchrone. Dans les scénarios de développement de page, utilisez le <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> propriété afin de déterminer si une page est en cours de traitement à la suite d’une publication (postback) asynchrone.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel> du contrôle <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriété est instanciée au cours de la <xref:System.Web.UI.UpdatePanel.OnInit%2A> (méthode).  
  
 Le <xref:System.Web.UI.UpdatePanel.OnInit%2A> méthode est utilisée par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> propriété est définie lorsque le <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> propriété a déjà été créée.</exception>
        <block subset="none" type="overrides"><para>Lorsque vous substituez le <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> méthode dans une classe dérivée, veillez à appeler la <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> méthode de la classe de base afin que les délégués inscrits reçoivent l’événement.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Vue d’ensemble du Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche la <see cref="E:System.Web.UI.Control.Load" /> événement pour le <see cref="T:System.Web.UI.UpdatePanel" /> contrôler et appelle le <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> méthode lorsque le rendu de page partielle n’est pas activé.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Si vous remplacez le <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> (méthode), veillez à appeler la classe de base afin que le <see cref="E:System.Web.UI.Control.Load" /> événement sera déclenché.</para></block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> méthode est utilisée par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> propriété est définie sur <see langword="false" />et le <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> propriété est définie sur <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
        <summary>Élève la base <see cref="E:System.Web.UI.Control.Unload" /> événement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.OnUnload%2A> méthode est utilisée par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.UpdatePanel> contrôle  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Vue d’ensemble du Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Un <see cref="T:System.Web.UI.HtmlTextWriter" /> objet qui représente le flux de sortie pour restituer le contenu HTML.</param>
        <summary>Déclenche l'événement <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.Render%2A> méthode est utilisée par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Le <xref:System.Web.UI.UpdatePanel.Render%2A> méthode écrit le contenu restitué de la <xref:System.Web.UI.UpdatePanel> contrôle dans le navigateur à l’aide de fourni <xref:System.Web.UI.HtmlTextWriter> objet. Lorsque vous substituez le <xref:System.Web.UI.UpdatePanel.Render%2A> méthode dans une classe dérivée, veillez à appeler la <xref:System.Web.UI.UpdatePanel.Render%2A> méthode de la base de classe afin que les contrôles enfants de la <xref:System.Web.UI.UpdatePanel> contrôle sont rendus.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Vue d’ensemble du Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Un <see cref="T:System.Web.UI.HtmlTextWriter" /> objet qui représente le flux de sortie pour restituer le contenu HTML.</param>
        <summary>Déclenche l'événement <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> méthode est utilisée par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Le <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> méthode écrit le contenu restitué de la <xref:System.Web.UI.UpdatePanel> contrôle dans le navigateur à l’aide de fourni <xref:System.Web.UI.HtmlTextWriter> objet. Lorsque vous substituez le <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> méthode dans une classe dérivée, veillez à appeler la <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> méthode de la base de classe afin que les contrôles enfants de la <xref:System.Web.UI.UpdatePanel> contrôle sont rendus.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Vue d’ensemble du Cycle de vie de Page ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un <see cref="T:System.Web.UI.UpdatePanel" /> contenu du contrôle est placé dans le code HTML <see langword="&lt;div&gt;" /> ou <see langword="&lt;span&gt;" /> élément.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.UpdatePanelRenderMode" />. La valeur par défaut est <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> afin que le contenu du panneau soit compris dans le code HTML <see langword="&lt;div&gt;" /> élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, le contenu d’un <xref:System.Web.UI.UpdatePanel> contrôle est restitué à l’intérieur d’un élément HTML `<span>` élément. Si le <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelRenderMode.Block>, il est restitué à l’intérieur d’un élément HTML `<div>` élément.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir le <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propriété de manière déclarative. Le <xref:System.Web.UI.UpdatePanel> contrôle nommé `UpdatePanel1` est rendu dans le code HTML `<span>` élément. Si le <xref:System.Web.UI.UpdatePanel.RenderMode%2A> ont été définies <xref:System.Web.UI.UpdatePanelRenderMode.Block>, le paragraphe résultant apparaîtrait incohérent en raison de la façon dont le code HTML `<div>` élément est rendu.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le contenu de la <see cref="T:System.Web.UI.UpdatePanel" /> contrôle mettra à jour.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Web.UI.UpdatePanel" /> contenu du contrôle sera mis à jour ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> retourne de la propriété `true` si le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode a été appelée explicitement ou si le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Cette propriété est destinée aux développeurs de contrôles qui souhaitent étendre le <xref:System.Web.UI.UpdatePanel> contrôle. Par exemple, dans les classes dérivées, vous pouvez fournir une logique supplémentaire pour déterminer si un <xref:System.Web.UI.UpdatePanel> contrôle doit être mis à jour.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'attribut.</param>
        <summary>Retourne un attribut d’un contrôle Web à l’aide d’un nom spécifié.</summary>
        <returns>Valeur de l'attribut.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.UpdatePanel> est castée en interface <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'attribut à définir.</param>
        <param name="value">Valeur de l’attribut à définir.</param>
        <summary>Définit la valeur de l’attribut du contrôle spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.UpdatePanel> est castée en interface <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> objet qui contient <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> et <see cref="T:System.Web.UI.PostBackTrigger" /> objets enregistrés de façon déclarative pour le <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</summary>
        <value>Une collection d’objets de type <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> et <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdatePanel.Triggers%2A> propriété obtient une collection de tous les déclencheurs qui ont été définies pour le <xref:System.Web.UI.UpdatePanel> contrôle. (Vous pouvez définir des déclencheurs de manière déclarative à l’aide de la **éditeur de collections UpdatePanelTrigger** boîte de dialogue dans le concepteur ou en utilisant le `<Triggers>` élément de la <xref:System.Web.UI.UpdatePanel> contrôle.) La collection inclut <xref:System.Web.UI.AsyncPostBackTrigger> et <xref:System.Web.UI.PostBackTrigger> objets.  
  
 Les déclencheurs déclaratifs qui sont définis dans le <xref:System.Web.UI.UpdatePanel.Triggers%2A> collection ne sont pas suivies dans l’état d’affichage.  
  
 Lorsqu’un contrôle qui est un conteneur d’attribution de noms est utilisé comme un déclencheur, tous ses contrôles enfants causant une publication se comportent en tant que déclencheurs.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provoque une mise à jour du contenu d’un <see cref="T:System.Web.UI.UpdatePanel" /> contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la page est activée pour le rendu de page partielle, lorsque vous appelez le <xref:System.Web.UI.UpdatePanel.Update%2A> (méthode), le <xref:System.Web.UI.UpdatePanel> contenu du contrôle est mis à jour dans le navigateur. Appelez le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode si vous avez du code serveur doit s’exécuter pour déterminer si un <xref:System.Web.UI.UpdatePanel> contrôle doit être mis à jour. Si vous envisagez d’utiliser le <xref:System.Web.UI.UpdatePanel.Update%2A> (méthode), définissez la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Si vous souhaitez que la décision de mettre à jour le panneau dans la logique du serveur, vérifiez que le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est `false` et qu’aucun déclencheur explicite n’est définies pour le panneau.  
  
 Dans un scénario de développement de page typique, si vous définissez des déclencheurs ou si le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est `true` pour le <xref:System.Web.UI.UpdatePanel> contrôle, le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode est appelée automatiquement pendant le cycle de vie de page.  
  
 Si le <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriété n’est pas définie pour le <xref:System.Web.UI.UpdatePanel> contrôler, aucune mise à jour du panneau se produira.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode pour mettre à jour le contenu d’un <xref:System.Web.UI.UpdatePanel> contrôler lorsque plus de cinq secondes se sont écoulées depuis la dernière mise à jour.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> a la valeur <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  
  
ou 
Le <see cref="M:System.Web.UI.UpdatePanel.Update" /> méthode est appelée pendant ou après la page <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> événement.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant à quel moment un <see cref="T:System.Web.UI.UpdatePanel" /> contenu du contrôle est mis à jour.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />. La valeur par défaut est <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un <xref:System.Web.UI.UpdatePanel> contrôle n’est pas à l’intérieur d’un autre <xref:System.Web.UI.UpdatePanel> contrôle, le panneau est mis à jour tel que déterminé par les paramètres de la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> et <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriétés, ainsi que la collection de déclencheurs. Quand un <xref:System.Web.UI.UpdatePanel> contrôle se trouve dans un autre <xref:System.Web.UI.UpdatePanel> contrôle, le panneau enfant est automatiquement mis à jour le panneau parent est mis à jour.  
  
 Le contenu d’un <xref:System.Web.UI.UpdatePanel> contrôle est mis à jour dans les circonstances suivantes :  
  
-   Si le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, le <xref:System.Web.UI.UpdatePanel> contenu du contrôle est mis à jour sur chaque publication (postback) provenant de n’importe où sur la page. Cela inclut les publications asynchrones à partir de contrôles dans les autres <xref:System.Web.UI.UpdatePanel> contrôles et les publications de contrôles qui ne sont pas à l’intérieur <xref:System.Web.UI.UpdatePanel> contrôles.  
  
-   Si le <xref:System.Web.UI.UpdatePanel> contrôle est imbriqué dans un autre <xref:System.Web.UI.UpdatePanel> contrôle et le panneau de mise à jour parent est mis à jour.  
  
-   Si le <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, et une des conditions suivantes se produit :  
  
    -   Vous appelez le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode de la <xref:System.Web.UI.UpdatePanel> contrôler explicitement.  
  
    -   La publication est provoquée par un contrôle défini comme un déclencheur à l’aide de la <xref:System.Web.UI.UpdatePanel.Triggers%2A> propriété de la <xref:System.Web.UI.UpdatePanel> contrôle. Dans ce scénario, le contrôle déclenche explicitement une mise à jour du contenu du panneau. Le contrôle peut être à l’intérieur ou à l’extérieur du <xref:System.Web.UI.UpdatePanel> contrôle qui définit le déclencheur.  
  
    -   Le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est définie sur `true` et un contrôle enfant de le <xref:System.Web.UI.UpdatePanel> contrôle entraîne une publication (postback). Un contrôle enfant d’un élément imbriqué <xref:System.Web.UI.UpdatePanel> contrôle n’entraîne pas une mise à jour externe <xref:System.Web.UI.UpdatePanel> contrôler, sauf si elle est explicitement définie comme un déclencheur.  
  
   
  
## Examples  
 L’exemple suivant déclare deux <xref:System.Web.UI.UpdatePanel> contrôles. Dans le premier panneau, la <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriété est définie sur <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Dans le deuxième panneau <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> est défini sur <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Un bouton en dehors de deux panneaux est enregistré en tant que contrôle de publication (postback) asynchrone en appelant le <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> méthode de la <xref:System.Web.UI.ScriptManager> contrôle. Dans le bouton `Click` Gestionnaire d’événements, le <xref:System.Web.UI.UpdatePanel.Update%2A> méthode du premier panneau est appelée si plus de cinq secondes se sont écoulées depuis sa dernière mise à jour. Dans ce scénario, le contenu du panneau est mis à jour uniquement si la dernière actualisation du Panneau de configuration était il y a plus de cinq secondes. Le contenu du deuxième panneau est toujours mis à jour.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le type spécifié ne fait pas partie de la <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> valeurs.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>