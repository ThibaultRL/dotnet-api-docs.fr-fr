<Type Name="IReadOnlyDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="425183756cb1e7f21431e146f0fad65d457c13b6" /><Meta Name="ms.sourcegitcommit" Value="ef1f0c8985003a14413f66c3de381b8f3b6e4436" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/30/2019" /><Meta Name="ms.locfileid" Value="66381271" /></Metadata><TypeSignature Language="C#" Value="public interface IReadOnlyDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadOnlyDictionary`2&lt;TKey, TValue&gt; implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IReadOnlyDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReadOnlyDictionary(Of TKey, TValue)&#xA;Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IReadOnlyDictionary : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;" />
  <TypeSignature Language="F#" Value="type IReadOnlyDictionary&lt;'Key, 'Value&gt; = interface&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="e90bd-101">Type de clés dans le dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-101">The type of keys in the read-only dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="e90bd-102">Type des valeurs dans le dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-102">The type of values in the read-only dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="e90bd-103">Représente une collection générique en lecture seule de paires clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="e90bd-103">Represents a generic read-only collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90bd-104">Chaque élément est une paire clé/valeur qui est stockée dans un <xref:System.Collections.Generic.KeyValuePair%602> objet.</span><span class="sxs-lookup"><span data-stu-id="e90bd-104">Each element is a key/value pair that is stored in a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="e90bd-105">Chaque paire doit avoir une clé unique.</span><span class="sxs-lookup"><span data-stu-id="e90bd-105">Each pair must have a unique key.</span></span> <span data-ttu-id="e90bd-106">Les implémentations peuvent varier selon si ils vous permettent de spécifier une clé qui est `null`.</span><span class="sxs-lookup"><span data-stu-id="e90bd-106">Implementations can vary in whether they allow you to specify a key that is `null`.</span></span> <span data-ttu-id="e90bd-107">La valeur peut être `null` et ne doivent pas être uniques.</span><span class="sxs-lookup"><span data-stu-id="e90bd-107">The value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="e90bd-108">Le <xref:System.Collections.Generic.IReadOnlyDictionary%602> interface permet les clés et les valeurs à énumérer, mais elle n’implique pas de n’importe quel ordre de tri particulier.</span><span class="sxs-lookup"><span data-stu-id="e90bd-108">The <xref:System.Collections.Generic.IReadOnlyDictionary%602> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="e90bd-109">Le `foreach` instruction du langage c# (`For Each` en Visual Basic, `for each` en C++) requiert le type de chaque élément dans la collection.</span><span class="sxs-lookup"><span data-stu-id="e90bd-109">The `foreach` statement of the C# language (`For Each` in Visual Basic, `for each` in C++) requires the type of each element in the collection.</span></span> <span data-ttu-id="e90bd-110">Étant donné que chaque élément de la <xref:System.Collections.Generic.IReadOnlyDictionary%602> interface est une paire clé/valeur, le type d’élément n’est pas le type de la clé ou le type de la valeur.</span><span class="sxs-lookup"><span data-stu-id="e90bd-110">Because each element of the <xref:System.Collections.Generic.IReadOnlyDictionary%602> interface is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="e90bd-111">Au lieu de cela, le type d’élément est <xref:System.Collections.Generic.KeyValuePair%602>, comme l’illustre l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="e90bd-111">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>, as the following example illustrates.</span></span>  
  
 [!code-cpp[Generic.IDictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.IDictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source2.cs#11)]
 [!code-vb[Generic.IDictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="e90bd-112">La `foreach` instruction est un wrapper autour de l’énumérateur ; il permet la lecture à partir de la collection, et non l’écriture dans la collection.</span><span class="sxs-lookup"><span data-stu-id="e90bd-112">The `foreach` statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool" Usage="iReadOnlyDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e90bd-113">Clé à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e90bd-113">The key to locate.</span></span></param>
        <summary><span data-ttu-id="e90bd-114">Détermine si le dictionnaire en lecture seule contient un élément avec la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e90bd-114">Determines whether the read-only dictionary contains an element that has the specified key.</span></span></summary>
        <returns><span data-ttu-id="e90bd-115"><see langword="true" /> si le dictionnaire en lecture seule contient un élément qui possède la clé spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e90bd-115"><see langword="true" /> if the read-only dictionary contains an element that has the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90bd-116">Les implémentations peuvent déterminer l’égalité des objets ; par exemple, la classe qui implémente <xref:System.Collections.Generic.IReadOnlyDictionary%602> peut utiliser le <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propriété, ou elle peut implémenter la <xref:System.Collections.Generic.IComparer%601> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e90bd-116">Implementations can vary in how they determine the equality of objects; for example, the class that implements <xref:System.Collections.Generic.IReadOnlyDictionary%602> might use the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property, or it might implement the <xref:System.Collections.Generic.IComparer%601> method.</span></span>  
  
 <span data-ttu-id="e90bd-117">Les implémentations peuvent varier selon si elles autorisent `key` être `null`.</span><span class="sxs-lookup"><span data-stu-id="e90bd-117">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e90bd-118"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e90bd-118"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e90bd-119">Clé à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e90bd-119">The key to locate.</span></span></param>
        <summary><span data-ttu-id="e90bd-120">Obtient l'élément avec la clé spécifiée dans le dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-120">Gets the element that has the specified key in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="e90bd-121">Élément avec la clé spécifiée dans le dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-121">The element that has the specified key in the read-only dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90bd-122">Cette propriété vous permet d’accéder à un élément spécifique dans la collection à l’aide de la syntaxe suivante : `myCollection[key]` (`myCollection(key)` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e90bd-122">This property lets you access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="e90bd-123">Les implémentations peuvent déterminer l’égalité des objets : par exemple, la classe qui implémente <xref:System.Collections.Generic.IReadOnlyDictionary%602> peut utiliser le <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propriété, ou elle peut implémenter la <xref:System.Collections.Generic.IComparer%601> (méthode).</span><span class="sxs-lookup"><span data-stu-id="e90bd-123">Implementations can vary in how they determine the equality of objects: for example, the class that implements <xref:System.Collections.Generic.IReadOnlyDictionary%602> might use the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property, or it might implement the <xref:System.Collections.Generic.IComparer%601> method.</span></span>  
  
 <span data-ttu-id="e90bd-124">Les implémentations peuvent varier selon si elles autorisent `key` être `null`.</span><span class="sxs-lookup"><span data-stu-id="e90bd-124">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e90bd-125"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e90bd-125"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="e90bd-126">La propriété est récupérée et <paramref name="key" /> est introuvable.</span><span class="sxs-lookup"><span data-stu-id="e90bd-126">The property is retrieved and <paramref name="key" /> is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IEnumerable(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : seq&lt;'Key&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e90bd-127">Obtient une collection énumérable qui contient les clés dans dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-127">Gets an enumerable collection that contains the keys in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="e90bd-128">Collection énumérable qui contient les clés dans dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-128">An enumerable collection that contains the keys in the read-only dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90bd-129">L’ordre des clés dans la collection énumérable n’est pas spécifié, mais l’implémentation doit garantir que les clés sont dans le même ordre que les valeurs correspondantes dans la collection énumérable qui est retourné par la <xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e90bd-129">The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool" Usage="iReadOnlyDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e90bd-130">Clé à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e90bd-130">The key to locate.</span></span></param>
        <param name="value"><span data-ttu-id="e90bd-131">Lorsque cette méthode est retournée, la valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, la valeur par défaut pour le type du paramètre <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e90bd-131">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter.</span></span> <span data-ttu-id="e90bd-132">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="e90bd-132">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="e90bd-133">Obtient la valeur associée à la clé spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e90bd-133">Gets the value that is associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="e90bd-134"><see langword="true" /> si l'objet qui implémente l'interface <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> contient un élément comportant la clé spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e90bd-134"><see langword="true" /> if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> interface contains an element that has the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90bd-135">Cette méthode combine les fonctionnalités de la <xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A> (méthode) et le <xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e90bd-135">This method combines the functionality of the <xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="e90bd-136">Si la clé est introuvable, la `value` paramètre Obtient la valeur par défaut appropriée pour le type `TValue`: par exemple, 0 (zéro) pour les types d’entiers, `false` pour les types booléens et `null` pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="e90bd-136">If the key is not found, the `value` parameter gets the appropriate default value for the type `TValue`: for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e90bd-137"><paramref name="key" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e90bd-137"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IEnumerable(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : seq&lt;'Value&gt;" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e90bd-138">Obtient une collection énumérable qui contient les valeurs dans dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-138">Gets an enumerable collection that contains the values in the read-only dictionary.</span></span></summary>
        <value><span data-ttu-id="e90bd-139">Collection énumérable qui contient les valeurs dans dictionnaire en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e90bd-139">An enumerable collection that contains the values in the read-only dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e90bd-140">L’ordre des valeurs dans la collection dénombrable n’est pas spécifié, mais l’implémentation doit garantir que les valeurs sont dans le même ordre que les clés correspondantes dans la collection énumérable qui est retourné par la <xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e90bd-140">The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
