<Type Name="ImageSourceTypeConverter" FullName="System.Windows.Xps.Serialization.ImageSourceTypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="787cdb73882144fae8a9abbfb5dbdc6367a15c26" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65009241" /></Metadata><TypeSignature Language="C#" Value="public class ImageSourceTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageSourceTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageSourceTypeConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageSourceTypeConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type ImageSourceTypeConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des convertisseurs de types pour convertir des objets <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> vers et à partir d'objets d’autres types.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez les classes de base <xref:System.ComponentModel.TypeConverter> et <xref:System.ComponentModel.ExpandableObjectConverter> pour des remarques importantes sur l’utilisation.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageSourceTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageSourceTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez les classes de base <xref:System.ComponentModel.TypeConverter> et <xref:System.ComponentModel.ExpandableObjectConverter> pour des remarques importantes sur l’utilisation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageSourceTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="sourceType">Le type d’objet à convertir.</param>
        <summary>Retourne une valeur qui indique si ce convertisseur peut convertir une instance d’un type spécifié à un <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <returns><see langword="true" /> Si les objets du type spécifié peuvent être convertis ; Sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, cette méthode retourne `true` uniquement si `sourceType` est un <xref:System.Uri>.  
  
 Le `context` paramètre n’est pas utilisé. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir vos propres exigences de conversion. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />; par conséquent, toujours le vérifier. En outre, les propriétés de l'objet <paramref name="context" /> peuvent retourner une référence null (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageSourceTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="destinationType">Le type d’objet que vous souhaitez convertir en un <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</param>
        <summary>Retourne une valeur qui indique si ce <see cref="T:System.Windows.Xps.Serialization.ImageSourceTypeConverter" /> peut convertir un <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> à une instance d’un type spécifié.</summary>
        <returns><see langword="true" /> Si la conversion est possible ; Sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, cette méthode retourne `true` uniquement si `destinationType` est un <xref:System.Uri>.  
  
 Le `context` paramètre n’est pas utilisé. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir vos propres exigences de conversion. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />; par conséquent, toujours le vérifier. En outre, les propriétés de l'objet <paramref name="context" /> peuvent retourner une référence null (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageSourceTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="culture">La langue et culture utilisées lors de la conversion.</param>
        <param name="value">Objet qui est converti.</param>
        <summary>Convertit un objet spécifié en un <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</summary>
        <returns>Nouvel objet <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas implémentée dans cette classe - excepté pour lever les exceptions. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Cette méthode est appelée à partir de cette classe au lieu d’à partir d’une classe dérivée.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Le <paramref name="value" /> n’est pas un type qui peut être converti.</exception>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir une méthode de conversion. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Utilisez le <paramref name="culture" /> paramètre pour fournir des informations sur la langue ou la culture.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageSourceTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="culture">La langue et culture utilisées lors de la conversion.</param>
        <param name="value">L’objet que vous souhaitez convertir.</param>
        <param name="destinationType">Le type que vous souhaitez <paramref name="value" /> converti en.</param>
        <summary>Convertit un <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> à un objet du type spécifié.</summary>
        <returns>La nouvelle <see cref="T:System.Object" /> du type désigné. Tel qu’implémenté dans cette classe, l’objet doit être un <see cref="T:System.Uri" />. L’objet exprime le [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de l’image sérialisée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, `value` doit être un <xref:System.Windows.Media.Imaging.BitmapSource>.  
  
 Tel qu’implémenté dans cette classe, `destinationType` doit être un <xref:System.Uri> ou <xref:System.NotSupportedException> est levée.  
  
 Le `culture` paramètre n’est pas utilisé. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Le <paramref name="destinationType" /> n’est pas un type qui <paramref name="value" /> peut être converti en.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Xps.XpsSerializationException">Une erreur se produit lors de la sérialisation de l’image.</exception>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir votre propre conversion. Utilisez le <paramref name="culture" /> paramètre pour spécifier la langue et culture. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />; par conséquent, toujours le vérifier. En outre, les propriétés de l'objet <paramref name="context" /> peuvent retourner une référence null (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ImageSourceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="imageSourceTypeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="value">Objet dont vous avez besoin pour des descriptions de propriété.</param>
        <param name="attributes">Tableau d’attributs qui sont utilisés pour filtrer la collection retournée pour exclure les propriétés inutiles.</param>
        <summary>Obtient une collection de descriptions de propriété pour le type spécifié.</summary>
        <returns>Un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les descriptions de propriété qui sont exposées pour ce composant ; ou <see langword="null" /> si aucune description de propriété est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas implémentée dans cette classe - excepté pour lever l’exception. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Cette méthode est appelée à partir de cette classe au lieu d’à partir d’une classe dérivée.</exception>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir une méthode permettant d’obtenir sélectionné <see cref="T:System.ComponentModel.PropertyDescriptor" /> objets pour les types. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Utilisez le <paramref name="attributes" /> tableau pour désigner les propriétés à inclure ou exclure.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>