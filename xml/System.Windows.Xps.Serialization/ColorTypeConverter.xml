<Type Name="ColorTypeConverter" FullName="System.Windows.Xps.Serialization.ColorTypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b16fb80aa96a889d7a9a93f3526ecbcbea93e59e" /><Meta Name="ms.sourcegitcommit" Value="75eca440f8f4d595506405f48961f38649e160d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/01/2019" /><Meta Name="ms.locfileid" Value="66457855" /></Metadata><TypeSignature Language="C#" Value="public class ColorTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColorTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.ColorTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ColorTypeConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColorTypeConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type ColorTypeConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des convertisseurs de types pour convertir des objets <see cref="T:System.Windows.Media.Color" /> vers et à partir d'objets d’autres types.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe possède également des méthodes pour écrire un <xref:System.Windows.Media.ColorContext> à un package de la spécification XPS (XML Paper) et à lire un <xref:System.Windows.Media.ColorContext> à partir d’un package XPS qui est doté d’une chaîne qui représente le [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de la <xref:System.Windows.Media.ColorContext>.  
  
 Consultez les classes de base <xref:System.ComponentModel.TypeConverter> et <xref:System.ComponentModel.ExpandableObjectConverter> pour des remarques importantes sur l’utilisation.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/windows/desktop/ee719902(v=vs.85).aspx">Composant de création d’images Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Xps.Serialization.ColorTypeConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consultez les classes de base <xref:System.ComponentModel.TypeConverter> et <xref:System.ComponentModel.ExpandableObjectConverter> pour des remarques importantes sur l’utilisation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="colorTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="sourceType">Type d'objet qui est candidat pour la conversion.</param>
        <summary>Retourne une valeur qui indique si ce convertisseur peut convertir une instance de type spécifié en <see cref="T:System.Windows.Media.Color" />.</summary>
        <returns><see langword="true" /> si les objets du type spécifié peuvent être convertis ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, cette méthode retourne `true` uniquement si `sourceType` est un <xref:System.String>.  
  
 Le `context` paramètre n’est pas utilisé. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir vos propres exigences de conversion. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />; par conséquent, toujours le vérifier. En outre, les propriétés de l'objet <paramref name="context" /> peuvent retourner une référence null (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="colorTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="destinationType">Type d'objet vers lequel vous souhaitez convertir une couleur.</param>
        <summary>Retourne une valeur qui indique si ce <see cref="T:System.Windows.Xps.Serialization.ColorTypeConverter" /> peut convertir <see cref="T:System.Windows.Media.Color" /> en une instance de type spécifié.</summary>
        <returns><see langword="true" /> si la conversion est possible ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, cette méthode retourne `true` uniquement si `destinationType` est un <xref:System.String>.  
  
 Le `context` paramètre n’est pas utilisé. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir vos propres exigences de conversion. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Ce paramètre peut être <see langword="null" />; par conséquent, toujours le vérifier. En outre, les propriétés de l'objet <paramref name="context" /> peuvent retourner une référence null (<see langword="Nothing" />).</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="colorTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="culture">Langue et culture utilisées lors de la conversion.</param>
        <param name="value">Objet converti.</param>
        <summary>Convertit un objet spécifié en <see cref="T:System.Windows.Media.Color" />.</summary>
        <returns>Nouvel objet <see cref="T:System.Windows.Media.Color" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas implémentée dans cette classe - excepté pour lever des exceptions. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Cette méthode est appelée à partir de cette classe plutôt que d'une classe dérivée.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> n'est pas un type qui peut être converti.</exception>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir une méthode de conversion. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Utilisez le <paramref name="culture" /> paramètre pour fournir des informations sur la langue ou la culture.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="colorTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="culture">Langue et culture utilisées lors de la conversion.</param>
        <param name="value">Objet que vous souhaitez convertir.</param>
        <param name="destinationType">Type auquel <paramref name="value" /> est converti.</param>
        <summary>Convertit <see cref="T:System.Windows.Media.Color" /> en un objet du type spécifié.</summary>
        <returns>Nouveau <see cref="T:System.Object" /> du type indiqué.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, `destinationType` doit être un <xref:System.String> ou l’exception est levée. Le format de la chaîne varie en fonction de la valeur de `context` et `culture`.  
  
 Si `culture` est `null`, la culture système actuelle est utilisée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationType" /> n'est pas un type auquel <paramref name="value" /> peut être converti.  
  
ou 
<paramref name="culture" /> est une culture neutre.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="colorTypeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="value">Objet du type pour lequel vous avez besoin de descriptions de propriété.</param>
        <param name="attributes">Tableau d'attributs qui filtrent la collection retournée pour exclure les propriétés inutiles.</param>
        <summary>Obtient une collection de descriptions de propriétés pour le type spécifié.</summary>
        <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les descriptions de propriété qui sont exposées pour ce composant ; ou <see langword="null" /> si aucune description de propriété n'est retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas implémentée dans cette classe - excepté pour lever l’exception. Consultez **Remarques pour les héritiers**.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Cette méthode est appelée à partir de cette classe plutôt que d'une classe dérivée.</exception>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir une méthode permettant d’obtenir sélectionné <see cref="T:System.ComponentModel.PropertyDescriptor" /> objets pour les types. Utilisez le paramètre <paramref name="context" /> pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé. Utilisez le <paramref name="attributes" /> tableau pour désigner les propriétés à inclure ou exclure.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SerializeColorContext">
      <MemberSignature Language="C#" Value="public static string SerializeColorContext (IServiceProvider context, System.Windows.Media.ColorContext colorContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SerializeColorContext(class System.IServiceProvider context, class System.Windows.Media.ColorContext colorContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.ColorTypeConverter.SerializeColorContext(System.IServiceProvider,System.Windows.Media.ColorContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SerializeColorContext(IServiceProvider ^ context, System::Windows::Media::ColorContext ^ colorContext);" />
      <MemberSignature Language="F#" Value="static member SerializeColorContext : IServiceProvider * System.Windows.Media.ColorContext -&gt; string" Usage="System.Windows.Xps.Serialization.ColorTypeConverter.SerializeColorContext (context, colorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.IServiceProvider" />
        <Parameter Name="colorContext" Type="System.Windows.Media.ColorContext" />
      </Parameters>
      <Docs>
        <param name="context">Objet qui fournit des informations contextuelles.</param>
        <param name="colorContext">Objet à sérialiser.</param>
        <summary>Sérialise un <see cref="T:System.Windows.Media.ColorContext" /> dans le package XPS et retourne son [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] sous forme de chaîne.</summary>
        <returns><see cref="T:System.String" /> qui représente le [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du contexte de couleur.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="colorContext" /> a la valeur <see langword="null" />.</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/windows/desktop/ee719902(v=vs.85).aspx">Composant de création d’images Windows</related>
      </Docs>
    </Member>
  </Members>
</Type>