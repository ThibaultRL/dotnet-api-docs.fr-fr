<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="653b0096816140df8e14c31875fab5b4d202d7ef" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56362357" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5e2fe-101">Dirige la sortie de traçage ou de débogage vers la sortie standard ou le flux d'erreurs standard.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e2fe-102">Utilisez la <xref:System.Diagnostics.ConsoleTraceListener> classe permettant d’écrire la trace et débogage des messages sur la console.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="5e2fe-103">Vous pouvez initialiser un <xref:System.Diagnostics.ConsoleTraceListener> objet à écrire des messages de trace dans le <xref:System.Console.Out%2A?displayProperty=nameWithType> flux ou vers le <xref:System.Console.Error%2A?displayProperty=nameWithType> flux.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5e2fe-104">l’interface <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="5e2fe-105">Lorsque vous avez fini d’utiliser le type, vous devez supprimer il directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="5e2fe-106">Pour supprimer le type directement, appelez sa <xref:System.IDisposable.Dispose%2A> méthode dans un`try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="5e2fe-107">Pour supprimer indirectement, utiliser une construction de langage tel que `using` (en C#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="5e2fe-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="5e2fe-108">Pour plus d’informations, consultez la section « À l’aide un objet qui implémente IDisposable » dans le <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="5e2fe-109">Lorsque le suivi et la sortie de débogage est activé, le <xref:System.Diagnostics.ConsoleTraceListener> les messages sont écrits spécifié <xref:System.Console?displayProperty=nameWithType> flux, qui est similaire à la façon dont les messages sont écrits avec la <xref:System.Console.Write%2A?displayProperty=nameWithType> ou <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="5e2fe-110">Dans une application console, le <xref:System.Console?displayProperty=nameWithType> les flux de sortie et erreur écrivent des messages dans la fenêtre de console existante, ou vous pouvez rediriger les flux pour écrire dans un <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e2fe-111">Si la console n’existe pas, comme dans une application Windows, les messages écrits dans la console ne sont pas affichés.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="5e2fe-112">Ajouter un <xref:System.Diagnostics.ConsoleTraceListener> objet appropriés <xref:System.Diagnostics.Trace.Listeners%2A> collection si vous souhaitez que les messages écrits via <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, ou <xref:System.Diagnostics.Debug> à écrire dans la console.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="5e2fe-113">En outre, vous pouvez écrire des messages directement dans la console en utilisant le <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> ou <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e2fe-114">Le <xref:System.Diagnostics.Debug> et <xref:System.Diagnostics.Trace> classes partagent le même <xref:System.Diagnostics.TraceListenerCollection> collection, accédée via leurs respectifs `Listeners` propriétés.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="5e2fe-115">Si vous ajoutez un <xref:System.Diagnostics.ConsoleTraceListener> de l’objet à la collection à l’aide d’une de ces classes, l’autre classe utilise automatiquement le même écouteur.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="5e2fe-116">La plupart des compilateurs activer la trace et debug sortie via des indicateurs de compilation conditionnelle.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="5e2fe-117">Si vous n’activez pas le traçage ou de débogage, les messages écrits via les <xref:System.Diagnostics.Debug?displayProperty=nameWithType> et <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes sont en réalité ignorés.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="5e2fe-118">La syntaxe pour activer le suivi et la sortie de débogage est spécifique au compilateur ; Si vous utilisez des compilateurs autres que C# ou Visual Basic, consultez la documentation de votre compilateur.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="5e2fe-119">Pour activer le débogage en C#, ajoutez le **/d : Debug**indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou vous pouvez ajouter **#define DEBUG** vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="5e2fe-120">Dans Visual Basic, ajoutez le **/d : DEBUG = True** indicateur pour la ligne de commande du compilateur.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="5e2fe-121">Pour activer le traçage en C#, ajoutez le **/d : trace** indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez **#define TRACE** vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="5e2fe-122">Dans Visual Basic, ajoutez le **/d : trace = True** indicateur pour la ligne de commande du compilateur.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="5e2fe-123">Vous pouvez ajouter un <xref:System.Diagnostics.ConsoleTraceListener> de l’objet à la <xref:System.Diagnostics.Trace.Listeners%2A> collection dans votre code, ou vous pouvez ajouter un <xref:System.Diagnostics.ConsoleTraceListener> de l’objet à le <xref:System.Diagnostics.Trace.Listeners%2A> collection via le fichier de configuration d’application.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="5e2fe-124">Ajouter le <xref:System.Diagnostics.ConsoleTraceListener> objet dans votre code pour écrire des messages pour un chemin de section ou de l’exécution de code spécifique.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="5e2fe-125">Ajouter le <xref:System.Diagnostics.ConsoleTraceListener> objet dans votre fichier de configuration d’application pour diriger tous les trace et debug des messages à la console pendant que l’application s’exécute.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="5e2fe-126">Pour écrire la trace et déboguer des messages sur la console pour une section de code spécifique, vous devez initialiser un <xref:System.Diagnostics.ConsoleTraceListener> de l’objet et l’ajouter à la <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="5e2fe-127">Instrumentez la section de code qui contient des messages à l’aide de la <xref:System.Diagnostics.Trace> ou <xref:System.Diagnostics.Debug> classes.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="5e2fe-128">À la fin de la section de code, supprimez le <xref:System.Diagnostics.ConsoleTraceListener> de l’objet à partir de la <xref:System.Diagnostics.Trace.Listeners%2A> collection et appeler le <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> méthode sur le <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="5e2fe-129">Pour diriger la trace de tous les messages et de débogage dans la console pendant que l’application s’exécute, ajoutez un <xref:System.Diagnostics.ConsoleTraceListener> objet au fichier de configuration de l’application.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="5e2fe-130">Modifiez le fichier de configuration qui correspond au nom de votre application, ou le fichier app.config dans un [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] projet.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="5e2fe-131">Dans ce fichier, insérez un élément pour un <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="5e2fe-132">L’exemple suivant ajoute un <xref:System.Diagnostics.ConsoleTraceListener> objet nommé `configConsoleListener` à la <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="5e2fe-133">Pour plus d’informations sur l’ajout d’écouteurs de trace dans le fichier de configuration d’application, consultez [ &lt;écouteurs&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span><span class="sxs-lookup"><span data-stu-id="5e2fe-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e2fe-134">L’exemple de code suivant implémente une application console qui se compose d’une classe avec deux méthodes publiques.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="5e2fe-135">Le `Main` méthode examine les arguments de ligne de commande et détermine si la sortie de trace doit être dirigé vers le flux d’erreurs standard ou le flux de sortie standard.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="5e2fe-136">`Main` Crée et initialise un <xref:System.Diagnostics.ConsoleTraceListener> objet spécifié <xref:System.Console> flux de sortie et ajoute cet objet à la collection d’écouteurs de trace.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="5e2fe-137">Il appelle ensuite la `WriteEnvironmentInfoToTrace` (méthode), qui écrit les informations sur l’environnement d’exécution et la configuration d’écouteur de trace à la sortie de trace.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="5e2fe-138">Lorsque l’exemple d’application s’exécute, les détails de configuration d’environnement et de trace sont écrits dans le flux de sortie de console spécifié via le <xref:System.Diagnostics.ConsoleTraceListener> objet.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e2fe-139">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.ConsoleTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e2fe-140">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.ConsoleTraceListener" /> avec une sortie de trace écrite dans le flux de sortie standard.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e2fe-141">Ce constructeur initialise un <xref:System.Diagnostics.ConsoleTraceListener> objet à écrire des messages dans la <xref:System.Console.Out%2A?displayProperty=nameWithType> flux.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="5e2fe-142">Son <xref:System.Diagnostics.TraceListener.Name%2A> propriété est initialisée avec une chaîne vide ( » »).</span><span class="sxs-lookup"><span data-stu-id="5e2fe-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e2fe-143">Le code suivant exemple initialise un <xref:System.Diagnostics.ConsoleTraceListener> objet spécifié <xref:System.Console> flux de sortie et l’ajoute à la collection d’écouteurs de trace.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="5e2fe-144">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.ConsoleTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream"><span data-ttu-id="5e2fe-145"><see langword="true" /> pour écrire la sortie de trace ou de débogage dans le flux d'erreurs standard ; <see langword="false" /> pour écrire la sortie de trace ou de débogage dans le flux de sortie standard.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-145"><see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span></span></param>
        <summary><span data-ttu-id="5e2fe-146">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.ConsoleTraceListener" /> avec une option pour écrire la sortie de trace dans le flux de sortie standard ou le flux d'erreurs standard.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e2fe-147">Ce constructeur initialise un <xref:System.Diagnostics.ConsoleTraceListener> objet à écrire des messages dans la <xref:System.Console.Out%2A?displayProperty=nameWithType> ou <xref:System.Console.Error%2A?displayProperty=nameWithType> flux.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="5e2fe-148">Son <xref:System.Diagnostics.TraceListener.Name%2A> propriété est initialisée avec une chaîne vide ( » »).</span><span class="sxs-lookup"><span data-stu-id="5e2fe-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e2fe-149">Le code suivant exemple initialise un <xref:System.Diagnostics.ConsoleTraceListener> objet spécifié <xref:System.Console> flux de sortie et l’ajoute à la collection d’écouteurs de trace.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="5e2fe-150">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Diagnostics.ConsoleTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e2fe-151">Ferme la sortie au flux spécifié pour cet écouteur de suivi.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-151">Closes the output to the stream specified for this trace listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e2fe-152">Le flux spécifié pour ce <xref:System.Diagnostics.ConsoleTraceListener> instance (soit la <xref:System.Console.Out%2A?displayProperty=nameWithType> flux ou le <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) est fermé.</span><span class="sxs-lookup"><span data-stu-id="5e2fe-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>