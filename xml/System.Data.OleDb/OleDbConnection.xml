<Type Name="OleDbConnection" FullName="System.Data.OleDb.OleDbConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34b764f718e21c703748b13f279bc3b0327d9db9" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65003939" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type OleDbConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable&#xA;    interface IDbConnection&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une connexion ouverte à une source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Data.OleDb.OleDbConnection> objet représente une connexion unique à une source de données. Avec un système de base de données client/serveur, il est équivalent à une connexion réseau au serveur. Selon les fonctionnalités prises en charge par le fournisseur OLE DB natif, certaines méthodes et les propriétés d’un <xref:System.Data.OleDb.OleDbConnection> objet n’est peut-être pas disponible.  
  
 Lorsque vous créez une instance de <xref:System.Data.OleDb.OleDbConnection>, toutes les propriétés sont définies sur leurs valeurs initiales. Pour obtenir la liste de ces valeurs, consultez le <xref:System.Data.OleDb.OleDbConnection> constructeur.  
  
 Vous pouvez ouvrir plusieurs DataReaders sur un seul <xref:System.Data.OleDb.OleDbConnection>. Si le fournisseur OLE DB que vous utilisez ne prend pas en charge plusieurs DataReaders sur une seule connexion, le fournisseur ouvre implicitement une connexion supplémentaire pour chacun.  
  
 Si le <xref:System.Data.OleDb.OleDbConnection> est hors de portée, il n’est pas fermé. Par conséquent, vous devez fermer explicitement la connexion en appelant <xref:System.Data.OleDb.OleDbConnection.Close%2A> ou **Dispose**, ou à l’aide de la <xref:System.Data.OleDb.OleDbConnection> de l’objet au sein d’un `Using` instruction.  
  
> [!NOTE]
>  Pour déployer des applications hautes performances, vous devez utiliser le regroupement de connexions. Lorsque vous utilisez le fournisseur de données .NET Framework pour OLE DB, vous n’avez pas à activer le regroupement de connexions, car le fournisseur gère automatiquement. Pour plus d’informations sur l’utilisation de connexion le regroupement avec le fournisseur de données .NET Framework pour OLE DB, consultez [OLE DB, ODBC et le regroupement de connexions Oracle](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  
  
 Si une erreur fatale <xref:System.Data.OleDb.OleDbException> (par exemple, un SQL Server niveau de gravité 20 ou supérieur) est généré par la méthode exécutant une <xref:System.Data.OleDb.OleDbCommand>, le <xref:System.Data.OleDb.OleDbConnection> peut être fermé. L'utilisateur peut toutefois rouvrir la connexion et continuer.  
  
 Une application qui crée une instance de la <xref:System.Data.OleDb.OleDbConnection> objet peut exiger de tous les appelants directs et indirects dispose des autorisations suffisantes pour le code en définissant des demandes de sécurité déclaratives ou impératives. <xref:System.Data.OleDb.OleDbConnection> effectue des demandes de sécurité à l’aide de la <xref:System.Data.OleDb.OleDbPermission> objet. Les utilisateurs peuvent vérifier que leur code dispose des autorisations suffisantes à l’aide de la <xref:System.Data.OleDb.OleDbPermissionAttribute> objet. Les utilisateurs et administrateurs peuvent également utiliser le [Caspol.exe (outil de stratégie de sécurité d’accès de Code)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) pour modifier la stratégie de sécurité aux niveaux ordinateur, utilisateur et entreprise. Pour plus d'informations, consultez [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  
  
 Pour plus d’informations sur la gestion des messages d’avertissement et d’informations à partir du serveur de données, consultez [les événements de connexion](~/docs/framework/data/adonet/connection-events.md).  
  
> [!NOTE]
>  Le <xref:System.Data.OleDb.OleDbConnection> objet ne prend pas en charge la définition ou la récupération des propriétés dynamiques spécifiques à un fournisseur OLE DB. Seules les propriétés pouvant être passées dans la chaîne de connexion du fournisseur OLE DB sont prises en charge.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbCommand> et un <xref:System.Data.OleDb.OleDbConnection>. Le <xref:System.Data.OleDb.OleDbConnection> est ouvert et défini en tant que le <xref:System.Data.OleDb.OleDbCommand.Connection%2A> pour le <xref:System.Data.OleDb.OleDbCommand>. L’exemple appelle ensuite <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> et ferme la connexion. Pour ce faire, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> est passée à une chaîne de connexion et une chaîne de requête qui est une instruction SQL INSERT.  
  
 [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une nouvelle instance de <xref:System.Data.OleDb.OleDbConnection> est créé, la lecture/écriture propriétés sont définies sur les valeurs initiales suivantes, sauf si elles sont spécifiquement définis à l’aide de leurs mots clés associés dans le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriété.  
  
|Properties|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|une chaîne vide ( » »)|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|une chaîne vide ( » »)|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|une chaîne vide ( » »)|  
  
 Vous pouvez modifier la valeur de ces propriétés uniquement à l’aide du <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant crée et ouvre un <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbConnection : string -&gt; System.Data.OleDb.OleDbConnection" Usage="new System.Data.OleDb.OleDbConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connexion qui permet d'ouvrir la base de données.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Data.OleDb.OleDbConnection" /> classe avec la chaîne de connexion spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une nouvelle instance de <xref:System.Data.OleDb.OleDbConnection> est créé, la lecture/écriture propriétés sont définies sur les valeurs initiales suivantes, sauf si elles sont spécifiquement définis à l’aide de leurs mots clés associés dans le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriété.  
  
|Properties|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|une chaîne vide ( » »)|  
|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|une chaîne vide ( » »)|  
  
 Vous pouvez modifier la valeur de ces propriétés uniquement à l’aide du <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant crée et ouvre un <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="oleDbConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Commence une transaction de base de données.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OleDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.OleDb.OleDbTransaction" Usage="oleDbConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Commence une transaction de base de données avec actuel <see cref="T:System.Data.IsolationLevel" /> valeur.</summary>
        <returns>Objet représentant la nouvelle transaction.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez explicitement valider ou restaurer la transaction en utilisant le <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> ou <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> (méthode). Pour vous assurer que le fournisseur de données .NET Framework pour le modèle de gestion de transaction OLE DB effectue correctement, évitez d’utiliser d’autres modèles de gestion des transactions, telles que celles fournies par la source de données.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et un <xref:System.Data.OleDb.OleDbTransaction>. Il montre également comment utiliser le <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, et <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> méthodes.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Les transactions parallèles ne sont pas prises en charge.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.OleDb.OleDbTransaction" Usage="oleDbConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Niveau d’isolement sous lequel la transaction doit s’exécuter.</param>
        <summary>Commence une transaction de base de données avec le niveau d’isolement spécifié.</summary>
        <returns>Objet représentant la nouvelle transaction.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez explicitement valider ou restaurer la transaction en utilisant le <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> ou <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> (méthode). Pour vous assurer que le fournisseur de données .NET Framework pour le modèle de gestion de transaction OLE DB effectue correctement, évitez d’utiliser d’autres modèles de gestion des transactions, telles que celles fournies par la source de données.  
  
> [!NOTE]
>  Si vous ne spécifiez pas un niveau d’isolation, le niveau d’isolation par défaut pour le fournisseur sous-jacent est utilisé. Pour spécifier un niveau d’isolation avec la <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> (méthode), utilisez la surcharge qui accepte le `isolationLevel` paramètre.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et un <xref:System.Data.OleDb.OleDbTransaction>. Il montre également comment utiliser le <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, un <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, et <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> méthodes.  
  
 [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Les transactions parallèles ne sont pas prises en charge.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="oleDbConnection.ChangeDatabase value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nom de la base de données.</param>
        <summary>Modifie la base de données actuelle d'une connexion <see cref="T:System.Data.OleDb.OleDbConnection" /> établie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur fournie dans le `database` paramètre doit être un nom de base de données valide. Le `database` paramètre ne peut pas contenir une valeur null, une chaîne vide ou une chaîne de caractères vides uniquement.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et affiche certaines de ses propriétés en lecture seule.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le nom de la base de données n'est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException">La connexion n'est pas ouverte.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Impossible de modifier la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme la connexion à la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbConnection.Close%2A> méthode annule les transactions en attente. Il libère la connexion au pool de connexions ou que vous ferme la connexion si le regroupement de connexions est désactivé. Si <xref:System.Data.OleDb.OleDbConnection.Close%2A> est appelée lors de la gestion d’un <xref:System.Data.Common.DbConnection.StateChange> événement, aucune supplémentaire <xref:System.Data.Common.DbConnection.StateChange> les événements sont déclenchés.  
  
 Une application peut appeler <xref:System.Data.OleDb.OleDbConnection.Close%2A> plusieurs fois. Aucune exception n’est générée.  
  
> [!CAUTION]
>  N’appelez pas <xref:System.Data.OleDb.OleDbConnection.Close%2A> ou **Dispose** sur un <xref:System.Data.OleDb.OleDbConnection>, un <xref:System.Data.OleDb.OleDbDataReader>, ou tout autre objet managé dans le `Finalize` méthode de votre classe. Dans un finaliseur, vous devez libérer uniquement les ressources non managées que votre classe possède directement. Si votre classe ne possède pas de ressource non managée, n'incluez pas une méthode `Finalize` dans la définition de classe. Pour plus d’informations, consultez [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.OleDb.OleDbConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.ADO.Design.OleDbConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne utilisée pour ouvrir une base de données.</summary>
        <value>Chaîne de connexion du fournisseur OLE DB qui inclut le nom de source de données et les autres paramètres nécessaires pour établir la connexion initiale. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> est conçu pour faire correspondre le format de chaîne de connexion OLE DB aussi fidèlement que possible avec les exceptions suivantes :  
  
-   Le « fournisseur = `value` « clause est requise. Toutefois, vous ne pouvez pas utiliser « fournisseur = MSDASQL », car le fournisseur de données .NET Framework pour OLE DB ne prend pas en charge le fournisseur OLE DB pour ODBC (MSDASQL). Pour accéder aux sources de données ODBC, utilisez le <xref:System.Data.Odbc.OdbcConnection> objet qui se trouve dans le <xref:System.Data.Odbc> espace de noms.  
  
-   Contrairement à ODBC ou ADO, la chaîne de connexion qui est retournée est identique à l’ensemble d’utilisateurs <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, moins les informations de sécurité si `Persist Security Info` a la valeur `false` (valeur par défaut). Le fournisseur de données .NET Framework pour OLE DB ne pas conserver ou retourner le mot de passe dans une chaîne de connexion, sauf si vous définissez la `Persist Security Info` mot clé à `true` (non recommandé). Pour maintenir un niveau élevé de sécurité, il est fortement recommandé d’utiliser le `Integrated Security` mot clé with `Persist Security Info` défini sur `false`.  
  
 Vous pouvez utiliser le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriété pour se connecter à une variété de sources de données. L’exemple suivant illustre plusieurs chaînes de connexion possibles.  
  
```  
"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes"  
  
"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\bin\LocalAccess40.mdb"  
  
"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI"  
```  
  
 Si le `Data Source` mot clé n’est pas spécifié dans la chaîne de connexion, le fournisseur tente de se connecter au serveur local si celle-ci est disponible.  
  
 Pour plus d’informations sur les chaînes de connexion, consultez [Using Connection String Keywords with SQL Server Native Client](https://go.microsoft.com/fwlink/?LinkId=126696).  
  
 Le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propriété peut être définie uniquement lorsque la connexion est fermée. La plupart des valeurs de chaîne de connexion ont des propriétés en lecture seule correspondantes. Lorsque la chaîne de connexion est définie, ces propriétés sont mises à jour, sauf si une erreur est détectée. Dans ce cas, aucune des propriétés sont mises à jour. <xref:System.Data.OleDb.OleDbConnection> propriétés retournent uniquement les paramètres qui sont contenus dans le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  
  
 Réinitialiser le <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> sur une connexion fermée rétablit toutes les valeurs de chaîne de connexion et les propriétés associées. Cela inclut le mot de passe. Par exemple, si vous définissez une chaîne de connexion qui inclut « Initial Catalog = AdventureWorks », puis réinitialisez la chaîne de connexion à « fournisseur = SQLOLEDB ; Source de données = MySQLServer ; IntegratedSecurity = SSPI », le <xref:System.Data.OleDb.OleDbConnection.Database%2A> propriété n’est plus définie AdventureWorks. (La valeur de catalogue Initial de la chaîne de connexion correspond à la `Database` propriété.)  
  
 Une validation préliminaire de la chaîne de connexion est effectuée lorsque la propriété est définie. Si les valeurs pour le `Provider`, `Connect Timeout`, `Persist Security Info`, ou `OLE DB Services` sont inclus dans la chaîne, ces valeurs sont vérifiées. Lorsqu’une application appelle la <xref:System.Data.OleDb.OleDbConnection.Open%2A> (méthode), la chaîne de connexion est entièrement validé. Si la chaîne de connexion contient des propriétés non valides ou non pris en charge, une exception au moment de l’exécution, telles que <xref:System.ArgumentException>, est généré.  
  
> [!CAUTION]
>  Il est possible de fournir des informations de connexion pour un <xref:System.Data.OleDb.OleDbConnection> dans un fichier lien UDL (Universal Data) ; toutefois vous devez éviter cela. Fichiers UDL ne sont pas chiffrés et exposent les informations de chaîne de connexion en texte clair. Comme un fichier UDL est une ressource basée sur un fichier externe pour votre application, il n'est pas possible de le sécuriser à l'aide du .NET Framework.  
  
 Le format de chaîne de connexion de base inclut une série de paires mot clé/valeur séparées par des points-virgules. Le signe égal (=) sert de lien entre chaque mot clé et sa valeur. Pour inclure les valeurs qui contiennent un point-virgule, un caractère guillemet unique ou un caractère guillemet double, la valeur doit être placée entre guillemets doubles. Si la valeur contient un point-virgule et un caractère guillemet double, la valeur peut être placée entre guillemets simples. Le guillemet simple est également utile si la valeur commence par un caractère de guillemet double. À l’inverse, le guillemet double peut être utilisé si la valeur commence par un guillemet simple. Si la valeur contient des caractères de guillemet simple et guillemet double, le caractère guillemet permettant de délimiter la valeur doit être double chaque fois qu’il se trouve dans la valeur.  
  
 Pour inclure des espaces de début ou de fin dans la valeur de chaîne, la valeur doit être placée entre dans les guillemets simples ou des guillemets doubles. Les espaces de début ou de fin autour d’entier, booléen ou valeurs énumérées sont ignorés, même si entourée de guillemets. Toutefois, les espaces au sein d’un mot clé de chaîne littérale ou une valeur sont conservés. Les guillemets simples ou doubles peuvent servir au sein d’une chaîne de connexion sans délimiteurs (par exemple, `Data Source= my'Server` ou `Data Source= my"Server`), sauf si un caractère guillemet est le premier ou dernier caractère dans la valeur.  
  
 Pour inclure un signe égal (=) dans un mot clé ou une valeur, il doit être précédé d’un autre signe égal. Par exemple, dans la chaîne de connexion hypothétique  
  
```  
"key==word=value"  
```  
  
 le mot clé est « clé = word » et la valeur est « value ».  
  
 Si un mot clé spécifique dans un mot clé = valeur paire apparaît plusieurs fois dans une chaîne de connexion, la dernière occurrence qui est utilisée dans la valeur définie.  
  
 Mots clés ne respectent pas la casse.  
  
> [!CAUTION]
>  Soyez prudent lors de la construction d’une chaîne de connexion basée sur l’entrée d’utilisateur, par exemple, lors de la récupération des informations d’ID et mot de passe utilisateur à partir d’une boîte de dialogue et leur ajout à la chaîne de connexion. L’application doit s’assurer qu’un utilisateur ne peut pas incorporer des paramètres de chaîne de connexion supplémentaires dans ces valeurs, par exemple, un mot de passe en tant que « validpassword ; database = somedb » dans une tentative d’attachement à une autre base de données. Si vous utilisez le paramètre de chaîne de connexion de propriétés étendues pour les connexions OLE DB, évitez de passer des ID d’utilisateur et mots de passe, car vous évitez de stocker les ID utilisateur et mots de passe en texte clair si vous le pouvez et parce que le paramètre par défaut `Persist Security Info= false` pas affecter le `Extended Properties` paramètre.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et définit certaines de ses propriétés dans la chaîne de connexion.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un argument de chaîne de connexion non valide a été fourni ou un argument de chaîne de connexion obligatoire n’a pas été fourni.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la durée d'attente préalable à l'établissement d'une connexion avant que la tentative ne soit abandonnée et qu'une erreur ne soit générée.</summary>
        <value>Durée en secondes d’attente d’ouverture d’une connexion. La valeur par défaut est de 15 secondes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur 0 indique aucune limite et doivent être évitée dans un <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> , car une tentative de connexion attend indéfiniment.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et définit certaines de ses propriétés dans la chaîne de connexion.  
  
 [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur définie est inférieure à 0.</exception>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.OleDb.OleDbCommand" Usage="oleDbConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée et retourne un <see cref="T:System.Data.OleDb.OleDbCommand" /> objet associé à la <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns>Objet <see cref="T:System.Data.OleDb.OleDbCommand" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">Utilisation des commandes</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="oleDbConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.OleDb.OleDbConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte.</summary>
        <value>Nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbConnection.Database%2A> propriété met à jour dynamiquement. Si vous modifiez la base de données actuelle à l’aide d’une instruction SQL ou le <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> (méthode), un message d’information est envoyé et la propriété est automatiquement mis à jour.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et affiche certaines de ses propriétés en lecture seule.  
  
 [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.DataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.OleDb.OleDbConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du serveur ou le nom de fichier de la source de données.</summary>
        <value>Le nom du serveur ou le nom de fichier de la source de données. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la connexion à la base de données est fermée, le `DataSource` propriété retourne le contenu de `ConnectionString` pour le mot clé source de données. Si la connexion est ouverte et `ConnectionString` valeur du mot clé de source de données commence par «&#124;datadirectory&#124;», la propriété retourne le contenu de `ConnectionString` pour le mot clé de source de données uniquement. Si la connexion à la base de données est ouverte, la propriété retourne ce que le fournisseur natif retourne pour la `DBPROP_INIT_DATASOURCE,` et si c’est vide, le fournisseur natif `DBPROP_DATASOURCENAME` est retourné.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et affiche certaines de ses propriétés en lecture seule.  
  
 [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.Database" />
        <altmember cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="oleDbConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Référence à un <see cref="T:System.EnterpriseServices.ITransaction" /> existant dans lequel s’inscrire.</param>
        <summary>S’inscrit dans la transaction spécifiée en tant que transaction distribuée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nouveau dans ADO.NET 2.0 est la prise en charge pour l’utilisation de la <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> méthode pour s’inscrire dans une transaction distribuée. Étant donné qu’il inscrit une connexion dans un <xref:System.Transactions.Transaction> instance, **EnlistTransaction** tire parti des fonctionnalités disponibles dans le <xref:System.Transactions> espace de noms pour la gestion des transactions distribuées, à la  **EnlistDistributedTransaction** à cet effet. Pour plus d’informations, consultez [Transactions distribuées](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Vous pouvez continuer à s’inscrire dans une transaction distribuée existante à l’aide du <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> méthode si l’inscription automatique est désactivée. L’inscription dans une transaction distribuée existante permet de s’assurer que, si la transaction est validée ou restaurée, les modifications apportées par le code dans la source de données sont également validées ou restaurées. Pour plus d’informations sur les transactions distribuées, consultez [les Transactions distribuées](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> Retourne une exception si le <xref:System.Data.OleDb.OleDbConnection> a déjà démarré une transaction à l’aide <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. Toutefois, si la transaction est une transaction locale démarrée dans la source de données (par exemple, en exécutant explicitement l’instruction BEGIN TRANSACTION en utilisant un <xref:System.Data.OleDb.OleDbCommand> objet), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> restaure la transaction locale et s’inscrit dans l’espace transaction distribuée comme demandé. Vous ne sont pas informés que la transaction locale a été restaurée et êtes responsable de la gestion des éventuelles transactions locales non lancées à l’aide de <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="oleDbConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">Référence à un <see cref="T:System.Transactions.Transaction" /> existant dans lequel s’inscrire.</param>
        <summary>S’inscrit dans la transaction spécifiée en tant que transaction distribuée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nouveau dans ADO.NET 2.0 est la prise en charge pour l’utilisation de la <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> méthode pour s’inscrire dans une transaction distribuée. Étant donné qu’il inscrit une connexion dans un <xref:System.Transactions.Transaction> instance, **EnlistTransaction** tire parti des fonctionnalités disponibles dans le <xref:System.Transactions> espace de noms pour la gestion des transactions distribuées, à la  **EnlistDistributedTransaction**, qui utilise un <xref:System.EnterpriseServices.ITransaction> objet. Il possède également une sémantique légèrement différente : dès qu’une connexion est explicitement inscrite sur une transaction, il ne peut pas être désinscrit ou inscrite dans une autre transaction jusqu'à ce que la première transaction se termine. Pour plus d’informations sur les transactions distribuées, consultez [les Transactions distribuées](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="GetOleDbSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetOleDbSchemaTable(valuetype System.Guid schema, object[] restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOleDbSchemaTable (schema As Guid, restrictions As Object()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetOleDbSchemaTable(Guid schema, cli::array &lt;System::Object ^&gt; ^ restrictions);" />
      <MemberSignature Language="F#" Value="member this.GetOleDbSchemaTable : Guid * obj[] -&gt; System.Data.DataTable" Usage="oleDbConnection.GetOleDbSchemaTable (schema, restrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Guid" />
        <Parameter Name="restrictions" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="schema">Parmi les <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> valeurs qui spécifie la table de schéma à retourner.</param>
        <param name="restrictions">Un <see cref="T:System.Object" /> tableau de valeurs de restriction. Ils sont appliqués dans l’ordre des colonnes de restriction. Autrement dit, la première valeur de restriction s’applique à la première colonne de restriction, la deuxième valeur de restriction s’applique à la deuxième colonne de restriction et ainsi de suite.</param>
        <summary>Retourne des informations de schéma à partir d’une source de données comme indiqué par un GUID et après avoir appliqué les restrictions spécifiées.</summary>
        <returns>Un <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma demandé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La table de schéma est retournée comme un <xref:System.Data.DataTable> qui a le même format que l’ensemble de lignes de schéma OLE DB spécifié par le `schema` paramètre. Utilisez le `restrictions` paramètre pour filtrer les lignes à retourner dans le <xref:System.Data.DataTable> (par exemple, en spécifiant des restrictions pour le nom de la table, type, propriétaire ou schéma). Lorsque vous transmettez des valeurs dans le tableau, inclure des chaînes vides ou les valeurs NULL pour les éléments de tableau qui ne contiennent pas de valeurs. Si vous passez un tableau vide pour `restrictions`, toutes les lignes (une pour chaque table) sont retournées par défaut d’ordre. Les valeurs dans le tableau correspondent à l’ordre des colonnes dans la table source et <xref:System.Data.DataTable>. Chaque élément dans le tableau de restrictions est comparé avec le contenu de la colonne correspondante dans l’ensemble de lignes de schéma. Par exemple, le premier élément dans le tableau de restrictions est comparé à la première colonne dans l’ensemble de lignes. Si un élément de restriction n’est pas null, seules les lignes à partir de l’ensemble de lignes du schéma qui correspondent exactement à la valeur de la restriction sont ajoutées à résultant <xref:System.Data.DataTable>.  
  
 Le <xref:System.Data.OleDb.OleDbConnection> méthode appelle sous-jacent OLE DB **IDBSchemaRowset::GetRowset** méthode à l’aide de règles de conversion standard du common language runtime. Pour plus d’informations, consultez [les Types de données COM](https://msdn.microsoft.com/library/f93ae35d-a416-4218-8700-c8218cc90061).  
  
 Vous pouvez récupérer des informations sur les littéraux à l’aide de <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. Cela fournit des informations équivalentes à l’appel OLE DB **IDBInfo::GetLiteralInfo** interface ou ADO **Connection.OpenSchema** méthode avec le `adSchemaDBInfoLiterals` constante.  
  
   
  
## Examples  
 L’exemple suivant retourne une liste de tables dans une base de données.  
  
 [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OleDb.OleDbException">Le jeu de restrictions spécifié n’est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.OleDb.OleDbConnection" /> est fermé.</exception>
        <exception cref="T:System.ArgumentException">L’ensemble de lignes de schéma spécifié n’est pas pris en charge par le fournisseur OLE DB.  
  
ou 
Le <paramref name="schema" /> paramètre contient une valeur de <see cref="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals" /> et <paramref name="restrictions" /> paramètre contient une ou plusieurs restrictions.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtention des informations de schéma à partir d’une base de données</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.OleDb.OleDbConnection" />.</summary>
        <returns><see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtention des informations de schéma à partir d’une base de données</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Indique le nom du schéma à retourner.</param>
        <summary>Retourne des informations de schéma pour la source de données de ce <see cref="T:System.Data.OleDb.OleDbConnection" /> à l’aide de la chaîne spécifiée pour le nom de schéma.</summary>
        <returns><see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque `collectionName` est spécifié comme étant null, le <xref:System.Data.DataTable> contient des informations sur toutes les métadonnées qui sont disponibles et ses restrictions.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtention des informations de schéma à partir d’une base de données</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="oleDbConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">Indique le nom du schéma à retourner.</param>
        <param name="restrictionValues">Spécifie un ensemble de valeurs de restriction pour le schéma demandé.</param>
        <summary>Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.OleDb.OleDbConnection" /> à l’aide de la chaîne spécifiée pour le nom de schéma et du tableau de chaînes spécifié pour les valeurs de restriction.</summary>
        <returns><see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque `collectionName` est spécifié comme étant null, le <xref:System.Data.DataTable> contient des informations sur toutes les métadonnées qui sont disponibles et ses restrictions.  
  
 Le `restrictionValues` paramètre peut fournir *n* profondeur des valeurs qui sont spécifiées par la collection de restrictions pour un regroupement spécifique. Pour définir des valeurs d’une restriction donnée et pas définir les valeurs d’autres restrictions, vous devez définir les restrictions précédentes à la valeur null, puis entrer la valeur appropriée pour la restriction que vous souhaitez spécifier une valeur pour.  
  
 Un exemple de ceci est la collection de « Tables ». Si la collection « Tables » a trois restrictions (base de données, propriétaire et nom de la table), et que vous souhaitez récupérer uniquement les tables associées au propriétaire « Carl », vous devez passer les valeurs suivantes (au minimum) : null, « Carl ». Si une valeur de restriction n’est pas passée, les valeurs par défaut sont utilisés pour cette restriction. Il s’agit du même mappage que le passage d’une valeur null, ce qui est différent du passage d’une chaîne vide pour la valeur du paramètre. Dans ce cas, la chaîne vide (" ») est considéré comme étant la valeur du paramètre spécifié.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">Obtention des informations de schéma à partir d’une base de données</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OleDbInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.OleDb.OleDbInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.OleDb.OleDbInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le fournisseur envoie un avertissement ou un message d’information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les clients qui souhaitent traiter les avertissements ou messages d’information envoyés par le serveur doivent créer un <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> délégué à l’écoute à cet événement.  
  
 Le <xref:System.Data.OleDb.OleDbConnection.InfoMessage> événement se produit lorsqu’un message de faible gravité est retourné à partir de la source de données. Messages de faible gravité sont ceux qui ne lèvent pas d’exception. Pour Microsoft SQL Server, cela inclut les messages d’erreur dont la gravité de 10 ou moins  
  
 Pour plus d’informations et un exemple, consultez [les événements de connexion](~/docs/framework/data/adonet/connection-events.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="oleDbConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre une connexion de base de données avec les paramètres de propriété spécifiés par le <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbConnection> établit une connexion ouverte à partir du pool de connexion si celle-ci est disponible. Sinon, il établit une nouvelle connexion à la source de données. Vous pouvez ouvrir plusieurs DataReaders sur un seul <xref:System.Data.OleDb.OleDbConnection>. Si le fournisseur OLE DB que vous utilisez ne prend pas en charge plusieurs DataReaders active sur une seule connexion, le fournisseur OLEDB ouvre implicitement une connexion supplémentaire pour chacun.  
  
> [!NOTE]
>  Si le <xref:System.Data.OleDb.OleDbConnection> est hors de portée, il n’est pas fermé. Par conséquent, vous devez fermer explicitement la connexion en appelant <xref:System.Data.OleDb.OleDbConnection.Close%2A> ou **Dispose**, ou à l’aide de la connexion au sein d’un `Using` instruction.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connexion est déjà ouverte.</exception>
        <exception cref="T:System.Data.OleDb.OleDbException">Une erreur de connexion s’est produite lors de l’ouverture de la connexion.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string" Usage="System.Data.OleDb.OleDbConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_Provider")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du fournisseur OLE DB spécifié dans le « fournisseur = « clause de la chaîne de connexion.</summary>
        <value>Le nom du fournisseur tel que spécifié dans le « fournisseur = « clause de la chaîne de connexion. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et affiche certaines de ses propriétés en lecture seule.  
  
 [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberSignature Language="F#" Value="static member ReleaseObjectPool : unit -&gt; unit" Usage="System.Data.OleDb.OleDbConnection.ReleaseObjectPool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique que le <see cref="T:System.Data.OleDb.OleDbConnection" /> pool d’objets peut être libéré lorsque la dernière connexion sous-jacente est libérée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` peut être appelée pour libérer des ressources qui devraient être réservées pour regroupée <xref:System.Data.OleDb.OleDbConnection> objets. Vous souhaiterez peut-être appeler cette méthode si, par exemple, l’objet de connexion ne sera pas utilisé pendant la période où les services OLE DB doivent normalement maintenir connexions regroupées active. Notez que l’appel de la méthode seule ne libère pas réellement les connexions actives qui existent dans le pool.  
  
 Les éléments suivants doivent se produire pour que le pool soit finalement supprimé :  
  
1.  Appelez <xref:System.Data.OleDb.OleDbConnection.Close%2A> pour retourner l’objet de connexion au pool.  
  
2.  Permettre à chaque objet de connexion pour le délai d’attente du pool.  
  
3.  Appelez <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  
  
4.  Appelez le garbage collection.  
  
 À l’inverse, si vous appelez <xref:System.Data.OleDb.OleDbConnection.Close%2A> sur toutes les connexions actives et appelez le garbage collection, mais n’appelez pas <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, les ressources réservées pour les objets mis en pool resteront disponibles.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection>, s’il s’ouvre, affiche certaines de ses propriétés, ferme la connexion et libère le pool d’objets pour économiser les ressources.  
  
 [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
        <related type="Article" href="https://msdn.microsoft.com/library/2bd83b1e-3ea9-43c4-bade-d9cdb9bbbb04">Comprendre le regroupement de connexions</related>
      </Docs>
    </Member>
    <Member MemberName="ResetState">
      <MemberSignature Language="C#" Value="public void ResetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.ResetState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetState();" />
      <MemberSignature Language="F#" Value="member this.ResetState : unit -&gt; unit" Usage="oleDbConnection.ResetState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Mises à jour le <see cref="P:System.Data.OleDb.OleDbConnection.State" /> propriété de la <see cref="T:System.Data.OleDb.OleDbConnection" /> objet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certains fournisseurs OLE DB peuvent vérifier l’état actuel de la connexion. Par exemple, si le serveur de base de données a recyclé car vous avez ouvert votre <xref:System.Data.OleDb.OleDbConnection>, le <xref:System.Data.OleDb.OleDbConnection.State%2A> propriété continue à renvoyer `Open`. Si vous travaillez avec un fournisseur OLE DB qui prend en charge l’interrogation de ces informations sur une connexion active, l’appel la <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> (méthode) et en activant le <xref:System.Data.OleDb.OleDbConnection.State%2A> propriété vous indiquera que la connexion n’est plus ouverte. Le <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> méthode repose sur les fonctionnalités dans le fournisseur OLE DB pour vérifier l’état actuel de la connexion. Pour déterminer si votre fournisseur OLE DB prend en charge cette fonctionnalité, consultez la documentation du fournisseur pour plus d’informations sur DBPROP_CONNECTIONSTATUS.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.OleDb.OleDbConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("OleDbConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne qui contient la version du serveur auquel le client est connecté.</summary>
        <value>La version du serveur connecté.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> propriété est mappée à la propriété OLE DB DBPROP_DBMSVER. Si <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> n’est pas pris en charge par le fournisseur OLE DB sous-jacent, une chaîne vide est retournée.  
  
 La version est au format *##. ##. ###*, où les deux premiers chiffres sont la version principale, les deux chiffres suivants à la version secondaire, et les quatre derniers chiffres sont la version release. Le fournisseur doit rendre la version du produit dans ce formulaire, mais peut également ajouter la version spécifique du produit - par exemple, « 04.01.0000 Rdb 4.1 ». La chaîne est au format *major.minor.build*, où major et minor correspondent exactement deux chiffres et build est exactement quatre chiffres.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection> et affiche certaines de ses propriétés en lecture seule.  
  
 [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connexion est fermée.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.OleDb.OleDbConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’état actuel de la connexion.</summary>
        <value>Combinaison d'opérations de bits des valeurs <see cref="T:System.Data.ConnectionState" />. La valeur par défaut est fermé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Changements d’état est autorisé comme suit :  
  
-   À partir de `Closed` à `Open`, en utilisant le <xref:System.Data.OleDb.OleDbConnection.Open%2A> méthode de la <xref:System.Data.OleDb.OleDbConnection> objet.  
  
-   À partir de `Open` à `Closed`, à l’aide la <xref:System.Data.OleDb.OleDbConnection.Close%2A> méthode ou le **Dispose** méthode de la <xref:System.Data.OleDb.OleDbConnection> objet.  
  
> [!NOTE]
>  Dans la version précédente du .NET Framework, appelant le <xref:System.Data.OleDb.OleDbConnection.State%2A> propriété augmentait la charge de l’application, car chaque appel entraînait un appel à la propriété OLE DB DBPROP_CONNECTIONSTATUS pour une connexion ouverte. Avec la version du .NET Framework 2.0, ce n’est plus un problème.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">Connexion aux Sources de données</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Commence une transaction de base de données.</summary>
        <returns>Objet représentant la nouvelle transaction.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel isolationLevel) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">Une combinaison au niveau du bit des valeurs d’énumération qui spécifient le niveau d’isolation de la transaction.</param>
        <summary>Commence une transaction de base de données avec le niveau d’isolation spécifié.</summary>
        <returns>Objet représentant la nouvelle transaction.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée et retourne un objet command associé à la connexion.</summary>
        <returns>Objet command associé à la connexion.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nouveau <see cref="T:System.Object" /> correspondant à une copie de cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.OleDb.OleDbConnection> est castée en interface <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>