<Type Name="OleDbDataReader" FullName="System.Data.OleDb.OleDbDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d18537b81ed0241a407c1c39b1dc2763425ff08" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006455" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OleDbDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Fournit un moyen de lire un flux avant uniquement de lignes de données à partir d’une source de données. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour créer un <xref:System.Data.OleDb.OleDbDataReader>, vous devez appeler la <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> méthode de la <xref:System.Data.OleDb.OleDbCommand> objet, au lieu d’utiliser directement un constructeur.  
  
 Avant de fermer le <xref:System.Data.OleDb.OleDbConnection>, fermez d’abord le <xref:System.Data.OleDb.OleDbDataReader> objet. Vous devez également fermer le <xref:System.Data.OleDb.OleDbDataReader> de l’objet si vous prévoyez resuse un <xref:System.Data.OleDb.OleDbCommand> objet. Par exemple, vous ne peut pas récupérer les paramètres de sortie jusqu'à une fois que vous appelez <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.  
  
 Modifications apportées à un jeu de résultats par un autre processus ou thread pendant la lecture des données peuvent être visibles par l’utilisateur de la <xref:System.Data.OleDb.OleDbDataReader>. Toutefois, le comportement précis dépend du minutage.  
  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> et <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sont les seules propriétés que vous pouvez appeler après la <xref:System.Data.OleDb.OleDbDataReader> est fermé. Bien que le <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> propriété est accessible pendant que le <xref:System.Data.OleDb.OleDbDataReader> existe, toujours appeler <xref:System.Data.OleDb.OleDbDataReader.Close%2A> avant de retourner la valeur de <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> pour garantir une valeur de retournée précise.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection>, un <xref:System.Data.OleDb.OleDbCommand>et un <xref:System.Data.OleDb.OleDbDataReader>. L’exemple lit les données, en écrivant dans la console. Enfin, l’exemple ferme le <xref:System.Data.OleDb.OleDbDataReader> , puis le <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbDataReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oleDbDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme l'objet <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez appeler explicitement la <xref:System.Data.OleDb.OleDbDataReader.Close%2A> méthode lorsque vous avez terminé à l’aide de la <xref:System.Data.OleDb.OleDbDataReader> à utiliser associé <xref:System.Data.OleDb.OleDbConnection> à d’autres fins.  
  
> [!CAUTION]
>  N’appelez pas **fermer** ou **Dispose** sur une connexion, un DataReader ou tout autre objet managé dans le **Finalize** méthode de votre classe. Dans un finaliseur, vous devez libérer uniquement les ressources non managées que votre classe possède directement. Si votre classe ne possède pas les ressources non managées, n’incluez pas une **Finalize** méthode dans votre définition de classe. Pour plus d’informations, consultez [Garbage Collection](~/docs/standard/garbage-collection/index.md).  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection>, un <xref:System.Data.OleDb.OleDbCommand>et un <xref:System.Data.OleDb.OleDbDataReader>. L’exemple lit les données, en écrivant dans la console. Enfin, l’exemple ferme le <xref:System.Data.OleDb.OleDbDataReader>, puis le <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.OleDb.OleDbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique la profondeur d’imbrication de la ligne actuelle.</summary>
        <value>Profondeur d'imbrication de la ligne actuelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La profondeur de la table située le plus à l'extérieur est zéro.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de colonnes figurant dans la ligne actuelle.</summary>
        <value>Absence de positionnement dans un jeu d’enregistrements valide, 0 ; Sinon, le nombre de colonnes dans l’enregistrement actif. La valeur par défaut est -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Inclut des champs masqués. Utilisez <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A> pour exclure les champs masqués.  
  
 Après l’exécution d’une requête qui ne retourne pas de lignes, <xref:System.Data.OleDb.OleDbDataReader.FieldCount%2A> retourne 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Il n’existe aucune connexion active à une source de données.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OleDbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OleDbDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="oleDbDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permet à l’objet tenter de libérer des ressources et effectuer d’autres opérations de nettoyage avant qu’il ne soit récupéré par le garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="oleDbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une valeur Boolean.</summary>
        <returns>La valeur de la colonne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent les données récupérées doivent déjà être une valeur booléenne ou une exception est générée.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="oleDbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</summary>
        <returns>La valeur de la colonne spécifiée sous forme d’octet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent les données récupérées doivent déjà être un octet.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="oleDbDataReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <param name="dataIndex">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
        <param name="buffer">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
        <param name="bufferIndex">L’index dans le <paramref name="buffer" /> dans laquelle l’opération d’écriture doit commencer.</param>
        <param name="length">La longueur maximale à copier dans la mémoire tampon.</param>
        <summary>Lit un flux d’octets à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau en commençant à l’offset de mémoire tampon donnée.</summary>
        <returns>Nombre réel d'octets lus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> Retourne le nombre d’octets disponibles dans le champ. La plupart du temps il s’agit de la longueur exacte du champ. Toutefois, le nombre retourné peut être inférieure à la longueur réelle du champ si `GetBytes` a déjà été utilisé pour obtenir des octets à partir du champ. Cela peut être le cas, par exemple, lorsque le <xref:System.Data.OleDb.OleDbDataReader> lit une structure de données volumineux dans une mémoire tampon. Pour plus d’informations, consultez le `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.  
  
 Si vous passez une mémoire tampon qui est `null`, <xref:System.Data.OleDb.OleDbDataReader.GetBytes%2A> retourne la longueur du champ en octets.  
  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un tableau d’octets.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="oleDbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un caractère.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Non pris en charge pour <xref:System.Data.OleDb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="oleDbDataReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <param name="dataIndex">Index figurant dans la ligne à partir de laquelle lancer l'opération de lecture.</param>
        <param name="buffer">La mémoire tampon dans lequel copier les données.</param>
        <param name="bufferIndex">L’index dans le <paramref name="buffer" /> dans laquelle l’opération d’écriture doit commencer.</param>
        <param name="length">Nombre de caractères à lire.</param>
        <summary>Lit un flux de caractères à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau en commençant à l’offset de mémoire tampon donnée.</summary>
        <returns>Nombre réel de caractères lus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> Retourne le nombre de caractères disponibles dans le champ. La plupart du temps il s’agit de la longueur exacte du champ. Toutefois, le nombre retourné peut être inférieure à la longueur réelle du champ si `GetChars` a déjà été utilisé pour obtenir des caractères à partir du champ. Cela peut être le cas, par exemple, lorsque le <xref:System.Data.OleDb.OleDbDataReader> lit une structure de données volumineux dans une mémoire tampon. Pour plus d’informations, consultez le `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.  
  
 Si vous passez une mémoire tampon qui est `null`, <xref:System.Data.OleDb.OleDbDataReader.GetChars%2A> retourne la longueur du champ en caractères.  
  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un tableau de caractères.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OleDb.OleDbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As OleDbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OleDb::OleDbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetData : int -&gt; System.Data.OleDb.OleDbDataReader" Usage="oleDbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Retourne un <see cref="T:System.Data.OleDb.OleDbDataReader" /> objet pour l’ordinal de colonne demandé.</summary>
        <returns>Objet <see cref="T:System.Data.OleDb.OleDbDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> appellera <xref:System.Data.OleDb.OleDbDataReader.GetData%2A> si le fournisseur retourne un <xref:System.Data.IDataReader> qui comporte une colonne qui prend en charge <xref:System.Data.IDataReader>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="oleDbDataReader.GetDataTypeName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Numéro de colonne de base zéro.</param>
        <summary>Obtient le nom du type de données source.</summary>
        <returns>Le nom du type de données principal. Pour plus d’informations, consultez <see href="https://docs.microsoft.com/sql/t-sql/data-types/data-types-transact-sql">Types de données SQL Server</see> ou <see href="https://docs.microsoft.com/sql/odbc/microsoft/microsoft-access-data-types">Accéder aux types de données</see>.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="oleDbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.DateTime> objet.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="oleDbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="oleDbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.Decimal" />.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.Decimal> objet.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="oleDbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante double précision.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un nombre à virgule flottante double précision.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="oleDbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bien que vous pouvez utiliser cette méthode pour récupérer un énumérateur explicite, dans les langages qui prennent en charge un `foreach` construction, il est plus simple d’utiliser la construction de boucle directement pour effectuer une itération dans les lignes dans le lecteur de données.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (index As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int index);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="oleDbDataReader.GetFieldType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Numéro de colonne de base zéro.</param>
        <summary>Obtient le <see cref="T:System.Type" /> qui est le type de données de l’objet.</summary>
        <returns>Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="oleDbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante simple précision.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées. Par conséquent, les données récupérées doivent déjà être un nombre à virgule flottante simple précision.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="oleDbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un identificateur global unique (GUID).</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un identificateur global unique.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="oleDbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 16 bits.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un entier signé 16 bits.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="oleDbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un entier signé 32 bits.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="oleDbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un entier signé 64 bits.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int index);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="oleDbDataReader.GetName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Numéro de colonne de base zéro.</param>
        <summary>Obtient le nom de la colonne spécifiée.</summary>
        <returns>Nom de la colonne spécifiée.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="oleDbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de la colonne.</param>
        <summary>Obtient la colonne ordinal, étant donné le nom de la colonne.</summary>
        <returns>Numéro de colonne de base zéro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> effectue d’abord une recherche qui respecte la casse. En cas d’échec, un deuxième non-respect de la casse est recherché. La méthode lève un `IndexOutOfRange` exception si le numéro de colonne de base zéro est introuvable.  
  
 <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> est la largeur des caractères kana, non-respect de.  
  
 Étant donné que les recherches basées sur un ordinal sont plus efficaces que les recherches par nom, il est inutile d’appeler <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> dans une boucle. Gagnez du temps en appelant <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A> une fois et en assignant les résultats à une variable de type entier pour une utilisation dans la boucle.  
  
   
  
## Examples  
 L'exemple suivant décrit comment utiliser la méthode <xref:System.Data.OleDb.OleDbDataReader.GetOrdinal%2A>.  
  
 [!code-csharp[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="oleDbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
        <returns><see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A> méthode mappe à OLE DB **IColumnsRowset::GetColumnsRowset** méthode et retourne les métadonnées de chaque colonne dans l’ordre suivant :  
  
|Colonne de DataReader|ID de la colonne OLE DB|Description|  
|-----------------------|----------------------|-----------------|  
|Nom de colonne|DBCOLUMN_NAME|Le nom de la colonne ; Cela est peut-être pas unique. Si cela ne peut pas être déterminé, une valeur null est retournée. Ce nom reflète toujours le dernier nom attribué de la colonne dans le texte de commande ou de la vue actuelle.|  
|ColumnOrdinal|DBCOLUMN_NUMBER|Numéro en base zéro de la colonne. Cette colonne ne peut pas contenir une valeur null.|  
|ColumnSize|DBCOLUMN_COLUMNSIZE|La longueur maximale possible d’une valeur dans la colonne. Pour les colonnes qui utilisent un type de données de longueur fixe, il s’agit de la taille du type de données.|  
|NumericPrecision|DBCOLUMN_PRECISION|Si DbType est un type de données numérique, il s’agit de la précision maximale de la colonne. La précision des colonnes avec un type de données DBTYPE_DECIMAL ou DBTYPE_NUMERIC dépend de la définition de la colonne. Si DbType n’est pas un type de données numérique, il s’agit d’une valeur null.|  
|NumericScale|DBCOLUMN_SCALE|Si DbType est DBTYPE_DECIMAL ou DBTYPE_NUMERIC, ceci est le nombre de chiffres à droite de la virgule décimale. Sinon, il s’agit d’une valeur null.|  
|Type de données|None|Correspond au type .NET Framework de la colonne.|  
|ProviderType|DBCOLUMN_TYPE|L’indicateur de la colonne type de données. Si le type de données de la colonne varie d’une ligne à l’autre, il doit s’agir DBTYPE_VARIANT. Cette colonne ne peut pas contenir une valeur null.|  
|IsLong|DBCOLUMNFLAGS_ISLONG|Le fournisseur définit DBCOLUMNFLAGS_ISLONG si la colonne contient un Long objet BLOB (Binary) qui contient des données très longues. La définition de données très longues est spécifique au fournisseur. Le paramètre de cet indicateur correspond à la valeur de la colonne IS_LONG dans l’ensemble de lignes PROVIDER_TYPES pour le type de données.|  
|AllowDBNull|DBCOLUMNFLAGS_ISNULLABLE|Le fournisseur définit DBCOLUMNFLAGS_ISNULLABLE si le consommateur peut définir la colonne à une valeur null, ou si le fournisseur ne peut pas déterminer si le consommateur peut définir la colonne à une valeur null. Une colonne peut contenir des valeurs null, même si elle ne peut pas être définie sur une valeur null.|  
|IsReadOnly|DBCOLUMNFLAGS_WRITE|`true` Si la colonne ne peut pas être modifiée ; sinon `false`. La colonne est censée pour être accessible en écriture si le fournisseur a défini l’indicateur DBCOLUMNFLAGS_WRITEUNKNOWN ou DBCOLUMNFLAGS_WRITE.|  
|IsRowVersion|DBCOLUMNFLAGS_ISROWID|Le fournisseur définit DBCOLUMNFLAGS_ISROWID si la colonne contient un identificateur de ligne persistant qui ne peut pas être écrits sur et n’a aucune valeur significative, excepté pour identifier la ligne.|  
|IsUnique|DBCOLUMN_ISUNIQUE|VARIANT_TRUE : Aucun deux lignes dans la base table-la table retournée dans BaseTableName peuvent n’ont la même valeur dans cette colonne. IsUnique est garanti être VARIANT_TRUE si la colonne représente une clé en soi ou s’il existe une contrainte de type UNIQUE qui s’applique uniquement à cette colonne.<br /><br /> VARIANT_FALSE : La colonne peut contenir des valeurs dupliquées dans la table de base. La valeur par défaut de cette colonne est VARIANT_FALSE.|  
|IsKey|DBCOLUMN_KEYCOLUMN|VARIANT_TRUE : La colonne fait partie d’un ensemble de colonnes dans l’ensemble de lignes qui, ensemble, identifient la ligne. L’ensemble de colonnes avec IsKey définie sur VARIANT_TRUE doit identifier de manière unique une ligne dans l’ensemble de lignes. Il n’existe aucune exigence que cet ensemble de colonnes est un ensemble minimal de colonnes. Cet ensemble de colonnes peut-être être généré à partir d’une clé primaire de table de base, une contrainte unique ou un index unique.<br /><br /> VARIANT_FALSE : La colonne n’est pas nécessaire pour identifier la ligne.|  
|IsAutoIncrement|DBCOLUMN_ISAUTOINCREMENT|VARIANT_TRUE : La colonne assigne des valeurs aux nouvelles lignes selon des incréments fixes.<br /><br /> VARIANT_FALSE : La colonne n’affecte pas les valeurs aux nouvelles lignes selon des incréments fixes. La valeur par défaut de cette colonne est VARIANT_FALSE.|  
|BaseSchemaName|DBCOLUMN_BASESCHEMANAME|Le nom du schéma dans le magasin de données qui contient la colonne. Une valeur null si le nom de schéma de base ne peut pas être déterminé. La valeur par défaut de cette colonne est une valeur null.|  
|BaseCatalogName|DBCOLUMN_BASECATALOGNAME|Le nom du catalogue dans le magasin de données qui contient la colonne. Une valeur null si le nom de catalogue de base ne peut pas être déterminé. La valeur par défaut de cette colonne est une valeur null.|  
|BaseTableName|DBCOLUMN_BASETABLENAME|Le nom de la table ou vue dans le magasin de données qui contient la colonne. Une valeur null si le nom de la table de base ne peut pas être déterminé. La valeur par défaut de cette colonne est une valeur null.|  
|BaseColumnName|DBCOLUMN_BASECOLUMNNAME|Le nom de la colonne dans le magasin de données. Cela peut être différent du nom de colonne retourné dans la colonne ColumnName si un alias a été utilisé. Une valeur null si le nom de colonne de base ne peut pas être déterminé ou si la colonne de l’ensemble de lignes est dérivée, mais pas identique à, une colonne dans les données de stocker. La valeur par défaut de cette colonne est une valeur null.|  
  
> [!NOTE]
>  Pour vous assurer que les colonnes de métadonnées retournent les informations correctes, vous devez appeler <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> avec la `behavior` paramètre défini sur `KeyInfo`. Sinon, certaines colonnes dans la table du schéma peuvent retourner des données par défaut, null ou incorrectes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.OleDb.OleDbDataReader" /> est fermé.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="oleDbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous forme de chaîne.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent les données récupérées doivent déjà être une chaîne.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (ordinal As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetTimeSpan : int -&gt; TimeSpan" Usage="oleDbDataReader.GetTimeSpan ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.TimeSpan" />.</summary>
        <returns>Valeur de la colonne spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aucuns conversions ne sont effectuées ; Par conséquent, les données récupérées doivent déjà être un <xref:System.TimeSpan> objet.  
  
 Appelez <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A> pour rechercher les valeurs null avant d’appeler cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Le cast spécifié n’est pas valide.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="oleDbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient la valeur de la colonne au numéro spécifié dans son format natif.</summary>
        <returns>La valeur de retour.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne <xref:System.DBNull> pour les colonnes de la base de données null.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="oleDbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</param>
        <summary>Remplit un tableau d’objets avec les valeurs de colonne de la ligne actuelle.</summary>
        <returns>Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la plupart des applications, le <xref:System.Data.OleDb.OleDbDataReader.GetValues%2A> méthode fournit un moyen efficace pour récupérer toutes les colonnes, au lieu de récupérer chaque colonne individuellement.  
  
 Vous pouvez passer un <xref:System.Object> tableau qui contient un nombre inférieur au nombre de colonnes qui sont contenues dans la ligne obtenue. Uniquement la quantité de données le <xref:System.Object> tableau sont copiées dans le tableau. Vous pouvez également passer un <xref:System.Object> tableau dont la longueur est supérieure au nombre de colonnes qui figurent dans la ligne obtenue.  
  
 Cette méthode retourne <xref:System.DBNull> pour les colonnes de la base de données null.  
  
   
  
## Examples  
 [!code-csharp[OleDbDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/oledbdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OleDbDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/oledbdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.OleDb.OleDbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.OleDb.OleDbDataReader" /> contient une ou plusieurs lignes.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Data.OleDb.OleDbDataReader" /> contient une ou plusieurs lignes ; sinon <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.OleDb.OleDbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si le lecteur de données est fermé.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Data.OleDb.OleDbDataReader" /> est fermé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> et <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sont les seules propriétés que vous pouvez appeler après la <xref:System.Data.OleDb.OleDbDataReader> est fermé.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="oleDbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Numéro de colonne de base zéro.</param>
        <summary>Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
        <returns><see langword="true" /> Si la valeur de colonne spécifiée équivaut à <see cref="T:System.DBNull" />; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour rechercher les valeurs de colonne null avant d’appeler typée des méthodes get (par exemple, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, et ainsi de suite) pour éviter de lever une erreur.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la valeur d’une colonne dans son format natif.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Numéro de colonne.</param>
        <summary>Obtient la valeur de la colonne spécifiée dans son format natif en fonction de l’ordinal de colonne.</summary>
        <value>La valeur de la colonne spécifiée dans son format natif.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.OleDb.OleDbDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de la colonne.</param>
        <summary>Obtient la valeur de la colonne spécifiée dans son format natif en fonction du nom de colonne.</summary>
        <value>La valeur de la colonne spécifiée dans son format natif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une recherche respectant la casse est effectuée en premier. En cas d’échec, un deuxième non-respect de la casse est recherché.  
  
 Cette méthode est la longueur des caractères kana, non-respect de.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Aucune colonne portant le nom spécifié n’a été trouvée.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="oleDbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Avance le lecteur de données jusqu’au résultat suivant lors de la lecture des résultats d’instructions SQL par lots.</summary>
        <returns><see langword="true" /> s’il existe des jeux de résultats supplémentaires ; Sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisé pour traiter plusieurs résultats qui peuvent être générés en exécutant des instructions SQL par lots.  
  
 Par défaut, le lecteur de données est positionné sur le premier résultat.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="oleDbDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fait passer le <see cref="T:System.Data.OleDb.OleDbDataReader" /> à l’enregistrement suivant.</summary>
        <returns><see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La position par défaut de la <xref:System.Data.OleDb.OleDbDataReader> est avant le premier enregistrement. Par conséquent, vous devez appeler <xref:System.Data.OleDb.OleDbDataReader.Read%2A> pour commencer à accéder aux données.  
  
 Bien que le <xref:System.Data.OleDb.OleDbDataReader> est utilisé, associé <xref:System.Data.OleDb.OleDbConnection> est occupé à servir jusqu'à ce que vous appel <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Data.OleDb.OleDbConnection>, un <xref:System.Data.OleDb.OleDbCommand>et un <xref:System.Data.OleDb.OleDbDataReader>. L’exemple lit les données, en écrivant dans la console. Enfin, l’exemple ferme le <xref:System.Data.OleDb.OleDbDataReader> , puis le <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.OleDb.OleDbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
        <value>Le nombre de lignes modifiées, insérées ou supprimées ; 0 si aucune ligne n’a été affectée ou si l’instruction a échoué et -1 pour les instructions SELECT.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> propriété n’est pas définie tant que toutes les lignes sont lues et que vous fermez le <xref:System.Data.OleDb.OleDbDataReader>.  
  
 La valeur de cette propriété est cumulative. Par exemple, si deux enregistrements sont insérés en mode batch, la valeur de <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> est deux.  
  
 <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> et <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> sont les seules propriétés que vous pouvez appeler après la <xref:System.Data.OleDb.OleDbDataReader> est fermé.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui itère au sein d’une collection.</summary>
        <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ordinal">Index du champ à rechercher.</param>
        <summary>Retourne un <see cref="T:System.Data.IDataReader" /> pour le numéro de colonne spécifié.</summary>
        <returns>Le <see cref="T:System.Data.IDataReader" /> du numéro de colonne spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Data.OleDb.OleDbDataReader" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.OleDb.OleDbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de champs dans <see cref="T:System.Data.OleDb.OleDbDataReader" /> qui ne sont pas masqués.</summary>
        <value>Nombre de champs qui ne sont pas masqués.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette valeur est utilisée pour déterminer combien de champs dans <xref:System.Data.OleDb.OleDbDataReader> sont visibles. Par exemple, un SELECT sur une clé primaire partielle retourne les parties restantes de la clé sous la forme de champs masqués. Les champs masqués sont toujours ajoutés derrière les champs visibles.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md">DataAdapters et DataReaders</related>
      </Docs>
    </Member>
  </Members>
</Type>