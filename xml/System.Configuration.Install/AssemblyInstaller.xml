<Type Name="AssemblyInstaller" FullName="System.Configuration.Install.AssemblyInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2a757cc74b85a3597c7d4d6771c89a640b91d35" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65001230" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyInstaller : System.Configuration.Install.Installer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyInstaller extends System.Configuration.Install.Installer" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.AssemblyInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInstaller&#xA;Inherits Installer" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInstaller : System::Configuration::Install::Installer" />
  <TypeSignature Language="F#" Value="type AssemblyInstaller = class&#xA;    inherit Installer" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.Installer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Charge un assembly et exécute tous les programmes d’installation qu’il contient.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dans l’exemple suivant, un <xref:System.Configuration.Install.AssemblyInstaller> est créé en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur. Les propriétés de cet objet sont définies et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes sont appelées pour installer le `MyAssembly.exe` assembly.  
  
 [!code-cpp[AssemblyInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller/CPP/assemblyinstaller.cpp#1)]
 [!code-csharp[AssemblyInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller/CS/assemblyinstaller.cs#1)]
 [!code-vb[AssemblyInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller/VB/assemblyinstaller.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Install.AssemblyInstaller" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Install.AssemblyInstaller" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes de la <xref:System.Configuration.Install.AssemblyInstaller> classe.  
  
 Un <xref:System.Configuration.Install.AssemblyInstaller> est créé en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur. Les propriétés de cet objet sont définies et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes sont appelées pour installer le `MyAssembly_Install.exe` assembly.  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller (System.Reflection.Assembly assembly, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::Reflection::Assembly ^ assembly, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : System.Reflection.Assembly * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (assembly, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assembly">Le <see cref="T:System.Reflection.Assembly" /> à installer.</param>
        <param name="commandLine">La ligne de commande à utiliser lors de la création d’un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet pour l’installation de l’assembly. Peut être une valeur null.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Configuration.Install.AssemblyInstaller" /> classe et spécifie l’assembly à installer et la ligne de commande à utiliser lors de la création d’un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInstaller (string filename, string[] commandLine);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string[] commandLine) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, commandLine As String())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::String ^ filename, cli::array &lt;System::String ^&gt; ^ commandLine);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public AssemblyInstaller (string fileName, string[] commandLine);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string[] commandLine) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, commandLine As String())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInstaller(System::String ^ fileName, cli::array &lt;System::String ^&gt; ^ commandLine);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : string * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (fileName, commandLine)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.AssemblyInstaller : string * string[] -&gt; System.Configuration.Install.AssemblyInstaller" Usage="new System.Configuration.Install.AssemblyInstaller (fileName, commandLine)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="commandLine" Type="System.String[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="filename">Nom de ficher de l’assembly à installer.</param>
        <param name="fileName">Nom de ficher de l’assembly à installer.</param>
        <param name="commandLine">La ligne de commande à utiliser lors de la création d’un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet pour l’installation de l’assembly. Peut être une valeur null.</param>
        <summary>Initialise une nouvelle instance de la <see cref="T:System.Configuration.Install.AssemblyInstaller" /> classe et spécifie le nom de fichier de l’assembly à installer et de la ligne de commande à utiliser lors de la création d’un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet pour l’installation de l’assembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dans l’exemple suivant, un <xref:System.Configuration.Install.AssemblyInstaller> est créé en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur avec l’assembly à installer et le tableau d’arguments de ligne de commande en tant que paramètres.  
  
 [!code-cpp[AssemblyInstaller_Uninstall#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CPP/assemblyinstaller_uninstall.cpp#1)]
 [!code-csharp[AssemblyInstaller_Uninstall#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CS/assemblyinstaller_uninstall.cs#1)]
 [!code-vb[AssemblyInstaller_Uninstall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Uninstall/VB/assemblyinstaller_uninstall.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly with get, set" Usage="System.Configuration.Install.AssemblyInstaller.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’assembly à installer.</summary>
        <value>Un <see cref="T:System.Reflection.Assembly" /> qui définit l’assembly à installer.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de la propriété est <see langword="null" />.</exception>
        <altmember cref="T:System.Reflection.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="CheckIfInstallable">
      <MemberSignature Language="C#" Value="public static void CheckIfInstallable (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckIfInstallable(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckIfInstallable (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckIfInstallable(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member CheckIfInstallable : string -&gt; unit" Usage="System.Configuration.Install.AssemblyInstaller.CheckIfInstallable assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">L’assembly dans lequel rechercher des programmes d’installation.</param>
        <summary>Vérifie si l’assembly spécifié peut être installé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable%2A> méthode détermine si l’assembly spécifié peut être installé. Pour éviter une exception est levée, le fichier doit respecter les critères suivants :  
  
-   Le fichier existe.  
  
-   Le fichier est un assembly .NET Framework.  
  
-   Les types publics peuvent être lues à partir du fichier.  
  
-   Il existe au moins une classe publique non abstraite qui étend la <xref:System.Configuration.Install.Installer> classe et contient le <xref:System.ComponentModel.RunInstallerAttribute.Yes> attribut.  
  
-   Une instance de chaque programme d’installation peut être créée.  
  
> [!NOTE]
>  Si l’assembly est valide mais ne contient aucun programme d’installation, une exception est levée. Ce comportement diffère de celui au moment de l’installation, quand il n’est pas une erreur d’installer un assembly vide.  
  
   
  
## Examples  
 Dans l’exemple suivant, la <xref:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable%2A> méthode est appliquée à un assembly existant et les résultats de l’appel sont affichés dans la console.  
  
 [!code-cpp[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/CPP/assemblyinstaller_checkifinstallable.cpp#1)]
 [!code-csharp[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/CS/assemblyinstaller_checkifinstallable.cs#1)]
 [!code-vb[AssemblyInstaller_CheckIfInstallable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_CheckIfInstallable/VB/assemblyinstaller_checkifinstallable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">L’assembly spécifié ne peut pas être installé.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public string[] CommandLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommandLine" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandLine As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommandLine { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string[] with get, set" Usage="System.Configuration.Install.AssemblyInstaller.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la ligne de commande à utiliser lors de la création d’un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet pour l’installation de l’assembly.</summary>
        <value>Tableau de type <see cref="T:System.String" /> qui représente la ligne de commande à utiliser lors de la création d’un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet pour l’installation de l’assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Configuration.Install.AssemblyInstaller.CommandLine%2A> propriété d’un <xref:System.Configuration.Install.AssemblyInstaller> est définie sur le nom du fichier journal.  
  
 [!code-cpp[AssemblyInstaller_Rollback#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#3)]
 [!code-csharp[AssemblyInstaller_Rollback#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#3)]
 [!code-vb[AssemblyInstaller_Rollback#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Un <see cref="T:System.Collections.IDictionary" /> qui contient l’état de l’ordinateur une fois que tous les programmes d’installation dans la collection de programme d’installation.</param>
        <summary>Termine la transaction d’installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée uniquement si le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> méthodes de tous les programmes d’installation de cette instance <xref:System.Configuration.Install.InstallerCollection> réussisse. Cette méthode appelle ensuite la <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthode de chaque programme d’installation dans la collection.  
  
 Store toutes les informations que vous devrez peut-être effectuer correctement une désinstallation dans l’état enregistré <xref:System.Collections.IDictionary>, qui est transmis à la <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes de la <xref:System.Configuration.Install.AssemblyInstaller> classe.  
  
 Un <xref:System.Configuration.Install.AssemblyInstaller> classe est créée en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur. Les propriétés de cet objet sont définies et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes sont appelées pour installer le `MyAssembly_Install.exe` assembly.  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="savedState" /> a la valeur <see langword="null" />.  
  
ou 
L’état enregistré <see cref="T:System.Collections.IDictionary" /> a peut-être été endommagé.  
  
ou 
Impossible de trouver un fichier.</exception>
        <exception cref="T:System.Exception">Une erreur s’est produite dans le <see cref="E:System.Configuration.Install.Installer.Committing" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une erreur s’est produite dans le <see cref="E:System.Configuration.Install.Installer.Committed" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une exception s’est produite pendant la <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> phase de l’installation. L’exception est ignorée et l’installation se poursuit. Toutefois, l’application ne pas fonctionne correctement après que l’installation est terminée.  
  
ou 
Types de programme d’installation sont introuvables dans un des assemblys.  
  
ou 
Une instance d’un des types de programme d’installation n’a pas pu être créée.</exception>
        <exception cref="T:System.Configuration.Install.InstallException">Une exception s’est produite pendant la <see cref="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)" /> phase de l’installation. L’exception est ignorée et l’installation se poursuit. Toutefois, l’application ne pas fonctionne correctement après que l’installation est terminée.</exception>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Configuration.Install.AssemblyInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le texte d’aide pour tous les programmes d’installation de la collection de programmes d’installation.</summary>
        <value>Le texte d’aide pour tous les programmes d’installation dans la collection de programme d’installation, y compris la description de ce que fait chaque programme d’installation et les options de ligne de commande (pour le programme d’installation) qui peuvent être passées et comprises par chaque programme d’installation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un exemple de programme d’installation est l’utilitaire InstallUtil.exe.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Configuration.Install.AssemblyInstaller.HelpText%2A> propriété d’un <xref:System.Configuration.Install.AssemblyInstaller> s’affiche sur la console.  
  
 [!code-cpp[AssemblyInstaller_HelpText#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CPP/assemblyinstaller_helptext.cpp#2)]
 [!code-csharp[AssemblyInstaller_HelpText#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CS/assemblyinstaller_helptext.cs#2)]
 [!code-vb[AssemblyInstaller_HelpText#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_HelpText/VB/assemblyinstaller_helptext.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.InstallContext" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Install savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> utilisé pour enregistrer les informations nécessaires à l’exécution d’une opération de validation, de restauration ou de désinstallation.</param>
        <summary>Effectue l’installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode appelle la <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> (méthode) de chaque programme d’installation contenu dans le <xref:System.Configuration.Install.Installer.Installers%2A> propriété de cette instance. Le <xref:System.Collections.IDictionary> objet spécifié par le `savedState` paramètre est mis à jour pour refléter l’état de l’installation après exécution des programmes d’installation des relation contenant-contenus. Si tous les le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> méthodes réussissent, le <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthode est appelée. Sinon, le <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> méthode est appelée.  
  
   
  
## Examples  
 L’exemple suivant montre le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes de la <xref:System.Configuration.Install.AssemblyInstaller> classe.  
  
 Un objet de la <xref:System.Configuration.Install.AssemblyInstaller> classe est créée en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur. Les propriétés de cet objet sont définies et le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> et <xref:System.Configuration.Install.AssemblyInstaller.Commit%2A> méthodes sont appelées pour installer l’assembly « MyAssembly_Install.exe.  
  
 [!code-cpp[AssemblyInstaller_Install#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Install/CPP/assemblyinstaller_install.cpp#2)]
 [!code-csharp[AssemblyInstaller_Install#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Install/CS/assemblyinstaller_install.cs#2)]
 [!code-vb[AssemblyInstaller_Install#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Install/VB/assemblyinstaller_install.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="savedState" /> a la valeur <see langword="null" />.  
  
ou 
Impossible de trouver un fichier.</exception>
        <exception cref="T:System.Exception">Une exception s’est produite dans le <see cref="E:System.Configuration.Install.Installer.BeforeInstall" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une exception s’est produite dans le <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Types de programme d’installation sont introuvables dans un des assemblys.  
  
ou 
Une instance d’un des types de programme d’installation n’a pas pu être créée.</exception>
        <block subset="none" type="usage"><para>Le <see cref="T:System.Collections.IDictionary" /> spécifié par le <paramref name="savedState" /> paramètre doit être vide quand il est passé à la <see cref="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)" /> (méthode).</para></block>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Configuration.Install.AssemblyInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le chemin d’accès de l’assembly à installer.</summary>
        <value>Le chemin d’accès de l’assembly à installer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dans l’exemple suivant, un <xref:System.Configuration.Install.AssemblyInstaller> est créé en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur. Le <xref:System.Configuration.Install.AssemblyInstaller.Path%2A> définir des propriétés de cet objet.  
  
 [!code-cpp[AssemblyInstaller_Rollback#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#2)]
 [!code-csharp[AssemblyInstaller_Rollback#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#2)]
 [!code-vb[AssemblyInstaller_Rollback#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> qui contient l'état qui était celui de l'ordinateur avant l'installation.</param>
        <summary>Restaure l’ordinateur à l’état, qu'il se trouvait avant l’installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une restauration restaure l’ordinateur à l’état qu'où il se trouvait avant l’installation s’est produite. Le <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> méthode est appelée si le <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> méthode de ce <xref:System.Configuration.Install.Installer> instance ou de n’importe quel programme d’installation dans le programme d’installation collection ne parvient pas à s’exécuter correctement. Toutes les exceptions générées en appelant le <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> méthode d’un programme d’installation dans la collection sont ignorées, et la restauration des autres programmes d’installation continue.  
  
   
  
## Examples  
 Dans l’exemple suivant, la <xref:System.Configuration.Install.AssemblyInstaller.Rollback%2A> méthode est appelée pour annuler le processus d’installation de l’assembly spécifié.  
  
 [!code-cpp[AssemblyInstaller_Rollback#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CPP/assemblyinstaller_rollback.cpp#1)]
 [!code-csharp[AssemblyInstaller_Rollback#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Rollback/CS/assemblyinstaller_rollback.cs#1)]
 [!code-vb[AssemblyInstaller_Rollback#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Rollback/VB/assemblyinstaller_rollback.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le paramètre <paramref name="savedState" /> a la valeur <see langword="null" />.  
  
ou 
L’état enregistré <see cref="T:System.Collections.IDictionary" /> a peut-être été endommagé.  
  
ou 
Impossible de trouver un fichier.</exception>
        <exception cref="T:System.Exception">Une exception s’est produite dans le <see cref="E:System.Configuration.Install.Installer.BeforeRollback" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une exception s’est produite dans le <see cref="E:System.Configuration.Install.Installer.AfterRollback" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une exception s’est produite pendant la <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> phase de l’installation. L’exception est ignorée et la restauration continue. Toutefois, l’ordinateur peut ne revienne pas totalement à son état initial une fois la restauration terminée.  
  
ou 
Types de programme d’installation sont introuvables dans un des assemblys.  
  
ou 
Une instance d’un des types de programme d’installation n’a pas pu être créée.</exception>
        <exception cref="T:System.Configuration.Install.InstallException">Une exception s’est produite pendant la <see cref="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)" /> phase de l’installation. L’exception est ignorée et la restauration continue. Toutefois, l’ordinateur peut ne revienne pas totalement à son état initial une fois la restauration terminée.</exception>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="assemblyInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Un <see cref="T:System.Collections.IDictionary" /> qui contient l’état après l’installation de l’ordinateur.</param>
        <summary>Supprime une installation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour supprimer une installation déjà terminée. Si le <xref:System.Configuration.Install.Installer.Uninstall%2A> méthode échoue pour un des programmes d’installation dans la collection, elle est toujours appelée pour les programmes d’installation restants. Échec de la désinstallation ne pas restaure l’ordinateur à son état avant la désinstallation.  
  
> [!NOTE]
>  Bien que le <xref:System.Configuration.Install.Installer.Install%2A> et <xref:System.Configuration.Install.Installer.Commit%2A> méthodes enregistrent l’état de l’ordinateur après l’installation, le fichier contenant le <xref:System.Collections.IDictionary> à partir de la `savedState` paramètre a peut-être été supprimé à un moment donné une fois l’installation terminée. Si le fichier est supprimé, le `savedState` paramètre est `null`.  
  
   
  
## Examples  
 Dans l’exemple suivant, la <xref:System.Configuration.Install.AssemblyInstaller.Uninstall%2A> méthode est appelée après l’installation et la validation de l’assembly passé comme paramètre au constructeur.  
  
 [!code-cpp[AssemblyInstaller_Uninstall#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CPP/assemblyinstaller_uninstall.cpp#2)]
 [!code-csharp[AssemblyInstaller_Uninstall#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_Uninstall/CS/assemblyinstaller_uninstall.cs#2)]
 [!code-vb[AssemblyInstaller_Uninstall#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_Uninstall/VB/assemblyinstaller_uninstall.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">L’état enregistré <see cref="T:System.Collections.IDictionary" /> a peut-être été endommagé.  
  
ou 
Impossible de trouver un fichier.</exception>
        <exception cref="T:System.Exception">Une erreur s’est produite dans le <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une erreur s’est produite dans le <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> Gestionnaire d’événements d’un des programmes d’installation dans la collection.  
  
ou 
Une exception s’est produite lors de la désinstallation. L’exception est ignorée et la désinstallation continue. Toutefois, peut l’application n’être pas totalement désinstallée une fois la désinstallation terminée.  
  
ou 
Types de programme d’installation sont introuvables dans un des assemblys.  
  
ou 
Une instance d’un des types de programme d’installation n’a pas pu être créée.  
  
ou 
Un fichier n’a pas pu être supprimé.</exception>
        <exception cref="T:System.Configuration.Install.InstallException">Une exception s’est produite lors de la désinstallation. L’exception est ignorée et la désinstallation continue. Toutefois, peut l’application n’être pas totalement désinstallée une fois la désinstallation terminée.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseNewContext">
      <MemberSignature Language="C#" Value="public bool UseNewContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNewContext" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.AssemblyInstaller.UseNewContext" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNewContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNewContext { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNewContext : bool with get, set" Usage="System.Configuration.Install.AssemblyInstaller.UseNewContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant s’il faut créer un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet pour l’installation de l’assembly.</summary>
        <value><see langword="true" /> Si un nouveau <see cref="T:System.Configuration.Install.InstallContext" /> objet doit être créé pour l’installation de l’assembly ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette propriété `true` crée un fichier nommé « {nom de l’Assembly}. InstallLog » pour enregistrer des messages pour cet assembly. Paramètre <xref:System.Configuration.Install.AssemblyInstaller.UseNewContext%2A> à `false` empêche la création du nouveau fichier.  
  
   
  
## Examples  
 Dans l’exemple suivant, un <xref:System.Configuration.Install.AssemblyInstaller> est créé en appelant le <xref:System.Configuration.Install.AssemblyInstaller.%23ctor%2A> constructeur. Le <xref:System.Configuration.Install.AssemblyInstaller.UseNewContext%2A> propriété de cet objet est définie sur `true` et <xref:System.Configuration.Install.AssemblyInstaller.Install%2A> méthode est appelée sur le `MyAssembly_HelpText.exe` assembly. Pour cette raison, les messages de journal sont affichés sur la console.  
  
 [!code-cpp[AssemblyInstaller_HelpText#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CPP/assemblyinstaller_helptext.cpp#1)]
 [!code-csharp[AssemblyInstaller_HelpText#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyInstaller_HelpText/CS/assemblyinstaller_helptext.cs#1)]
 [!code-vb[AssemblyInstaller_HelpText#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyInstaller_HelpText/VB/assemblyinstaller_helptext.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>