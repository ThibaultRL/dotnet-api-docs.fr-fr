<Type Name="ClipboardProxy" FullName="Microsoft.VisualBasic.MyServices.ClipboardProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f2de6d34efc093261edfe0040e83cd24faf3e1" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65135816" /></Metadata><TypeSignature Language="C#" Value="public class ClipboardProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ClipboardProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.ClipboardProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class ClipboardProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClipboardProxy" />
  <TypeSignature Language="F#" Value="type ClipboardProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des méthodes permettant de manipuler le Presse-papiers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Éléments déplacé ou copié dans le Presse-papiers persistent même après que l’application est arrêtée.  
  
 Données du Presse-papiers peuvent être dans n’importe quel format de données, également appelé un format de Presse-papiers. Pour obtenir la liste de formats prédéfinis à utiliser avec le Presse-papiers, consultez <xref:System.Windows.Forms.DataFormats>. Lorsqu’un élément est déplacé ou copié dans le Presse-papiers, les éléments dans d’autres formats sont effacés. Pour que les autres formats à conserver, utilisez <xref:Microsoft.VisualBasic.VariantType.DataObject>, qui copie tout le contenu sur le Presse-papiers actuel, y compris les éléments collés d’autres applications. Placer des données dans le Presse-papiers dans plusieurs formats pour optimiser les chances de récupération des données par une application cible, dont vous le savez ne peut-être pas, les exigences de format.  
  
 Étant donné que toutes les applications Windows partagent le Presse-papiers du système, le contenu peut changer lorsque vous basculez vers une autre application.  
  
 Une classe doit être sérialisable être placé dans le Presse-papiers. Consultez [sérialisation](https://msdn.microsoft.com/library/f7570c09-7db5-44f2-983a-e8859caeb0d5) pour plus d’informations.  
  
 Lors de l’accès au Presse-papiers à distance, un <xref:System.Threading.ThreadStateException> est levée à moins que le thread accédant fonctionne en mode STA (single-threaded apartment). Pour résoudre ce problème, définissez le `ThreadApartmentState` à `STA`. Pour plus d'informations, consultez <xref:System.STAThreadAttribute>.  
  
 Pour plus d’informations, consultez [données stocker et lecture à partir du Presse-papiers](~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple lit le texte du Presse-papiers dans la chaîne `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 Cet exemple échoue si aucun texte n’est présent dans le Presse-papiers.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="clipboardProxy.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Permissions.UIPermission> classe contrôle l’accès vers le Presse-papiers et associé <xref:System.Security.Permissions.UIPermissionClipboard> valeur d’énumération indique le niveau d’accès. Pour plus d’informations, consultez [des considérations de sécurité supplémentaires dans les Windows Forms](~/docs/framework/winforms/additional-security-considerations-in-windows-forms.md).  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple efface le Presse-papiers.  
  
```  
My.Computer.Clipboard.Clear()  
```  
  
 Cela supprime toutes les données à partir du Presse-papiers.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.Clear" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données dans le Presse-papiers et lecture du Presse-papiers (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="member this.ContainsAudio : unit -&gt; bool" Usage="clipboardProxy.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si le Presse-papiers contient des données audio.</summary>
        <returns><see langword="True" /> Si les données audio sont stockées dans le Presse-papiers. sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple détermine si le Presse-papiers contient des données audio et affiche le résultat.  
  
 [!code-vb[VbRefClipbd#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/playing-sounds.md">Lecture de sons</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="member this.ContainsData : string -&gt; bool" Usage="clipboardProxy.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see langword="String" />. Nom du format personnalisé à vérifier. Obligatoire.</param>
        <summary>Indique si le Presse-papiers contient des données au format personnalisé spécifié.</summary>
        <returns><see langword="True" /> Si les données dans le format personnalisé spécifié sont stockées dans le Presse-papiers. sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous avez placé les données mises en forme personnalisées dans le Presse-papiers, cette méthode vous permet de vérifier le Presse-papiers pour les données dans ce format.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple vérifie les données dans le format personnalisé de `specialFormat`.  
  
 [!code-vb[VbRefClipbd#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#6)]  
  
 Remplacez `specialFormat` par le nom du format personnalisé que vous souhaitez vérifier.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="member this.ContainsFileDropList : unit -&gt; bool" Usage="clipboardProxy.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see langword="Boolean" /> qui indique si le Presse-papiers contient une liste déroulante de fichiers.</summary>
        <returns><see langword="True" /> Si vous supprimez un fichier de liste est stockée dans le Presse-papiers. sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une liste déroulante de fichiers est une collection de chaînes contenant les informations de chemin d’accès pour les fichiers.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple détermine si une liste déroulante de fichiers dans le Presse-papiers et ajoute la liste pour le `ListBox.lstFiles` s’ils existent.  
  
 [!code-vb[VbRefClipbd#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#12)]  
  
 Ce code crée une exception s’il existe aucune `ListBox` nommé `lstFiles`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsImage();" />
      <MemberSignature Language="F#" Value="member this.ContainsImage : unit -&gt; bool" Usage="clipboardProxy.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see langword="Boolean" /> indiquant si une image est stockée dans le Presse-papiers.</summary>
        <returns><see langword="True" /> Si une image est stockée dans le Presse-papiers. sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple vérifie si une image se trouve dans le Presse-papiers et, le cas échéant, obtient l’image et l’ajoute à `PictureBox1`.  
  
 [!code-vb[VbRefClipbd#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#8)]  
  
 Cet exemple dépend de l’existence d’un `PictureBox` nommé `PictureBox1`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si il y a du texte dans le Presse-papiers.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText();" />
      <MemberSignature Language="F#" Value="member this.ContainsText : unit -&gt; bool" Usage="clipboardProxy.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si il y a du texte dans le Presse-papiers.</summary>
        <returns><see langword="True" /> Si le Presse-papiers contient du texte ; sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formats possibles sont <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> et <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple détermine si le texte HTML est stocké dans le Presse-papiers et les lectures à partir du Presse-papiers si c’est le cas.  
  
 [!code-vb[VbRefClipbd#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="member this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="clipboardProxy.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat" />. Si spécifié, identifie le format de texte doit être vérifié. Obligatoire.</param>
        <summary>Détermine si il y a du texte dans le Presse-papiers.</summary>
        <returns><see langword="True" /> Si le Presse-papiers contient du texte ; sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formats possibles sont <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> et <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple détermine si le texte HTML est stocké dans le Presse-papiers et les lectures à partir du Presse-papiers si c’est le cas.  
  
 [!code-vb[VbRefClipbd#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="member this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="clipboardProxy.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un flux audio dans le Presse-papiers.</summary>
        <returns>Un <see cref="T:System.IO.Stream" /> objet contenant des données audio ou <see langword="Nothing" /> si le Presse-papiers ne contient pas toutes les données audio.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple récupère un flux audio dans le Presse-papiers et le lit.  
  
 [!code-vb[VbRefClipbd#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="member this.GetData : string -&gt; obj" Usage="clipboardProxy.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see langword="String" />. Nom du format de données. Obligatoire.</param>
        <summary>Récupère des données dans un format personnalisé à partir du Presse-papiers.</summary>
        <returns>Un <see langword="Object" /> représentant les données du Presse-papiers ou <see langword="Nothing" /> si le Presse-papiers ne contient pas de données sont au format spécifié ou peuvent être converties dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple lit les données dans le format `specialformat` à partir du Presse-papiers et l’écrit dans le fichier.  
  
 [!code-vb[VbRefClipbd#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#7)]  
  
 Remplacez `specialformat` avec le format de données personnalisé que vous souhaitez récupérer.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="member this.GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="clipboardProxy.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les données à partir du Presse-papiers en tant qu’un <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
        <returns>Un <see cref="T:System.Windows.Forms.IDataObject" /> objet qui représente les données figurant dans le Presse-papiers, ou <see langword="Nothing" /> si aucune donnée dans le Presse-papiers.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit d’un membre avancé ; Il n’affiche pas dans IntelliSense, sauf si vous cliquez sur le **tous les** onglet.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple lit les données à partir du Presse-papiers sous la forme d’un <xref:System.Windows.Forms.IDataObject> , puis l’écrit dans un fichier.  
  
 [!code-vb[VbRefClipbd#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#1)]  
  
 Remplacez `C:\mylogfile` par le nom du fichier auquel vous souhaitez écrire.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="member this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="clipboardProxy.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère une collection de chaînes représentant les noms de fichiers à partir du Presse-papiers.</summary>
        <returns>Un <see cref="T:System.Collections.Specialized.StringCollection" /> contenant les noms de fichiers ou <see langword="Nothing" /> si le Presse-papiers ne contient pas toutes les données qui se trouve dans le <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> mettre en forme ou peuvent être converties dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est disponible uniquement pour les applications non serveur.  
  
 Une liste déroulante de fichiers est une collection de chaînes contenant les informations de chemin d’accès pour les fichiers.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple détermine si une liste déroulante de fichiers dans le Presse-papiers et ajoute la liste pour le `ListBox.lstFiles` s’ils existent.  
  
 [!code-vb[VbRefClipbd#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#9)]  
  
 Ce code crée une exception s’il existe aucune `ListBox` nommé `lstFiles`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="member this.GetImage : unit -&gt; System.Drawing.Image" Usage="clipboardProxy.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère une image à partir du Presse-papiers.</summary>
        <returns>Un <see cref="T:System.Drawing.Image" /> représentant les données d’image du Presse-papiers ou <see langword="Nothing" /> si le Presse-papiers ne contient pas toutes les données qui se trouve dans le <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> mettre en forme ou peuvent être converties dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple vérifie si une image se trouve dans le Presse-papiers avant de la récupérer et de l’assigner à `PictureBox1`.  
  
 [!code-vb[VbRefClipbd#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#4)]  
  
 Pour cet exemple fonctionne correctement, il doit y avoir un `PictureBox` nommé `PictureBox1` sur votre formulaire.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données dans le Presse-papiers et lecture du Presse-papiers (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère le texte à partir du Presse-papiers.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="member this.GetText : unit -&gt; string" Usage="clipboardProxy.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le texte à partir du Presse-papiers.</summary>
        <returns>Données textuelles du Presse-papiers ou chaîne vide si le Presse-papiers ne contient pas de données dans le <see cref="F:System.Windows.Forms.DataFormats.Text" /> ou <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> format, selon le système d’exploitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formats possibles sont <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> et <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple lit le texte du Presse-papiers dans la chaîne `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 Cet exemple échoue si aucun texte n’est présent dans le Presse-papiers.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données dans le Presse-papiers et lecture du Presse-papiers (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="member this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="clipboardProxy.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat" />. Si spécifié, identifie le format de texte doit être récupéré. La valeur par défaut est <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />. Obligatoire.</param>
        <summary>Récupère le texte à partir du Presse-papiers.</summary>
        <returns>Données textuelles du Presse-papiers ou chaîne vide si le Presse-papiers ne contient pas de données au format spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formats possibles sont <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> et <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple lit le texte du Presse-papiers dans la chaîne `textOnClipboard`.  
  
 [!code-vb[VbVbcnMyClipboard#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#6)]  
  
 Cet exemple échoue si aucun texte n’est présent dans le Presse-papiers.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données dans le Presse-papiers et lecture du Presse-papiers (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit les données audio dans le Presse-papiers.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="member this.SetAudio : byte[] -&gt; unit" Usage="clipboardProxy.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Tableau<see langword="Byte" /> . Données audio à écrire dans le Presse-papiers. Obligatoire.</param>
        <summary>Écrit les données audio dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple crée le tableau d’octets `musicReader`, lit le fichier `cool.wav`, puis l’écrit dans le Presse-papiers.  
  
 [!code-vb[VbRefClipbd#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#2)]  
  
 Remplacez `cool.wav` avec le nom et le chemin d’accès du fichier que vous souhaitez lire.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="member this.SetAudio : System.IO.Stream -&gt; unit" Usage="clipboardProxy.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream"><see cref="T:System.IO.Stream" /> Données audio à écrire dans le Presse-papiers. Obligatoire.</param>
        <summary>Écrit les données audio dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple crée le tableau d’octets `musicReader`, lit le fichier `cool.wav`, puis l’écrit dans le Presse-papiers.  
  
 [!code-vb[VbRefClipbd#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#2)]  
  
 Remplacez `cool.wav` avec le nom et le chemin d’accès du fichier que vous souhaitez lire.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetData : string * obj -&gt; unit" Usage="clipboardProxy.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format"><see langword="String" />. Format de données. Obligatoire.</param>
        <param name="data"><see langword="Object" />. Objet de données à écrire dans le Presse-papiers. Obligatoire.</param>
        <summary>Écrit des données dans un format personnalisé dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple écrit `DataObject.dataChunk` dans le Presse-papiers au format personnalisé `specialFormat`.  
  
 [!code-vb[VbVbcnMyClipboard#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#7)]  
  
 Cet exemple dépend de l’existence du format de données personnalisé `specialFormat`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public void SetDataObject (System.Windows.Forms.DataObject data);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDataObject(class System.Windows.Forms.DataObject data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDataObject (data As DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDataObject(System::Windows::Forms::DataObject ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetDataObject : System.Windows.Forms.DataObject -&gt; unit" Usage="clipboardProxy.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.DataObject" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Windows.Forms.DataObject" />. Objet de données à écrire dans le Presse-papiers. Obligatoire.</param>
        <summary>Écrit un <see cref="T:System.Windows.Forms.DataObject" /> dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit d’un membre avancé ; Il n’affiche pas dans IntelliSense, sauf si vous cliquez sur le **tous les** onglet.  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple écrit l’objet de données `dataChunk` dans le Presse-papiers.  
  
 [!code-vb[VbVbcnMyClipboard#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#9)]  
  
 Cet exemple dépend de l’existence de l’objet de données `dataChunk`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="member this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="clipboardProxy.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths"><see cref="T:System.Collections.Specialized.StringCollection" />. Liste des noms de fichiers. Obligatoire.</param>
        <summary>Écrit une collection de chaînes représentant des chemins d’accès de fichier dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une liste déroulante de fichiers est une collection de chaînes représentant les noms de fichiers.  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple obtient la collection de noms de fichiers à partir de **MyDocuments**, le convertit en une liste déroulante de fichiers et l’écrit dans le Presse-papiers.  
  
 [!code-vb[VbRefClipbd#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefClipbd/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.SetImage : System.Drawing.Image -&gt; unit" Usage="clipboardProxy.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image"><see cref="T:System.Drawing.Image" />. Image à écrire. Obligatoire.</param>
        <summary>Écrit une image dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple écrit l’image `coolPicture` dans le Presse-papiers.  
  
 [!code-vb[VbVbcnMyClipboard#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#8)]  
  
 Cet exemple dépend de l’existence de l’image `coolPicture`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage" />
        <altmember cref="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit du texte dans le Presse-papiers.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.SetText : string -&gt; unit" Usage="clipboardProxy.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><see langword="String" />. Texte à écrire. Obligatoire.</param>
        <summary>Écrit du texte dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formats possibles sont <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> et <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
 Les formats de Presse-papiers précédents ne sont pas conservés.  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple écrit la chaîne `This is a test string.` dans le Presse-papiers.  
  
 [!code-vb[VbVbcnMyClipboard#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="text" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> a la valeur <see langword="Nothing" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="member this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="clipboardProxy.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><see langword="String" />. Texte à écrire. Obligatoire.</param>
        <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat" />. Format à utiliser lors de l’écriture de texte. La valeur par défaut est <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />. Obligatoire.</param>
        <summary>Écrit du texte dans le Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les formats possibles sont <xref:System.Windows.Forms.TextDataFormat.CommaSeparatedValue>, <xref:System.Windows.Forms.TextDataFormat.Html>, <xref:System.Windows.Forms.TextDataFormat.Rtf> et <xref:System.Windows.Forms.TextDataFormat.UnicodeText>.  
  
 Les formats de Presse-papiers précédents ne sont pas conservés.  
  
> [!IMPORTANT]
>  Étant donné que le Presse-papiers est accessible par d’autres utilisateurs, ne l’utilisez pas pour stocker des informations sensibles, telles que des mots de passe ou des données confidentielles.  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|------------------|---------------|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple écrit la chaîne `This is a test string.` dans le Presse-papiers.  
  
 [!code-vb[VbVbcnMyClipboard#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyClipboard/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="text" /> est une chaîne vide.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> a la valeur <see langword="Nothing" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /> autorisation est requise pour accéder au Presse-papiers du système.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText" />
        <altmember cref="Overload:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/storing-data-to-and-reading-from-the-clipboard.md">Stockage de données et de lecture à partir du Presse-papiers</related>
      </Docs>
    </Member>
  </Members>
</Type>