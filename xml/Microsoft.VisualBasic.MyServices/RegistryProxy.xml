<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2782e231f7e871bb563a95ced6e98693888e030" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65135759" /></Metadata><TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <TypeSignature Language="F#" Value="type RegistryProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des propriétés et des méthodes permettant de manipuler le Registre.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour utiliser ces propriétés, vous devez disposer des autorisations en lecture et en écriture à partir de la <xref:System.Security.Permissions.RegistryPermissionAccess> énumération. Tout code s’exécutant avec une confiance totale (sous la stratégie de sécurité par défaut, il s’agit de n’importe quel code installé sur le disque dur local de l’utilisateur) dispose des autorisations nécessaires pour accéder au Registre. Pour plus d'informations, consultez la classe <xref:System.Security.Permissions.RegistryPermission>.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire les données à partir du Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple lit la valeur `Name` de `HKEY_CURRENT_USER\Software\MyApp` et l’affiche dans une boîte de message.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type qui fournit l’accès à <see langword="HKEY_CLASSES_ROOT" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` est principalement utilisé pour stocker des informations sur les associations de fichiers dans Windows.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges nécessaires pour faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Description|  
|-----------|-----------------|  
|AllAccess|Créer, lire et l’accès en écriture aux variables du Registre.|  
|Créer|Accès en création aux variables du Registre.|  
|NoAccess|Aucun accès aux variables du Registre.|  
|Lecture|Accès en lecture aux variables du Registre.|  
|Write|Accès en écriture aux variables du Registre.|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple obtient les noms des sous-clés pour la `ClassesRoot` clé de Registre et les ajoute à `ListBox1`.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 Cet exemple nécessite que vous avez un `ListBox` nommé `ListBox1` dans votre projet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type qui fournit l’accès à <see langword="HKEY_CURRENT_CONFIG" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` est principalement utilisé pour stocker les paramètres pour les appareils sur l’ordinateur.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges nécessaires pour faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Description|  
|-----------|-----------------|  
|AllAccess|Créer, lire et l’accès en écriture aux variables du Registre.|  
|Créer|Accès en création aux variables du Registre.|  
|NoAccess|Aucun accès aux variables du Registre.|  
|Lecture|Accès en lecture aux variables du Registre.|  
|Write|Accès en écriture aux variables du Registre.|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple crée la sous-clé `MyDeviceSettings`.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type qui fournit l’accès à <see langword="HKEY_CURRENT_USER" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` est principalement utilisé pour stocker les paramètres par utilisateur, tels que les couleurs et les polices dans Windows. La clé diffèrent en fonction de l’utilisateur.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges minimaux requis faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Description|  
|-----------|-----------------|  
|AllAccess|Créer, lire et l’accès en écriture aux variables du Registre.|  
|Créer|Accès en création aux variables du Registre.|  
|NoAccess|Aucun accès aux variables du Registre.|  
|Lecture|Accès en lecture aux variables du Registre.|  
|Write|Accès en écriture aux variables du Registre.|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple supprime la sous-clé `Software\MyCompany\Preferences\UserData`.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type, ce qui donne accès à <see langword="HKEY_DYNDATA" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` est utilisé pour stocker les données de Registre dynamiques, tel que celui utilisé par les pilotes de périphérique virtuel et est pris en charge uniquement sur les systèmes de Windows 95/98. Sur les systèmes Windows 95/98, appelez des méthodes de la clé retournée par `Registry.DynData`, tel que `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`, etc., lèvent une <xref:System.IO.IOException>.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges minimaux requis faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Description|  
|-----------|-----------------|  
|AllAccess|Créer, lire et l’accès en écriture aux variables du Registre.|  
|Créer|Accès en création aux variables du Registre.|  
|NoAccess|Aucun accès aux variables du Registre.|  
|Lecture|Accès en lecture aux variables du Registre.|  
|Write|Accès en écriture aux variables du Registre.|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple supprime la sous-clé `Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * string * obj -&gt; obj" Usage="registryProxy.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaultValue" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. Clé à partir de laquelle la valeur doit être récupéré. Obligatoire.</param>
        <param name="valueName"><see langword="String" />. Valeur à récupérer. Obligatoire.</param>
        <param name="defaultValue"><see langword="Object" />. Valeur par défaut à fournir si la valeur n’existe pas. Obligatoire.</param>
        <summary>Obtient une valeur à partir d’une clé de Registre.</summary>
        <returns>Obtient une valeur à partir d’une clé de Registre.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName` ne respecte pas la casse.  
  
 Une clé de Registre permettre contenir une valeur qui n’est pas associée à n’importe quel nom. Lorsque cette valeur sans nom est affichée dans l’Éditeur du Registre, la chaîne « (par défaut) » s’affiche au lieu d’un nom. Pour récupérer cette valeur sans nom, spécifiez null ou une chaîne vide (" ») pour `valueName`.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `GetValue` (méthode).  
  
|À|Voir|  
|--------|---------|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple lit la valeur `Name` de `HKEY_CURRENT_USER\Software\MyApp` et l’affiche dans un `MessageBox`.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L’utilisateur n’a pas les autorisations requises pour lire à partir de la clé de Registre.</exception>
        <exception cref="T:System.IO.IOException">Le <see cref="T:Microsoft.Win32.RegistryKey" /> qui contient la valeur a été marquée pour suppression.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> ne commence pas par une racine de Registre valide.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">pour lire à partir du Registre. Énumération associée : <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">pour lire une clé de Registre de type REG_EXPAND_SZ. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type, ce qui donne accès à <see langword="HKEY_LOCAL_MACHINE" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` est généralement utilisé pour stocker les paramètres qui ne varient pas l’utilisateur dans Windows. Tous les utilisateurs de l’ordinateur partagent cette clé. Ses cinq sous-clés (`Hardware`, `SAM`, `Security`, `Software`, et `System`) stockent les données de configuration pour l’ordinateur local.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges minimaux requis faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Description|  
|-----------|-----------------|  
|AllAccess|Créer, lire et l’accès en écriture aux variables du Registre.|  
|Créer|Accès en création aux variables du Registre.|  
|NoAccess|Aucun accès aux variables du Registre.|  
|Lecture|Accès en lecture aux variables du Registre.|  
|Write|Accès en écriture aux variables du Registre.|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple ouvre la sous-clé `Software\MyCompany\Preferences` et définit la valeur `FontColor` à `"red"`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type, ce qui donne accès à <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` est utilisé pour accéder aux informations de performances pour les composants logiciels. Chaque composant logiciel crée des clés pour ses objets et compteurs lorsqu’il est installé et écrit des données de compteur pendant son exécution. Ces données ne sont pas stockées dans le Registre, bien que le Registre est utilisé pour y accéder. Au lieu de cela, l’appel des fonctions de Registre via `HKEY_PERFORMANCE_DATA` , le système collecter les données à partir des gestionnaires d’objet système appropriés.  
  
 Cette clé n’existe pas sur les systèmes Windows 98 ; une tentative d’utilisation autre que d’appeler le `Name` méthode lèvera une <xref:System.IO.IOException>.  
  
 Cette clé ne peut pas normalement accessible en écriture ; Si vous essayez de créer une sous-clé dessus une <xref:System.IO.IOException>.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges minimaux requis faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Description|  
|-----------|-----------------|  
|AllAccess|Créer, lire et l’accès en écriture aux variables du Registre.|  
|Créer|Accès en création aux variables du Registre.|  
|NoAccess|Aucun accès aux variables du Registre.|  
|Lecture|Accès en lecture aux variables du Registre.|  
|Write|Accès en écriture aux variables du Registre.|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|À|Voir|  
|--------|---------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple obtient la valeur `ThisSoftware` à partir de la `MyCompany` sous-clé.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Écrit une valeur d’une clé de Registre.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. Nom de la clé à écrire dans. Obligatoire.</param>
        <param name="valueName"><see langword="String" />. Nom de la valeur à écrire. Obligatoire.</param>
        <param name="value"><see langword="Object" />. Valeur à écrire. Obligatoire.</param>
        <summary>Écrit une valeur d’une clé de Registre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la clé spécifiée ou la valeur n’existe pas, il est créé.  
  
 Voici un exemple de tâche impliquant la `My.Computer.Registry.SetValue` (méthode).  
  
|À|Voir|  
|--------|---------|  
|Définir une valeur d’une clé de Registre|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 Cet exemple définit la valeur `FontColor` « rouge » dans la clé `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> ne commence pas par une racine de Registre valide.  
  
ou 
 <paramref name="valueName" /> n’est plus longue que la longueur maximale autorisée (255 caractères).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.Win32.RegistryKey" /> étant en lecture seule, il n’est pas accessible en écriture ; il s’agit par exemple d’un nœud de niveau racine ou il n’a pas été ouvert avec un accès en écriture.</exception>
        <exception cref="T:System.Security.SecurityException">L’utilisateur n’a pas les autorisations requises pour créer ou modifier des clés de Registre.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Pour modifier la clé de Registre spécifiée si elle existe, ou pour créer la clé de Registre si elle n’existe pas déjà. Énumérations associées : <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. Nom de la clé à écrire dans. Obligatoire.</param>
        <param name="valueName"><see langword="String" />. Nom de la valeur à écrire. Obligatoire.</param>
        <param name="value"><see langword="Object" />. Valeur à écrire. Obligatoire.</param>
        <param name="valueKind"><see cref="T:Microsoft.Win32.RegistryValueKind" />. Obligatoire.</param>
        <summary>Écrit une valeur d’une clé de Registre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la clé spécifiée ou la valeur n’existe pas, il est créé.  
  
 Voici un exemple de tâche impliquant la `My.Computer.Registry.SetValue` (méthode).  
  
|À|Voir|  
|--------|---------|  
|Définir une valeur d’une clé de Registre|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 Cet exemple définit la valeur `FontColor` « rouge » dans la clé `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> ne commence pas par une racine de Registre valide.  
  
ou 
 <paramref name="keyName" /> n’est plus longue que la longueur maximale autorisée (255 caractères).  
  
ou 
Le type de <paramref name="value" /> ne correspond pas au type de données de Registre spécifié par <paramref name="valueKind" />, par conséquent, les données ne peut pas être converties correctement.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Le <see cref="T:Microsoft.Win32.RegistryKey" /> est en lecture seule et par conséquent ne peut pas être écrit ; par exemple, il est un nœud de niveau racine ou il n’a pas été ouvert avec un accès en écriture.</exception>
        <exception cref="T:System.Security.SecurityException">L’utilisateur n’a pas les autorisations requises pour créer ou modifier des clés de Registre.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Pour modifier la clé de Registre spécifiée si elle existe, ou pour créer la clé de Registre si elle n’existe pas déjà. Énumérations associées : <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un <see cref="T:Microsoft.Win32.RegistryKey" /> type, ce qui donne accès à <see langword="HKEY_USERS" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` est principalement utilisé pour stocker les paramètres par défaut pour les utilisateurs débutants.  
  
 Le <xref:System.Security.Permissions.RegistryPermission> (classe), qui se trouve dans le <xref:System.Security.Permissions> espace de noms, contrôle l’accès aux variables du Registre. Les variables de Registre ne doivent pas être stockées dans des emplacements de mémoire où du code sans <xref:System.Security.Permissions.RegistryPermission> peut y accéder. De même, lorsque vous accordez des autorisations, accordez les privilèges minimaux requis faire leur travail.  
  
 Les valeurs des autorisations d’accès au Registre sont définies par l’énumération <xref:System.Security.Permissions.RegistryPermissionAccess>. Le tableau suivant détaille ses membres.  
  
|Value|Accès aux variables de Registre|  
|-----------|----------------------------------|  
|AllAccess|Créer, lire et écrire|  
|Créer|Créer|  
|NoAccess|Aucun accès.|  
|Lecture|Lecture|  
|Write|Write|  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Registry` objet.  
  
|**To**|**Consultez**|  
|------------|-------------|  
|Créer une clé de Registre et définir sa valeur|[Guide pratique pour Créer une clé de Registre et définir sa valeur](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Supprimer une clé de Registre|[Guide pratique pour Supprimer une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lire une valeur à partir d’une clé de Registre|[Guide pratique pour Lire une valeur à partir d’une clé de Registre](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Cet exemple compte et affiche le nombre de valeurs dans la clé de Registre.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Lecture et écriture dans le Registre (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Sécurité et Registre</related>
      </Docs>
    </Member>
  </Members>
</Type>