<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eca9de4ba3e7db5769488f672b1fa19608582f9b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014797" /></Metadata><TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6e623-101">Fournit l’identificateur de système de type XAML pour les membres de types XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="6e623-102">L’identificateur est utilisé par les lecteurs XAML et les writers XAML lors du traitement des nœuds membres (lorsque le lecteur XAML est positionné sur un <see cref="F:System.Xaml.XamlNodeType.StartMember" />) et également pour la logique de système de type XAML général.</span><span class="sxs-lookup"><span data-stu-id="6e623-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-103"><xref:System.Xaml.XamlMember> peut utiliser trois méthodes pour retourner des informations relatives à un membre XAML : standard common language runtime (CLR) la réflexion ; une technique de réflexion de référence uniquement appel interne indicateurs de l’API que le bit utilisation optimisée ; ou appelant virtuel substitue de la `Lookup*` API fournie par possible <xref:System.Xaml.XamlMember> sous-classes.</span><span class="sxs-lookup"><span data-stu-id="6e623-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="6e623-104">Pour la plupart des utilisations de l’API des Services XAML .NET Framework et le <xref:System.Xaml.XamlMember> API, vous utilisez le contexte de schéma XAML par défaut.</span><span class="sxs-lookup"><span data-stu-id="6e623-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="6e623-105">Le contexte de schéma XAML par défaut pour les Services XAML .NET Framework utilise le stockage pour le système de type CLR.</span><span class="sxs-lookup"><span data-stu-id="6e623-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="6e623-106">Cela permet des lecteurs XAML et les writers XAML travailler avec n’importe quel type ou membre qui est défini ou disponible pour, le CLR et ses techniques de réflexion.</span><span class="sxs-lookup"><span data-stu-id="6e623-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="6e623-107">XamlMember et API de recherche de Classes dérivées</span><span class="sxs-lookup"><span data-stu-id="6e623-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="6e623-108"><xref:System.Xaml.XamlMember> définit plusieurs membres virtuels que les classes dérivées peuvent remplacer.</span><span class="sxs-lookup"><span data-stu-id="6e623-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="6e623-109">Ces membres ont des noms qui commencent toujours par la chaîne `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="6e623-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="6e623-110">Le reste de l’API nommer les références à la propriété qui a un impact sur la méthode virtuelle.</span><span class="sxs-lookup"><span data-stu-id="6e623-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="6e623-111">Par exemple, un <xref:System.Xaml.XamlMember> une classe dérivée peut substituer <xref:System.Xaml.XamlMember.LookupTargetType%2A> pour influencer ce que la propriété définie à la base de <xref:System.Xaml.XamlMember.TargetType%2A> retourne dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6e623-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="6e623-112">Vous pouvez prévoir des valeurs de retour de ces propriétés dans <xref:System.Xaml.XamlMember> ou les classes dérivées existantes en lisant la documentation pour les données pertinentes `Lookup*` méthodes.</span><span class="sxs-lookup"><span data-stu-id="6e623-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="6e623-113">L’objectif de la `Lookup*` méthodes consiste à fournir une technique d’extension XAML type système qui incorpore le <xref:System.Xaml.XamlMember> classe de base.</span><span class="sxs-lookup"><span data-stu-id="6e623-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="6e623-114">En dérivant de <xref:System.Xaml.XamlMember> et en remplaçant le `Lookup` membres virtuels, vous pouvez définir le concept d’un membre XAML pour un schéma XAML dans un système de type XAML sans être lié aux caractéristiques d’un système de type de stockage ou une technologie.</span><span class="sxs-lookup"><span data-stu-id="6e623-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="6e623-115">Vous pouvez également utiliser un contexte de schéma XAML fourni sous ce schéma et toujours retourner les résultats souhaités.</span><span class="sxs-lookup"><span data-stu-id="6e623-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="6e623-116">Par exemple, considérez le <xref:System.Xaml.XamlMember> propriété <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="6e623-117">Cette propriété informe les appelants que les opérations comme l’utilisation d’un <xref:System.Xaml.XamlWriter> pour la sérialisation peut écrire une valeur pour ce membre sur un objet cible.</span><span class="sxs-lookup"><span data-stu-id="6e623-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="6e623-118">Dans l’implémentation par défaut, la détermination de si le membre est accessible en écriture s’effectue à l’aide de techniques de réflexion par rapport à CLR de sauvegarde <xref:System.Type> et ses membres (le <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="6e623-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="6e623-119">Par conséquent, par défaut, le système de type XAML dépend du système de type CLR.</span><span class="sxs-lookup"><span data-stu-id="6e623-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="6e623-120">Toutefois, vous pouvez supprimer cette dépendance pour votre système de type XAML signalant de <xref:System.Xaml.XamlMember.IsWritePublic%2A> en substituant l’API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="6e623-121">Au sein de votre remplacement, vous pouvez utiliser d’autres analyses, tels que les métadonnées qui est spécifique à votre technologie, une table de correspondance maître qui est optimisée pour un vocabulaire XAML fixe, ou une gamme d’autres stratégies pour déterminer si un membre XAML est accessible en écriture dans votre Vocabulaire XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="6e623-122">Construction de XamlMember sans contexte de schéma XAML</span><span class="sxs-lookup"><span data-stu-id="6e623-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="6e623-123">La plupart des constructeurs de <xref:System.Xaml.XamlMember> nécessitent un <xref:System.Xaml.XamlSchemaContext> dans le cadre de leur initialisation.</span><span class="sxs-lookup"><span data-stu-id="6e623-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="6e623-124">Le <xref:System.Xaml.XamlSchemaContext> est également nécessaire pour la plupart interne <xref:System.Xaml.XamlSchemaContext> opérations, telles que l’obtention des informations qui sont transférées à partir du type de sauvegarde.</span><span class="sxs-lookup"><span data-stu-id="6e623-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="6e623-125">Lorsque vous travaillez avec le <xref:System.Xaml.XamlMember> API, vous devez en général un <xref:System.Xaml.XamlSchemaContext> qui est disponible à partir d’une construction environnante comme un <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="6e623-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="6e623-126">Dans ce cas, vous pouvez passer le <xref:System.Xaml.XamlSchemaContext> font référence via tous les appels de système de type XAML qui requièrent un contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="6e623-127">Un constructeur spécifique, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, ne nécessite pas un <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="6e623-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="6e623-128">Toutefois, un <xref:System.Xaml.XamlMember> qui est construit avec la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature retourne `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e623-129">Pour un chemin de chargement implique <xref:System.Xaml.XamlObjectWriter>, ce membre ne peut pas être écrit dans un graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="6e623-130">À l’aide de l’implémentation des services .NET Framework XAML, le <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> appeler lève une <xref:System.Xaml.XamlObjectWriterException> lorsque le pertinentes <xref:System.Xaml.XamlMember> rapports `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e623-131">Vous ne devez pas construire un <xref:System.Xaml.XamlMember> qui a comme valeur `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A> , sauf si votre implémentation peut gérer les exceptions de <xref:System.Xaml.XamlObjectWriter>, ou vous avez d’autres façons d’ajuster le <xref:System.Xaml.XamlObjectWriter> comportement.</span><span class="sxs-lookup"><span data-stu-id="6e623-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="6e623-132">Par exemple, un ou plusieurs des éléments suivants peuvent être true de votre implémentation :</span><span class="sxs-lookup"><span data-stu-id="6e623-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="6e623-133">Le contexte de schéma XAML est disponible plus tard.</span><span class="sxs-lookup"><span data-stu-id="6e623-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="6e623-134">Vous utilisez un modèle de demandeur de membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="6e623-135">Vous substituez délibérément <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> dans un writer XAML personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6e623-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="6e623-136">Fonctionnement des concepts et structures du flux de nœud XAML</span><span class="sxs-lookup"><span data-stu-id="6e623-136">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e623-137">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="6e623-138">Le système de type CLR <see cref="T:System.Reflection.EventInfo" /> qui représente le membre d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e623-138">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-139">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-139">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="6e623-140">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> à l’aide du système de type CLR de la classe <see cref="T:System.Reflection.EventInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-140">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-141">Utilisez ce constructeur si le membre représente un événement (propriété point de connexion de gestionnaire d’événements).</span><span class="sxs-lookup"><span data-stu-id="6e623-141">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="6e623-142">Le système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> qui représente le membre de propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-142">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-143">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-143">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="6e623-144">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> à l’aide du système de type CLR de la classe <see cref="T:System.Reflection.PropertyInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-144">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-145">Utilisez ce constructeur si le membre représente une propriété (et en particulier n’est pas une connexion de gestionnaire d’événements).</span><span class="sxs-lookup"><span data-stu-id="6e623-145">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="6e623-146">Le système de type CLR <see cref="T:System.Reflection.EventInfo" /> qui représente le membre d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e623-146">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-147">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-147">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="6e623-148">Le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implémentation qui gère la réflexion au moment de l’exécution appelle par rapport à la <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-148">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="6e623-149">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> à l’aide du système de type CLR de la classe <see cref="T:System.Reflection.EventInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />, y compris <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-149">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-150">Utilisez ce constructeur si le membre représente un événement (ou une point de connexion de propriété de gestionnaire d’événements).</span><span class="sxs-lookup"><span data-stu-id="6e623-150">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="6e623-151">Le système de type CLR <see cref="T:System.Reflection.PropertyInfo" /> qui représente le membre de propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-151">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-152">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-152">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="6e623-153">Le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implémentation qui gère l’appel d’exécution appelle par rapport à la <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-153">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="6e623-154">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> classe à l’aide de la réflexion <see cref="T:System.Reflection.PropertyInfo" /> et un <see cref="T:System.Xaml.XamlSchemaContext" />, y compris <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-154">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-155">Utilisez ce constructeur uniquement si le membre représente une propriété et si elle n’est pas une connexion de gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="6e623-155">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="6e623-156">Le nom de la chaîne de l’événement pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-156">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="6e623-157">Le système de type CLR <see cref="T:System.Reflection.MethodInfo" /> pour le gestionnaire <see langword="Add" /> implémentation de stockage à la méthode du membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-157">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-158">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-158">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="6e623-159">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> classe pour un <see cref="T:System.Xaml.XamlMember" /> qui représente un événement pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-159">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-160">Utilisez ce constructeur si le membre représente un membre d’événement pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-160">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6e623-161">Le nom de chaîne du membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-161">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="6e623-162">Le <see cref="T:System.Xaml.XamlType" /> informations pour le type déclarant.</span><span class="sxs-lookup"><span data-stu-id="6e623-162">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable"><span data-ttu-id="6e623-163"><see langword="true" /> pour indiquer que le membre est peut être attaché ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-163"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6e623-164">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> à l’aide d’un nom de chaîne et la déclaration de classe <see cref="T:System.Xaml.XamlType" /> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="6e623-165">Un <see cref="T:System.Xaml.XamlMember" /> construit avec cette signature présente des limitations importantes.</span><span class="sxs-lookup"><span data-stu-id="6e623-165">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-166">Un <xref:System.Xaml.XamlMember> qui est construit avec la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature retourne `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-166">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e623-167">Pour un chemin de chargement implique <xref:System.Xaml.XamlObjectWriter>, ce membre ne peut pas être écrit dans un graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-167">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="6e623-168">À l’aide de l’implémentation de Services XAML du .NET Framework, le <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> appeler lève une <xref:System.Xaml.XamlObjectWriterException> lorsque le pertinentes <xref:System.Xaml.XamlMember> rapports `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-168">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e623-169">Vous ne devez pas construire un <xref:System.Xaml.XamlMember> avec <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` , sauf si votre implémentation peut gérer les exceptions de <xref:System.Xaml.XamlObjectWriter>, ou vous avez d’autres façons d’ajuster le <xref:System.Xaml.XamlObjectWriter> comportement.</span><span class="sxs-lookup"><span data-stu-id="6e623-169">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="6e623-170">Par exemple, un ou plusieurs des éléments suivants peuvent être true de votre implémentation :</span><span class="sxs-lookup"><span data-stu-id="6e623-170">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="6e623-171">Le contexte de schéma XAML est disponible plus tard.</span><span class="sxs-lookup"><span data-stu-id="6e623-171">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="6e623-172">Vous utilisez un modèle de demandeur de membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-172">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="6e623-173">Vous substituez délibérément <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> dans un writer XAML personnalisé.</span><span class="sxs-lookup"><span data-stu-id="6e623-173">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6e623-174"><paramref name="name" /> ou <paramref name="declaringType" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-174"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="6e623-175">Le nom de la chaîne de la propriété pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-175">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="6e623-176">Le système de type CLR <see cref="T:System.Reflection.MethodInfo" /> pour le <see langword="get" /> implémentation de stockage à l’accesseur de membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="6e623-177">Le système de type CLR <see cref="T:System.Reflection.MethodInfo" /> pour le <see langword="set" /> implémentation de stockage à l’accesseur de membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-177">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-178">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-178">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="6e623-179">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> classe pour un <see cref="T:System.Xaml.XamlMember" /> qui représente une propriété pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-179">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-180">Utilisez ce constructeur si le membre représente une propriété pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-180">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="6e623-181">Le nom de la chaîne de l’événement pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-181">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="6e623-182">Le système de type CLR <see cref="T:System.Reflection.MethodInfo" /> pour le gestionnaire <see langword="Add" /> implémentation de stockage à la méthode du membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-182">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-183">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-183">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="6e623-184">Le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implémentation qui gère l’appel d’exécution appelle par rapport à la <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-184">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="6e623-185">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> classe pour un <see cref="T:System.Xaml.XamlMember" /> qui représente un événement pouvant être attaché, notamment <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-185">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-186">Utilisez ce constructeur si le membre représente un membre d’événement pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-186">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="6e623-187">Le nom de la chaîne de la propriété pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-187">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="6e623-188">Le système de type CLR <see cref="T:System.Reflection.MethodInfo" /> pour le <see langword="get" /> implémentation de stockage à l’accesseur de membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="6e623-189">Le système de type CLR <see cref="T:System.Reflection.MethodInfo" /> pour le <see langword="set" /> implémentation de stockage à l’accesseur de membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-189">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e623-190">Le <see cref="T:System.Xaml.XamlSchemaContext" /> contexte qui qualifie le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-190">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="6e623-191">Le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implémentation qui gère l’appel d’exécution appelle par rapport à la <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-191">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="6e623-192">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlMember" /> classe pour un <see cref="T:System.Xaml.XamlMember" /> qui représente une propriété pouvant être attachée, y compris <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-192">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-193">Utilisez ce constructeur si le membre représente un membre de propriété pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-193">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-194">Obtient le <see cref="T:System.Xaml.XamlType" /> pour le type qui déclare le membre qui est associé à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-194">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="6e623-195">Le <see cref="T:System.Xaml.XamlType" /> pour le type qui déclare le membre qui est associé à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-195">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-196">Cette valeur est généralement définie lors de l’initialisation et n’est généralement pas `null`.</span><span class="sxs-lookup"><span data-stu-id="6e623-196">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e623-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> informations peuvent être passées par les constructeurs pour l’initialisation.</span><span class="sxs-lookup"><span data-stu-id="6e623-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="6e623-198">En appelant directement les constructeurs de base, l’initialisation pour <xref:System.Xaml.XamlMember> classes dérivées peuvent omettre certaines les vérifications de valeur qui sont effectuées dans la classe de base.</span><span class="sxs-lookup"><span data-stu-id="6e623-198">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="6e623-199">Par conséquent, l’initialisation dérivée peut modifier les informations de relation de membre de type signalées d’un membre XAML afin qu’il ne s’aligne plus comme prévu avec les informations de système de type de sa déclaration CLR sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="6e623-199">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="6e623-200">Pour les vérifications critiques de sécurité de la déclaration des informations de type, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6e623-200">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-201">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objet, qui est utilisé pour le chargement différé de XAML déclaré des objets.</span><span class="sxs-lookup"><span data-stu-id="6e623-201">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="6e623-202">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.Xaml.XamlDeferringLoader" /> contrainte sur le générique.</span><span class="sxs-lookup"><span data-stu-id="6e623-202">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-203">Appel <xref:System.Xaml.XamlMember.DeferringLoader%2A> appelle <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-203">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e623-204">Ce comportement se produit dans les cas où la logique de réflexion interne initiale n’a pas déjà défini les informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-204">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-205">Obtient une liste d'objets <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-205">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="6e623-206">Répertorie les membres pour lesquels il existe des relations de dépendance pour l’ordre d’initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-206">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="6e623-207">Liste d'objets <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-207">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-208">Appel <xref:System.Xaml.XamlMember.DependsOn%2A> appelle <xref:System.Xaml.XamlMember.LookupDependsOn%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-208">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e623-209">Ce comportement se produit dans les cas où la logique de réflexion interne initiale n’a pas déjà défini les informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-209">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="6e623-210">Le `DependsOn` modèle peut être appliqué aux cas de modèle objet délibérément contredisent une règle XAML générale.</span><span class="sxs-lookup"><span data-stu-id="6e623-210">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="6e623-211">La règle XAML générale est que les membres d’un type qui ne sont pas transmis en tant que texte d’initialisation (ou par une méthode de fabrique dans XAML 2009) doivent pouvoir être assigné dans n’importe quel ordre.</span><span class="sxs-lookup"><span data-stu-id="6e623-211">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="6e623-212">En appliquant un `DependsOn` de modèle à un membre, vous pouvez indiquer les writers XAML à traiter toujours le membre référencé avant ce membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-212">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="6e623-213">Vous pouvez appliquer ce modèle dans les situations où la valeur du membre actuel requiert le contexte ou autres informations qui sont disponibles uniquement après que l’autre membre est défini.</span><span class="sxs-lookup"><span data-stu-id="6e623-213">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="6e623-214">Le `DependsOn` modèle doit être appliqué judicieusement et réservé pour les scénarios de propriété où il sert un but architectural.</span><span class="sxs-lookup"><span data-stu-id="6e623-214">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="6e623-215">Grand nombre de dépendances est susceptibles de ralentir le traitement de XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-215">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="6e623-216">En outre, il est possible de produire des dépendances circulaires, auquel cas le comportement de traitement XAML n’est pas défini.</span><span class="sxs-lookup"><span data-stu-id="6e623-216">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="6e623-217">Exemple `DependsOn` scénarios de WPF incluent certaines propriétés sur <xref:System.Windows.Controls.ControlTemplate> et <xref:System.Windows.DataTemplate>, dans <xref:System.Windows.Trigger>, puis, dans <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="6e623-217">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e623-218">Indique si l’objet actuel est égal à un autre objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-218">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="6e623-219">Objet à comparer à cet objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-219">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="6e623-220">Indique si l’objet actuel est égal à un autre objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-220">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="6e623-221"><see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-221"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="6e623-222">Objet à comparer à cet objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-222">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="6e623-223">Indique si l'objet actuel est égal à un autre objet du même type.</span><span class="sxs-lookup"><span data-stu-id="6e623-223">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="6e623-224"><see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-224"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-225">Retourne le code de hachage de cet objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-225">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="6e623-226">Code de hachage entier.</span><span class="sxs-lookup"><span data-stu-id="6e623-226">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-227">Retourne une liste d’espaces de noms XAML dans lesquels ce membre XAML peut exister.</span><span class="sxs-lookup"><span data-stu-id="6e623-227">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="6e623-228">Une liste d’identificateurs d’espace de noms XAML sous forme de chaînes.</span><span class="sxs-lookup"><span data-stu-id="6e623-228">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-229">L’implémentation par défaut retourne la <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> résultat à partir de l’appel le <xref:System.Xaml.XamlMember.DeclaringType%2A> qui est associé à ce <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="6e623-229">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-230">Obtient le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implémentation qui est associée à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-230">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="6e623-231">Le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implémentation qui est associée à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-231">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-232">Le `Invoker` modèle est une technique d’extension de système de type XAML avancée.</span><span class="sxs-lookup"><span data-stu-id="6e623-232">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="6e623-233">Le `Invoker` modèle offre un moyen pour injecter le comportement de mappage de type de schéma différent, tout en utilisant les définitions de système de type XAML de Services XAML du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="6e623-233">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="6e623-234">Si un <xref:System.Xaml.XamlMember.LookupInvoker%2A> remplacer retourne `null`, ou si l’implémentation par défaut retourne `null` , car il lui manque le <xref:System.Xaml.XamlMember.UnderlyingMember%2A> pour ce <xref:System.Xaml.XamlMember>, le <xref:System.Xaml.XamlMember.Invoker%2A> retourne de la propriété <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e623-234">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6e623-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> est la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="6e623-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="6e623-236">Cela est vrai pour la plupart des opérations qui utilisent les Services XAML .NET Framework et le contexte de schéma XAML par défaut, et où aucune spécifiques à substituer `Invoker` modèles sont passés pour la construction d’entités de système de type XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-236">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="6e623-237">Appel <xref:System.Xaml.XamlMember.Invoker%2A> appelle <xref:System.Xaml.XamlMember.LookupInvoker%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-237">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-238">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="6e623-238">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value><span data-ttu-id="6e623-239"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-239"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-240">Appel <xref:System.Xaml.XamlMember.IsAmbient%2A> appelle <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-240">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e623-241">Ce comportement se produit dans les implémentations où la logique de réflexion interne initiale n’a pas déjà défini les informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-241">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="6e623-242">Recherche des propriétés ambiantes est sont généralement partie de la logique de traitement XAML pour vous assurer que les objets et valeurs qui reposent sur l’utilisation de qualification de type peuvent fonctionner correctement.</span><span class="sxs-lookup"><span data-stu-id="6e623-242">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="6e623-243">Les API des Services XAML .NET Framework et le contexte de schéma XAML par défaut remplissent cette valeur selon attribution avec <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e623-243">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="6e623-244">L’implémentation par défaut de <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> utilise cette existant <xref:System.Windows.Markup.AmbientAttribute> technique et elle retourne `true` si <xref:System.Windows.Markup.AmbientAttribute> existe sur une déclaration de membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-244">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="6e623-245"><xref:System.Windows.Markup.AmbientAttribute> se trouve sur les membres de plusieurs types WPF, qui incluent <xref:System.Windows.Application>, <xref:System.Windows.Setter>, et <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="6e623-245"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="6e623-246">Il se trouve également sur le <xref:System.Windows.ResourceDictionary> type, ce qui signifie que n’importe quel membre qui utilise <xref:System.Windows.ResourceDictionary> comme son type doit être considéré comme ambiant même si le membre n’est pas attribué spécifiquement.</span><span class="sxs-lookup"><span data-stu-id="6e623-246">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-247">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est un membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="6e623-247">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value><span data-ttu-id="6e623-248"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> est un membre pouvant être attaché ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-248"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-249">Le <xref:System.Xaml.XamlMember.IsAttachable%2A> valeur est initialisée selon le constructeur utilisé pour construire un <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="6e623-249">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-250">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est une directive XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-250">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value><span data-ttu-id="6e623-251"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> est un XAML directive ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-251"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-252">Le <xref:System.Xaml.XamlMember.IsDirective%2A> valeur est initialisée selon le constructeur utilisé pour construire un <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="6e623-252">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="6e623-253">La base de <xref:System.Xaml.XamlMember> constructeurs initialisent afin que <xref:System.Xaml.XamlMember.IsDirective%2A> est `false`.</span><span class="sxs-lookup"><span data-stu-id="6e623-253">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="6e623-254">Toutefois, le <xref:System.Xaml.XamlDirective> classe (une <xref:System.Xaml.XamlMember> classe dérivée) initialise afin que <xref:System.Xaml.XamlMember.IsDirective%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="6e623-254">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="6e623-255">Si vous souhaitez signaler <xref:System.Xaml.XamlMember.IsDirective%2A> comme `true` aux appelants d’une classe de schéma XAML personnalisée pour les membres XAML, assurez-vous que vous dérivez de <xref:System.Xaml.XamlDirective> parce que c’est la seule façon d’activer ce comportement.</span><span class="sxs-lookup"><span data-stu-id="6e623-255">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-256">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre d’événement.</span><span class="sxs-lookup"><span data-stu-id="6e623-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value><span data-ttu-id="6e623-257"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un événement ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-258">Appel <xref:System.Xaml.XamlMember.IsEvent%2A> appelle <xref:System.Xaml.XamlMember.LookupIsEvent%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-258">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-259">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> est initialisé avec une valide <see langword="xamlName" /> chaîne comme son <see cref="P:System.Xaml.XamlMember.Name" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-259">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value><span data-ttu-id="6e623-260"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> est initialisé avec une valide <see langword="xamlName" /> chaîne ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-260"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="6e623-261">XamlName</span><span class="sxs-lookup"><span data-stu-id="6e623-261">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-262">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6e623-262">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value><span data-ttu-id="6e623-263"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un membre en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-263"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-264">Appel <xref:System.Xaml.XamlMember.IsReadOnly%2A> appelle <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-264">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-265">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre avec un public pouvant être appelé <see langword="get" /> accesseur.</span><span class="sxs-lookup"><span data-stu-id="6e623-265">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value><span data-ttu-id="6e623-266"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un public pouvant être appelé <see langword="get" /> accesseur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-266"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-267">Le <xref:System.Xaml.XamlMember.IsReadPublic%2A> valeur vérifie si le <xref:System.Xaml.XamlMember.DeclaringType%2A> est public.</span><span class="sxs-lookup"><span data-stu-id="6e623-267">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="6e623-268">Si <xref:System.Xaml.XamlMember.DeclaringType%2A> n’est pas public, le `get` l’accesseur n’est pas pouvant être appelé de manière pratique et <xref:System.Xaml.XamlMember.IsReadPublic%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="6e623-268">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="6e623-269">Appel <xref:System.Xaml.XamlMember.IsReadPublic%2A> appelle <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-269">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e623-270">Le <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> méthode est virtuelle et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="6e623-270">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="6e623-271">La substitution a la possibilité de modifier (à des fins malveillantes ou autre) les informations d’accès signalées d’un membre XAML afin qu’il ne s’aligne plus comme prévu avec les informations d’accès de type système de sa déclaration CLR sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="6e623-271">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="6e623-272">Pour les vérifications critiques de sécurité des niveaux d’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6e623-272">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-273">Obtient une valeur qui indique si le membre n’est pas être résolu par le système de stockage qui est utilisé pour la résolution de type et de membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-273">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value><span data-ttu-id="6e623-274"><see langword="true" /> Si le membre n’est pas être résolu ; <see langword="false" /> si le membre ne peut être résolu.</span><span class="sxs-lookup"><span data-stu-id="6e623-274"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-275">Un <xref:System.Xaml.XamlMember> qui est construit avec la <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature retourne `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-275">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e623-276">Pour un chemin de chargement implique <xref:System.Xaml.XamlObjectWriter>, un <xref:System.Xaml.XamlMember> avec `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A> ne peut pas être écrit dans un graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-276">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="6e623-277">Sous les implémentations par défaut dans les API des Services XAML .NET Framework, le <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> appeler lève une <xref:System.Xaml.XamlObjectWriterException> lorsque le pertinentes <xref:System.Xaml.XamlMember> rapports `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-277">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e623-278">Vous ne devez pas construire un <xref:System.Xaml.XamlMember> qui a comme valeur `true` pour <xref:System.Xaml.XamlMember.IsUnknown%2A> , sauf si votre implémentation peut gérer les exceptions de <xref:System.Xaml.XamlObjectWriter>, ou vous avez d’autres façons d’ajuster le <xref:System.Xaml.XamlObjectWriter> comportement.</span><span class="sxs-lookup"><span data-stu-id="6e623-278">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="6e623-279">Appel <xref:System.Xaml.XamlMember.IsUnknown%2A> appelle <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-279">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-280">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule.</span><span class="sxs-lookup"><span data-stu-id="6e623-280">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value><span data-ttu-id="6e623-281"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-281"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-282">Appel <xref:System.Xaml.XamlMember.IsWriteOnly%2A> appelle <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-282">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-283">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui a un public pouvant être appelé <see langword="set" /> accesseur.</span><span class="sxs-lookup"><span data-stu-id="6e623-283">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value><span data-ttu-id="6e623-284"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un public pouvant être appelé <see langword="set" /> accesseur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-284"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-285">Le <xref:System.Xaml.XamlMember.IsWritePublic%2A> valeur considère que si le <xref:System.Xaml.XamlMember.DeclaringType%2A> est public dans le cadre de la détermination.</span><span class="sxs-lookup"><span data-stu-id="6e623-285">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="6e623-286">Si <xref:System.Xaml.XamlMember.DeclaringType%2A> n’est pas public, le `set` l’accesseur n’est pas pouvant être appelé de manière pratique et <xref:System.Xaml.XamlMember.IsWritePublic%2A> retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="6e623-286">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="6e623-287">Appel <xref:System.Xaml.XamlMember.IsWritePublic%2A> appelle <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-287">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e623-288">Le <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> méthode est virtuelle et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="6e623-288">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="6e623-289">La substitution a la possibilité de modifier (à des fins malveillantes ou autre) les informations d’accès signalées d’un membre XAML afin qu’il ne s’aligne plus comme prévu avec les informations d’accès de type système de sa déclaration CLR sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="6e623-289">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="6e623-290">Pour les vérifications critiques de sécurité des niveaux d’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6e623-290">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-291">En cas d’implémentation dans une classe dérivée, retourne un <see cref="T:System.Reflection.ICustomAttributeProvider" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="6e623-291">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="6e623-292">Implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" /></span><span class="sxs-lookup"><span data-stu-id="6e623-292">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-293">Substituez cette méthode pour fournir la réflexion interne avec une autre manière d’obtenir les valeurs d’attribut CLR.</span><span class="sxs-lookup"><span data-stu-id="6e623-293">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="6e623-294">En l’absence d’une substitution, le réflecteur interne utilise la logique de réflexion CLR typique comme les appels à <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-294">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="6e623-295">L'implémentation par défaut retourne la valeur `null`.</span><span class="sxs-lookup"><span data-stu-id="6e623-295">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-296">Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objet, qui est utilisé pour le chargement différé de XAML déclaré des objets.</span><span class="sxs-lookup"><span data-stu-id="6e623-296">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="6e623-297">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a un <see cref="T:System.Xaml.XamlDeferringLoader" /> contrainte sur le générique.</span><span class="sxs-lookup"><span data-stu-id="6e623-297">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-298">Cette méthode est appelée lorsqu’un appelant obtient une valeur comprise entre le <xref:System.Xaml.XamlMember.DeferringLoader%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-298">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="6e623-299">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlMember.DeferringLoader%2A> pour retourner une valeur différente de celle qui est activée par la réflexion interne par défaut, et si vous fournissez également personnalisé <xref:System.Xaml.Schema.XamlMemberInvoker> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-299">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="6e623-300">L’implémentation par défaut retourne un objet en lisant <xref:System.Windows.Markup.XamlDeferLoadAttribute> ou en utilisant un <xref:System.Xaml.XamlDeferringLoader> à partir du type déclarant.</span><span class="sxs-lookup"><span data-stu-id="6e623-300">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="6e623-301">Si aucun objet n’est disponible, cette méthode peut retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="6e623-301">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-302">Retourne une liste de <see cref="T:System.Xaml.XamlMember" /> objets.</span><span class="sxs-lookup"><span data-stu-id="6e623-302">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="6e623-303">Éléments de la liste répertorie les membres pour lesquels il existe des relations de dépendance pour l’ordre d’initialisation concernant ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-303">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-304">Liste d'objets <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-304">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-305">Cette méthode est appelée lorsqu’un appelant obtient une valeur comprise entre le <xref:System.Xaml.XamlMember.DependsOn%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-305">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="6e623-306">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlMember.DependsOn%2A> pour retourner une valeur différente de celle qui est activée par la réflexion interne par défaut, et si vous fournissez également personnalisé <xref:System.Xaml.Schema.XamlMemberInvoker> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-306">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="6e623-307">Les implémentations de lecteur et writer WPF XAML ce cas l’attribut <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e623-307">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="6e623-308">L’implémentation par défaut utilise cette existant <xref:System.Windows.Markup.DependsOnAttribute> technique.</span><span class="sxs-lookup"><span data-stu-id="6e623-308">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="6e623-309">Substituez cette méthode si vous n’utilisez pas <xref:System.Windows.Markup.DependsOnAttribute> pour cet objectif et prévoyez de remplacer cette technique pour indiquer l’ordre de traitement de la propriété par votre propre technique.</span><span class="sxs-lookup"><span data-stu-id="6e623-309">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="6e623-310">Si vous ne souhaitez pas prendre en charge un ordre de traitement de propriété, vous pouvez utiliser l’implémentation par défaut, car il ne retourne aucun résultat, ce qui convient.</span><span class="sxs-lookup"><span data-stu-id="6e623-310">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="6e623-311">La liste est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="6e623-311">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-312">Retourne un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> qui est associé à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-312">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-313">Le <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> informations pour ce <see cref="T:System.Xaml.XamlMember" />; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-313">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-314">Cette méthode est appelée par les appels à <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-314">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="6e623-315">L’implémentation par défaut n’exige pas un <xref:System.Xaml.XamlMember> être construite à l’aide d’un des constructeurs qui passent un initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="6e623-315">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="6e623-316">Toutefois, un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> valeur doit exister pour le <xref:System.Xaml.XamlMember>; sinon, retourne l’implémentation par défaut `null`.</span><span class="sxs-lookup"><span data-stu-id="6e623-316">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="6e623-317">Substituez cette méthode si vous dérivez également de <xref:System.Xaml.Schema.XamlMemberInvoker> et souhaitez retourner la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="6e623-317">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="6e623-318">Si vous retournez `null`, <xref:System.Xaml.XamlMember.Invoker%2A> retourne <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> aux appelants.</span><span class="sxs-lookup"><span data-stu-id="6e623-318">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-319">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> est signalé comme étant une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="6e623-319">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="6e623-320"><see langword="true" /> pour signaler ce <see cref="T:System.Xaml.XamlMember" /> comme une propriété ambiante ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-320"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-321">Cette méthode est appelée par les appels internes qui vérifient les informations de propriété XAML ambiantes.</span><span class="sxs-lookup"><span data-stu-id="6e623-321">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="6e623-322">Comportement de la propriété ambiante est comptabilisée dans le comportement de l’API publique de lecteurs XAML et les writers XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-322">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="6e623-323">Les appels internes qui référencent <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> font généralement partie de la logique de traitement XAML pour vous assurer que les objets et valeurs qui reposent sur l’utilisation de qualification de type peuvent fonctionner correctement.</span><span class="sxs-lookup"><span data-stu-id="6e623-323">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="6e623-324">L’implémentation de Services XAML du .NET Framework par défaut utilise l’attribution CLR pour obtenir ces informations à partir de la réflexion sur les types de stockage.</span><span class="sxs-lookup"><span data-stu-id="6e623-324">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="6e623-325">Plus précisément, l’implémentation par défaut recherche <xref:System.Windows.Markup.AmbientAttribute> et retourne `true` pour <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> si <xref:System.Windows.Markup.AmbientAttribute> existe sur une définition de membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-325">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="6e623-326">Substituez cette méthode si vous n’utilisez pas <xref:System.Windows.Markup.AmbientAttribute> pour cet objectif et prévoyez de remplacer cette technique d’indication des propriétés XAML ambiantes par votre propre technique.</span><span class="sxs-lookup"><span data-stu-id="6e623-326">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="6e623-327">Exemples d’API de WPF cet attribut avec <xref:System.Windows.Markup.AmbientAttribute> sont <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> et <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e623-327">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-328">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> représente un événement.</span><span class="sxs-lookup"><span data-stu-id="6e623-328">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="6e623-329"><see langword="true" /> pour les rapports que ce <see cref="T:System.Xaml.XamlMember" /> représente un événement ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-329"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-330">L’implémentation par défaut vérifie si <xref:System.Xaml.XamlMember.UnderlyingMember%2A> est de type <xref:System.Reflection.EventInfo>et si tel est le cas, renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="6e623-330">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="6e623-331">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-331">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="6e623-332">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées qui peuvent être interprétée pour déterminer le XAML des représentations de système de types au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-332">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-333">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété en lecture seule escomptée.</span><span class="sxs-lookup"><span data-stu-id="6e623-333">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="6e623-334"><see langword="true" /> pour signaler ce <see cref="T:System.Xaml.XamlMember" /> comme une propriété prévue en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-334"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-335">L’implémentation par défaut retourne `true` si <xref:System.Xaml.XamlMember.UnderlyingMember%2A> existe, mais un public `set` accesseur n’existe pas, comme déterminé par réflexion interne.</span><span class="sxs-lookup"><span data-stu-id="6e623-335">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="6e623-336">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-336">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="6e623-337">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées qui peuvent être interprétée pour déterminer le XAML des représentations de système de types au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-337">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-338">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> représente une propriété qui a un public <see langword="get" /> accesseur.</span><span class="sxs-lookup"><span data-stu-id="6e623-338">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="6e623-339"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente une propriété qui a un public <see langword="get" /> accesseur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-339"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-340">L’implémentation par défaut retourne des résultats basés sur une réflexion interne ou de la négation de <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, dans cet ordre.</span><span class="sxs-lookup"><span data-stu-id="6e623-340">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="6e623-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Retourne si le membre lui-même est public ; elle retourne `true` pour un membre public sur un nonpublic type déclarant.</span><span class="sxs-lookup"><span data-stu-id="6e623-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="6e623-342">Utilisez <xref:System.Xaml.XamlMember.IsReadPublic%2A> au lieu de cela, si vous voulez également à prendre en compte la visibilité du type déclarant.</span><span class="sxs-lookup"><span data-stu-id="6e623-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="6e623-343">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-343">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="6e623-344">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-344">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e623-345">Le <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> méthode est virtuelle et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="6e623-345">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="6e623-346">La substitution a la possibilité de modifier (à des fins malveillantes ou autre) les informations d’accès signalées d’un membre XAML afin qu’il ne s’aligne plus comme prévu avec les informations d’accès de type système de sa déclaration CLR sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="6e623-346">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="6e623-347">Pour les vérifications critiques de sécurité des niveaux d’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6e623-347">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-348">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui n’est pas être résolu par le système de stockage qui est utilisé pour la résolution de type et de membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-348">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="6e623-349"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un membre non résolu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-349"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-350">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-350">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="6e623-351">L’implémentation par défaut retourne des résultats qui sont basés sur la réflexion interne ou sur la recherche pour un `null` valeur <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, dans cet ordre.</span><span class="sxs-lookup"><span data-stu-id="6e623-351">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="6e623-352">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-352">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-353">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui a un public <see langword="set" /> accesseur mais pas à un public <see langword="get" /> accesseur.</span><span class="sxs-lookup"><span data-stu-id="6e623-353">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="6e623-354"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un membre en écriture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-354"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-355">L’implémentation par défaut retourne `true` si un <xref:System.Xaml.XamlMember.UnderlyingMember%2A> existe qui a un public `set` accesseur et un nonpublic `get` accesseur, tel que déterminé par la réflexion interne.</span><span class="sxs-lookup"><span data-stu-id="6e623-355">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="6e623-356">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-356">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="6e623-357">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-357">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-358">Retourne si ce <see cref="T:System.Xaml.XamlMember" /> représente un membre qui a un public <see langword="set" /> accesseur.</span><span class="sxs-lookup"><span data-stu-id="6e623-358">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="6e623-359"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlMember" /> représente un membre accessible en écriture ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-359"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-360">L’implémentation par défaut retourne des résultats basés sur la réflexion interne ou la négation de <xref:System.Xaml.XamlMember.IsReadOnly%2A>, dans cet ordre.</span><span class="sxs-lookup"><span data-stu-id="6e623-360">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="6e623-361">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-361">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="6e623-362">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-362">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e623-363">Le <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> méthode est virtuelle et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="6e623-363">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="6e623-364">La substitution a la possibilité de modifier (à des fins malveillantes ou autre) les informations d’accès signalées d’un membre XAML afin qu’il ne s’aligne plus comme prévu avec les informations d’accès de type système de sa déclaration CLR sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="6e623-364">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="6e623-365">Pour les vérifications critiques de sécurité des niveaux d’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6e623-365">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-366">Retourne le crochet ouvrant et le crochet fermant d’une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="6e623-366">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="6e623-367">Collection contenant le crochet ouvrant et le crochet fermant.</span><span class="sxs-lookup"><span data-stu-id="6e623-367">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-368">Retourne le <see cref="T:System.Xaml.XamlType" /> du type où la <see cref="T:System.Xaml.XamlMember" /> peuvent exister.</span><span class="sxs-lookup"><span data-stu-id="6e623-368">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="6e623-369">Le type où la <see cref="T:System.Xaml.XamlMember" /> peuvent exister.</span><span class="sxs-lookup"><span data-stu-id="6e623-369">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-370">L’implémentation par défaut fait la distinction entre les membres pouvant être attachées et non pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-370">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="6e623-371">Pour les membres non pouvant être attachée, <xref:System.Xaml.XamlMember.LookupTargetType%2A> retourne toujours <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-371">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="6e623-372">Pour les membres pouvant être attachées, <xref:System.Xaml.XamlMember.LookupTargetType%2A> retourne un résultat basé sur l’examen de la <xref:System.Xaml.XamlMember.UnderlyingMember%2A> type de paramètre d’accesseur et interprète ce type basé sur le contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-372">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="6e623-373">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-373">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="6e623-374">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-374">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-375">Retourne le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-375">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="6e623-376">Le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-376">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-377">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-377">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="6e623-378">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlMember.Type%2A> pour retourner une valeur différente de celle qui est activée par la réflexion interne par défaut, et si vous fournissez également personnalisé <xref:System.Xaml.Schema.XamlMemberInvoker> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-378">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="6e623-379">L’implémentation par défaut utilise différents chemins de code et concepts pour retourné <xref:System.Xaml.XamlType> qui est selon que cela <xref:System.Xaml.XamlMember> représente une propriété, une méthode ou un événement.</span><span class="sxs-lookup"><span data-stu-id="6e623-379">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="6e623-380">Pour une propriété, retournée <xref:System.Xaml.XamlType> est le type qui définit la propriété ou qui est retourné par la propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-380">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="6e623-381">Pour un événement, retourné <xref:System.Xaml.XamlType> est le type de gestionnaire d’événements requis (il s’agit d’un délégué dans une implémentation CLR).</span><span class="sxs-lookup"><span data-stu-id="6e623-381">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="6e623-382">Pour une méthode, <xref:System.Xaml.XamlType> est le type de retour.</span><span class="sxs-lookup"><span data-stu-id="6e623-382">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="6e623-383">Dans chaque cas, le contexte de schéma XAML est utilisé pour évaluer le type XAML à partir du type de système sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="6e623-383">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="6e623-384">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-384">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="6e623-385">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-385">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-386">Retourne une implémentation de convertisseur de type qui est associée à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-386">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-387">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance avec <see cref="T:System.ComponentModel.TypeConverter" /> contrainte ; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-387">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-388">L’implémentation par défaut utilise la logique suivante et ordre de traitement :</span><span class="sxs-lookup"><span data-stu-id="6e623-388">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="6e623-389">Si l’attribution existe au niveau du membre (<xref:System.ComponentModel.TypeConverterAttribute>), les informations d’attribut sont utilisées pour un appel à <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> par rapport au contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-389">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="6e623-390">Si <xref:System.Xaml.XamlMember.Type%2A> est valide, un convertisseur de type qui est associé au type est retourné.</span><span class="sxs-lookup"><span data-stu-id="6e623-390">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="6e623-391">Si le membre est un événement, un convertisseur de type spécifique à l’événement est retourné.</span><span class="sxs-lookup"><span data-stu-id="6e623-391">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="6e623-392">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-392">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="6e623-393">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-393">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-394">Retourne un <see langword="get" /> accesseur qui est associé à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-394">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-395">Le <see cref="T:System.Reflection.MethodInfo" /> associé au <see langword="get" /> accesseur ; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-395">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-396">L’implémentation par défaut interprète le <xref:System.Xaml.XamlMember.UnderlyingMember%2A> propriété en tant que <xref:System.Reflection.PropertyInfo> et retourne la valeur de <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (avec le paramètre défini sur `true`), ce qui signifie que la méthode retournée peut être non public.</span><span class="sxs-lookup"><span data-stu-id="6e623-396">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="6e623-397">Ce comportement peut provoquer des `null` dans certains cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-397">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="6e623-398">y compris les cas où aucun accesseur associé n’existe ou le membre n’est pas une propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-398">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="6e623-399">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de la <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> propriété associé à un <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="6e623-399">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="6e623-400">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-400">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="6e623-401">Veillez à implémenter <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, et <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> afin qu’elles retournent toutes résultats mis en corrélation.</span><span class="sxs-lookup"><span data-stu-id="6e623-401">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-402">Retourne un système de type CLR <see cref="T:System.Reflection.MemberInfo" /> qui est associé à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-402">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-403">Un système de type CLR <see cref="T:System.Reflection.MemberInfo" /> objet qui est associé à ce <see cref="T:System.Xaml.XamlMember" />; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-403">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-404">L’implémentation par défaut retourne les informations de membre sous-jacent, qui repose sur la construction.</span><span class="sxs-lookup"><span data-stu-id="6e623-404">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="6e623-405">Si le <xref:System.Reflection.MemberInfo> objet est construit avec une signature qui ne fournit pas suffisamment d’informations pour définir le membre sous-jacent, cette méthode retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="6e623-405">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6e623-406">Si un membre sous-jacent a été défini pendant la construction, vous ne devez pas appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-406">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="6e623-407">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-407">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="6e623-408">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-408">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="6e623-409">Veillez à implémenter <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, et <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> afin qu’elles retournent toutes résultats mis en corrélation.</span><span class="sxs-lookup"><span data-stu-id="6e623-409">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-410">Retourne un <see langword="set" /> accesseur qui est associé à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-410">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-411">Le <see cref="T:System.Reflection.MethodInfo" /> associé au <see langword="set" /> accesseur ; ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-411">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-412">L’implémentation par défaut interprète <xref:System.Xaml.XamlMember.UnderlyingMember%2A> comme <xref:System.Reflection.PropertyInfo> et retourne la valeur de <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (avec le paramètre défini sur `true`), ce qui signifie que la méthode retournée peut être non public.</span><span class="sxs-lookup"><span data-stu-id="6e623-412">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="6e623-413">Cela peut entraîner de `null` pour certains cas, y compris les cas où il n’existe pas d’accesseur, ou le membre n’est pas une propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-413">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="6e623-414">Cette méthode est appelée lorsqu’un appelant obtient une valeur comprise entre <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> sur associé à un <xref:System.Xaml.Schema.XamlMemberInvoker>. Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-414">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="6e623-415">Veillez à implémenter <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, et <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> afin qu’elles retournent toutes résultats mis en corrélation.</span><span class="sxs-lookup"><span data-stu-id="6e623-415">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-416">Retourne une implémentation du sérialiseur de valeur qui est associée à ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-416">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-417">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance avec <see cref="T:System.Windows.Markup.ValueSerializer" /> contrainte, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-417">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-418">L’implémentation par défaut utilise la logique suivante et ordre de traitement :</span><span class="sxs-lookup"><span data-stu-id="6e623-418">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="6e623-419">Si l’attribution existe au niveau du membre (<xref:System.Windows.Markup.ValueSerializerAttribute>), les informations d’attribut sont utilisées pour un appel à <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> par rapport au contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-419">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="6e623-420">Si <xref:System.Xaml.XamlMember.Type%2A> est valide, un convertisseur de valeur qui est associé au type est retourné.</span><span class="sxs-lookup"><span data-stu-id="6e623-420">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="6e623-421">Si les conditions précédentes ne s’appliquent pas, `null` est retournée.</span><span class="sxs-lookup"><span data-stu-id="6e623-421">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="6e623-422">Cette méthode est appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-422">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="6e623-423">Substituez cette méthode si vous souhaitez signaler des résultats uniformes pour l’intégralité d’un <xref:System.Xaml.XamlMember> classe dérivée, ou si vous avez spécialisé des métadonnées disponibles pour le déterminer au cas par cas.</span><span class="sxs-lookup"><span data-stu-id="6e623-423">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-424">Définit le crochet ouvrant et le crochet fermant d’une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="6e623-424">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="6e623-425">Collection contenant le crochet ouvrant et le crochet fermant.</span><span class="sxs-lookup"><span data-stu-id="6e623-425">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-426">Obtient le <see langword="xamlName" /> nom de chaîne qui déclare ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-426">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="6e623-427">Le <see langword="xamlName" /> nom de chaîne qui déclare ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-427">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-428">Cette valeur est toujours définie pendant la construction.</span><span class="sxs-lookup"><span data-stu-id="6e623-428">This value is always set during construction.</span></span> <span data-ttu-id="6e623-429">Les constructeurs sont implémentées par <xref:System.Xaml.XamlMember> généralement lève une exception si un nom initial n’est pas spécifié ; par conséquent, attendez-vous à cette propriété `null` ou une chaîne vide, si vous utilisez des Services de XAML par défaut .NET Framework implémentations.</span><span class="sxs-lookup"><span data-stu-id="6e623-429">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="6e623-430">[XamlName, grammaire](~/docs/framework/xaml-services/xamlname-grammar.md) et des règles d’affectation de noms pour le type CLR et les membres ne sont pas des intersections exactes.</span><span class="sxs-lookup"><span data-stu-id="6e623-430">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="6e623-431">Il est possible de déclarer un nom de membre qui est valide sous le CLR mais pas valide sous d’affectation de noms XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-431">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="6e623-432">Vous devez éviter cette situation si possible.</span><span class="sxs-lookup"><span data-stu-id="6e623-432">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="6e623-433">XamlName</span><span class="sxs-lookup"><span data-stu-id="6e623-433">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="6e623-434"><see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-434">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="6e623-435"><see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6e623-436">Détermine si deux objets <see cref="T:System.Xaml.XamlMember" /> spécifiés ont la même valeur.</span><span class="sxs-lookup"><span data-stu-id="6e623-436">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="6e623-437"><see langword="true" /> si la valeur de <paramref name="xamlMember1" /> est égale à la valeur de <paramref name="xamlMember2" /> ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-437"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="6e623-438"><see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-438">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="6e623-439"><see cref="T:System.Xaml.XamlMember" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-439">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6e623-440">Détermine si deux objets <see cref="T:System.Xaml.XamlMember" /> spécifiés ont des valeurs différentes.</span><span class="sxs-lookup"><span data-stu-id="6e623-440">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="6e623-441"><see langword="true" /> Si la valeur de <paramref name="xamlMember1" /> diffère de la valeur de <paramref name="xamlMember2" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-441"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-442">Obtient l’URI qui identifie l’espace de noms XAML principal pour cela de l’espace de noms XAML unique <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-442">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="6e623-443">L’identificateur de l’espace de noms XAML principal pour ce <see cref="T:System.Xaml.XamlMember" />, sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="6e623-443">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-444">Le <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> propriété fournit la même valeur que si vous appelez <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> et l’obtention de la première chaîne de valeur dans la liste renvoyée.</span><span class="sxs-lookup"><span data-stu-id="6e623-444">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="6e623-445">L’espace de noms XAML par défaut doit être utilisé lors de l’écriture du membre dans le texte ou autres représentations qui conservent les informations d’espace de noms XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-445">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-446">Obtient un <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> valeur qui indique comment un concepteur visuel doit traiter le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-446">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="6e623-447">Une valeur de la <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> énumération.</span><span class="sxs-lookup"><span data-stu-id="6e623-447">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="6e623-448">La valeur par défaut est <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-448">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-449">Obtient le <see cref="T:System.Xaml.XamlType" /> du type où la <see cref="T:System.Xaml.XamlMember" /> peuvent exister.</span><span class="sxs-lookup"><span data-stu-id="6e623-449">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="6e623-450">Le type où la <see cref="T:System.Xaml.XamlMember" /> peuvent exister.</span><span class="sxs-lookup"><span data-stu-id="6e623-450">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-451">La valeur retournée est différente pour les membres pouvant être attachées et non pouvant être attachée.</span><span class="sxs-lookup"><span data-stu-id="6e623-451">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="6e623-452">Pour les membres non pouvant être attachée, <xref:System.Xaml.XamlMember.TargetType%2A> retourne <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-452">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="6e623-453">Pour les membres pouvant être attachées, <xref:System.Xaml.XamlMember.LookupTargetType%2A> retourne un résultat qui est basé sur cette logique :</span><span class="sxs-lookup"><span data-stu-id="6e623-453">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="6e623-454">Si la réflexion ne peut pas résoudre un stockage (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), cette méthode retourne une constante interne qui représente un type d’objet générique.</span><span class="sxs-lookup"><span data-stu-id="6e623-454">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="6e623-455">Si la condition précédente ne s’applique pas, <xref:System.Xaml.XamlMember.LookupTargetType%2A> est appelée.</span><span class="sxs-lookup"><span data-stu-id="6e623-455">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="6e623-456">L’implémentation par défaut retourne un <xref:System.Xaml.XamlType> qui est basé sur l’examen des méthodes qui implémentent le `get` et `set` accesseurs.</span><span class="sxs-lookup"><span data-stu-id="6e623-456">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="6e623-457">Une classe peut substituer <xref:System.Xaml.XamlMember.LookupTargetType%2A> à utiliser un comportement différent, comme les autres formes de métadonnées qui peut-être signaler des types de cibles pour les membres pouvant être attachés.</span><span class="sxs-lookup"><span data-stu-id="6e623-457">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e623-458">Retourne une représentation sous forme de chaîne de ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-458">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="6e623-459">Une représentation de chaîne de ce <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-459">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-460">Cette implémentation retourne <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-460">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-461">Obtient le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-461">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="6e623-462">Le <see cref="T:System.Xaml.XamlType" /> du type qui est utilisé par le membre.</span><span class="sxs-lookup"><span data-stu-id="6e623-462">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-463">Appel <xref:System.Xaml.XamlMember.Type%2A> appelle <xref:System.Xaml.XamlMember.LookupType%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-463">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e623-464">Cela se produit lorsque la logique de réflexion interne initiale n’a pas déjà défini les informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-464">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="6e623-465">Le comportement par défaut (aucun <xref:System.Xaml.XamlMember.LookupType%2A> remplacer), retourné <xref:System.Xaml.XamlType> peut avoir des significations différentes conceptuelles.</span><span class="sxs-lookup"><span data-stu-id="6e623-465">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="6e623-466">Signification varie selon que cela <xref:System.Xaml.XamlMember> représente une propriété, une méthode ou un événement, comme le montre la liste suivante :</span><span class="sxs-lookup"><span data-stu-id="6e623-466">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="6e623-467">Pour une propriété, retournée <xref:System.Xaml.XamlType> est le type qui définit la propriété ou qui est retourné par la propriété.</span><span class="sxs-lookup"><span data-stu-id="6e623-467">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="6e623-468">Pour un événement, retourné <xref:System.Xaml.XamlType> est le type de gestionnaire d’événements requis (il s’agit d’un délégué dans une implémentation CLR).</span><span class="sxs-lookup"><span data-stu-id="6e623-468">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="6e623-469">Pour une méthode, <xref:System.Xaml.XamlType> est le type de retour de cette méthode, qui peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="6e623-469">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="6e623-470">Dans chaque cas, le contexte de schéma XAML est utilisé pour évaluer le type XAML à partir du type de sauvegarde.</span><span class="sxs-lookup"><span data-stu-id="6e623-470">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-471">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objet, qui peut être utilisé pour la construction de conversion de type de XAML déclaré des objets.</span><span class="sxs-lookup"><span data-stu-id="6e623-471">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="6e623-472">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> valeur, avec un <see cref="T:System.ComponentModel.TypeConverter" /> contrainte sur le générique.</span><span class="sxs-lookup"><span data-stu-id="6e623-472">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-473">Appel <xref:System.Xaml.XamlMember.TypeConverter%2A> appelle <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-473">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e623-474">Ce comportement se produit lorsque la logique de réflexion interne initiale n’a pas déjà défini les informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-474">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="6e623-475">Valeur des implémentations qui retournent une propriété non null pour <xref:System.Xaml.XamlMember.TypeConverter%2A> ne sont pas nécessairement un <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="6e623-475">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="6e623-476">Voici une liste de valeurs de retour non null possibles pour <xref:System.Xaml.XamlMember.TypeConverter%2A> et ce que représentent les valeurs suivantes :</span><span class="sxs-lookup"><span data-stu-id="6e623-476">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="6e623-477">La valeur de retour signale un convertisseur de type qui est attribué spécifiquement à ce membre ou plus généralement au type cible du convertisseur.</span><span class="sxs-lookup"><span data-stu-id="6e623-477">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="6e623-478">Ce comportement est généralement quels la plupart des systèmes de type XAML et les processeurs XAML recherchent pour instancier un convertisseur de type et appeler ses méthodes.</span><span class="sxs-lookup"><span data-stu-id="6e623-478">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="6e623-479">La valeur de retour signale un convertisseur de valeurs intégrées.</span><span class="sxs-lookup"><span data-stu-id="6e623-479">The return value reports a built-in value converter.</span></span> <span data-ttu-id="6e623-480">Ces convertisseurs existent pour certaines opérations internes qui sont effectuées par un writer XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-480">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="6e623-481">En particulier, ces convertisseurs intégrés convertir les valeurs de chaîne d’attribut brutes les primitives de langage XAML.</span><span class="sxs-lookup"><span data-stu-id="6e623-481">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="6e623-482">Pour l’implémentation de Services XAML du .NET Framework, ces conversions de type intégré renvoient souvent à un convertisseur de type qui est défini dans l’assembly système.</span><span class="sxs-lookup"><span data-stu-id="6e623-482">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="6e623-483">Par exemple, une conversion pour un <xref:System.Int32> valeur a une conversion, transférée intégrée et par conséquent, le <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> valeur références <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="6e623-483">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="6e623-484">La valeur de retour signale le cas d’un modèle d’objet sans contrainte ; Autrement dit, le <xref:System.Xaml.XamlMember> a un <xref:System.Xaml.XamlMember.Type%2A> valeur <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="6e623-484">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="6e623-485">Dans ce cas, le <xref:System.Xaml.Schema.XamlValueConverter%601> qui signale la <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> est {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="6e623-485">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="6e623-486">Toutefois, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> est `null` , car aucun type ou une instance n’est disponible pour effectuer cette conversion.</span><span class="sxs-lookup"><span data-stu-id="6e623-486">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="6e623-487">Au lieu de cela, le comportement du modèle objet ne peut pas être déterminé jusqu’au moment de l’exécution, lorsque le runtime de la technologie spécifique détermine la gestion de son graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="6e623-487">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="6e623-488">Si vous pouvez accéder à un travail <xref:System.ComponentModel.TypeConverter> de <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, vous pouvez appeler ses méthodes de conversion.</span><span class="sxs-lookup"><span data-stu-id="6e623-488">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="6e623-489">Toutefois, de nombreuses méthodes de conversion s’appuient sur le contexte de service.</span><span class="sxs-lookup"><span data-stu-id="6e623-489">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="6e623-490">Si vous n’avez pas le même contexte de service disponible que le convertisseur de type attend pour son rôle typique d’écriture d’objets pour les graphiques d’objets, les méthodes du convertisseur peuvent lever des exceptions.</span><span class="sxs-lookup"><span data-stu-id="6e623-490">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-491">Obtient le système de type CLR <see cref="T:System.Reflection.MemberInfo" /> qui est disponible pour un membre construit par <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, ou <see cref="T:System.Reflection.EventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-491">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="6e623-492">Système de type CLR <see cref="T:System.Reflection.MemberInfo" /> plus d’informations, utilisées pour le transtypage à partir des paramètres du constructeur initial.</span><span class="sxs-lookup"><span data-stu-id="6e623-492">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="6e623-493">Un <see cref="T:System.Xaml.XamlMember" /> qui est construit avec la <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e623-493">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-494">Appel <xref:System.Xaml.XamlMember.UnderlyingMember%2A> appelle <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-494">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e623-495">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objet, qui est utilisé pour la sérialisation de valeur de XAML déclaré des objets.</span><span class="sxs-lookup"><span data-stu-id="6e623-495">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="6e623-496">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.Windows.Markup.ValueSerializer" /> contrainte sur le générique.</span><span class="sxs-lookup"><span data-stu-id="6e623-496">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e623-497">Appel <xref:System.Xaml.XamlMember.ValueSerializer%2A> appelle <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6e623-497">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e623-498">Ce comportement se produit lorsque la logique de réflexion interne initiale n’a pas déjà défini les informations.</span><span class="sxs-lookup"><span data-stu-id="6e623-498">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="6e623-499">Valeur de pas tous les cas qui retournent une propriété non null pour <xref:System.Xaml.XamlMember.ValueSerializer%2A> sont nécessairement un <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="6e623-499">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="6e623-500">Consultez <xref:System.Xaml.XamlMember.TypeConverter%2A>; les mêmes considérations s’appliquent à <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e623-500">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>