<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3faba62692ba6139b45fa826eb8db90e5cf230d2" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014722" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="27ec9-101">Fournit des informations sur les types XAML en tant que partie du système XAML général implémenté dans les Services XAML .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="27ec9-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-102">De nombreuses API dans le <xref:System.Xaml.XamlType> classe fournissent des informations sur les types XAML, où le concept signalé est semblable aux sections particulières de la spécification XAML [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="27ec9-103"><xref:System.Xaml.XamlType> est largement utilisé dans l’API de Services XAML .NET Framework pour les informations de rapport sur un type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="27ec9-104"><xref:System.Xaml.XamlType> signale les informations que vous devrez peut-être savoir sur un type XAML pour pouvoir fonctionner avec une instance ou pour accéder à ses membres à partir d’un flux de nœud XAML, ou une représentation XAML semblable.</span><span class="sxs-lookup"><span data-stu-id="27ec9-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="27ec9-105">Sa création de rapport est similaire à la façon dont le <xref:System.Type> dans le CLR système de type, ainsi que des classes de réflexion comme <xref:System.Reflection.MemberInfo>, fournissent des informations sur un type CLR et de son utilisation.</span><span class="sxs-lookup"><span data-stu-id="27ec9-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="27ec9-106">Pour étendre le système de type XAML, vous pouvez dériver de <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="27ec9-107">Pour effectuer cette opération efficacement, vous devrez peut-être également implémenter un <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="27ec9-108">Le <xref:System.Xaml.Schema.XamlTypeInvoker> permet au système de type XAML généralisé travailler avec le système de type stockage que vous spécifiez en tant que partie du comportement d’appel.</span><span class="sxs-lookup"><span data-stu-id="27ec9-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="27ec9-109">Personnalisé spécifique <xref:System.Xaml.Schema.XamlTypeInvoker> offre un moyen de réduire les dépendances sur le système de type CLR, qui sont utilisés par la valeur par défaut <xref:System.Xaml.XamlType> comportement.</span><span class="sxs-lookup"><span data-stu-id="27ec9-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27ec9-110">Initialise une nouvelle instance de la classe <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="27ec9-111">CLR sous-jacent <see cref="T:System.Type" /> pour le type XAML à construire.</span><span class="sxs-lookup"><span data-stu-id="27ec9-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="27ec9-112">Contexte de schéma XAML pour les lecteurs XAML ou les writers XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-112">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="27ec9-113">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlType" /> classe basée sur les informations de type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27ec9-114">Une ou plusieurs des <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="27ec9-115">Le nom du type à créer.</span><span class="sxs-lookup"><span data-stu-id="27ec9-115">The name of the type to create.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="27ec9-116">Les arguments de type pour un <see cref="T:System.Xaml.XamlType" /> qui représente un type générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="27ec9-117">Peut être (et est souvent) <see langword="null" />, ce qui indique que le type représenté n’est pas un type générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="27ec9-118">Contexte de schéma XAML pour les lecteurs XAML et les writers XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-118">XAML schema context for XAML readers and XAML writers.</span></span></param>
        <summary><span data-ttu-id="27ec9-119">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlType" /> classe basée sur un nom de chaîne pour le type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-120">Il s’agit d’un constructeur protégé.</span><span class="sxs-lookup"><span data-stu-id="27ec9-120">This is a protected constructor.</span></span> <span data-ttu-id="27ec9-121">Aucune classe dérivée publique actuelle n’existe qui utilisent ce chemin d’accès particulier pour la construction.</span><span class="sxs-lookup"><span data-stu-id="27ec9-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="27ec9-122">En tant que consommateur existants <xref:System.Xaml.XamlType>, vous devez utiliser les autres signatures de constructeur (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, ou <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) pour initialiser un <xref:System.Xaml.XamlType> objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27ec9-123">Une ou plusieurs des <paramref name="typeName" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="27ec9-124">Le type sous-jacent pour le type XAML à construire.</span><span class="sxs-lookup"><span data-stu-id="27ec9-124">The underlying type for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="27ec9-125">Contexte de schéma XAML pour le lecteur XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-125">XAML schema context for the XAML reader.</span></span></param>
        <param name="invoker"><span data-ttu-id="27ec9-126">Le <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implémentation qui gère la réflexion au moment de l’exécution appelle par rapport à la <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span></span></param>
        <summary><span data-ttu-id="27ec9-127">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlType" /> classe basée sur les informations de type sous-jacent et un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="27ec9-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27ec9-128">Une ou plusieurs des <paramref name="underlyingType" /> ou <paramref name="schemaContext" /> sont <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace"><span data-ttu-id="27ec9-129">L’espace de noms XAML pour le type, sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="27ec9-129">The XAML namespace for the type, as a string.</span></span></param>
        <param name="unknownTypeName"><span data-ttu-id="27ec9-130">Le nom du type dans la liste fournie <paramref name="unknownTypeNamespace" /> espace de noms XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-130">The name of the type in the provided <paramref name="unknownTypeNamespace" /> XAML namespace.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="27ec9-131">Les arguments de type pour un <see cref="T:System.Xaml.XamlType" /> qui représente un type générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="27ec9-132">Peut être (et est souvent) <see langword="null" />, ce qui indique que le type représenté n’est pas un type générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="27ec9-133">Contexte de schéma XAML pour les lecteurs XAML ou les writers XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-133">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="27ec9-134">Initialise une nouvelle instance de la <see cref="T:System.Xaml.XamlType" /> classe basée sur l’espace de noms XAML et un nom de chaîne pour le type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span></span> <span data-ttu-id="27ec9-135">Ce constructeur est exclusivement pour l’analyse et d’enregistrement de nœuds XAML de types réputés qui sont connues pour ne pas avoir de stockage dans la prise en charge de système de type et le contexte de schéma XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-136">Utilisez ce constructeur uniquement pour les types « inconnus », où un type XAML qui mappe à un système de type sous-jacent n’est pas disponible.</span><span class="sxs-lookup"><span data-stu-id="27ec9-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="27ec9-137">Ce constructeur ne peut pas produire de résultat où <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> est `true`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="27ec9-138">Au lieu de cela, la logique de réflecteur par défaut signale le type sous-jacent que <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27ec9-139">Toutefois, ce comportement peut changer raison de la <xref:System.Xaml.XamlType.LookupIsUnknown%2A> remplacer.</span><span class="sxs-lookup"><span data-stu-id="27ec9-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27ec9-140">Une ou plusieurs des <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, ou <paramref name="schemaContext" /> sont <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-141">Obtient une collection en lecture seule des types utilisables comme le <see cref="P:System.Xaml.XamlType.ContentProperty" /> valeur pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-142">Une collection en lecture seule des types de contenu possibles.</span><span class="sxs-lookup"><span data-stu-id="27ec9-142">A read-only collection of possible content types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-143">Types qui peuvent être assignés un type de contenu spécifique (par exemple un type de base qui est un type de contenu autorisé) ne sont pas considérés comme plusieurs types à des fins de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-144">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-145">Obtient le <see cref="T:System.Xaml.XamlType" /> pour le type de base immédiat de ce type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="27ec9-146">Détermination de cette valeur est basée sur le type sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> et contexte de schéma.</span><span class="sxs-lookup"><span data-stu-id="27ec9-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <value><span data-ttu-id="27ec9-147">Le <see cref="T:System.Xaml.XamlType" /> pour le type de base immédiat de ce type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-148">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupBaseType%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-149">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupBaseType%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="27ec9-150">Par défaut, <xref:System.Xaml.XamlType.BaseType%2A> retourne une constante interne qui représente un <xref:System.Object> si <xref:System.Xaml.XamlType.UnderlyingType%2A> est `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-152">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les informations de type signalées concernant un type XAML afin qu’il ne s’aligne plus comme prévu avec les informations de système de type de son type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="27ec9-153">Pour les vérifications critiques de sécurité des opérations d’assignation et l’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="27ec9-154">Le type à vérifier par rapport aux cours <see cref="T:System.Xaml.XamlType" /> .</span><span class="sxs-lookup"><span data-stu-id="27ec9-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span></span></param>
        <summary><span data-ttu-id="27ec9-155">Retourne une valeur qui indique si une instance de ce <see cref="T:System.Xaml.XamlType" /> a spécifié <see cref="T:System.Xaml.XamlType" /> dans sa liste de types assignables.</span><span class="sxs-lookup"><span data-stu-id="27ec9-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span></span></summary>
        <returns><span data-ttu-id="27ec9-156"><see langword="true" /> Si <paramref name="xamlType" /> figure dans la liste de types assignables ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-156"><see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-157">Bien que le type peut être assigné n’a pas de toutes les fonctionnalités du type référence, vous pouvez l’utiliser pour l’attribution.</span><span class="sxs-lookup"><span data-stu-id="27ec9-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="27ec9-158">Par exemple, vous pouvez utiliser l’attribution pour établir des correspondances de type pour les valeurs d’une propriété.</span><span class="sxs-lookup"><span data-stu-id="27ec9-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="27ec9-159">Le concept de types assignables dans XAML est similaire au concept de cast ascendant dans le système de type CLR.</span><span class="sxs-lookup"><span data-stu-id="27ec9-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="27ec9-160">Par exemple, sous un système de type CLR, chaque type a un <xref:System.Object> dans sa liste des types assignables.</span><span class="sxs-lookup"><span data-stu-id="27ec9-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="27ec9-161">Si l’un des deux <xref:System.Xaml.XamlType> aux instances qui sont utilisées pour la comparaison a <xref:System.Xaml.XamlType.IsUnknown%2A> égal à `true`, cette méthode a un mode inconnu qui retourne `true` si les deux <xref:System.Xaml.XamlType> instances sont équivalentes.</span><span class="sxs-lookup"><span data-stu-id="27ec9-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="27ec9-162">L’implémentation par défaut utilise le CLR <xref:System.Type> de <xref:System.Xaml.XamlType.UnderlyingType%2A> pour ce <xref:System.Xaml.XamlType> et l’entrée <xref:System.Xaml.XamlType>et les appels <xref:System.Type.IsAssignableFrom%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="27ec9-163">Substituez cette méthode si vous souhaitez une détermination différente des types assignables.</span><span class="sxs-lookup"><span data-stu-id="27ec9-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="27ec9-164">En passant une valeur null `xamlType` ne lève pas d’exception et retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-166">La substitution a la possibilité (fins malveillantes ou autre) pour modifier la possibilité d’assignation d’un type XAML afin qu’il ne s’aligne plus comme prévu avec le comportement de conversion de type de son type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="27ec9-167">Pour les vérifications critiques de sécurité des opérations d’assignation et l’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-168">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit avoir des arguments (contraintes génériques par <see langword="x:TypeArguments" />, texte d’initialisation ou d’autres techniques XAML) pour construire une instance valide du type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <value><span data-ttu-id="27ec9-169"><see langword="true" /> Si la construction d’une instance requiert une valeur d’argument ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-169"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-170">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-171">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-172">Obtient le <see cref="T:System.Xaml.XamlMember" /> informations pour la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-173"><see cref="T:System.Xaml.XamlMember" /> informations pour la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-173"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="27ec9-174">Peut être <see langword="null" /> si aucune propriété de contenu.</span><span class="sxs-lookup"><span data-stu-id="27ec9-174">May be <see langword="null" /> if no content property exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-175">Quand à l’aide de la liaison ou du stockage du système de type CLR, la propriété de contenu XAML peut être spécifiée sur un type en appliquant <xref:System.Windows.Markup.ContentPropertyAttribute> à la définition de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="27ec9-176">Cette propriété s’aligne sur le `[content property]` élément d’information dans la spécification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="27ec9-177">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupContentProperty%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-178">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupContentProperty%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-179">Obtient les types qui sont utilisés pour encapsuler le contenu pour une propriété de contenu lorsqu’il n’est pas une correspondance de type stricte, telles que des chaînes dans fortement typé <see langword="Collection&lt;T&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-180">Une collection en lecture seule des types de wrapper de contenu possibles ; Sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-181">S’il n’y a pas de wrappers pour prendre en compte la correspondance de type assouplissant, cette propriété est `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="27ec9-182">Les types qui sont évalués en <xref:System.Xaml.XamlType.CanAssignTo%2A> pour un type de contenu spécifique ne sont pas considérés comme plusieurs types à des fins de <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-183">Dans la liaison de CLR pour <xref:System.Xaml> et <xref:System.Xaml.XamlType>, le type de wrapper de contenu XAML peut être spécifié sur un type comme un <xref:System.Windows.Markup.ContentWrapperAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="27ec9-184">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupContentWrappers%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-185">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupContentWrappers%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-186">Obtient le <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui représente le différé le comportement de conversion pour ce type de chargement.</span><span class="sxs-lookup"><span data-stu-id="27ec9-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span></span></summary>
        <value><span data-ttu-id="27ec9-187">Le <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.Xaml.XamlDeferringLoader" /> contrainte qui représente le comportement de chargement différé pour ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-188">Comportement de modèle XAML dans WPF est un exemple de comportement de chargement différé.</span><span class="sxs-lookup"><span data-stu-id="27ec9-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="27ec9-189">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-190">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27ec9-191">Indique si l’objet actuel est égal à un autre objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-191">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="27ec9-192">Objet à comparer à cet objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-192">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="27ec9-193">Indique si l’objet actuel est égal à un autre objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-193">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="27ec9-194"><see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="obj" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-194"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="27ec9-195">Objet à comparer à cet objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-195">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="27ec9-196">Indique si l'objet actuel est égal à un autre objet du même type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-196">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="27ec9-197"><see langword="true" /> si l'objet actuel est égal au paramètre <paramref name="other" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-197"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="27ec9-198">La directive pour laquelle rechercher le membre ajouté en alias.</span><span class="sxs-lookup"><span data-stu-id="27ec9-198">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="27ec9-199">Retourne le membre XAML ajouté en alias à une directive XAML par ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-200">Le membre ajouté en alias, si trouvé ; Sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-200">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-201">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette méthode peuvent appeler <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-202">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-203">Retourne une collection qui contient toutes les propriétés pouvant être attachées exposées par ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-204">Une collection qui contient zéro ou plusieurs <see cref="T:System.Xaml.XamlMember" /> valeurs.</span><span class="sxs-lookup"><span data-stu-id="27ec9-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-205">Chaque <xref:System.Xaml.XamlMember> dans la collection retournée doit contenir des valeurs qui prennent en charge le concept qui le <xref:System.Xaml.XamlMember> est un membre pouvant être attaché.</span><span class="sxs-lookup"><span data-stu-id="27ec9-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="27ec9-206">Par exemple, les membres doivent retourner `true` pour <xref:System.Xaml.XamlMember.IsAttachable%2A>, un type pour <xref:System.Xaml.XamlMember.TargetType%2A>, et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="27ec9-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="27ec9-207">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette méthode peuvent appeler <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-208">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-209">Retourne une collection qui contient tous les membres qui sont exposés par ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-210">Une collection qui contient zéro ou plusieurs <see cref="T:System.Xaml.XamlMember" /> valeurs.</span><span class="sxs-lookup"><span data-stu-id="27ec9-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-211">Les appels à cette méthode peuvent appeler <xref:System.Xaml.XamlType.LookupAllMembers%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="27ec9-212">Nom du membre pouvant être attaché à obtenir, dans le formulaire <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="27ec9-213">Retourne un objet <see cref="T:System.Xaml.XamlMember" /> représentant un membre spécifiquement nommé pouvant être attaché de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-214">Un objet <see cref="T:System.Xaml.XamlMember" /> pour le membre demandé pouvant être attaché ; sinon, <see langword="null" />, si aucun membre pouvant être attaché portant ce nom n’existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-215">Les appels à cette méthode peuvent appeler <xref:System.Xaml.XamlType.LookupAttachableMember%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-217">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les membres signalés d’un type XAML afin qu’ils n’alignent plus comme prévu avec le <xref:System.ComponentModel.TypeDescriptor> `Get*` plus d’informations sur le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="27ec9-218">Pour les vérifications critiques de sécurité du membre de création de rapports, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-219">Retourne le code de hachage de cet objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-219">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="27ec9-220">Code de hachage entier.</span><span class="sxs-lookup"><span data-stu-id="27ec9-220">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="27ec9-221">Le nom du membre à obtenir (sous forme de chaîne).</span><span class="sxs-lookup"><span data-stu-id="27ec9-221">The name of the member to get (as a string).</span></span></param>
        <summary><span data-ttu-id="27ec9-222">Retourne un <see cref="T:System.Xaml.XamlMember" /> pour un membre nommé spécifique de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-223">Le <see cref="T:System.Xaml.XamlMember" /> informations pour le membre, si ce membre a été trouvée ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-224">La valeur de `name` est censée être non qualifié.</span><span class="sxs-lookup"><span data-stu-id="27ec9-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="27ec9-225">Noms de type qualifié qui indiquent un membre attaché doivent être soumis à <xref:System.Xaml.XamlType.GetAttachableMember%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="27ec9-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="27ec9-226">Le préfixe membre noms ne doivent pas être utilisées ; aucun préfixe n’est pas dépend d’une utilisation et le système de type XAML ne peut pas connaître le contexte d’une telle utilisation et la façon dont le préfixe est mappé.</span><span class="sxs-lookup"><span data-stu-id="27ec9-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="27ec9-227">Les appels à cette méthode peuvent appeler <xref:System.Xaml.XamlType.LookupMember%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-228"><xref:System.Xaml.XamlType.LookupMember%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-229">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les membres signalés d’un type XAML afin qu’ils n’alignent plus comme prévu avec le <xref:System.ComponentModel.TypeDescriptor> `Get*` plus d’informations sur le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="27ec9-230">Pour les vérifications critiques de sécurité du membre de création de rapports, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="27ec9-231">Nombre (arité) du mode syntaxe ou du constructeur particulier que vous voulez obtenir des informations.</span><span class="sxs-lookup"><span data-stu-id="27ec9-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="27ec9-232">Pour les types d’extension de balisage, retourne les types des paramètres positionnels pris en charge dans une extension de balisage spécifique pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-233">Une liste de <see cref="T:System.Xaml.XamlType" /> valeurs, où chaque <see cref="T:System.Xaml.XamlType" /> est le type de cette position dans la syntaxe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="27ec9-234">Vous devez spécifier les types dans le même ordre lorsque vous fournissez l’entrée de balisage pour l’extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-234">You must specify the types in the same order when you supply markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-235">Cette API est uniquement pertinente si ce <xref:System.Xaml.XamlType> représente une extension de balisage (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> est `true`).</span><span class="sxs-lookup"><span data-stu-id="27ec9-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="27ec9-236">L’entrée `parameterCount` n’est pas de demander le type d’un paramètre positionnel spécifique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="27ec9-237">Il sert à spécifier l’arité d’une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="27ec9-238">Extension de balisage souvent possède plusieurs « signatures » et utilise le paramètre différentes arité (nombre) de paramètres positionnels pour différencier.</span><span class="sxs-lookup"><span data-stu-id="27ec9-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="27ec9-239">Toutefois, vous pouvez configurer un contexte de schéma pour autoriser arités en double et utiliser des types de paramètres positionnels de différenciation.</span><span class="sxs-lookup"><span data-stu-id="27ec9-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="27ec9-240">Pour plus d'informations, consultez <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="27ec9-241">Pour une arité (nombre) spécifique, les positions des paramètres et les types peuvent varier.</span><span class="sxs-lookup"><span data-stu-id="27ec9-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="27ec9-242">Pour obtenir le type de position de l’extension de balisage d’une arité spécifique, vous appelez d’abord <xref:System.Xaml.XamlType.GetPositionalParameters%2A> en spécifiant le nombre d’arité.</span><span class="sxs-lookup"><span data-stu-id="27ec9-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="27ec9-243">Obtenez ensuite l’élément à cette position à partir de la collection retournée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="27ec9-244">Les appels à cette méthode peuvent appeler <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-245">Retourne une liste d’identificateurs de chaîne pour les espaces de noms XAML inclus dans le type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span></span></summary>
        <returns><span data-ttu-id="27ec9-246">Une liste de valeurs de chaîne, où chaque chaîne est l’identificateur URI d’un espace de noms XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-247">Identificateurs d’espace de noms XAML standard sont des chaînes au format URI.</span><span class="sxs-lookup"><span data-stu-id="27ec9-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="27ec9-248">L’implémentation par défaut vérifie la commande suivante, dans l’ordre : l’espace de noms XAML qui est fourni dans la construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature uniquement) ; et les espaces de noms qui sont disponibles à partir du contexte de schéma.</span><span class="sxs-lookup"><span data-stu-id="27ec9-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="27ec9-249">S’ils sont chacun `null`, une nouvelle liste est générée qui contient une chaîne vide unique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="27ec9-250">Vous pouvez remplacer cette méthode pour modifier la méthodologie de recherche.</span><span class="sxs-lookup"><span data-stu-id="27ec9-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-251">Obtient le <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implémentation qui est associée à ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-252">Le <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implémentation qui est associée à ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-253">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, l’appel <xref:System.Xaml.XamlType.Invoker%2A> pouvez appeler soit <xref:System.Xaml.XamlType.LookupInvoker%2A> ou une substitution spécifique de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="27ec9-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="27ec9-254">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupInvoker%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="27ec9-255">Si un <xref:System.Xaml.XamlType.LookupInvoker%2A> remplacer retourne `null`, ou si l’implémentation par défaut retourne `null` en raison du manque de <xref:System.Xaml.XamlType.UnderlyingType%2A> pour ce <xref:System.Xaml.XamlType>, puis <xref:System.Xaml.XamlType.Invoker%2A> retourne <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-256">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-257"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type ambiant ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-258">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsAmbient%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-259">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupIsAmbient%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-260">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un tableau.</span><span class="sxs-lookup"><span data-stu-id="27ec9-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span></span></summary>
        <value><span data-ttu-id="27ec9-261"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un tableau ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-262">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupCollectionKind%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-263">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupCollectionKind%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-264">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection.</span><span class="sxs-lookup"><span data-stu-id="27ec9-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span></span></summary>
        <value><span data-ttu-id="27ec9-265"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une collection ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-265"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-266">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupCollectionKind%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-267">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupCollectionKind%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-268">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-269"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type constructible ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-269"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-270">Cette propriété s’aligne sur le `[is default constructible]` élément d’information dans la spécification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="27ec9-271">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsConstructible%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-272">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupIsConstructible%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-273">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-274"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-274"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-275">Cette propriété s’aligne sur le `[is dictionary]` élément d’information dans la spécification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="27ec9-276">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupCollectionKind%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-277">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupCollectionKind%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-278">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span></span></summary>
        <value><span data-ttu-id="27ec9-279"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type générique ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-280">Cette propriété est une propriété d’assistance qui recherche une valeur null de <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="27ec9-281">Il n’existe aucun spécifiques `Lookup` méthode liées à <xref:System.Xaml.XamlType.IsGeneric%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-282">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="27ec9-283"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-283"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-284">En termes de spécification de XAML, ce type doit être assignable à `x:MarkupExtension` afin de retourner `true` pour <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-285">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-286">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-287">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-288"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-288"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-289">Une portée de nom XAML applique l’unicité du nom de la propriété ou les propriétés utilisées pour `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="27ec9-290">Si <xref:System.Xaml.XamlType.IsNameScope%2A> est `true`, un mécanisme pour appliquer l’unicité doit exister et évaluer depuis la perspective de ce type possède une portée de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="27ec9-291">La portée de nom XAML s’étend ensuite au contenu du type jusqu'à ce qu’un autre type de propriétaire de portée de nom XAML est rencontré.</span><span class="sxs-lookup"><span data-stu-id="27ec9-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="27ec9-292">Cette propriété s’aligne sur le `[is name scope]` élément d’information dans la spécification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="27ec9-293">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsNameScope%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-294">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est initialisé en utilisant une commande valide <see langword="xamlName" /> chaîne comme son <see cref="P:System.Xaml.XamlType.Name" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-295"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> est initialisé en utilisant une commande valide <see langword="xamlName" /> chaîne ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-295"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-296">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type nullable, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-297"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type nullable ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-297"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-298">Cette propriété s’aligne sur le `[is nullable]` élément d’information dans la spécification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="27ec9-299">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsNullable%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-300">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type public dans le système de type approprié.</span><span class="sxs-lookup"><span data-stu-id="27ec9-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <value><span data-ttu-id="27ec9-301"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type public ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-301"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-302">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsPublic%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-304">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les informations d’accès signalées concernant un type XAML afin qu’il ne s’aligne plus comme prévu avec les informations de type système et des accès de son type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="27ec9-305">Pour les vérifications critiques de sécurité des opérations d’assignation et l’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-306">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu dans le système de type sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <value><span data-ttu-id="27ec9-307"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type ne pouvant être résolu ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-307"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-308">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsUnknown%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="27ec9-309">Pour un chemin de chargement implique <xref:System.Xaml.XamlObjectWriter>, un <xref:System.Xaml.XamlType> qui a `true` pour <xref:System.Xaml.XamlType.IsUnknown%2A> ne peut pas être écrit dans un graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="27ec9-310">Sous les implémentations par défaut dans <xref:System.Xaml> , le <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> appeler lève une <xref:System.Xaml.XamlObjectWriterException> lorsque le pertinentes <xref:System.Xaml.XamlType> rapports `true` pour <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="27ec9-311">Vous ne devez pas passer un <xref:System.Xaml.XamlType> qui a <xref:System.Xaml.XamlType.IsUnknown%2A> en tant que `true` sauf si vous êtes prêt à gérer les exceptions de <xref:System.Xaml.XamlObjectWriter>, ou vous avez d’autres façons d’ajuster le <xref:System.Xaml.XamlObjectWriter> comportement ou le flux de nœud XAML avant d’écrire l’objet graphique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-312">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut-bas pendant l’initialisation XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <value><span data-ttu-id="27ec9-313"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> repose de haut en bas pendant l’initialisation XAML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-313"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="27ec9-314">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-314">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-315">Haut-bas est une métaphore qui est une approximation du comportement du processeur XAML lors de la création du graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="27ec9-316">Un type généré de haut en bas est instancié, attaché à la page parente, et puis ses propriétés sont définies.</span><span class="sxs-lookup"><span data-stu-id="27ec9-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="27ec9-317">Construction de haut en bas évite d’appeler des gestionnaires à propriétés modifiées plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="27ec9-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="27ec9-318">Une telle gestion onduler le graphique d’objets et par conséquent, élimine les appels du gestionnaire plusieurs et fournit une optimisation des performances pour le démarrage du graphique d’objets.</span><span class="sxs-lookup"><span data-stu-id="27ec9-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="27ec9-319">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-320">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-321">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d’espaces blancs significative, selon la définition XML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-322"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une collection d’espaces blancs significative ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-322"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-323">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-324">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-325">Obtient une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente XML <see langword="XDATA" />, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="27ec9-326"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente <see langword="XDATA" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-326"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-327">Cette propriété s’aligne sur le `[is xdata]` élément d’information dans la spécification [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="27ec9-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="27ec9-328">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsXData%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-329">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupIsXData%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-330">Obtient une valeur qui fournit les informations de type pour le <see langword="Items" /> propriété de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-331">Un <see cref="T:System.Xaml.XamlType" /> objet pour le type des éléments dans la collection ; sinon, <see langword="null" />si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une collection.</span><span class="sxs-lookup"><span data-stu-id="27ec9-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-332">Cette propriété est uniquement pertinente si ce <xref:System.Xaml.XamlType> représente une collection (<xref:System.Xaml.XamlType.IsCollection%2A> est `true`).</span><span class="sxs-lookup"><span data-stu-id="27ec9-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="27ec9-333">Le `Items` propriété est n’importe quelle propriété conserve des éléments de ce type de collection ou un tableau.</span><span class="sxs-lookup"><span data-stu-id="27ec9-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="27ec9-334">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupItemType%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-335">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupItemType%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-336">Obtient une valeur qui fournit les informations de type pour la propriété de clé de ce <see cref="T:System.Xaml.XamlType" />, si le <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="27ec9-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <value><span data-ttu-id="27ec9-337">Un <see cref="T:System.Xaml.XamlType" /> objet pour le type de la clé pour l’utilisation de dictionnaire, sinon, <see langword="null" />si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="27ec9-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-338">Cette propriété est uniquement pertinente si ce <xref:System.Xaml.XamlType> représente un dictionnaire (<xref:System.Xaml.XamlType.IsDictionary%2A> est `true`).</span><span class="sxs-lookup"><span data-stu-id="27ec9-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="27ec9-339">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupKeyType%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-340">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupKeyType%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="27ec9-341">La directive pour laquelle rechercher le membre ajouté en alias.</span><span class="sxs-lookup"><span data-stu-id="27ec9-341">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="27ec9-342">Retourne le membre XAML ajouté en alias à une directive XAML par ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-343">Le membre ajouté en alias, si trouvé ; Sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-343">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-344">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-345">L’implémentation par défaut peut retourner des résultats pour les directives XAML suivantes : `Key`; `Name`; `Uid`; et `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="27ec9-346">Valeurs pour ces dépendent de la réflexion sous-jacente et peuvent encore retourner `null` si aucune propriété d’un alias est trouvée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="27ec9-347">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou les informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-348">Retourne un jeu énumérable qui contient toutes les propriétés pouvant être attachées exposées par ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-349">Jeu énumérable qui contient zéro ou plusieurs <see cref="T:System.Xaml.XamlMember" /> égales ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-350">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-351">Bien que <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> retourne une collection générique, cela `Lookup` méthode retourne un jeu énumérable générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="27ec9-352">L’implémentation par défaut utilise la réflexion CLR interne.</span><span class="sxs-lookup"><span data-stu-id="27ec9-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="27ec9-353">Lorsque <xref:System.Xaml.XamlType.UnderlyingType%2A> est `null`, l’implémentation par défaut peut utiliser <xref:System.Xaml.XamlType.BaseType%2A>, s’il est disponible.</span><span class="sxs-lookup"><span data-stu-id="27ec9-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="27ec9-354">Ce comportement appelle <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> récursivement pour tenter de trouver un type de base valid et retourne `null` si aucun type de base valide n’existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="27ec9-355">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="27ec9-356">Un retour null doit être réservé pour les cas où les informations ne peut pas être déterminées en raison du manque de prise en charge système ou de la réflexion de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="27ec9-357">Si un type est valide et la réflexion ou autres techniques sont disponibles, mais un type n’a pas de membres pouvant être attachés, vous devez retourner à la place de vide <xref:System.Collections.Generic.IEnumerable%601> définie.</span><span class="sxs-lookup"><span data-stu-id="27ec9-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-358">Retourne un jeu énumérable qui contient tous les membres qui sont exposés par ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-359">Jeu énumérable qui contient zéro ou plusieurs <see cref="T:System.Xaml.XamlMember" /> valeurs.</span><span class="sxs-lookup"><span data-stu-id="27ec9-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-360">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-361">Bien que <xref:System.Xaml.XamlType.GetAllMembers%2A> retourne une collection générique, cela `Lookup` méthode retourne un jeu énumérable générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="27ec9-362">L’implémentation par défaut utilise la réflexion CLR interne.</span><span class="sxs-lookup"><span data-stu-id="27ec9-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="27ec9-363">Pour les cas où <xref:System.Xaml.XamlType.UnderlyingType%2A> est `null`, l’implémentation par défaut peut utiliser <xref:System.Xaml.XamlType.BaseType%2A>, s’il est disponible.</span><span class="sxs-lookup"><span data-stu-id="27ec9-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="27ec9-364">Ce comportement appelle <xref:System.Xaml.XamlType.LookupAllMembers%2A> récursivement pour tenter de trouver un type de base valid et retourne `null` si aucun type de base valide n’existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="27ec9-365">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="27ec9-366">Un retour null doit être réservé pour les cas où les informations ne peut pas être déterminées en raison du manque de prise en charge système ou de la réflexion de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="27ec9-367">Si un type est valide, la réflexion ou autres techniques sont disponibles ; Si un type n’a pas de membres, vous devez retourner à la place de vide <xref:System.Collections.Generic.IEnumerable%601> définie.</span><span class="sxs-lookup"><span data-stu-id="27ec9-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="27ec9-368">Valeurs de retour pour <xref:System.Xaml.XamlType.LookupAllMembers%2A> et <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> s’excluent mutuellement.</span><span class="sxs-lookup"><span data-stu-id="27ec9-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="27ec9-369">Si vous avez une situation où une propriété de système de type de sauvegarde peut prendre en charge une utilisation de l’instance standard ainsi que d’une utilisation pouvant être attachée, ce membre doit être signalé comme deux <xref:System.Xaml.XamlMember> valeurs, avec une valeur qui apparaissent dans la liste pouvant être attachée et l’autre dans le liste des membres standard.</span><span class="sxs-lookup"><span data-stu-id="27ec9-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-370">Retourne une liste des types utilisables comme le <see cref="P:System.Xaml.XamlType.ContentProperty" /> valeur pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-371">Liste des types de contenu possibles.</span><span class="sxs-lookup"><span data-stu-id="27ec9-371">A list of possible content types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-372">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-373">Les types qui sont évalués en <xref:System.Xaml.XamlType.CanAssignTo%2A> pour un type de contenu spécifique ne sont pas considérés comme plusieurs types à des fins de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-374">L’implémentation par défaut peut utiliser d’autres propriétés de <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, ou <xref:System.Xaml.XamlType.ItemType%2A>) pour obtenir un résultat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="27ec9-375">Le `Lookup` les remplacements pour la liste de propriétés précédente peut également être appelée dans cette détermination.</span><span class="sxs-lookup"><span data-stu-id="27ec9-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="27ec9-376">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="27ec9-377">Nom du membre pouvant être attaché à obtenir, dans le formulaire <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="27ec9-378">Retourne un <see cref="T:System.Xaml.XamlMember" /> pour une valeur spécifique nommée pouvant être attachée à partir de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-379">Un objet <see cref="T:System.Xaml.XamlMember" /> pour le membre demandé pouvant être attaché ; sinon, <see langword="null" />, si aucun membre pouvant être attaché portant ce nom n’existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-380">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-381">L’implémentation par défaut utilise la réflexion CLR interne.</span><span class="sxs-lookup"><span data-stu-id="27ec9-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="27ec9-382">Lorsque <xref:System.Xaml.XamlType.UnderlyingType%2A> est `null`, l’implémentation par défaut peut utiliser <xref:System.Xaml.XamlType.BaseType%2A>, s’il est disponible.</span><span class="sxs-lookup"><span data-stu-id="27ec9-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="27ec9-383">Ce comportement appelle <xref:System.Xaml.XamlType.LookupAttachableMember%2A> récursivement pour tenter de trouver un type de base valid et retourne `null` si aucun type de base valide n’existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="27ec9-384">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-386">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les membres signalés d’un type XAML afin qu’ils n’alignent plus comme prévu avec le <xref:System.ComponentModel.TypeDescriptor> `Get*` plus d’informations sur le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="27ec9-387">Pour les vérifications critiques de sécurité du membre de création de rapports, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-388">Retourne le <see cref="T:System.Xaml.XamlType" /> pour le type de base immédiat de ce type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="27ec9-389">Détermination de cette valeur est basée sur le type sous-jacent de ce <see cref="T:System.Xaml.XamlType" /> et contexte de schéma.</span><span class="sxs-lookup"><span data-stu-id="27ec9-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <returns><span data-ttu-id="27ec9-390">Le <see cref="T:System.Xaml.XamlType" /> pour le type de base immédiat de ce type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-391">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.BaseType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-392">L’implémentation par défaut peut retourner une constante interne qui représente le <xref:System.Object> si <xref:System.Xaml.XamlType.UnderlyingType%2A> est `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="27ec9-393">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-395">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les informations de type signalées concernant un type XAML afin qu’il ne s’aligne plus comme prévu avec les informations de système de type de son type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="27ec9-396">Pour les vérifications critiques de sécurité des opérations d’assignation et l’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-397">Retourne une valeur de la <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> ce type d’énumération qui déclare la collection spécifique <see cref="T:System.Xaml.XamlType" /> utilise.</span><span class="sxs-lookup"><span data-stu-id="27ec9-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span></span></summary>
        <returns><span data-ttu-id="27ec9-398">Une valeur de la <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> énumération.</span><span class="sxs-lookup"><span data-stu-id="27ec9-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-399">Cette méthode est appelée par une méthode privée interne (sans adresse `CollectionKind` ou `GetCollectionKind` API existe sur <xref:System.Xaml.XamlType>).</span><span class="sxs-lookup"><span data-stu-id="27ec9-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="27ec9-400">L’implémentation par défaut utilise la réflexion CLR interne.</span><span class="sxs-lookup"><span data-stu-id="27ec9-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="27ec9-401">Pour les cas où <xref:System.Xaml.XamlType.UnderlyingType%2A> est `null`, l’implémentation par défaut peut utiliser <xref:System.Xaml.XamlType.BaseType%2A>, s’il est disponible.</span><span class="sxs-lookup"><span data-stu-id="27ec9-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="27ec9-402">Ce comportement appelle indirectement <xref:System.Xaml.XamlType.LookupCollectionKind%2A> récursive tente de trouver un type de base valide ; elle retourne <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> si aucun type de base valide n’existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="27ec9-403">En règle générale, l’implémentation par défaut tente de trouver le `Add` méthode du type sous-jacent par réflexion.</span><span class="sxs-lookup"><span data-stu-id="27ec9-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="27ec9-404">Si trouvée, le <xref:System.Reflection.MethodInfo> de la `Add` méthode est suffisamment d’informations pour déterminer quelle <xref:System.Xaml.Schema.XamlCollectionKind> valeur doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="27ec9-405">Sinon, il retourne <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="27ec9-406">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-407">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit avoir des arguments (contraintes génériques par <see langword="x:TypeArguments" />, texte d’initialisation ou d’autres techniques XAML) pour construire une instance valide du type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <returns><span data-ttu-id="27ec9-408"><see langword="true" /> Si la construction d’une instance requiert une valeur d’argument ; Sinon, false.</span><span class="sxs-lookup"><span data-stu-id="27ec9-408"><see langword="true" /> if construction of an instance requires some argument value; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-409">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-410">L’implémentation par défaut retourne `false` système de type pour les types valeur considérés dans le CLR.</span><span class="sxs-lookup"><span data-stu-id="27ec9-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="27ec9-411">Dans les autres types de valeur, réflexion CLR <xref:System.Reflection.ConstructorInfo> est utilisé pour déterminer si un constructeur par défaut existe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.</span></span>  
  
 <span data-ttu-id="27ec9-412">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-413">Retourne <see cref="T:System.Xaml.XamlMember" /> informations pour la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-414"><see cref="T:System.Xaml.XamlMember" /> informations pour la propriété de contenu de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-414"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="27ec9-415">Peut avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-415">May be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-416">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.ContentProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-417">L’implémentation par défaut recherche <xref:System.Windows.Markup.ContentPropertyAttribute> sur la définition de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="27ec9-418">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-419">Si ces contrôles ne découvrent pas un type de contenu, l’implémentation par défaut retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="27ec9-420">Substituez cette méthode si vous ne comptez pas sur la réflexion CLR interne par défaut et sont à l’aide de métadonnées ou autres techniques de création de rapports les informations de système de type XAML ou des informations de schéma d’un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-421">Obtient une liste de <see cref="T:System.Xaml.XamlType" /> valeurs qui représentent les wrappers de contenu pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-422">Une liste de <see cref="T:System.Xaml.XamlType" /> valeurs qui représentent les wrappers de contenu pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-423">Wrapper de contenu est une classe qui représente le type de collection de contenu lorsque les types qui sont utilisés dans cette collection ne sont pas contigus au système de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="27ec9-424">Les types d’éléments de collecte pour le wrapper de contenu sont censés être limités d’une certaine façon au-delà <xref:System.Object> ou l’équivalent d’un objet neutre.</span><span class="sxs-lookup"><span data-stu-id="27ec9-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="27ec9-425">Toutefois, cette limitation est appliquée uniquement par la conception ou l’objectif des propriétés qui utilisent ce type et non par le système de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="27ec9-426">Plus d’un wrapper de contenu peut exister sur un type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="27ec9-427">Pour un exemple de classe et le scénario de l’implémentation WPF XAML, consultez <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-428">En cas d’implémentation dans une classe dérivée, retourne un <see cref="T:System.Reflection.ICustomAttributeProvider" /> implémentation.</span><span class="sxs-lookup"><span data-stu-id="27ec9-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="27ec9-429">Implémentation de <see cref="T:System.Reflection.ICustomAttributeProvider" /></span><span class="sxs-lookup"><span data-stu-id="27ec9-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-430">Substituez cette méthode pour fournir la réflexion interne avec une autre manière d’obtenir les valeurs d’attribut CLR.</span><span class="sxs-lookup"><span data-stu-id="27ec9-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="27ec9-431">En l’absence d’une substitution, le réflecteur interne utilise la logique de réflexion CLR typique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="27ec9-432">L'implémentation par défaut retourne la valeur `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-433">Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objet, qui est utilisé pour le chargement différé des objets XAML déclarés.</span><span class="sxs-lookup"><span data-stu-id="27ec9-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span></span></summary>
        <returns><span data-ttu-id="27ec9-434">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a un <see cref="T:System.Xaml.XamlDeferringLoader" /> contrainte sur le générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-435">Cette méthode peut être appelée lorsqu’un appelant obtient une valeur à partir de <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="27ec9-436">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.DeferringLoader%2A> pour retourner une valeur différente qu’est activée par la réflexion interne par défaut et fournit également personnalisé <xref:System.Xaml.Schema.XamlTypeInvoker> plus d’informations.</span><span class="sxs-lookup"><span data-stu-id="27ec9-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="27ec9-437">L’implémentation par défaut retourne un objet basé sur la lecture <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="27ec9-438">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-439">Si une valeur est indisponible, cette méthode retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-440">Retourne un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> qui est associé à ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-441">Le <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> informations pour ce <see cref="T:System.Xaml.XamlType" />; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-442">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-443">L’implémentation par défaut n’exige pas un <xref:System.Xaml.XamlType> être construite à l’aide d’un des constructeurs qui passent un initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="27ec9-444">Toutefois, un <xref:System.Xaml.XamlType.UnderlyingType%2A> valeur doit exister pour le <xref:System.Xaml.XamlType>; sinon, retourne l’implémentation par défaut `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="27ec9-445">Substituez cette méthode si vous créez également une classe dérivée de <xref:System.Xaml.Schema.XamlTypeInvoker> et souhaitez retourner la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="27ec9-446">Si vous retournez `null`, <xref:System.Xaml.XamlType.Invoker%2A> retourne <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> aux appelants.</span><span class="sxs-lookup"><span data-stu-id="27ec9-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-447">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type ambiant, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="27ec9-448"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type ambiant ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-448"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-449">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-450">L’implémentation par défaut utilise la réflexion CLR sur le <xref:System.Xaml.XamlType.UnderlyingType%2A> et vous pouvez vérifier les types de base.</span><span class="sxs-lookup"><span data-stu-id="27ec9-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="27ec9-451">Cette implémentation vérifie la <xref:System.Windows.Markup.AmbientAttribute> qui est appliqué à la définition du type approprié au niveau de la classe et retourne `true` dans ce cas.</span><span class="sxs-lookup"><span data-stu-id="27ec9-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="27ec9-452">Retournent tous les autres cas `false`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="27ec9-453">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsAmbient%2A> pour retourner une valeur différente de celle activée par la réflexion interne par défaut.</span><span class="sxs-lookup"><span data-stu-id="27ec9-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-454">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type constructible, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="27ec9-455"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type constructible ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-455"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-456">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsConstructible%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-457">L’implémentation par défaut utilise la réflexion CLR sur le <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="27ec9-458">Le type doit être concret, non imbriqué et fermé.</span><span class="sxs-lookup"><span data-stu-id="27ec9-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="27ec9-459">L’implémentation par défaut vérifie si le type est un type valeur et le retour de <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="27ec9-460">Pour une valeur null <xref:System.Xaml.XamlType.UnderlyingType%2A>, cette méthode retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="27ec9-461">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsConstructible%2A> pour retourner une valeur différente de celle activée par la réflexion interne par défaut.</span><span class="sxs-lookup"><span data-stu-id="27ec9-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-462">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="27ec9-463"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une extension de balisage ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-463"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-464">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-465">L’implémentation par défaut se compose uniquement de cet appel :</span><span class="sxs-lookup"><span data-stu-id="27ec9-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="27ec9-466">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsMarkupExtension%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="27ec9-467">En termes de spécification de XAML, ce type doit être assignable à `x:MarkupExtension` afin de retourner `true` pour <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-468">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="27ec9-469"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une portée de nom XAML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-469"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-470">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsNameScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-471">L’implémentation par défaut effectue une <xref:System.Xaml.XamlType.CanAssignTo%2A> appeler indirectement par rapport au type <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="27ec9-472"><xref:System.Windows.Markup.INameScope> est une interface qui est définie dans l’assembly WindowsBase.dll.</span><span class="sxs-lookup"><span data-stu-id="27ec9-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="27ec9-473">Cette technique pour identifier la portée de nom XAML est utilisée à la fois par les implémentations de WPF et Windows Workflow Foundation de XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="27ec9-474">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsNameScope%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="27ec9-475">Une portée de nom XAML applique l’unicité du nom de l’ou les propriétés qui sont utilisées pour `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="27ec9-476">Si <xref:System.Xaml.XamlType.IsNameScope%2A> est `true`, puis un mécanisme pour appliquer l’unicité doit exister et évaluer depuis la perspective de ce type possède une portée de nom XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="27ec9-477">La portée de nom XAML s’étend ensuite au contenu du type jusqu'à ce qu’un autre type propriétaire de la portée de nom XAML est rencontré.</span><span class="sxs-lookup"><span data-stu-id="27ec9-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-478">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type nullable, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="27ec9-479"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type nullable ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-479"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-480">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsNullable%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-481">L’implémentation par défaut effectue une détermination selon le concept nullable de bibliothèque principale CLR, vérifié par rapport aux <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="27ec9-482">Pour une valeur null <xref:System.Xaml.XamlType.UnderlyingType%2A>, elle retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="27ec9-483">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsNullable%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-484">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type public dans le système de type approprié.</span><span class="sxs-lookup"><span data-stu-id="27ec9-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <returns><span data-ttu-id="27ec9-485"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type public ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-485"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-486">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-487">L’implémentation par défaut utilise la réflexion CLR par rapport à une valeur non null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="27ec9-488">Pour une valeur null <xref:System.Xaml.XamlType.UnderlyingType%2A>, elle retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="27ec9-489">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsPublic%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-491">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les informations d’accès signalées concernant un type XAML afin qu’il ne s’aligne plus comme prévu avec les informations de type système ou d’accès de son type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="27ec9-492">Pour les vérifications critiques de sécurité des opérations d’assignation et l’accès, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-493">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente un type qui ne peut pas être résolu dans le système de type sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <returns><span data-ttu-id="27ec9-494"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type nonresolvable ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-494"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-495">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-496">L’implémentation par défaut peut utiliser la réflexion CLR.</span><span class="sxs-lookup"><span data-stu-id="27ec9-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="27ec9-497">Pour une valeur null <xref:System.Xaml.XamlType.UnderlyingType%2A>, elle retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="27ec9-498">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsUnknown%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-499">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente une collection d’espaces blancs significative, selon la définition XML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <returns><span data-ttu-id="27ec9-500"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente une collection d’espaces blancs significative ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-500"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-501">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-502">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="27ec9-503">Il peut également vérifier le <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-504">Si une valeur n’est pas disponible, elle retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="27ec9-505">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-506">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> représente XML <see langword="XDATA" />, selon la définition XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="27ec9-507"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente <see langword="XDATA" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-507"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-508">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsXData%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-509">L’implémentation par défaut effectue une <xref:System.Xaml.XamlType.CanAssignTo%2A> appeler indirectement par rapport au type <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="27ec9-510">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsXData%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-511">Retourne une valeur qui fournit les informations de type pour le <see langword="Items" /> propriété de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-512">Un <see cref="T:System.Xaml.XamlType" /> objet pour le type des éléments dans la collection ; sinon, <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une collection.</span><span class="sxs-lookup"><span data-stu-id="27ec9-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-513">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.ItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-514">L’implémentation par défaut peut utiliser les concepts de réflexion CLR, tels que la vérification pour un `Add` méthode par <xref:System.Reflection.MethodInfo> et à l’aide de la <xref:System.Reflection.ParameterInfo>; vérification <xref:System.Xaml.XamlType.IsArray%2A>; et en vérifiant <xref:System.Xaml.XamlType.BaseType%2A> et essayez de la même logique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="27ec9-515">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.ItemType%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="27ec9-516">Les cas où <xref:System.Xaml.XamlType.LookupCollectionKind%2A> retourne <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> doit retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-517">Retourne une valeur qui fournit les informations de type pour la propriété de clé de ce <see cref="T:System.Xaml.XamlType" />, si le <see cref="T:System.Xaml.XamlType" /> représente un dictionnaire.</span><span class="sxs-lookup"><span data-stu-id="27ec9-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <returns><span data-ttu-id="27ec9-518">Un <see cref="T:System.Xaml.XamlType" /> objet pour le type de la clé pour l’utilisation de dictionnaire, ou <see langword="null" /> si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un dictionnaire,</span><span class="sxs-lookup"><span data-stu-id="27ec9-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-519">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-520">L’implémentation par défaut peut utiliser les concepts de réflexion CLR, tels que la vérification pour un `Add` méthode par <xref:System.Reflection.MethodInfo> et à l’aide de la <xref:System.Reflection.ParameterInfo>; et en vérifiant <xref:System.Xaml.XamlType.BaseType%2A> et essayez de la même logique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="27ec9-521">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.KeyType%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="27ec9-522">Les cas où <xref:System.Xaml.XamlType.LookupCollectionKind%2A> ne retourne pas <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> doit retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-523">Retourne une valeur qui fournit les informations de type pour retourné <see langword="ProvideValue" /> de ce <see cref="T:System.Xaml.XamlType" />, s’il représente une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="27ec9-524">Un <see cref="T:System.Xaml.XamlType" /> objet du type de retour pour une extension de balisage ; sinon, <see langword="null" />si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-525">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-526">L’implémentation par défaut retourne un <xref:System.Xaml.XamlType> basé sur la lecture <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="27ec9-527">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-528">Si une valeur n’est pas disponible, elle retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="27ec9-529">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="27ec9-530">Le nom du membre à obtenir (sous forme de chaîne).</span><span class="sxs-lookup"><span data-stu-id="27ec9-530">The name of the member to get (as a string).</span></span></param>
        <param name="skipReadOnlyCheck"><span data-ttu-id="27ec9-531"><see langword="true" /> pour retourner un membre même si ce membre a un <see langword="true" /> valeur pour <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> pour ne pas retourner un <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> membre.</span><span class="sxs-lookup"><span data-stu-id="27ec9-531"><see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span></span> <span data-ttu-id="27ec9-532">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-532">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="27ec9-533">Retourne le <see cref="T:System.Xaml.XamlMember" /> pour un membre nommé spécifique de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-534">Le <see cref="T:System.Xaml.XamlMember" /> informations pour le membre, si un membre a été trouvée ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-535">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.GetMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-536">L’implémentation par défaut retourne un <xref:System.Xaml.XamlType> basé sur la réflexion CLR interne et d’évaluation par rapport au contexte de schéma.</span><span class="sxs-lookup"><span data-stu-id="27ec9-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="27ec9-537">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.GetMember%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="27ec9-538"><xref:System.Xaml.XamlType.LookupMember%2A> est virtuel et par conséquent, peut être substituée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="27ec9-539">La substitution a la possibilité (fins malveillantes ou autre) pour modifier les membres signalés d’un type XAML afin qu’ils n’alignent plus comme prévu avec le <xref:System.ComponentModel.TypeDescriptor> `Get*` plus d’informations sur le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="27ec9-540">Pour les vérifications critiques de sécurité du membre de création de rapports, utilisez à la place le type CLR sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="27ec9-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="27ec9-541">Nombre (arité) du mode syntaxe ou du constructeur particulier que vous voulez obtenir des informations.</span><span class="sxs-lookup"><span data-stu-id="27ec9-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="27ec9-542">Pour les types d’extension de balisage, retourne les types des paramètres positionnels pris en charge dans une extension de balisage spécifique pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-543">Une liste de <see cref="T:System.Xaml.XamlType" /> valeurs où chacun de ces <see cref="T:System.Xaml.XamlType" /> est le type de cette position dans la syntaxe.</span><span class="sxs-lookup"><span data-stu-id="27ec9-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="27ec9-544">Vous devez spécifier ces types dans le même ordre lorsque vous fournissez l’entrée de balisage pour l’extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-544">You must specify those types in the same order when supplying markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-545">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-546">L’implémentation par défaut utilise les informations de réflexion interne en fonction de recherche des constructeurs et en vérifiant l’arité.</span><span class="sxs-lookup"><span data-stu-id="27ec9-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="27ec9-547">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.GetPositionalParameters%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="27ec9-548">Cette API est uniquement pertinente si ce <xref:System.Xaml.XamlType> représente une extension de balisage (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> est `true`).</span><span class="sxs-lookup"><span data-stu-id="27ec9-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="27ec9-549">L’entrée `parameterCount` n’est pas de demander le type d’un paramètre positionnel spécifique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="27ec9-550">Il sert à spécifier l’arité d’une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="27ec9-551">Extension de balisage souvent a plusieurs signatures et utilise le paramètre différentes arité (nombre) de paramètres positionnels pour différencier.</span><span class="sxs-lookup"><span data-stu-id="27ec9-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="27ec9-552">Toutefois, vous pouvez configurer un contexte de schéma pour autoriser arités en double et utiliser des types de paramètres positionnels de différenciation.</span><span class="sxs-lookup"><span data-stu-id="27ec9-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="27ec9-553">Pour plus d'informations, consultez <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="27ec9-554">Pour un nombre d’arité spécifique, les positions des paramètres et les types peuvent varier.</span><span class="sxs-lookup"><span data-stu-id="27ec9-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="27ec9-555">Pour obtenir le type de position de l’extension de balisage d’une arité spécifique, vous appelez d’abord <xref:System.Xaml.XamlType.GetPositionalParameters%2A> avec le nombre d’arité.</span><span class="sxs-lookup"><span data-stu-id="27ec9-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="27ec9-556">Obtenez ensuite l’élément à cette position à partir de la collection retournée.</span><span class="sxs-lookup"><span data-stu-id="27ec9-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-557">Retourne un rappel du gestionnaire à utiliser pour les opérations ensemblistes d’extensions de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-557">Returns a handler callback to use for the set operations of markup extensions.</span></span></summary>
        <returns><span data-ttu-id="27ec9-558">Rappel du gestionnaire à utiliser pour les opérations ensemblistes d’extensions de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-558">A handler callback to use for the set operations of markup extensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-559">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="27ec9-560">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-561">Si une valeur n’est pas disponible, retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-562">Retourne un gestionnaire à utiliser pour le paramétrage du convertisseur de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-562">Returns a handler to use for type converter setting cases.</span></span></summary>
        <returns><span data-ttu-id="27ec9-563">Un gestionnaire à utiliser pour le paramétrage du convertisseur de type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-563">A handler to use for type converter setting cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-564">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="27ec9-565">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-566">Si une valeur n’est pas disponible, retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-567">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> doit être sérialisé en utilisant un mode qui tronque l’espace blanc l’entourant.</span><span class="sxs-lookup"><span data-stu-id="27ec9-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span></span></summary>
        <returns><span data-ttu-id="27ec9-568"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> doit être sérialisé dans un mode qui tronque l’espace blanc autour ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-568"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-569">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-570">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="27ec9-571">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-572">Si une valeur n’est pas disponible, retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-573">Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a un <see cref="T:System.ComponentModel.TypeConverter" /> contrainte, qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-574">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.ComponentModel.TypeConverter" /> contrainte qui représente le comportement de conversion de type pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-575">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-576">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="27ec9-577">L’implémentation par défaut peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-578">Il inclut également une logique spéciale pour la conversion de valeur par défaut des énumérations, des types valeur communs et des génériques.</span><span class="sxs-lookup"><span data-stu-id="27ec9-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="27ec9-579">Si une valeur n’est pas disponible, retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="27ec9-580">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.TypeConverter%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-581">Retourne le CLR <see cref="T:System.Type" /> sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-582">Le CLR <see cref="T:System.Type" /> sous-jacent de ce <see cref="T:System.Xaml.XamlType" />; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-583">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-584">L’implémentation par défaut retourne un champ interne.</span><span class="sxs-lookup"><span data-stu-id="27ec9-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="27ec9-585">Ce champ est initialisé en général pendant la construction et sa valeur est basée sur le constructeur a été appelé et les informations que vous avez fourni.</span><span class="sxs-lookup"><span data-stu-id="27ec9-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="27ec9-586">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.UnderlyingType%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-587">Retourne une valeur qui indique si ce <see cref="T:System.Xaml.XamlType" /> est développé de haut-bas pendant l’initialisation XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <returns><span data-ttu-id="27ec9-588"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> repose de haut en bas pendant l’initialisation XAML ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-588"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-589">Haut-bas est une métaphore qui est une approximation du comportement du processeur XAML lorsqu’il crée le graphique d’objet.</span><span class="sxs-lookup"><span data-stu-id="27ec9-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="27ec9-590">Lors de la génération de haut en bas, un type est instancié, attaché à la page parente, et ses propriétés sont définies.</span><span class="sxs-lookup"><span data-stu-id="27ec9-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="27ec9-591">Construction de haut en bas évite d’appeler des gestionnaires à propriétés modifiées plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="27ec9-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="27ec9-592">Une telle gestion onduler le graphique d’objets et par conséquent, élimine les appels du gestionnaire plusieurs et fournit une optimisation des performances pour le démarrage du graphique d’objets.</span><span class="sxs-lookup"><span data-stu-id="27ec9-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="27ec9-593">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-594">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="27ec9-595">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-596">Si une valeur n’est pas disponible, retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="27ec9-597">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-598">Retourne un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> qui a un <see cref="T:System.Windows.Markup.ValueSerializer" /> contrainte, qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-599">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.Windows.Markup.ValueSerializer" /> contrainte qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-600">Cette méthode peut être appelée par les appels à <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="27ec9-601">L’implémentation par défaut retourne une valeur basée sur la lecture <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="27ec9-602">Il peut également vérifier <xref:System.Xaml.XamlType.BaseType%2A> pour l’attribut si aucun attribut n’est trouvé sur le type sous-jacent immédiat.</span><span class="sxs-lookup"><span data-stu-id="27ec9-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="27ec9-603">Il inclut également une logique spéciale pour la sérialisation par défaut des énumérations, des types valeur communs ou génériques.</span><span class="sxs-lookup"><span data-stu-id="27ec9-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="27ec9-604">Si une valeur n’est pas disponible, retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="27ec9-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="27ec9-605">Substituez cette méthode si vous souhaitez <xref:System.Xaml.XamlType.ValueSerializer%2A> à utiliser une logique différente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-606">Obtient une valeur qui fournit les informations de type pour retourné <see langword="ProvideValue" /> de ce <see cref="T:System.Xaml.XamlType" />, s’il représente une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="27ec9-607">Un <see cref="T:System.Xaml.XamlType" /> objet du type de retour pour une extension de balisage ; sinon, <see langword="null" />si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas une extension de balisage.</span><span class="sxs-lookup"><span data-stu-id="27ec9-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-608">Cette propriété est uniquement pertinente si ce <xref:System.Xaml.XamlType> représente une extension de balisage (`x:MarkupExtension` figure dans la liste de types assignables).</span><span class="sxs-lookup"><span data-stu-id="27ec9-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="27ec9-609">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-610">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-611">Obtient le nom de chaîne du type que cela <see cref="T:System.Xaml.XamlType" /> représente.</span><span class="sxs-lookup"><span data-stu-id="27ec9-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span></span></summary>
        <value><span data-ttu-id="27ec9-612">Le nom de la chaîne de ce type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-612">The string name of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-613">Cette propriété obtient généralement le nom de la construction de schéma (par le <xref:System.Xaml.XamlType.%23ctor%2A> signature), ou le nom de la <xref:System.Type>, s’il est construit à l’aide du constructeur pertinent du système de type CLR.</span><span class="sxs-lookup"><span data-stu-id="27ec9-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="27ec9-614"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="27ec9-615"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="27ec9-616">Détermine si deux objets <see cref="T:System.Xaml.XamlType" /> spécifiés ont la même valeur.</span><span class="sxs-lookup"><span data-stu-id="27ec9-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="27ec9-617"><see langword="true" /> si la valeur de <paramref name="xamlType1" /> est égale à la valeur de <paramref name="xamlType2" /> ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-617"><see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="27ec9-618"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="27ec9-619"><see cref="T:System.Xaml.XamlType" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="27ec9-620">Détermine si deux objets <see cref="T:System.Xaml.XamlType" /> spécifiés ont des valeurs différentes.</span><span class="sxs-lookup"><span data-stu-id="27ec9-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="27ec9-621"><see langword="true" /> si la valeur de <paramref name="xamlType1" /> est différente de la valeur de <paramref name="xamlType2" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-621"><see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-622">Obtient l’espace de noms XAML unique qui est l’espace de noms XAML principal pour ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-623">L’identificateur, sous forme de chaîne, de l’espace de noms XAML principal pour ce type XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-624">Cette implémentation fournit la même valeur que si vous appelez <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> et l’obtention de la première chaîne de valeur à partir du jeu énumérable retourné.</span><span class="sxs-lookup"><span data-stu-id="27ec9-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-625">Obtient l’actif <see cref="T:System.Xaml.XamlSchemaContext" /> pour traiter cet <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-626">Actif <see cref="T:System.Xaml.XamlSchemaContext" /> pour traiter cet <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-627"><xref:System.Xaml.XamlSchemaContext> est une entrée de paramètre obligatoire lors de la construction d’un <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27ec9-628">Retourne une représentation sous forme de chaîne de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="27ec9-629">Une représentation de chaîne de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-630">Le <xref:System.Xaml.XamlType> implémentation de <xref:System.Object.ToString%2A> retourne le <xref:System.Xaml.XamlType.Name%2A> propriété de la <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="27ec9-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-631">Obtient une valeur qui indique si cette <see cref="T:System.Xaml.XamlType" /> a le comportement de sérialisation qui tronque l’espace blanc autour de son contenu gestion des espaces.</span><span class="sxs-lookup"><span data-stu-id="27ec9-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span></span></summary>
        <value><span data-ttu-id="27ec9-632"><see langword="true" /> Si cette <see cref="T:System.Xaml.XamlType" /> représente un type qui utilise un espace blanc troncation ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-632"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-633">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-634">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-635">Obtient une liste d’arguments de type pour les cas où cela <see cref="T:System.Xaml.XamlType" /> représente un générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span></span></summary>
        <value><span data-ttu-id="27ec9-636">Une liste de types d’arguments de type ; Sinon, <see langword="null" />si ce <see cref="T:System.Xaml.XamlType" /> ne représente pas un générique.</span><span class="sxs-lookup"><span data-stu-id="27ec9-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-637">Il existe certains scénarios pour un <xref:System.Xaml.XamlType> où l’appel du <xref:System.Xaml.XamlType.TypeArguments%2A> paramètre retourne une liste où les types sont encore ouverts.</span><span class="sxs-lookup"><span data-stu-id="27ec9-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="27ec9-638">Dans ce cas, une ou plusieurs des retourné <xref:System.Xaml.XamlType> valeurs ont des valeurs d’espace réservé pour <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, tel que `T`, pour indiquer que le générique est toujours ouvert.</span><span class="sxs-lookup"><span data-stu-id="27ec9-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="27ec9-639">Ce scénario peut se produire si vous obtenez un <xref:System.Xaml.XamlType> à partir d’un appel à <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, au lieu d’une implémentation de lecteur XAML.</span><span class="sxs-lookup"><span data-stu-id="27ec9-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-640">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion pour les valeurs de ce type de contrainte <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-641">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.ComponentModel.TypeConverter" /> qui représente le comportement de conversion pour les valeurs de ce type de contrainte <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-642">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupTypeConverter%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-643">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupTypeConverter%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-644">Obtient le CLR <see cref="T:System.Type" /> sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-645">Le CLR <see cref="T:System.Type" /> sous-jacent de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27ec9-646">Obtient un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.Windows.Markup.ValueSerializer" /> contrainte qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="27ec9-647">Un <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> avec <see cref="T:System.Windows.Markup.ValueSerializer" /> contrainte qui représente le comportement de sérialisation pour les valeurs de ce <see cref="T:System.Xaml.XamlType" />; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="27ec9-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27ec9-648">Si vous n’utilisez pas la technique de réflexion CLR interne par défaut pour un <xref:System.Xaml.XamlType>, les appels à cette propriété peuvent appeler <xref:System.Xaml.XamlType.LookupValueSerializer%2A> remplace sur <xref:System.Xaml.XamlType> classes dérivées.</span><span class="sxs-lookup"><span data-stu-id="27ec9-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="27ec9-649">Pour plus d’informations sur les valeurs de retour et d’autres comportements, consultez la documentation pour <xref:System.Xaml.XamlType.LookupValueSerializer%2A> sur ce type.</span><span class="sxs-lookup"><span data-stu-id="27ec9-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>