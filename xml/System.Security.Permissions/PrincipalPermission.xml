<Type Name="PrincipalPermission" FullName="System.Security.Permissions.PrincipalPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4d51d7325d5f04b7b266c190626598fabf05390" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014555" /></Metadata><TypeSignature Language="C#" Value="public sealed class PrincipalPermission : System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermission&#xA;Implements IPermission, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermission sealed : System::Security::IPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PrincipalPermission = class&#xA;    interface IPermission&#xA;    interface IUnrestrictedPermission&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ca1c6-101">Autorise les vérifications par rapport au principal actif (consultez <see cref="T:System.Security.Principal.IPrincipal" />) à l’aide de constructions de langage définies à la fois pour les actions de sécurité déclaratives et impératives.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-101">Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions.</span></span> <span data-ttu-id="ca1c6-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-103">En passant les informations d’identité (nom d’utilisateur et rôle) au constructeur, <xref:System.Security.Permissions.PrincipalPermission> peut être utilisé pour demander que l’identité de l’entité de sécurité active correspond à ces informations.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-103">By passing identity information (user name and role) to the constructor, <xref:System.Security.Permissions.PrincipalPermission> can be used to demand that the identity of the active principal matches this information.</span></span>  
  
 <span data-ttu-id="ca1c6-104">Pour faire correspondre l’actif <xref:System.Security.Principal.IPrincipal> et <xref:System.Security.Principal.IIdentity>, l’identité spécifiée et le rôle doivent correspondre.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-104">To match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>, both the specified identity and role must match.</span></span> <span data-ttu-id="ca1c6-105">Si `null` chaîne d’identité est utilisé, il est interprété comme une demande pour correspondre à n’importe quelle identité.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-105">If `null` identity string is used, it is interpreted as a request to match any identity.</span></span> <span data-ttu-id="ca1c6-106">Utilisation de `null` chaîne de rôle correspond à n’importe quel rôle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-106">Use of `null` role string will match any role.</span></span> <span data-ttu-id="ca1c6-107">Par conséquent, en passant `null` paramètre pour `name` ou `role` à <xref:System.Security.Permissions.PrincipalPermission> correspond à l’identité et aux rôles dans les <xref:System.Security.Principal.IPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-107">By implication, passing `null` parameter for `name` or `role` to <xref:System.Security.Permissions.PrincipalPermission> will match the identity and roles in any <xref:System.Security.Principal.IPrincipal>.</span></span> <span data-ttu-id="ca1c6-108">Il est également possible de construire un <xref:System.Security.Permissions.PrincipalPermission> qui détermine uniquement si le <xref:System.Security.Principal.IIdentity> représente une entité authentifiée ou non authentifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-108">It is also possible to construct a <xref:System.Security.Permissions.PrincipalPermission> that only determines whether the <xref:System.Security.Principal.IIdentity> represents an authenticated or unauthenticated entity.</span></span> <span data-ttu-id="ca1c6-109">Dans ce cas, `name` et `role` sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-109">In this case, `name` and `role` are ignored.</span></span>  
  
 <span data-ttu-id="ca1c6-110">Contrairement à la plupart des autres autorisations, <xref:System.Security.Permissions.PrincipalPermission> ne s’étend pas <xref:System.Security.CodeAccessPermission>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-110">Unlike most other permissions, <xref:System.Security.Permissions.PrincipalPermission> does not extend <xref:System.Security.CodeAccessPermission>.</span></span> <span data-ttu-id="ca1c6-111">Il est le cas, toutefois, implémenter la <xref:System.Security.IPermission> interface.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-111">It does, however, implement the <xref:System.Security.IPermission> interface.</span></span> <span data-ttu-id="ca1c6-112">Il s’agit, car <xref:System.Security.Permissions.PrincipalPermission> n’est pas une autorisation d’accès de code ; autrement dit, il n’est pas accordée en fonction de l’identité de l’assembly en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-112">This is because <xref:System.Security.Permissions.PrincipalPermission> is not a code access permission; that is, it is not granted based on the identity of the executing assembly.</span></span> <span data-ttu-id="ca1c6-113">Au lieu de cela, il permet au code d’effectuer des actions (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, et ainsi de suite) sur l’identité de l’utilisateur actuel de manière cohérente avec la manière dont ces actions sont exécutées pour l’accès au code et les autorisations d’identité de code.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-113">Instead, it allows code to perform actions (<xref:System.Security.Permissions.PrincipalPermission.Demand%2A>, <xref:System.Security.Permissions.PrincipalPermission.Union%2A>, <xref:System.Security.Permissions.PrincipalPermission.Intersect%2A>, and so on) against the current user identity in a manner consistent with the way those actions are performed for code access and code identity permissions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca1c6-114">Avant une demande d’autorisation principale, il est nécessaire de définir la stratégie de principal du domaine d’application actuel à la valeur d’énumération <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-114">Prior to a demand for principal permission it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="ca1c6-115">Par défaut, la stratégie principale est définie sur <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-115">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="ca1c6-116">Si vous ne définissez pas la stratégie principale <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, une demande d’autorisation principale échouera.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-116">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="ca1c6-117">Le code suivant doit être exécuté avant la demande de l’autorisation principale :</span><span class="sxs-lookup"><span data-stu-id="ca1c6-117">The following code should be executed before the principal permission is demanded:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
   
  
## Examples  
 <span data-ttu-id="ca1c6-118">L’exemple suivant nécessite le principal actif soit un administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-118">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="ca1c6-119">Le `name` paramètre est `null`, ce qui permet à tout utilisateur qui est un administrateur à passer la demande.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-119">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca1c6-120">Dans Windows Vista, le contrôle de compte d'utilisateur détermine les privilèges d'un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-120">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="ca1c6-121">Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-121">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="ca1c6-122">Par défaut, vous êtes dans le rôle d'utilisateur standard.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-122">By default, you are in the standard user role.</span></span> <span data-ttu-id="ca1c6-123">Pour exécuter le code nécessitant que vous soyez administrateur, vous devez d'abord élever vos privilèges d'utilisateur standard à administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-123">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="ca1c6-124">Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-124">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca1c6-125">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-125">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="ca1c6-126">Une des valeurs de <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-126">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span></span></param>
        <summary><span data-ttu-id="ca1c6-127">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-127">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-128">`None` correspond au principal non authentifié uniquement (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> est une chaîne vide (« »), aucune <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> est `false`).</span><span class="sxs-lookup"><span data-stu-id="ca1c6-128">`None` matches only the unauthenticated principal (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the empty string (""), no <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> is `false`).</span></span> <span data-ttu-id="ca1c6-129">`Unrestricted` correspond à tous les principaux (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> est `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> est `null`).</span><span class="sxs-lookup"><span data-stu-id="ca1c6-129">`Unrestricted` matches all principals (<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is `null`, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> is `null`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca1c6-130">Ce constructeur est inclus par souci de cohérence avec la conception d’autres autorisations, mais il n’est pas utile dans la pratique.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-130">This constructor is included for consistency with the design of other permissions, but is not useful in practice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca1c6-131">Le paramètre <paramref name="state" /> n’est pas une valeur <see cref="T:System.Security.Permissions.PermissionState" /> valide.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-131">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ca1c6-132">Nom de l’utilisateur de l’objet <see cref="T:System.Security.Principal.IPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-132">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="ca1c6-133">Rôle de l’utilisateur de l’objet <see cref="T:System.Security.Principal.IPrincipal" /> (par exemple, administrateur).</span><span class="sxs-lookup"><span data-stu-id="ca1c6-133">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <summary><span data-ttu-id="ca1c6-134">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> pour les <paramref name="name" /> et <paramref name="role" /> spécifiés.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-134">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-135">Les deux le `name` paramètre et le `role` paramètre doit correspondre pour que cette autorisation faire correspondre l’actif <xref:System.Security.Principal.IPrincipal> et associé <xref:System.Security.Principal.IIdentity>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-135">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span> <span data-ttu-id="ca1c6-136">Définissez `name` à `null` pour rechercher n’importe quel utilisateur dans un rôle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-136">Set `name` to `null` to check for any user in a role.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca1c6-137">L’exemple suivant nécessite le principal actif soit un administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-137">The following example requires the active principal to be an administrator.</span></span> <span data-ttu-id="ca1c6-138">Le `name` paramètre est `null`, ce qui permet à tout utilisateur qui est un administrateur à passer la demande.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-138">The `name` parameter is `null`, which enables any user who is an administrator to pass the demand.</span></span>  
  
 <span data-ttu-id="ca1c6-139">**Remarque** dans Windows Vista, le contrôle de compte utilisateur (UAC) détermine les privilèges d’un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-139">**Note** In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="ca1c6-140">Si vous êtes membre du groupe Administrateurs intégrés, deux jetons d'accès au moment de l'exécution vous sont assignés : un jeton d'accès utilisateur standard et un jeton d'accès administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-140">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="ca1c6-141">Par défaut, vous êtes dans le rôle d'utilisateur standard.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-141">By default, you are in the standard user role.</span></span> <span data-ttu-id="ca1c6-142">Pour exécuter le code nécessitant que vous soyez administrateur, vous devez d'abord élever vos privilèges d'utilisateur standard à administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-142">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="ca1c6-143">Vous pouvez effectuer cela au démarrage d'une application en cliquant avec le bouton droit sur l'icône de l'application et en indiquant que vous voulez l'exécuter en tant qu'administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-143">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermission (string name, string role, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string role, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, role As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermission(System::String ^ name, System::String ^ role, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermission : string * string * bool -&gt; System.Security.Permissions.PrincipalPermission" Usage="new System.Security.Permissions.PrincipalPermission (name, role, isAuthenticated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ca1c6-144">Nom de l’utilisateur de l’objet <see cref="T:System.Security.Principal.IPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-144">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</span></span></param>
        <param name="role"><span data-ttu-id="ca1c6-145">Rôle de l’utilisateur de l’objet <see cref="T:System.Security.Principal.IPrincipal" /> (par exemple, administrateur).</span><span class="sxs-lookup"><span data-stu-id="ca1c6-145">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</span></span></param>
        <param name="isAuthenticated"><span data-ttu-id="ca1c6-146"><see langword="true" /> pour indiquer que l’utilisateur est authentifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-146"><see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ca1c6-147">Initialise une nouvelle instance de la classe <see cref="T:System.Security.Permissions.PrincipalPermission" /> pour les <paramref name="name" />, <paramref name="role" /> et état d’authentification spécifiés.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-147">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-148">Les deux le `name` paramètre et le `role` paramètre doit correspondre pour que cette autorisation faire correspondre l’actif <xref:System.Security.Principal.IPrincipal> et associé <xref:System.Security.Principal.IIdentity>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-148">Both the `name` parameter and the `role` parameter must match for this permission to match the active <xref:System.Security.Principal.IPrincipal> and associated <xref:System.Security.Principal.IIdentity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="principalPermission.Copy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Copy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca1c6-149">Crée et retourne une copie identique de l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-149">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-150">Copie de l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-150">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-151">Une copie de l’autorisation représente le même principal et l’identité que l’autorisation d’origine.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-151">A copy of the permission represents the same principal and identity as the original permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="principalPermission.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca1c6-152">Détermine au moment de l’exécution si le principal actuel correspond au principal spécifié par l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-152">Determines at run time whether the current principal matches the principal specified by the current permission.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-153">Si aucun <xref:System.Security.SecurityException> est déclenché, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> réussit.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-153">If no <xref:System.Security.SecurityException> is raised, <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> succeeds.</span></span>  
  
 <span data-ttu-id="ca1c6-154">Cette méthode agit sur le principal attaché au thread appelant.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-154">This method acts against the principal attached to the calling thread.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca1c6-155">Avant d’appeler le <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> (méthode), il est nécessaire de définir la stratégie de principal du domaine d’application actuel à la valeur d’énumération <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-155">Prior to calling the <xref:System.Security.Permissions.PrincipalPermission.Demand%2A> method, it is necessary to set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="ca1c6-156">Par défaut, la stratégie principale est définie sur <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-156">By default the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="ca1c6-157">Si vous ne définissez pas la stratégie principale <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, une demande d’autorisation principale échouera.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-157">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="ca1c6-158">Le code suivant doit être exécuté avant la demande d’autorisation principale :</span><span class="sxs-lookup"><span data-stu-id="ca1c6-158">The following code should be executed before the demand for principal permission occurs:</span></span>  
>   
>  `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca1c6-159">Le principal actuel échoue à la vérification de sécurité pour le principal spécifié par l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-159">The current principal does not pass the security check for the principal specified by the current permission.</span></span>  
  
<span data-ttu-id="ca1c6-160">ou</span><span class="sxs-lookup"><span data-stu-id="ca1c6-160">-or-</span></span> 
<span data-ttu-id="ca1c6-161">Le <see cref="T:System.Security.Principal.IPrincipal" /> actuel a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-161">The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals o" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="principalPermission.Equals obj" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ca1c6-162">Objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> à comparer au <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-162">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <param name="obj"><span data-ttu-id="ca1c6-163">Objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> à comparer au <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-163">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="ca1c6-164">Détermine si l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> spécifié est égal au <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-164">Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-165"><see langword="true" /> si le <see cref="T:System.Security.Permissions.PrincipalPermission" /> spécifié est égal à l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-165"><see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-166">Pour plus d'informations, consultez <xref:System.Object.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-166">For more information, see <xref:System.Object.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="principalPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem"><span data-ttu-id="ca1c6-167">Encodage XML à utiliser pour reconstruire l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-167">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="ca1c6-168">Reconstruit une autorisation avec un état spécifié à partir d’un encodage XML.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-168">Reconstructs a permission with a specified state from an XML encoding.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca1c6-169">Le paramètre <paramref name="elem" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-169">The <paramref name="elem" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca1c6-170">Le paramètre <paramref name="elem" /> n’est pas un élément d’autorisation valide.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-170">The <paramref name="elem" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="ca1c6-171">ou</span><span class="sxs-lookup"><span data-stu-id="ca1c6-171">-or-</span></span> 
<span data-ttu-id="ca1c6-172">Le numéro de version du paramètre <paramref name="elem" /> n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-172">The <paramref name="elem" /> parameter's version number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="principalPermission.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca1c6-173">Obtient un code de hachage pour l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-173">Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-174">Code de hachage pour l’objet <see cref="T:System.Security.Permissions.PrincipalPermission" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-174">A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-175">Code de hachage de deux instances de la même autorisation pouvant différer, par conséquent, un code de hachage ne doit pas être utilisé pour comparer deux <xref:System.Security.Permissions.PrincipalPermission> objets.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-175">The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Intersect(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ca1c6-176">Autorisation à croiser avec l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-176">A permission to intersect with the current permission.</span></span> <span data-ttu-id="ca1c6-177">Elle doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-177">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ca1c6-178">Crée et retourne une autorisation qui constitue l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-178">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-179">Nouvelle autorisation qui représente l’intersection entre l’autorisation actuelle et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-179">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="ca1c6-180">Cette nouvelle autorisation est <see langword="null" /> si l’intersection est vide.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-180">This new permission will be <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-181">Étant donné que deux utilisateurs ne se croisent jamais, cette méthode n’est pas utile pour <xref:System.Security.Permissions.PrincipalPermission>.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-181">Because two users never intersect, this method is not useful for <xref:System.Security.Permissions.PrincipalPermission>.</span></span> <span data-ttu-id="ca1c6-182">Par exemple :</span><span class="sxs-lookup"><span data-stu-id="ca1c6-182">For example,</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#1)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#1)]  
  
 <span data-ttu-id="ca1c6-183">est équivalent à</span><span class="sxs-lookup"><span data-stu-id="ca1c6-183">is equivalent to</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#2)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#2)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#2)]  
  
 <span data-ttu-id="ca1c6-184">car aucune identité ne peut représenter Bob et Louise.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-184">because no identity can simultaneously represent both Bob and Louise.</span></span> <span data-ttu-id="ca1c6-185">En effet, `pp1.Demand()` ne réussit que si une entité non authentifiée (avec un nom égal à la chaîne vide (« »)) est autorisée à jouer le rôle d’administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-185">In effect, `pp1.Demand()` only succeeds if an unauthenticated principal (with name equal to the empty string ("")) is allowed to act in the Administrator role.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca1c6-186">Le paramètre <paramref name="target" /> n’a pas la valeur <see langword="null" /> et n’est pas une instance de la même classe que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-186">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="principalPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ca1c6-187">Autorisation qui doit être testée pour la relation de sous-ensemble.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-187">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="ca1c6-188">Cette autorisation doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-188">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ca1c6-189">Détermine si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-189">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-190"><see langword="true" /> si l’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-190"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-191">L’autorisation actuelle est un sous-ensemble de l’autorisation spécifiée si toutes les demandes qui aboutissent pour l’autorisation en cours réussissent également pour l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-191">The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca1c6-192">L’exemple suivant définit des instances de <xref:System.Security.Permissions.PrincipalPermission> correspondant à trois utilisateurs distincts.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-192">The following example defines instances of <xref:System.Security.Permissions.PrincipalPermission> corresponding to three distinct users.</span></span> <span data-ttu-id="ca1c6-193">Deux instances supplémentaires sont ensuite créées en tant que groupes d’utilisateurs.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-193">Two additional instances are then created as groups of users.</span></span> <span data-ttu-id="ca1c6-194">`pp1` représente Bob et Louise, `pp2` représente Bob, Louise et Greg.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-194">`pp1` represents Bob and Louise, `pp2` represents Bob, Louise, and Greg.</span></span>  
  
 [!code-cpp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermission.IsSubsetOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermission.IsSubsetOf Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ca1c6-195">Avec les déclarations précédentes, `pp1.IsSubsetOf(pp2)` retourne `true`, et `pp2.IsSubsetOf(pp1)` retourne `false`.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-195">With the preceding declarations, `pp1.IsSubsetOf(pp2)` returns `true`, and `pp2.IsSubsetOf(pp1)` returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca1c6-196">Le paramètre <paramref name="target" /> est un objet qui n’est pas du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-196">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="principalPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca1c6-197">Retourne une valeur qui indique si l’autorisation actuelle est illimitée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-197">Returns a value indicating whether the current permission is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-198"><see langword="true" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-198"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-199">Sans restriction <xref:System.Security.Permissions.PrincipalPermission> correspond à n’importe quel principal.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-199">An unrestricted <xref:System.Security.Permissions.PrincipalPermission> matches any principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="principalPermission.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca1c6-200">Crée et retourne une chaîne représentant l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-200">Creates and returns a string representing the current permission.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-201">Représentation de l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-201">A representation of the current permission.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="principalPermission.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca1c6-202">Crée un encodage XML de l’autorisation et de son état actuel.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-202">Creates an XML encoding of the permission and its current state.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-203">Codage XML de l’autorisation, y compris les informations d’état éventuelles.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-203">An XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="principalPermission.Union other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IPermission.Union(System.Security.IPermission)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ca1c6-204">Autorisation à combiner avec l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-204">A permission to combine with the current permission.</span></span> <span data-ttu-id="ca1c6-205">Elle doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-205">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="ca1c6-206">Crée une autorisation qui est l’union de l’autorisation actuelle et de l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-206">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="ca1c6-207">Nouvelle autorisation qui représente l’union de l’autorisation actuelle et de l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-207">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca1c6-208"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> Crée une autorisation qui représente les critères d’un ensemble donné de personne <xref:System.Security.Permissions.PrincipalPermission> objets.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-208"><xref:System.Security.Permissions.PrincipalPermission.Union%2A> creates a permission representing the criteria of a given set of individual <xref:System.Security.Permissions.PrincipalPermission> objects.</span></span> <span data-ttu-id="ca1c6-209">Il est utile pour représenter de manière compacte un ensemble de conditions à tester.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-209">It is useful for compactly representing a set of conditions to test.</span></span> <span data-ttu-id="ca1c6-210">Par exemple, avec les déclarations</span><span class="sxs-lookup"><span data-stu-id="ca1c6-210">For example, with the declarations</span></span>  
  
 [!code-cpp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cpp/remarks.cpp#3)]
 [!code-csharp[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.permissions.principalpermission/cs/remarks.cs#3)]
 [!code-vb[System.Security.Permissions.PrincipalPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.permissions.principalpermission/vb/remarks.vb#3)]  
  
 <span data-ttu-id="ca1c6-211">`(ppBob.Union(ppLouise)).Demand()` réussit si l’objet principal actuel représente Bob dans le rôle d’administrateur ou Louise dans le rôle d’administrateur.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-211">`(ppBob.Union(ppLouise)).Demand()` will succeed if the current principal represents Bob in the role of Administrator or Louise in the role of Administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca1c6-212">Le paramètre <paramref name="other" /> est un objet qui n’est pas du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="ca1c6-212">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>