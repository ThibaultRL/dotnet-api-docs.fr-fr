<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="313df6084daa06c14eefb8a2a969eb9f7a570ce8" /><Meta Name="ms.sourcegitcommit" Value="75eca440f8f4d595506405f48961f38649e160d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="06/01/2019" /><Meta Name="ms.locfileid" Value="66457966" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type DataServiceCollection&lt;'T&gt; = class&#xA;    inherit ObservableCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Type d'entité.</typeparam>
    <summary>Représente une collection d'entités dynamiques qui fournit des notifications lorsque des éléments sont ajoutés, supprimés ou lorsque la liste est actualisée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] Fournit la <xref:System.Data.Services.Client.DataServiceCollection%601> classe pour prendre en charge la liaison de données aux contrôles dans les applications clientes. Cette classe hérite de la <xref:System.Collections.ObjectModel.ObservableCollection%601> classe qui implémente le <xref:System.Collections.Specialized.INotifyCollectionChanged> interface et est le mécanisme de liaison de données primaire pour Windows Presentation Foundation (WPF) et les applications Silverlight.  
  
 Vous pouvez charger une collection de liaisons <xref:System.Collections.ObjectModel.ObservableCollection%601> à l’aide de toute collection qui implémente l’interface <xref:System.Collections.Generic.IEnumerable%601>. Les éléments chargés dans la collection de liaisons doivent implémenter l’interface <xref:System.ComponentModel.INotifyPropertyChanged>. Pour plus d’informations, consultez [liaison de données aux contrôles](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  
  
   
  
## Examples  
 L'exemple suivant provient de la page code-behind d'une page XAML (Extensible Application Markup Language) qui définit la fenêtre `SalesOrders` dans WPF. Lorsque la fenêtre est chargée, un <xref:System.Data.Services.Client.DataServiceCollection%601> est créé à partir du résultat d’une requête qui retourne des clients avec des objets connexes, filtrés par pays/région. Ce résultat est lié à la propriété <xref:System.Windows.FrameworkElement.DataContext%2A> du <xref:System.Windows.Controls.StackPanel> qui est le contrôle de disposition racine pour la fenêtre WPF.  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 Le code suivant est le code XAML qui définit la fenêtre `SalesOrders` dans WPF pour l'exemple précédent.  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">Liaison des données aux contrôles (services de données WCF)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Vous pouvez créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi manuel des modifications lorsque vous créez une instance à l'aide d'un constructeur qui vous permet de fournir une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour <xref:System.Data.Services.Client.TrackingMode>. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Le suivi automatique des modifications commence après que les éléments sont chargés dans la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Requête <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou LINQ qui retourne une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> d’objets utilisés pour initialiser la collection.</param>
        <summary>Crée une instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> basée sur l'exécution de la requête.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection d’objets <xref:System.Collections.Generic.IEnumerable%601> fournie pour `items` est habituellement une requête qui retourne les éléments de la collection. Toutefois, toute collection <xref:System.Collections.Generic.IEnumerable%601> du type correct peut être fournie.  
  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Vous pouvez créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi manuel des modifications lorsque vous créez une instance à l'aide d'un constructeur qui vous permet de fournir une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour <xref:System.Data.Services.Client.TrackingMode>. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> utilisé pour suivre les modifications apportées aux objets de la collection.</param>
        <summary>Crée une instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> qui utilise le <see cref="T:System.Data.Services.Client.DataServiceContext" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer une <xref:System.Data.Services.Client.DataServiceCollection%601> vide à laquelle les objets d'entité peuvent être ajoutés sans exécuter de requête sur le service ou lorsque <xref:System.Collections.Generic.IEnumerable%601> n'est pas disponible.  
  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Vous pouvez créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi manuel des modifications lorsque vous créez une instance à l'aide d'un constructeur qui vous permet de fournir une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour <xref:System.Data.Services.Client.TrackingMode>. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items">Requête <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou LINQ qui retourne une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets utilisés pour initialiser la collection.</param>
        <param name="trackingMode">Valeur <see cref="T:System.Data.Services.Client.TrackingMode" /> qui indique si les modifications apportées aux éléments de la collection sont suivies automatiquement.</param>
        <summary>Crée une instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> basée sur l'exécution de la requête, dans le mode de suivi spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Utilisez ce constructeur de classe et fournissez une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour `trackingMode` pour créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi des modifications manuel. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 La collection d’objets <xref:System.Collections.Generic.IEnumerable%601> fournie pour `items` est habituellement une requête qui retourne les éléments de la collection. Toutefois, toute collection <xref:System.Collections.Generic.IEnumerable%601> du type correct peut être fournie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> utilisé pour effectuer le suivi des éléments de la collection.</param>
        <param name="entitySetName">Jeu d'entités des objets contenus dans la collection.</param>
        <param name="entityChangedCallback">Délégué qui encapsule une méthode appelée lorsqu'une entité change.</param>
        <param name="collectionChangedCallback">Délégué qui encapsule une méthode appelée lorsque la collection d'entités change.</param>
        <summary>Crée une instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> avec les délégués de méthodes de modification fournis et qui utilise le <see cref="T:System.Data.Services.Client.DataServiceContext" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour créer une <xref:System.Data.Services.Client.DataServiceCollection%601> vide à laquelle les objets d'entité peuvent être ajoutés sans exécuter de requête sur le service ou lorsque <xref:System.Collections.Generic.IEnumerable%601> n'est pas disponible.  
  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Vous pouvez créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi manuel des modifications lorsque vous créez une instance à l'aide d'un constructeur qui vous permet de fournir une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour <xref:System.Data.Services.Client.TrackingMode>. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Requête <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou LINQ qui retourne une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets utilisés pour initialiser la collection.</param>
        <param name="trackingMode">Valeur <see cref="T:System.Data.Services.Client.TrackingMode" /> qui indique si les modifications apportées aux éléments de la collection sont suivies automatiquement.</param>
        <param name="entitySetName">Jeu d'entités des objets contenus dans la collection.</param>
        <param name="entityChangedCallback">Délégué qui encapsule une méthode appelée lorsqu'une entité change.</param>
        <param name="collectionChangedCallback">Délégué qui encapsule une méthode appelée lorsque la collection d'entités change.</param>
        <summary>Crée une nouvelle instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> basée sur l'exécution de la requête et avec les délégués de méthodes de modification fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les fonctions `entityChanged` et `collectionChanged` sont appelées respectivement par les événements <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>. La méthode `entityChanged` accepte une valeur <xref:System.Data.Services.Client.EntityCollectionChangedParams> et la méthode `collectionChanged` accepte une valeur <xref:System.Data.Services.Client.EntityChangedParams>. Les deux méthodes doivent retourner une valeur booléenne qui indique si l'événement a été géré par la fonction. Lorsque la méthode retourne `true`, le comportement par défaut continue à se produire.  
  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Vous pouvez créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi manuel des modifications lorsque vous créez une instance à l'aide d'un constructeur qui vous permet de fournir une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour <xref:System.Data.Services.Client.TrackingMode>. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" /> utilisé pour effectuer le suivi des éléments de la collection.</param>
        <param name="items">Requête <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> ou LINQ qui retourne une collection <see cref="T:System.Collections.Generic.IEnumerable`1" /> d'objets utilisés pour initialiser la collection.</param>
        <param name="trackingMode">Valeur <see cref="T:System.Data.Services.Client.TrackingMode" /> qui indique si les modifications apportées aux éléments de la collection sont suivies automatiquement.</param>
        <param name="entitySetName">Jeu d'entités des objets contenus dans la collection.</param>
        <param name="entityChangedCallback">Délégué qui encapsule une méthode appelée lorsqu'une entité change.</param>
        <param name="collectionChangedCallback">Délégué qui encapsule une méthode appelée lorsque la collection d'entités change.</param>
        <summary>Crée une nouvelle instance de la classe <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> basée sur l'exécution de la requête, avec les délégués de méthodes de modification fournis, et qui utilise le <see cref="T:System.Data.Services.Client.DataServiceContext" />fourni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, le suivi automatique des modifications est activé pour <xref:System.Data.Services.Client.DataServiceCollection%601>. Utilisez ce constructeur de classe pour fournir une valeur <xref:System.Data.Services.Client.TrackingMode.None> pour `trackingMode` pour créer une instance <xref:System.Data.Services.Client.DataServiceCollection%601> qui utilise le suivi des modifications manuel. Lorsque vous utilisez le suivi manuel, vous devez implémenter <xref:System.ComponentModel.INotifyPropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged> et gérer les événements déclenchés pour enregistrer manuellement les modifications apportées à <xref:System.Data.Services.Client.DataServiceContext>.  
  
 <xref:System.Data.Services.Client.DataServiceContext> doit être fourni lorsque `items` n'est pas <xref:System.Data.Services.Client.DataServiceQuery%601> ou une <xref:System.Data.Services.Client.QueryOperationResponse%601> qui fait référence à une instance <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Les fonctions `entityChanged` et `collectionChanged` sont appelées respectivement par les événements <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> et <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>. La méthode `entityChanged` accepte une valeur <xref:System.Data.Services.Client.EntityCollectionChangedParams> et la méthode `collectionChanged` accepte une valeur <xref:System.Data.Services.Client.EntityChangedParams>. Les deux méthodes doivent retourner une valeur booléenne qui indique si l'événement a été géré par la fonction. Lorsque la méthode retourne `true`, le comportement par défaut se produira toujours.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberSignature Language="F#" Value="override this.Clear : bool -&gt; unit" Usage="dataServiceCollection.Clear stopTracking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">Lorsque la valeur est <see langword="true" />, détache tous les éléments de <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Supprime tous les éléments de la collection et détache éventuellement tous les éléments de <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu'un élément est détaché, tous les objets connexes dans le graphique de données sont également détachés du <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Continuation : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; with get, set" Usage="System.Data.Services.Client.DataServiceCollection&lt;'T&gt;.Continuation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet de continuation qui est utilisé pour retourner l'ensemble suivant de résultats paginés.</summary>
        <value>Objet <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> qui contient l'URI pour retourner la page suivante de résultats paginés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propriété <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> retourne un lien qui sert à accéder à l'ensemble suivant de résultats paginés lorsque la pagination est activée dans le service de données. Pour plus d’informations, consultez [configuration du Service de données](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md).  
  
 Lors du chargement d'un résultat paginé dans <xref:System.Data.Services.Client.DataServiceCollection%601>, vous devez explicitement charger des pages en appelant la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> sur <xref:System.Data.Services.Client.DataServiceCollection%601> en transmettant le résultat de l'exécution de l'URI obtenu à partir de la propriété <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A>.  
  
   
  
## Examples  
 L'exemple suivant provient de la page code-behind d'une page XAML (Extensible Application Markup Language) qui définit la fenêtre `SalesOrders` dans WPF. Lorsque la fenêtre est chargée, un <xref:System.Data.Services.Client.DataServiceCollection%601> est créé à partir du résultat d’une requête qui retourne des clients, filtrée par pays/région. Toutes les pages de ce résultat paginé sont chargées ainsi que les ordres connexes, et sont liées à la propriété <xref:System.Windows.FrameworkElement.DataContext%2A> du <xref:System.Windows.Controls.StackPanel> qui est le contrôle de disposition racine pour la fenêtre WPF. Pour plus d'informations, voir [Procédure : Lier des données aux éléments Windows Presentation Foundation](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md).  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Chargement de contenu différé (services de données WCF)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">Liaison des données aux contrôles (services de données WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberSignature Language="F#" Value="member this.Detach : unit -&gt; unit" Usage="dataServiceCollection.Detach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Désactive le suivi de contexte <see cref="T:System.Data.Services.Client.DataServiceContext" /> de tous les éléments de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> peut être appelée uniquement si <xref:System.Data.Services.Client.DataServiceCollection%601> est la collection racine.  
  
 Lorsque la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> est appelée sur une collection qui est une collection racine, le suivi est également arrêté pour tous les objets connexes dans le graphique de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="dataServiceCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">Index au niveau duquel ajouter l'élément.</param>
        <param name="item">Élément à ajouter.</param>
        <summary>Ajoute un élément spécifié à la collection au niveau de l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous effectuez manuellement le suivi des modifications de la collection, vous devez substituer la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A> pour empêcher les éléments d’être automatiquement ajoutés à la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Charge les entités dans la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.Load : seq&lt;'T&gt; -&gt; unit" Usage="dataServiceCollection.Load items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Collection d'objets d'entité à ajouter à <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
        <summary>Charge une collection d'objets d'entité dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appel de la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> attache tous les objets de la collection, s’ils ne sont pas déjà attachés au <xref:System.Data.Services.Client.DataServiceContext> associé à <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Lorsqu'un objet est attaché à l'aide de la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>, tous les objets connexes sont également attachés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberSignature Language="F#" Value="member this.Load : 'T -&gt; unit" Usage="dataServiceCollection.Load item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">Objet d'entité à ajouter.</param>
        <summary>Charge un seul objet d'entité dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'appel de la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> attache l'objet, s'il n'est pas déjà attaché au <xref:System.Data.Services.Client.DataServiceContext> associé à <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Lorsqu'un objet est attaché à l'aide de la méthode <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>, tous les objets connexes sont également attachés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>