<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4abd0b0508fdc62e37d2117e5823a54dfc7dfdce" /><Meta Name="ms.sourcegitcommit" Value="d3dcd8c426adcf1bbe5ff78a76dee13bd8ad6efd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/28/2019" /><Meta Name="ms.locfileid" Value="66251526" /></Metadata><TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IArgumentProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa170-101">Fournit une interface interne pour accéder aux arguments de plusieurs nœuds d’arborescence (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression et IndexExpression).</span><span class="sxs-lookup"><span data-stu-id="fa170-101">Provides an internal interface for accessing the arguments of multiple tree nodes (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression, and IndexExpression).</span></span>  <span data-ttu-id="fa170-102">Cette API est destinée à un usage interne uniquement.</span><span class="sxs-lookup"><span data-stu-id="fa170-102">This API is for internal use only.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks

<span data-ttu-id="fa170-103">Vous ne devez pas utiliser cette API.</span><span class="sxs-lookup"><span data-stu-id="fa170-103">You should not use this API.</span></span>  <span data-ttu-id="fa170-104">Il est public uniquement en raison de la refactorisation de l’assembly, et il existe uniquement pour optimiser les performances internes.</span><span class="sxs-lookup"><span data-stu-id="fa170-104">It is public only due to assembly refactoring, and it exists only for internal performance optimizations.</span></span> <span data-ttu-id="fa170-105">Il permet deux optimisations qui réduisent la taille des arborescences :</span><span class="sxs-lookup"><span data-stu-id="fa170-105">It enables two optimizations that reduce the size of the trees:</span></span>
  
1. <span data-ttu-id="fa170-106">Il permet aux nœuds à maintenir un <xref:System.Collections.Generic.IList%601> au lieu d’un <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="fa170-106">It enables the nodes to hold onto an <xref:System.Collections.Generic.IList%601> instead of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  <span data-ttu-id="fa170-107">Cela permet d’économiser le coût d’allouer de la collection en lecture seule pour chaque nœud.</span><span class="sxs-lookup"><span data-stu-id="fa170-107">This saves the cost of allocating the read-only collection for each node.</span></span>
  
2. <span data-ttu-id="fa170-108">Il permet les sous-classes spécialisées à créer ce blocage sur un nombre spécifique d’arguments (par exemple, `Block2`, `Block2`, `Block4`).</span><span class="sxs-lookup"><span data-stu-id="fa170-108">It enables specialized subclasses to be created that hold on to a specific number of arguments (for example, `Block2`, `Block2`, `Block4`).</span></span>  <span data-ttu-id="fa170-109">Par conséquent, ces nœuds évitent l’allocation à la fois un <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> et un tableau pour stocker leurs éléments, ce qui évite de 32 octets par nœud.</span><span class="sxs-lookup"><span data-stu-id="fa170-109">Therefore, these nodes avoid allocating both a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> and an array for storing their elements, thus saving 32 bytes per node.</span></span>  <span data-ttu-id="fa170-110">Cette technique est utilisée par différents nœuds, y compris <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, et <xref:System.Linq.Expressions.MethodCallExpression>.</span><span class="sxs-lookup"><span data-stu-id="fa170-110">This technique is used by various nodes, including <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, and <xref:System.Linq.Expressions.MethodCallExpression>.</span></span>
            
<span data-ttu-id="fa170-111">Les nœuds d’arbre expression continuent d’exposer les propriétés LINQ d’origine de <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objets.</span><span class="sxs-lookup"><span data-stu-id="fa170-111">The expression tree nodes continue to expose the original LINQ properties of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objects.</span></span> <span data-ttu-id="fa170-112">Pour cela, ils réutilisation d’un champ pour stocker le tableau ou un élément qui serait normalement stocké dans le tableau.</span><span class="sxs-lookup"><span data-stu-id="fa170-112">They do this by reusing a field for storing both the array or an element that would normally be stored in the array.</span></span>
            
<span data-ttu-id="fa170-113">Dans le cas du tableau, la collection est de type <xref:System.Collections.Generic.IList%601> au lieu de <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="fa170-113">For the array case, the collection is typed to <xref:System.Collections.Generic.IList%601> instead of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="fa170-114">Quand le nœud est initialement créé, il s’agit d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="fa170-114">When the node is initially constructed, it is an array.</span></span>  <span data-ttu-id="fa170-115">Le compilateur ou les utilitaires dans cette bibliothèque accéder aux éléments via cette interface.</span><span class="sxs-lookup"><span data-stu-id="fa170-115">The compiler or utilities in this library access the elements through this interface.</span></span> <span data-ttu-id="fa170-116">L’accès aux éléments du tableau promeut le tableau en un <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="fa170-116">Accessing array elements promotes the array to a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="fa170-117">Dans le cas de l’objet, le premier argument est stocké dans un champ de type <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="fa170-117">For the object case, the first argument is stored in a field typed to <xref:System.Object>.</span></span> <span data-ttu-id="fa170-118">Quand le nœud est initialement créé, ce champ conserve le <xref:System.Linq.Expressions.Expression> du premier argument.</span><span class="sxs-lookup"><span data-stu-id="fa170-118">When the node is initially constructed, this field holds the <xref:System.Linq.Expressions.Expression> of the first argument.</span></span>  <span data-ttu-id="fa170-119">Lorsque le compilateur et les utilitaires dans cette bibliothèque accéder aux arguments, ils utilisent à nouveau cette interface, et l’accesseur pour le premier argument utilise interne `Expression.ReturnObject<T>(System.Object)` méthode d’assistance pour retourner l’objet qui gère la <xref:System.Linq.Expressions.Expression> ou <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> cas.</span><span class="sxs-lookup"><span data-stu-id="fa170-119">When the compiler and utilities in this library access the arguments, they again use this interface, and the accessor for the first argument uses the internal `Expression.ReturnObject<T>(System.Object)` helper method to return the object that handles the <xref:System.Linq.Expressions.Expression> or <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> case.</span></span> <span data-ttu-id="fa170-120">Lorsque l’utilisateur accède à la <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, le champ objet est mis à jour pour conserver directement la <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="fa170-120">When the user accesses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, the object field is updated to hold directly onto the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="fa170-121">Il est important que <xref:System.Linq.Expressions.Expression> propriétés retournent de manière cohérente les mêmes <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="fa170-121">It is important that <xref:System.Linq.Expressions.Expression> properties consistently return the same <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="fa170-122">Sinon, l’analyseur d’arborescence de module de réécriture utilisé par les visiteurs de l’expression sera interrompue.</span><span class="sxs-lookup"><span data-stu-id="fa170-122">Otherwise, the rewriter tree walker used by expression visitors will break.</span></span> <span data-ttu-id="fa170-123">Il s’agit d’une modification avec rupture de la version v1 LINQ pour retourner différents <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> à partir de la même <xref:System.Linq.Expressions.Expression> nœud.</span><span class="sxs-lookup"><span data-stu-id="fa170-123">It is a breaking change from LINQ v1 to return different <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> from the same <xref:System.Linq.Expressions.Expression> node.</span></span> <span data-ttu-id="fa170-124">Actuellement, les utilisateurs peuvent compter sur l’identité de l’objet pour indiquer si le nœud a changé.</span><span class="sxs-lookup"><span data-stu-id="fa170-124">Currently, users can rely on object identity to tell if the node has changed.</span></span>  <span data-ttu-id="fa170-125">Stocker le <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> dans un champ surchargé à la fois réduit l’utilisation de mémoire et maintient la compatibilité pour l’API publique.</span><span class="sxs-lookup"><span data-stu-id="fa170-125">Storing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> in an overloaded field both reduces memory usage and maintains compatibility for the public API.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentCount : int" Usage="System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa170-126">Retourne le nombre d’arguments du nœud d’arborescence d’expression.</span><span class="sxs-lookup"><span data-stu-id="fa170-126">Returns the number of arguments to the expression tree node.</span></span> <span data-ttu-id="fa170-127">Cette API est destinée à un usage interne uniquement.</span><span class="sxs-lookup"><span data-stu-id="fa170-127">This API is for internal use only.</span></span></summary>
        <value><span data-ttu-id="fa170-128">Nombre d’arguments du nœud d’arborescence d’expression, au format <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="fa170-128">The number of arguments to the expression tree node as <see cref="T:System.Int32" />.</span></span></value>
        <remarks><span data-ttu-id="fa170-129">Vous ne devez pas utiliser cette API.</span><span class="sxs-lookup"><span data-stu-id="fa170-129">You should not use this API.</span></span> <span data-ttu-id="fa170-130">Il est public uniquement en raison de la refactorisation de l’assembly, et il est utilisé en interne pour optimiser les performances.</span><span class="sxs-lookup"><span data-stu-id="fa170-130">It is public only due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; System.Linq.Expressions.Expression" Usage="iArgumentProvider.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="fa170-131">Index de l’argument.</span><span class="sxs-lookup"><span data-stu-id="fa170-131">The index of the argument.</span></span></param>
        <summary><span data-ttu-id="fa170-132">Retourne l’argument à l’<paramref name="index" />, en levant une exception si l’<paramref name="index" /> est hors limites.</span><span class="sxs-lookup"><span data-stu-id="fa170-132">Returns the argument at <paramref name="index" />, throwing if <paramref name="index" /> is out of bounds.</span></span> <span data-ttu-id="fa170-133">Cette API est destinée à un usage interne uniquement.</span><span class="sxs-lookup"><span data-stu-id="fa170-133">This API is for internal use only.</span></span></summary>
        <returns><span data-ttu-id="fa170-134">Argument à l’index.</span><span class="sxs-lookup"><span data-stu-id="fa170-134">The argument at index.</span></span></returns>
        <remarks><span data-ttu-id="fa170-135">Vous ne devez pas utiliser cette API.</span><span class="sxs-lookup"><span data-stu-id="fa170-135">You should not use this API.</span></span>  <span data-ttu-id="fa170-136">Il est public uniquement en raison de la refactorisation de l’assembly, et il est utilisé en interne pour optimiser les performances.</span><span class="sxs-lookup"><span data-stu-id="fa170-136">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
