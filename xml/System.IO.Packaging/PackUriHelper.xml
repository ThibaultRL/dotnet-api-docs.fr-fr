<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d451a47e6a7f4f8062d429f2a24d0f427852886" /><Meta Name="ms.sourcegitcommit" Value="0de246131f8a87c71d008d055adec7bf72470c4f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/29/2019" /><Meta Name="ms.locfileid" Value="66302000" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes utilitaires pour composer et analyser des objets URI à en-tête pack.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">Premier URI à en-tête pack.</param>
        <param name="secondPackUri">Deuxième URI à en-tête pack.</param>
        <summary>Retourne une valeur qui indique si deux URI à en-tête pack sont équivalents.</summary>
        <returns>Entier signé indiquant la relation entre <paramref name="firstPackUri" /> et <paramref name="secondPackUri" />.  
  
 <list type="table"><listheader><term> Value 
 </term><description> Signification 
 </description></listheader><item><term> Inférieure à 0 
 </term><description><paramref name="firstPackUri" /> est inférieur à <paramref name="secondPackUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> équivaut à <paramref name="secondPackUri" />.  
  
 </description></item><item><term> Supérieure à 0 
 </term><description><paramref name="firstPackUri" /> est supérieur à <paramref name="secondPackUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les deux `firstPackUri` et `secondPackUri` sont `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> retourne 0. Lors de la comparaison d’URI à en-tête pack, un URI null est toujours inférieur à un URI non null.    Pour les cas où `firstPackUri` et `secondPackUri` sont tous deux absolu pack URI, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> effectue la comparaison.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> n’est pas un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] absolu.  
  
ou 
<paramref name="firstPackUri" /> ou <paramref name="secondPackUri" /> ne commence pas par un schéma “pack://”.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du premier <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <param name="secondPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du deuxième <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Retourne une valeur qui indique si deux [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] de parties de package sont équivalents.</summary>
        <returns>Valeur indiquant la relation entre <paramref name="firstPartUri" /> et <paramref name="secondPartUri" />.  
  
 <list type="table"><listheader><term> Value 
 </term><description> Signification 
 </description></listheader><item><term> Inférieure à 0 
 </term><description><paramref name="firstPartUri" /> est inférieur à <paramref name="secondPartUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> équivaut à <paramref name="secondPartUri" />.  
  
 </description></item><item><term> Supérieure à 0 
 </term><description><paramref name="firstPartUri" /> est supérieur à <paramref name="secondPartUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les deux `firstPartUri` et `secondPartUri` sont `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> retourne 0. Lors de la comparaison <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)], une valeur null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] est toujours inférieure à une valeur non null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]. Pour les cas où `firstPartUri` et `secondPartUri` sont tous deux relatif <xref:System.IO.Packaging.PackagePart> URI, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> effectue la comparaison.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> ou <paramref name="secondPartUri" /> n'est pas une syntaxe d'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de composant valide.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un URI à en-tête pack.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant propose des exemples pour le <xref:System.IO.Packaging.PackUriHelper.Create%2A> (méthode).  
  
|`packageUri`|`partUri`|`fragment`|URI à en-tête pack retourné|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|Pack://http :,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.Xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|Pack://http :,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|Pack://http :,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.Xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|Pack://FTP :,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Composer un URI à en-tête pack est un processus en plusieurs étapes.  Par exemple, une seule étape dans la formation d’un URI à en-tête pack consiste à remplacer les caractères de barre oblique (/) de la `packageUri` par des virgules (,).  
  
 Pour plus d’informations sur la conversion de chaînes et la façon dont les URI à en-tête pack sont formés, voir annexe A.4 « Exemples de Conversion de chaîne » et annexe B.3 « Composition d’un URI à en-tête Pack » dans la spécification Open Packaging Conventions disponible pour téléchargement à l’adresse [spécifications et téléchargements de licence](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">URI du <see cref="T:System.IO.Packaging.Package" /> référencé.</param>
        <summary>Crée un URI à en-tête pack qui pointe vers un package.</summary>
        <returns>URI à en-tête pack pour le <see cref="T:System.IO.Packaging.Package" /> référencé par le <paramref name="packageUri" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` ne peut pas être spécifié en tant que `null` ou vide.  
  
 Le tableau suivant propose des exemples pour <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|URI à en-tête pack retourné|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|Pack://FTP :,, ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|Pack://file :,, d:,packages,mypackage2.pkg|  
  
 Composer un URI à en-tête pack est un processus en plusieurs étapes.  Par exemple, une seule étape dans la formation d’un URI à en-tête pack consiste à remplacer les caractères de barre oblique (/) de la `packageUri` par des virgules (,).  
  
 Pour plus d’informations sur la conversion de chaînes et la façon dont les URI à en-tête pack sont formés, voir annexe A.4 « Exemples de Conversion de chaîne » et annexe B.3 « Composition d’un URI à en-tête Pack » dans la spécification Open Packaging Conventions disponible pour téléchargement à l’adresse [spécifications et téléchargements de licence](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.PackUriHelper.Create%2A> méthode pour définir un URI qui fait référence à un package à en-tête pack.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> n’est pas un URI absolu.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
        <summary>Crée un URI à en-tête pack en fonction d’un <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] et de l’[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] d’une partie du package.</summary>
        <returns>URI à en-tête pack du <see cref="T:System.IO.Packaging.PackagePart" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` Il ne peut pas être spécifié comme null ou vide.  
  
 Si `partUri` est `null`, l’URI à en-tête pack retourné pointe vers le package.  
  
 Le tableau suivant propose des exemples pour le <xref:System.IO.Packaging.PackUriHelper.Create%2A> (méthode).  
  
|`packageUri`|`partUri`|URI à en-tête pack retourné|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|Pack://http :,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.Xaml|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|Pack://http :,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|Pack://http :,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|Pack://FTP :,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|Pack://file :,, d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 Composer un URI à en-tête pack est un processus en plusieurs étapes.  Par exemple, une seule étape dans la formation d’un URI à en-tête pack consiste à remplacer les caractères de barre oblique (/) de la `packageUri` par des virgules (,).  
  
 Pour plus d’informations sur la conversion de chaînes et la façon dont les URI à en-tête pack sont formés, voir annexe A.4 « Exemples de Conversion de chaîne » et annexe B.3 « Composition d’un URI à en-tête Pack » dans la spécification Open Packaging Conventions disponible pour téléchargement à l’adresse [spécifications et téléchargements de licence](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> méthode pour définir un URI qui fait référence à un package à en-tête pack.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> n’est pas un URI absolu.  
  
ou 
 <paramref name="partUri" /> n’est pas une syntaxe d’URI de partie valide.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
        <param name="fragment">Référence « # » qui identifie un élément dans la partie du package.</param>
        <summary>Crée un URI à en-tête pack en fonction d’un <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], de l’[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] d’une partie du package et d’un fragment "#" à ajouter.</summary>
        <returns>URI à en-tête pack qui identifie le package spécifié, la partie du package et le fragment.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` ne peut pas être spécifié en tant que `null` ou vide.  
  
 Si `partUri` est `null`, l’URI à en-tête pack retourné pointe vers le package.  
  
 `fragment` ne peut pas être une chaîne vide, mais peut être spécifié comme `null`.  Est ne pas spécifié comme `null`, le `fragment` chaîne doit commencer par un caractère « # ».  Pour plus d’informations sur la syntaxe de `fragment` références, consultez la Section 3.5, « Fragment » de [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 Le tableau suivant propose des exemples pour le <xref:System.IO.Packaging.PackUriHelper.Create%2A> (méthode).  
  
|`packageUri`|`partUri`|`fragment`|URI à en-tête pack retourné|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|Pack://http :,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.Xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|Pack://http :,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|Pack://http :,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.Xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|Pack://FTP :,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Composer un URI à en-tête pack est un processus en plusieurs étapes.  Par exemple, une seule étape dans la formation d’un URI à en-tête pack consiste à remplacer les caractères de barre oblique (/) de la `packageUri` par des virgules (,).  
  
 Pour plus d’informations sur la conversion de chaînes et la façon dont les URI à en-tête pack sont formés, voir annexe A.4 « Exemples de Conversion de chaîne » et annexe B.3 « Composition d’un URI à en-tête Pack » dans la spécification Open Packaging Conventions disponible pour téléchargement à l’adresse [spécifications et téléchargements de licence](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> méthode pour définir un URI qui fait référence à un package à en-tête pack.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> n’est pas un URI absolu.  
  
ou 
 <paramref name="partUri" /> n’est pas une syntaxe d’URI de partie valide.  
  
ou 
 <paramref name="fragment" /> est vide ou commence par « # ».</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI du <see cref="T:System.IO.Packaging.PackagePart" /> dans le package.</param>
        <summary>Crée un URI de <see cref="T:System.IO.Packaging.PackagePart" /> mis en forme.</summary>
        <returns>URI de <see cref="T:System.IO.Packaging.PackagePart" /> mis en forme.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] d’un <xref:System.IO.Packaging.PackagePart> est toujours référencé à partir du <xref:System.IO.Packaging.Package> racine.  
  
 Retourné <xref:System.IO.Packaging.PackagePart> URI est un chemin d’accès absolu qui commence toujours par « / » et est conforme à la syntaxe définie dans le [spécification Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Le tableau suivant propose des exemples pour <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>.  
  
|`partUri`|URI du composant retourné|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> méthode pour définir des URI relatifs pour <xref:System.IO.Packaging.PackagePart> éléments.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">Écriture d’un exemple de Package</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI de <see cref="T:System.IO.Packaging.PackagePart" /> à normaliser.</param>
        <summary>Retourne la forme normalisée d'un URI de <see cref="T:System.IO.Packaging.PackagePart" /> spécifié.</summary>
        <returns>Forme normalisée de l'<paramref name="partUri" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> normalise `partUri` par pliage cas en majuscules (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) et en retournant le résultat.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> n’a pas une syntaxe <see cref="T:System.Uri" /> valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri">URI à en-tête pack à partir duquel retourner l’URI de <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Retourne l’URI interne qui pointe vers le package entier d’un URI à en-tête pack spécifié.</summary>
        <returns>URI de <see cref="T:System.IO.Packaging.Package" /> à partir du <paramref name="packUri" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant propose des exemples pour <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>.  
  
|`packUri`|URI du Package retourné|  
|---------------|--------------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|Pack://http :,, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|pack://http:,,www.proseware.com,mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|Pack://FTP :,, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|Pack://file :,, d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> n’est pas un <see cref="T:System.Uri" /> absolu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="packUri">URI à en-tête pack à partir duquel retourner l’URI de <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Retourne l’URI d’un <see cref="T:System.IO.Packaging.PackagePart" /> dans un URI à en-tête pack spécifié.</summary>
        <returns>L’URI de <see cref="T:System.IO.Packaging.PackagePart" /> dans le <paramref name="packUri" /> donné, ou <see langword="null" /> si <paramref name="packUri" /> pointe vers un package plutôt que vers un <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourné <xref:System.IO.Packaging.PackagePart> URI est relative à la racine du package et est un chemin d’accès absolu qui commence toujours par « / » et est conforme à la syntaxe définie dans le [spécification Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Le tableau suivant propose des exemples pour <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>.  
  
|`packUri`|URI du composant retourné|  
|---------------|-----------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  
|Pack://http :,, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  
|pack://http:,,www.proseware.com,mypackage.pkg|null|  
|Pack://FTP :,, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  
|Pack://file :,, d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="P:System.IO.Packaging.PackagePart.Uri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> dont l'URI du <see cref="T:System.IO.Packaging.PackageRelationship" /> associé doit être retourné.</param>
        <summary>Retourne l’[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la partie de relation associée à un <see cref="T:System.IO.Packaging.PackagePart" /> spécifié.</summary>
        <returns>URI du composant <see cref="T:System.IO.Packaging.PackageRelationship" /> associé au <see cref="T:System.IO.Packaging.PackagePart" /> identifié par <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` doit identifier soit le <xref:System.IO.Packaging.Package> (« / ») ou un <xref:System.IO.Packaging.PackagePart> qui n’est pas un <xref:System.IO.Packaging.PackageRelationship> partie.  
  
 Pour plus d’informations sur <xref:System.IO.Packaging.PackageRelationship> parties, consultez la Section 9.3 « Relations » dans la spécification Open Packaging Conventions disponible pour téléchargement à l’adresse [spécifications et les téléchargements de licence](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 [URI à en-tête pack dans WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Spécification Open Packaging Conventions](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La syntaxe de <paramref name="partUri" /> n'est pas valide pour un URI de composant de package.  
  
ou 
 <paramref name="partUri" /> est un URI absolu.  
  
ou 
 <paramref name="partUri" /> fait référence à un composant de relation.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du composant source.</param>
        <param name="targetPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du composant cible.</param>
        <summary>Retourne l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] relatif entre deux [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] de <see cref="T:System.IO.Packaging.PackagePart" /> spécifiés.</summary>
        <returns>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] relatif entre <paramref name="sourcePartUri" /> et <paramref name="targetPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant propose des exemples pour <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>.  
  
|`sourcePartUri`|`targetPartUri`|URI relatif retourné|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> ou <paramref name="targetPartUri" /> n’a pas une syntaxe <see cref="T:System.Uri" /> valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du composant de relation à partir duquel retourner le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />.</param>
        <summary>Retourne le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> à partir du <see cref="T:System.IO.Packaging.PackageRelationship" /> avec un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] spécifié.</summary>
        <returns><see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> du <see cref="T:System.IO.Packaging.PackagePart" /> à partir de la relation avec le <paramref name="relationshipPartUri" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> propriété d’un composant de relation doit identifier soit le <xref:System.IO.Packaging.PackagePart.Package%2A> (« / ») ou un <xref:System.IO.Packaging.PackagePart> qui n’est pas un <xref:System.IO.Packaging.PackageRelationship>.  
  
 Par exemple, si la partie de package » / /files/document.XAML » est le propriétaire de la source de la partie de relation » / files/_rels/document.xaml.rels », l’appel <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> avec le `relationshipPartUri` paramètre de « / files/_rels/document.xaml.rels » retourne la <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>de « / /files/document.Xaml ».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> est un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]absolu.  
  
ou 
 La syntaxe <paramref name="relationshipPartUri" /> n'est pas valide pour une <see cref="T:System.IO.Packaging.PackagePart" />.  
  
ou 
 <paramref name="relationshipPartUri" /> ne fait pas référence à un composant de relation.  
  
ou 
Le <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> de la partie de relation référence une autre partie de relation (non valide).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]à vérifier pour un composant <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
        <summary>Retourne une valeur qui indique si un URI spécifié est l’URI d’un composant <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
        <returns><see langword="true" /> si <paramref name="partUri" /> identifie un composant <see cref="T:System.IO.Packaging.PackageRelationship" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
Cette méthode n’inspecte pas le contenu de la partie ; Il est basé uniquement sur le nom.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> est un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]absolu.  
  
ou 
 <paramref name="partUri" /> n'est pas une syntaxe de <see cref="T:System.IO.Packaging.PackagePart" /> valide.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">URI du composant source, ou « / » pour désigner la racine du <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="targetUri">URI relatif vers le composant cible.</param>
        <summary>Retourne un URI de composant à partir d'un URI de composant source et d'un URI avec chemin d'accès relatif à un composant cible.</summary>
        <returns>URI du composant cible résolu entre le <paramref name="SourcePartUri" /> spécifié et les paramètres <paramref name="targetUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant propose des exemples pour <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  
  
|`sourcePartUri`|`targetUri`|URI retourné|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 L'exemple suivant illustre l'utilisation de la méthode <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  Pour obtenir un exemple complet, consultez [un exemple de Package de lecture](https://go.microsoft.com/fwlink/?LinkID=160034).  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> ou <paramref name="targetUri" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> n'est pas un URI de composant valide.  
  
ou 
 <paramref name="targetUri" /> n'est pas un URI relatif valide.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Définit le nom de schéma URI à en-tête pack “pack”.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
