<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91d8903969619d295cee4b3ddca3c886446cc128" /><Meta Name="ms.sourcegitcommit" Value="7845f124909a0999a19cc65f40feab5e75cd9b8d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65064673" /></Metadata><TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <TypeSignature Language="F#" Value="type DispatcherObject = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c6e78-101">Représente un objet qui est associé à un <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6e78-102">Seul le thread qui le <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> a été créé peut accéder le <xref:System.Windows.Threading.DispatcherObject> directement.</span><span class="sxs-lookup"><span data-stu-id="c6e78-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="c6e78-103">Pour accéder à un <xref:System.Windows.Threading.DispatcherObject> à partir d’un thread autre que le thread le <xref:System.Windows.Threading.DispatcherObject> a été créé, appelez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> sur le <xref:System.Windows.Threading.Dispatcher> le <xref:System.Windows.Threading.DispatcherObject> est associé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="c6e78-104">Les sous-classes de <xref:System.Windows.Threading.DispatcherObject> que nécessaire pour appliquer le thread sécurité pouvez le faire en appelant <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> sur toutes les méthodes publiques.</span><span class="sxs-lookup"><span data-stu-id="c6e78-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="c6e78-105">Cela garantit que le thread appelant est le thread qui le <xref:System.Windows.Threading.DispatcherObject> a été créé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="c6e78-106">Un <xref:System.Windows.Threading.DispatcherObject> ne peut pas être instancié indépendamment ; autrement dit, tous les constructeurs sont protégés.</span><span class="sxs-lookup"><span data-stu-id="c6e78-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="c6e78-107">Objets qui dérivent de <xref:System.Windows.Threading.DispatcherObject> ont une affinité de thread.</span><span class="sxs-lookup"><span data-stu-id="c6e78-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="c6e78-108">Objets qui dérivent de <xref:System.Windows.Freezable> sont libres de threads lorsqu’ils sont figés.</span><span class="sxs-lookup"><span data-stu-id="c6e78-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="c6e78-109">Pour plus d’informations, consultez la [Vue d’ensemble des objets Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c6e78-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c6e78-110">Tout membre <see langword="static" /> de ce type sont thread-safe.</span><span class="sxs-lookup"><span data-stu-id="c6e78-110">Any public <see langword="static" /> members of this type are thread safe.</span></span> <span data-ttu-id="c6e78-111">Il n'est pas garanti que les membres d'instance soient thread-safe.</span><span class="sxs-lookup"><span data-stu-id="c6e78-111">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="c6e78-112">Cet objet est accessible uniquement à partir du thread sur lequel il a été créé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-112">This object can be accessed only from the thread on which it was created.</span></span> <span data-ttu-id="c6e78-113">Tente d’accéder à d’autres threads lèvent une <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span></span> <span data-ttu-id="c6e78-114"><see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> ou <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> prennent en charge pour le marshaling de travail vers le thread approprié.</span><span class="sxs-lookup"><span data-stu-id="c6e78-114"><see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshaling work to the correct thread.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6e78-115">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcherObject.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6e78-116">Détermine si le thread appelant a accès à ce <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></summary>
        <returns><span data-ttu-id="c6e78-117"><see langword="true" /> Si le thread appelant a accès à cet objet ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-117"><see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6e78-118">Seul le thread le <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> a été créé peut accéder le <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="c6e78-119">N’importe quel thread peut vérifier s’il a accès à cette <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="c6e78-120">La différence entre <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> et <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> qui est <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> retourne une valeur booléenne qui spécifie si le thread appelant a accès à cette <xref:System.Windows.Threading.DispatcherObject> et <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> lève une exception si le thread appelant n’a pas accès à la Cela <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="c6e78-121">Appel de cette méthode est identique à l’appel <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> sur associé <xref:System.Windows.Threading.Dispatcher> objet.</span><span class="sxs-lookup"><span data-stu-id="c6e78-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6e78-122">L’exemple suivant utilise <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> pour déterminer si un thread a accès au thread qui un <xref:System.Windows.Controls.Button> a été créé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="c6e78-123">Le <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> méthode sur le <xref:System.Windows.Controls.Button> est appelée pour vérifier l’accès au thread.</span><span class="sxs-lookup"><span data-stu-id="c6e78-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="c6e78-124">Si le thread appelant a accès, le <xref:System.Windows.Controls.Button> est mis à jour en accédant simplement aux membres de la <xref:System.Windows.Controls.Button>; sinon, un délégué qui accepte un <xref:System.Windows.Controls.Button> en tant qu’argument, est publié sur le <xref:System.Windows.Threading.Dispatcher> de la <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6e78-125">Obtient le <see cref="T:System.Windows.Threading.Dispatcher" /> cela <see cref="T:System.Windows.Threading.DispatcherObject" /> est associé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span></span></summary>
        <value><span data-ttu-id="c6e78-126">Le répartiteur.</span><span class="sxs-lookup"><span data-stu-id="c6e78-126">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6e78-127">Seul le thread qui le <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> a été créé peut accéder le <xref:System.Windows.Threading.DispatcherObject> directement.</span><span class="sxs-lookup"><span data-stu-id="c6e78-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="c6e78-128">Pour accéder à un <xref:System.Windows.Threading.DispatcherObject> à partir d’un thread autre que le thread le <xref:System.Windows.Threading.DispatcherObject> a été créé, appelez <xref:System.Windows.Threading.Dispatcher.Invoke%2A> et <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> sur le <xref:System.Windows.Threading.Dispatcher> le <xref:System.Windows.Threading.DispatcherObject> est associé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcherObject.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6e78-129">Impose que le thread appelant a accès à ce <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6e78-130">Seul le thread le <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> a été créé peut accéder le <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="c6e78-131">N’importe quel thread peut vérifier s’il a accès à cette <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="c6e78-132">La différence entre <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> et <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> qui est <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> retourne une valeur booléenne qui spécifie si le thread appelant a accès à cette <xref:System.Windows.Threading.DispatcherObject> et <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> lève une exception si le thread appelant n’a pas accès à la Cela <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="c6e78-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6e78-133">L’exemple suivant utilise <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> pour déterminer si un thread a accès au thread qui un <xref:System.Windows.Controls.Button> a été créé.</span><span class="sxs-lookup"><span data-stu-id="c6e78-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="c6e78-134">Si le thread appelant n’a pas accès, un <xref:System.InvalidOperationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="c6e78-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c6e78-135">le thread appelant n’a pas accès à ce <see cref="T:System.Windows.Threading.DispatcherObject" />.</span><span class="sxs-lookup"><span data-stu-id="c6e78-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>