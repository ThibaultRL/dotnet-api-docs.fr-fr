<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="257c774275443881ba353e40f6e27c6b10dc5781" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006205" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un contrôle de menu Windows qui vous permet d’organiser de façon hiérarchique des éléments associés à des commandes et à des gestionnaires d’événements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.Menu> contrôle présente une liste des éléments qui spécifient des commandes ou des options pour une application. En général, cliquer sur un élément dans un menu ouvre un sous-menu ou entraîne l’application à exécuter une commande.  
  
 <xref:System.Windows.Controls.Menu> est un <xref:System.Windows.Controls.ItemsControl>, ce qui signifie qu’elle peut contenir une collection d’objets de tout type (par exemple, chaîne, image ou panneau). Pour plus d'informations, consultez la classe <xref:System.Windows.Controls.ItemsControl>. Le <xref:System.Windows.Controls.MenuItem> est de type le plus courant d’élément dans un <xref:System.Windows.Controls.Menu>. Un <xref:System.Windows.Controls.MenuItem> peut contenir des éléments enfants. Les éléments enfants seront affiche dans un sous-menu lorsque l’utilisateur choisit un parent <xref:System.Windows.Controls.MenuItem>.  
  
## <a name="customizing-the-menu-control"></a>Personnalisation du contrôle Menu  
 Pour appliquer les mêmes paramètres de propriété à plusieurs <xref:System.Windows.Controls.Menu> contrôles, utiliser le <xref:System.Windows.FrameworkElement.Style%2A> propriété. Vous pouvez modifier la valeur par défaut <xref:System.Windows.Controls.ControlTemplate> pour donner le contrôle une apparence unique. Pour plus d’informations sur la création d’un <xref:System.Windows.Controls.ControlTemplate>, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Pour afficher les parties et les États qui sont spécifiques à la <xref:System.Windows.Controls.Menu>, consultez [Menu Styles et modèles](~/docs/framework/wpf/controls/menu-styles-and-templates.md).  
  
 Les propriétés de dépendance pour ce contrôle peuvent être définies par le style par défaut.  Si une propriété est définie par un style par défaut, la propriété peut changer à partir de sa valeur par défaut lorsque le contrôle s’affiche dans l’application. Le style par défaut est déterminé par le thème de bureau est utilisé lors de l’exécution de l’application.  Pour plus d’informations, consultez [thèmes WPF par défaut](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053">Exemple de galerie de contrôles WPF</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.Menu" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menu.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> qui contient les données d'événement.</param>
        <summary>Appelé lorsqu’un bouton de la souris est appuyé ou relâché.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMainMenu : bool with get, set" Usage="System.Windows.Controls.Menu.IsMainMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si ce <see cref="T:System.Windows.Controls.Menu" /> reçoit une notification de l’activation du menu principal.</summary>
        <value><see langword="true" /> Si le menu reçoit une notification d’activation du menu principal ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 S’il existe plusieurs <xref:System.Windows.Controls.Menu> contrôles sur une page, <xref:System.Windows.Controls.Menu> contrôles qui ne doivent pas recevoir de notification des touches ALT ou F10 doivent définir cette propriété `false`.  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|La valeur des propriétés de métadonnées `true`|None|  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Controls.Menu.IsMainMenu%2A> propriété pour créer un <xref:System.Windows.Controls.Menu> qui ne reçoit pas de notification d’activation.  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053">Exemple de galerie de contrôles WPF</related>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMainMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.Menu.IsMainMenu" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit un approprié <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implémentation pour ce contrôle, dans le cadre de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure d’automation.</summary>
        <returns>Implémentation de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> spécifique au type.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menu.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Appelée lorsque le <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> propriété est définie sur <see langword="true" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Input.KeyEventArgs" /> qui contient les données d'événement.</param>
        <summary>Répond à la <see cref="E:System.Windows.ContentElement.KeyDown" /> événement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="menu.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Données d'événement.</param>
        <summary>Gère la <see cref="E:System.Windows.UIElement.TextInput" /> événement routé qui se produit lorsque le menu reçoit l’entrée de texte à partir de n’importe quel appareil.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette implémentation ne modifie pas l’état géré (les <xref:System.Windows.RoutedEventArgs.Handled%2A> propriété) de la <xref:System.Windows.UIElement.TextInput> données d’événement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Si vous substituez <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, toujours appeler l’implémentation de base votre <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implémentation. Faute d’appeler l’implémentation de base empêche les classes de base à partir de la gestion de l’événement avec un gestionnaire de classe, ce qui peut modifier le comportement au moment de l’exécution de la classe finale. Vous pouvez appeler l’implémentation de base avant ou après le traitement spécial, selon vos besoins.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">L’élément utilisé pour afficher l’élément spécifié.</param>
        <param name="item">L’élément à afficher.</param>
        <summary>Prépare l’élément spécifié pour afficher l’élément (item) spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Préparation de l’élément peut impliquer l’application de styles, la définition de liaisons et ainsi de suite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>