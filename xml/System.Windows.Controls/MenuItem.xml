<Type Name="MenuItem" FullName="System.Windows.Controls.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02c3d35aef6cc59ff43408bcddc03af915105b35" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65016586" /></Metadata><TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Controls.HeaderedItemsControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MenuItem extends System.Windows.Controls.HeaderedItemsControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits HeaderedItemsControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Controls::HeaderedItemsControl, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    inherit HeaderedItemsControl&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedItemsControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9ee7-101">Représente un élément sélectionnable dans un <see cref="T:System.Windows.Controls.Menu" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-101">Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-102"><xref:System.Windows.Controls.MenuItem> est un <xref:System.Windows.Controls.HeaderedItemsControl>, ce qui signifie que son en-tête et une collection d’objets peut être de n’importe quel type (par exemple, chaîne, image ou panneau).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-102"><xref:System.Windows.Controls.MenuItem> is a <xref:System.Windows.Controls.HeaderedItemsControl>, which means its header and collection of objects can be of any type (such as string, image, or panel).</span></span> <span data-ttu-id="b9ee7-103">Pour plus d'informations, consultez la classe <xref:System.Windows.Controls.HeaderedItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-103">For more information, see the <xref:System.Windows.Controls.HeaderedItemsControl> class.</span></span>  
  
 <span data-ttu-id="b9ee7-104">Un <xref:System.Windows.Controls.MenuItem> peut avoir des sous-menus.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-104">A <xref:System.Windows.Controls.MenuItem> can have submenus.</span></span> <span data-ttu-id="b9ee7-105">Le sous-menu de la <xref:System.Windows.Controls.MenuItem> se compose d’objets au sein de la <xref:System.Windows.Controls.ItemCollection> d’un <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-105">The submenu of the <xref:System.Windows.Controls.MenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemCollection> of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="b9ee7-106">Il est courant pour un <xref:System.Windows.Controls.MenuItem> pour contenir d’autres <xref:System.Windows.Controls.MenuItem> objets à créer des sous-menus imbriqués.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-106">It is common for a <xref:System.Windows.Controls.MenuItem> to contain other <xref:System.Windows.Controls.MenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="b9ee7-107">Un <xref:System.Windows.Controls.MenuItem> peut avoir plusieurs fonctions :</span><span class="sxs-lookup"><span data-stu-id="b9ee7-107">A <xref:System.Windows.Controls.MenuItem> can have one of several functions:</span></span>  
  
-   <span data-ttu-id="b9ee7-108">Il peut être sélectionné pour appeler une commande.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-108">It can be selected to invoke a command.</span></span>  
  
-   <span data-ttu-id="b9ee7-109">Il peut être un séparateur pour d’autres éléments de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-109">It can be a separator for other menu items.</span></span>  
  
-   <span data-ttu-id="b9ee7-110">Il peut être un en-tête de sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-110">It can be a header for a submenu.</span></span>  
  
-   <span data-ttu-id="b9ee7-111">Il peut être activée ou désactivée.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-111">It can be checked or unchecked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9ee7-112">Par défaut, le <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> d’un <xref:System.Windows.Controls.MenuItem> est défini sur <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-112">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.MenuItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b9ee7-113">La position horizontale par défaut d’un <xref:System.Windows.Controls.StackPanel> est <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-113">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b9ee7-114">Si vous définissez la <xref:System.Windows.FrameworkElement.Width%2A> propriété d’un <xref:System.Windows.Controls.MenuItem> via un <xref:System.Windows.Controls.StackPanel>, par défaut du panneau d’empilement est appliquée et l’élément est centré.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-114">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.MenuItem> through a <xref:System.Windows.Controls.StackPanel>, the stack panel's default is applied and the item is centered.</span></span>  
  
 <span data-ttu-id="b9ee7-115">Le <xref:System.Windows.Controls.MenuItem> gère la <xref:System.Windows.UIElement.MouseDown> événement, par conséquent, si vous attachez un gestionnaire d’événements <xref:System.Windows.UIElement.MouseDown>, votre gestionnaire ne sera jamais appelé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-115">The <xref:System.Windows.Controls.MenuItem> handles the <xref:System.Windows.UIElement.MouseDown> event, so if you attach an event handler to <xref:System.Windows.UIElement.MouseDown>, your handler will never be called.</span></span>  <span data-ttu-id="b9ee7-116">Pour ajouter votre propre gestionnaire, vous abonner à la <xref:System.Windows.UIElement.PreviewMouseDown> événement ou s’y abonner <xref:System.Windows.UIElement.MouseDown> en appelant <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> avec `handledEventsToo` défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-116">To add your own handler, subscribe to the <xref:System.Windows.UIElement.PreviewMouseDown> event or subscribe to <xref:System.Windows.UIElement.MouseDown> by calling <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-menuitem-control"></a><span data-ttu-id="b9ee7-117">Personnalisation du contrôle MenuItem</span><span class="sxs-lookup"><span data-stu-id="b9ee7-117">Customizing the MenuItem Control</span></span>  
 <span data-ttu-id="b9ee7-118">Pour appliquer les mêmes paramètres de propriété à plusieurs <xref:System.Windows.Controls.MenuItem> contrôles, utiliser le <xref:System.Windows.FrameworkElement.Style%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-118">To apply the same property settings to multiple <xref:System.Windows.Controls.MenuItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="b9ee7-119">Vous pouvez modifier la valeur par défaut <xref:System.Windows.Controls.ControlTemplate> pour donner le contrôle une apparence unique.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-119">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="b9ee7-120">Pour plus d’informations sur la création d’un <xref:System.Windows.Controls.ControlTemplate>, consultez [personnalisation de l’apparence d’un contrôle existant en créant un ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-120">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="b9ee7-121">Pour afficher les parties et les États qui sont spécifiques à la <xref:System.Windows.Controls.MenuItem>, consultez [Menu Styles et modèles](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-121">To see the parts and states that are specific to the <xref:System.Windows.Controls.MenuItem>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="b9ee7-122">Les propriétés de dépendance pour ce contrôle peuvent être définies par le style par défaut.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-122">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="b9ee7-123">Si une propriété est définie par un style par défaut, la propriété peut changer à partir de sa valeur par défaut lorsque le contrôle s’affiche dans l’application.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-123">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="b9ee7-124">Le style par défaut est déterminé par le thème de bureau est utilisé lors de l’exécution de l’application.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-124">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="b9ee7-125">Pour plus d’informations, consultez [thèmes WPF par défaut](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-125">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  

[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="b9ee7-126">L’exemple suivant crée un <xref:System.Windows.Controls.Menu> à manipuler du texte dans un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-126">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="b9ee7-127">Le <xref:System.Windows.Controls.Menu> contient <xref:System.Windows.Controls.MenuItem> objets qui utilisent le <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, et <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> propriétés et le <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, et <xref:System.Windows.Controls.MenuItem.Click> événements.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-127">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Menu" />
    <altmember cref="T:System.Windows.Controls.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9ee7-128">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-128">Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Checked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Checked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Checked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Checked;" />
      <MemberSignature Language="F#" Value="member this.Checked : System.Windows.RoutedEventHandler " Usage="member this.Checked : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-129">Se produit lorsqu'un élément de menu est activé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-129">Occurs when a menu item is checked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Checked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b9ee7-130">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="b9ee7-130">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-131">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-131">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CheckedEvent>|  
|<span data-ttu-id="b9ee7-132">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="b9ee7-132">Routing strategy</span></span>|<span data-ttu-id="b9ee7-133">Propagation</span><span class="sxs-lookup"><span data-stu-id="b9ee7-133">Bubbling</span></span>|  
|<span data-ttu-id="b9ee7-134">délégué</span><span class="sxs-lookup"><span data-stu-id="b9ee7-134">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-135">L’exemple suivant illustre la gestion du <xref:System.Windows.Controls.MenuItem.Checked> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-135">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Checked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CheckedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CheckedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-136">Identifie l'événement acheminé <see cref="E:System.Windows.Controls.MenuItem.Checked" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-136">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.RoutedEventHandler " Usage="member this.Click : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-137">Se produit lorsqu’un <see cref="T:System.Windows.Controls.MenuItem" /> est cliqué.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-137">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-138">Le <xref:System.Windows.Controls.MenuItem.Click> événement ne survient pas si le <xref:System.Windows.Controls.MenuItem> a un sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-138">The <xref:System.Windows.Controls.MenuItem.Click> event does not occur if the <xref:System.Windows.Controls.MenuItem> has a submenu.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b9ee7-139">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="b9ee7-139">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-140">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-140">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ClickEvent>|  
|<span data-ttu-id="b9ee7-141">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="b9ee7-141">Routing strategy</span></span>|<span data-ttu-id="b9ee7-142">Propagation</span><span class="sxs-lookup"><span data-stu-id="b9ee7-142">Bubbling</span></span>|  
|<span data-ttu-id="b9ee7-143">délégué</span><span class="sxs-lookup"><span data-stu-id="b9ee7-143">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-144">L’exemple suivant crée un <xref:System.Windows.Controls.Menu> à manipuler du texte dans un <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-144">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="b9ee7-145">Le <xref:System.Windows.Controls.Menu> contient <xref:System.Windows.Controls.MenuItem> objets qui utilisent le <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, et <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> propriétés et le <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, et <xref:System.Windows.Controls.MenuItem.Click> événements.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-145">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-146">Identifie l'événement acheminé <see cref="E:System.Windows.Controls.MenuItem.Click" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-146">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-147">Cet événement correspond à un clic du bouton gauche de la souris.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-147">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Controls.MenuItem.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-148">Obtient ou définit la commande associée à l’élément de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-148">Gets or sets the command associated with the menu item.</span></span></summary>
        <value><span data-ttu-id="b9ee7-149">La commande associée à la <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-149">The command associated with the <see cref="T:System.Windows.Controls.MenuItem" />.</span></span>  <span data-ttu-id="b9ee7-150">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-150">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-151">Cette propriété est utilisée pour associer une commande à un particulier <xref:System.Windows.Controls.MenuItem> instance.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-151">This property is used to associate a command with a particular <xref:System.Windows.Controls.MenuItem> instance.</span></span> <span data-ttu-id="b9ee7-152">L’exemple suivant associe le **copie** avec un <xref:System.Windows.Controls.MenuItem> et fournit automatiquement le texte de mouvement d’entrée **Ctrl + C**.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-152">The following example associates the **Copy** command with a <xref:System.Windows.Controls.MenuItem> and automatically supplies the input gesture text **Ctrl+C**.</span></span> <span data-ttu-id="b9ee7-153">L’exemple ne définit pas le <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> propriété, mais la <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> pour le <xref:System.Windows.Controls.MenuItem> est « Copie » en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-153">The example does not set the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property, but the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> for the <xref:System.Windows.Controls.MenuItem> is "Copy" at run time.</span></span>  <span data-ttu-id="b9ee7-154">Vous pouvez spécifier un autre en-tête pour le <xref:System.Windows.Controls.MenuItem> si vous souhaitez qu’il soit différent.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-154">You can specify another header for the <xref:System.Windows.Controls.MenuItem> if you want it to be different.</span></span> <span data-ttu-id="b9ee7-155">Pour plus d’informations sur la liaison à la commande souhaitée, consultez [ajouter une commande à un MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-155">For information on how to bind to the desired command, see [Add a Command to a MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemcommand)]  
  
 <span data-ttu-id="b9ee7-156">Une commande est déclenchée quand un <xref:System.Windows.Controls.MenuItem> un clic sur - juste après le <xref:System.Windows.Controls.MenuItem.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-156">A command is raised when a <xref:System.Windows.Controls.MenuItem> is clicked - just after the <xref:System.Windows.Controls.MenuItem.Click> event.</span></span> <span data-ttu-id="b9ee7-157">La commande est déclenchée sur l’élément selon les priorités suivantes :</span><span class="sxs-lookup"><span data-stu-id="b9ee7-157">The command is raised on the element according to the following priorities:</span></span>  
  
1.  <span data-ttu-id="b9ee7-158">Si <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> est défini sur le <xref:System.Windows.Controls.MenuItem>, cet élément est utilisé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-158">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is set on the <xref:System.Windows.Controls.MenuItem>, that element is used.</span></span>  
  
2.  <span data-ttu-id="b9ee7-159">Le <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> d’un <xref:System.Windows.Controls.ContextMenu> qui contient la <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-159">The <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> of a <xref:System.Windows.Controls.ContextMenu> that contains the <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
3.  <span data-ttu-id="b9ee7-160">La cible de focus de la fenêtre principale qui contient un <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-160">The focus target of the main window that contains a <xref:System.Windows.Controls.Menu>.</span></span>  
  
4.  <span data-ttu-id="b9ee7-161">Le <xref:System.Windows.Controls.MenuItem> que l’utilisateur a cliqué.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-161">The <xref:System.Windows.Controls.MenuItem> that was clicked.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-162">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-162">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-163">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-163">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandProperty>|  
|<span data-ttu-id="b9ee7-164">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-164">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-165">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-165">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-166">Les exemples suivants montrent comment utiliser la propriété de commande pour associer des commandes à des éléments de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-166">The following examples show how to use the command property to associate commands with menu items.</span></span>  
  
 [!code-xaml[MenuEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[MenuEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-167">Obtient ou définit le paramètre à passer à la <see cref="P:System.Windows.Controls.MenuItem.Command" /> propriété d’un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-167">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <value><span data-ttu-id="b9ee7-168">Le paramètre à passer à la <see cref="P:System.Windows.Controls.MenuItem.Command" /> propriété d’un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-168">The parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span> <span data-ttu-id="b9ee7-169">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-169">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-170">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-171">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-171">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandParameterProperty>|  
|<span data-ttu-id="b9ee7-172">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-173">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-173">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-174">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-174">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-175">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.Command" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-175">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-176">Obtient ou définit l’élément cible sur lequel déclencher la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-176">Gets or sets the target element on which to raise the specified command.</span></span></summary>
        <value><span data-ttu-id="b9ee7-177">L’élément sur lequel déclencher la commande spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-177">The element on which to raise the specified command.</span></span> <span data-ttu-id="b9ee7-178">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-178">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-179">Le <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> propriété spécifie l’élément où la commande se produit.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-179">The <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property specifies the element where the command occurs.</span></span> <span data-ttu-id="b9ee7-180">Si <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> n’est pas défini, l’élément qui a le focus clavier reçoit la commande.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-180">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus will receive the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-181">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-182">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-182">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandTargetProperty>|  
|<span data-ttu-id="b9ee7-183">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-184">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-184">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-185">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-185">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="menuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9ee7-186">Crée ou identifie l’élément utilisé pour afficher un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-186">Creates or identifies the element used to display a specified item.</span></span></summary>
        <returns><span data-ttu-id="b9ee7-187">L’élément utilisé pour afficher un élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-187">The element used to display a specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-188">Détermine si le contrôle prend en charge le défilement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-188">Gets whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="b9ee7-189"><see langword="true" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-189"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-190">Si le contrôle a un <xref:System.Windows.Controls.ScrollViewer> dans son style et a un comportement de défilement clavier personnalisé <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> doit retourner `true`.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-190">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public object Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Icon { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : obj with get, set" Usage="System.Windows.Controls.MenuItem.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-191">Obtient ou définit l’icône qui apparaît dans un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-191">Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <value><span data-ttu-id="b9ee7-192">L’icône qui apparaît dans un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-192">The icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span> <span data-ttu-id="b9ee7-193">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-193">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-194">Nombreux <xref:System.Windows.Controls.Menu> contrôles n’ont pas seulement du texte dans le <xref:System.Windows.Controls.MenuItem> éléments.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-194">Many <xref:System.Windows.Controls.Menu> controls have more than just text in the <xref:System.Windows.Controls.MenuItem> elements.</span></span> <span data-ttu-id="b9ee7-195">Il existe souvent icônes, des coches, des accélérateurs et des flèches pour indiquer les sous-menus.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-195">Often there are icons, check marks, accelerators, and arrows to indicate submenus.</span></span>  
  
<a name="dependencyPropertyInfo_Icon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-196">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-196">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-197">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-197">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IconProperty>|  
|<span data-ttu-id="b9ee7-198">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-198">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-199">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-199">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-200">L’exemple suivant crée un élément de menu avec une icône.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-200">The following example creates a menu item with an icon.</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemIcon](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemicon)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-201">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-201">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureText">
      <MemberSignature Language="C#" Value="public string InputGestureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputGestureText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberSignature Language="VB.NET" Value="Public Property InputGestureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputGestureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputGestureText : string with get, set" Usage="System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-202">Définit le texte décrivant un mouvement d’entrée qui appelle la commande associée à l’élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-202">Sets the text describing an input gesture that will call the command tied to the specified item.</span></span></summary>
        <value><span data-ttu-id="b9ee7-203">Le texte qui décrit le mouvement d’entrée, tel que **Ctrl + C** pour le **copie** commande.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-203">The text that describes the input gesture, such as **Ctrl+C** for the **Copy** command.</span></span> <span data-ttu-id="b9ee7-204">La valeur par défaut est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="b9ee7-204">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-205">Cette propriété n’associe pas le mouvement d’entrée avec l’élément de menu ; Il ajoute simplement du texte à l’élément de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-205">This property does not associate the input gesture with the menu item; it simply adds text to the menu item.</span></span> <span data-ttu-id="b9ee7-206">L’application doit gérer l’entrée de l’utilisateur pour exécuter l’action.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-206">The application must handle the user's input to carry out the action.</span></span>  <span data-ttu-id="b9ee7-207">Pour plus d’informations sur la façon d’associer une commande à un élément de menu, consultez <xref:System.Windows.Controls.MenuItem.Command%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-207">For information on how to associate a command with a menu item, see <xref:System.Windows.Controls.MenuItem.Command%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_InputGestureText"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-208">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-208">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-209">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-209">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>|  
|<span data-ttu-id="b9ee7-210">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-210">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-211">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-211">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-212">Les exemples suivants montrent comment utiliser le <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> propriété à attribuer le texte des raccourcis clavier aux éléments de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-212">The following examples show how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcuts text to menu items.</span></span>  
  
 [!code-xaml[MenuEvent#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)]  
  
 [!code-csharp[MenuEvent#7](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)"><span data-ttu-id="b9ee7-213">Ajouter une commande à un MenuItem</span><span class="sxs-lookup"><span data-stu-id="b9ee7-213">Add a Command to a MenuItem</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputGestureTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputGestureTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputGestureTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputGestureTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputGestureTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputGestureTextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-214">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-214">Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckable">
      <MemberSignature Language="C#" Value="public bool IsCheckable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCheckable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCheckable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCheckable : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-215">Obtient une valeur qui indique si un <see cref="T:System.Windows.Controls.MenuItem" /> peut être vérifiée.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-215">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</span></span></summary>
        <value><span data-ttu-id="b9ee7-216"><see langword="true" /> Si l’élément de menu peut être sélectionné ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-216"><see langword="true" /> if the menu item can be checked; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="b9ee7-217">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-217">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsCheckable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-218">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-218">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-219">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-219">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckableProperty>|  
|<span data-ttu-id="b9ee7-220">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-220">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-221">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-221">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-222">L’exemple suivant montre comment rendre <xref:System.Windows.Controls.MenuItem> les contrôles qui sont vérifiées quand un utilisateur clique dessus.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-222">The following example shows how to make <xref:System.Windows.Controls.MenuItem> controls that are checked when a user clicks them.</span></span>  
  
 [!code-xaml[MenuEvent#11](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCheckableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-223">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-223">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public bool IsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property IsChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsChecked : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-224">Obtient ou définit une valeur qui indique si le <see cref="T:System.Windows.Controls.MenuItem" /> est activée.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-224">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</span></span></summary>
        <value><span data-ttu-id="b9ee7-225"><see langword="true" /> Si un <see cref="T:System.Windows.Controls.MenuItem" /> est activée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-225"><see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is checked; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-226">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-226">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsChecked"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-227">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-227">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-228">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-228">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckedProperty>|  
|<span data-ttu-id="b9ee7-229">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-229">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-230"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="b9ee7-230"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-231">L’exemple suivant montre comment la <xref:System.Windows.Controls.MenuItem.IsChecked%2A> propriété peut être utilisée pour placer une coche devant un élément de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-231">The following example shows how the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property can be used to place a check mark in front of a menu item.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#6)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCheckedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-232">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.IsChecked" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-232">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-233">Obtient une valeur qui indique si le <see cref="P:System.Windows.ContentElement.IsEnabled" /> est propriété <see langword="true" /> pour l’élément de menu actuel.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-233">Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</span></span></summary>
        <value><span data-ttu-id="b9ee7-234"><see langword="true" /> Si le <see cref="T:System.Windows.Controls.MenuItem" /> peut être sélectionné ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-234"><see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighted : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-235">Obtient une valeur qui indique si un <see cref="T:System.Windows.Controls.MenuItem" /> est mis en surbrillance.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-235">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</span></span></summary>
        <value><span data-ttu-id="b9ee7-236"><see langword="true" /> Si un <see cref="T:System.Windows.Controls.MenuItem" /> est mis en surbrillance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-236"><see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-237">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-237">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-238">En commençant par la version du .NET Framework 3.0 Service Pack 1, le <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> propriété a un accesseur Set protégé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-238">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> property has a protected setter.</span></span> <span data-ttu-id="b9ee7-239">Pour utiliser cette fonctionnalité, votre application doit cibler le .NET Framework version 3.5.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-239">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="b9ee7-240">Pour plus d’informations, consultez [Versions et dépendances du .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-240">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-241">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-242">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-242">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>|  
|<span data-ttu-id="b9ee7-243">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-243">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-244">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-244">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-245">L’exemple suivant montre comment déterminer si un élément de menu est mise en surbrillance.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-245">The following example shows how to determine whether a menu item is highlighted.</span></span>  
  
 [!code-csharp[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#menuitemishighlighted)]
 [!code-vb[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#menuitemishighlighted)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-246">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-246">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="menuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b9ee7-247">Élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-247">Specified item.</span></span></param>
        <summary><span data-ttu-id="b9ee7-248">Détermine si l’élément spécifié est (ou est susceptible d’être) son propre <c>ItemContainer</c>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-248">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span></span></summary>
        <returns><span data-ttu-id="b9ee7-249"><see langword="true" /> si l’élément est son propre <c>ItemContainer</c> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-249"><see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPressed : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-250">Obtient une valeur qui indique si un <see cref="T:System.Windows.Controls.MenuItem" /> est enfoncé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-250">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</span></span></summary>
        <value><span data-ttu-id="b9ee7-251"><see langword="true" /> Si un <see cref="T:System.Windows.Controls.MenuItem" /> est enfoncé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-251"><see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-252">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-252">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-253">En commençant par la version du .NET Framework 3.0 Service Pack 1, le <xref:System.Windows.Controls.MenuItem.IsPressed%2A> propriété a un accesseur Set protégé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-253">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property has a protected setter.</span></span> <span data-ttu-id="b9ee7-254">Pour utiliser cette fonctionnalité, votre application doit cibler le .NET Framework version 3.5.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-254">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="b9ee7-255">Pour plus d’informations, consultez [Versions et dépendances du .NET Framework](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-255">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-256">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-256">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-257">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-257">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsPressedProperty>|  
|<span data-ttu-id="b9ee7-258">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-258">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-259">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-259">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-260">L’exemple suivant montre comment utiliser le <xref:System.Windows.Controls.MenuItem.IsPressed%2A> propriété dans un style d’élément de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-260">The following example shows how to use the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property in a menu item style.</span></span> <span data-ttu-id="b9ee7-261">Lorsque l’élément de menu est activé, le style de son premier plan, la taille de texte et la modification du style texte.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-261">When the menu item is pressed, the style of its foreground, text size, and text style change.</span></span>  
  
 [!code-xaml[MenuItemsStyle_snip#MenuItemsIsPressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemsStyle_snip/CSharp/MyApp.xaml#menuitemsispressed)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-262">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.IsPressed" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-262">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpen">
      <MemberSignature Language="C#" Value="public bool IsSubmenuOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubmenuOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubmenuOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubmenuOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSubmenuOpen : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-263">Obtient ou définit une valeur qui indique si le sous-menu de la <see cref="T:System.Windows.Controls.MenuItem" /> est ouvert.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-263">Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</span></span></summary>
        <value><span data-ttu-id="b9ee7-264"><see langword="true" /> Si le sous-menu de la <see cref="T:System.Windows.Controls.MenuItem" /> est ouvert ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-264"><see langword="true" /> if the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-265">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-265">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-266">Lorsque <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> a la valeur `true`, capture de la souris est définie le <xref:System.Windows.Controls.MenuItem> et sa sous-arborescence.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-266">When <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.MenuItem> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsSubmenuOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-267">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-267">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-268">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-268">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>|  
|<span data-ttu-id="b9ee7-269">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-269">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-270">L’exemple suivant montre comment ouvrir un sous-menu d’un <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-270">The following example shows how to open a submenu of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="b9ee7-271">Dans cet exemple, le <xref:System.Windows.Controls.MenuItem> appelé `fileMenu` contient un <xref:System.Windows.Controls.MenuItem> appelée `recentFiles` qui a un sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-271">In this example, the <xref:System.Windows.Controls.MenuItem> called `fileMenu` contains a <xref:System.Windows.Controls.MenuItem> called `recentFiles` that has a submenu.</span></span> <span data-ttu-id="b9ee7-272">Lorsque `fileMenu` est ouvert, le <xref:System.Windows.Controls.MenuItem.SubmenuOpened> événement est déclenché et le `FileMenu_Opened` Gestionnaire d’événements ouvre le sous-menu de `recentFiles`.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-272">When `fileMenu` is opened, the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event is raised and the `FileMenu_Opened` event handler opens the submenu of `recentFiles`.</span></span>  
  
 [!code-xaml[MenuItems_snip#IsSubMenuOpenMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#issubmenuopenmenu)]  
  
 [!code-csharp[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#issubmenuopen)]
 [!code-vb[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#issubmenuopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSubmenuOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSubmenuOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSubmenuOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSubmenuOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSubmenuOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-273">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-273">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimation">
      <MemberSignature Language="C#" Value="public bool IsSuspendingPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuspendingPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSuspendingPopupAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSuspendingPopupAnimation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSuspendingPopupAnimation : bool" Usage="System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-274">Détermine si un menu interrompt les animations sur son <see cref="T:System.Windows.Controls.Primitives.Popup" /> contrôle.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-274">Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <value><span data-ttu-id="b9ee7-275"><see langword="true" /> Si le menu doit interrompre les animations sur le menu contextuel ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-275"><see langword="true" /> if the menu should suspend animations on its popup; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-276">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-276">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-277">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-277">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-278">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-278">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>|  
|<span data-ttu-id="b9ee7-279">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-279">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-280">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-280">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSuspendingPopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSuspendingPopupAnimationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-281">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-281">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerTemplateSelector : System.Windows.Controls.ItemContainerTemplateSelector with get, set" Usage="System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-282">Obtient ou définit la logique personnalisée permettant de choisir un modèle utilisé pour afficher chaque élément.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-282">Gets or sets the custom logic for choosing a template used to display each item.</span></span></summary>
        <value><span data-ttu-id="b9ee7-283">Un objet personnalisé qui fournit la logique et retourne un conteneur d’éléments.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-283">A custom object that provides logic and returns an item container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-284">Utilisez un <xref:System.Windows.Controls.ItemContainerTemplateSelector> choisir différents conteneurs d’éléments si les éléments de votre collection sont du même type et vous devez fournir une logique personnalisée pour choisir le conteneur d’éléments.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-284">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-285">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-285">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-286">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-286">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="b9ee7-287">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-287">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-288">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-288">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-289">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-289">Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="menuItem.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-290">Données d’événement pour l’événement <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-290">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-291">Répond lorsque la <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> pour ce contrôle est appelé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-291">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="menuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9ee7-292">Appelée lorsque l’arborescence du modèle est généré.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-292">Called when the template's tree is generated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnChecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChecked : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnChecked : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-293">Données d’événement pour l’événement <see cref="E:System.Windows.Controls.MenuItem.Checked" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-293">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-294">Appelée lorsque le <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> propriété devient <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-294">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />.</span></span> <span data-ttu-id="b9ee7-295">Cette méthode déclenche la <see cref="E:System.Windows.Controls.MenuItem.Checked" /> événement routé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-295">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-296">Le contrôle déclenche le <xref:System.Windows.Controls.MenuItem.Checked> événement en appelant <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-296">The control raises the <xref:System.Windows.Controls.MenuItem.Checked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="b9ee7-297">Pour plus d’informations, consultez [vue d’ensemble des événements routés](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-297">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9ee7-298">Lors de la substitution <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-298">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberSignature Language="F#" Value="abstract member OnClick : unit -&gt; unit&#xA;override this.OnClick : unit -&gt; unit" Usage="menuItem.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9ee7-299">Appelé lorsqu’un <see cref="T:System.Windows.Controls.MenuItem" /> cliqué et déclenche une <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-299">Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-300">Si vous héritez de <xref:System.Windows.Controls.MenuItem>, veillez à appeler la classe de base pour obtenir le comportement suivant.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-300">If you inherit from <xref:System.Windows.Controls.MenuItem>, be sure to call the base class to get the following behavior.</span></span>  
  
-   <span data-ttu-id="b9ee7-301">Activation/désactivation de la <xref:System.Windows.Controls.MenuItem.IsChecked%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-301">Toggling of the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property.</span></span>  
  
-   <span data-ttu-id="b9ee7-302">Concentrer définie sur l’élément de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-302">Focus being set to the menu item.</span></span>  
  
-   <span data-ttu-id="b9ee7-303">Événement d’appel d’Automation.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-303">Automation invoke event.</span></span>  
  
-   <span data-ttu-id="b9ee7-304">Événement<xref:System.Windows.Controls.MenuItem.Click> .</span><span class="sxs-lookup"><span data-stu-id="b9ee7-304"><xref:System.Windows.Controls.MenuItem.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menuItem.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9ee7-305">Fournit un approprié <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implémentation pour ce contrôle, dans le cadre de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure d’automation.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-305">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span></span></summary>
        <returns><span data-ttu-id="b9ee7-306">Un <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> pour ce <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-306">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="menuItem.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-307">Données d’événement pour l’événement <see cref="E:System.Windows.UIElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-307">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-308">Annonce que le focus clavier sur cet élément.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-308">Announces that the keyboard is focused on this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menuItem.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-309">Données d’événement pour l’événement <see cref="E:System.Windows.FrameworkElement.Initialized" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-309">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-310">Appelée lorsque le <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> propriété est définie sur <see langword="true" /> et déclenche une <see cref="E:System.Windows.FrameworkElement.Initialized" /> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-310">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="menuItem.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-311">Données d’événement pour l’événement <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-311">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-312">Appelé lorsque le focus n’est plus sur ou dans un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-312">Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="menuItem.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-313">Données d’événement pour l’événement <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-313">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-314">Appelé quand la propriété <see cref="P:System.Windows.Controls.ItemsControl.Items" /> change.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-314">Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-315">Données d’événement pour l’événement <see cref="E:System.Windows.UIElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-315">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-316">Répond à la <see cref="E:System.Windows.UIElement.KeyDown" /> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-316">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-317">Données d’événement pour l’événement <see cref="E:System.Windows.Input.Mouse.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-317">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-318">Appelée chaque fois que la souris entre dans un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-318">Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuItem.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-319">Données d’événement pour l’événement <see cref="E:System.Windows.Input.Mouse.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-319">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-320">Appelée chaque fois que la souris quitte un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-320">Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-321">Données d’événement pour l’événement <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-321">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-322">Appelé lorsque le bouton gauche de la souris est enfoncé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-322">Called when the left mouse button is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-323">Données d’événement pour l’événement <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-323">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-324">Appelé lorsque le bouton gauche de la souris est relâché.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-324">Called when the left mouse button is released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuItem.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-325">Données d’événement pour l’événement <see cref="E:System.Windows.Input.Mouse.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-325">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-326">Appelée lorsque la souris est placée sur un élément de menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-326">Called when the mouse is moved over a menu item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-327">Données d’événement pour l’événement <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-327">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-328">Appelé lorsque le bouton droit de la souris est enfoncé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-328">Called when the right mouse button is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-329">Données d’événement pour l’événement <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-329">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-330">Appelé lorsque le bouton droit de la souris est relâché.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-330">Called when the right mouse button is released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSubmenuClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSubmenuClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnSubmenuClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-331">Données d’événement pour l’événement <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-331">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-332">Appelée lorsque le sous-menu d’un <see cref="T:System.Windows.Controls.MenuItem" /> est fermé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-332">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9ee7-333">Cet exemple montre comment utiliser le <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-333">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSubmenuOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSubmenuOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnSubmenuOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-334">Données d’événement pour l’événement <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-334">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-335">Appelée lorsque le sous-menu d’un <see cref="T:System.Windows.Controls.MenuItem" /> est ouvert.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-335">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9ee7-336">Cet exemple montre comment utiliser le <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-336">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnchecked">
      <MemberSignature Language="C#" Value="protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnchecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnchecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnchecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnchecked : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnUnchecked : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnUnchecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9ee7-337">Données d’événement pour l’événement <see cref="E:System.Windows.Controls.MenuItem.Unchecked" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-337">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</span></span></param>
        <summary><span data-ttu-id="b9ee7-338">Appelée lorsque le <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> propriété devient <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-338">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-339">Cette méthode déclenche la <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> événement routé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-339">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-340">Le contrôle déclenche le <xref:System.Windows.Controls.MenuItem.Unchecked> événement en appelant <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-340">The control raises the <xref:System.Windows.Controls.MenuItem.Unchecked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="b9ee7-341">Pour plus d’informations, consultez [vue d’ensemble des événements routés](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-341">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b9ee7-342">Lors de la substitution <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-342">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="menuItem.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="b9ee7-343">Ancienne valeur du parent de l’élément visuel, ou null si l’élément visuel n’a pas de parent.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-343">Old value of the parent of the visual, or null if the visual did not have a parent.</span></span></param>
        <summary><span data-ttu-id="b9ee7-344">Appelée lorsque le parent de l’élément visuel <see cref="T:System.Windows.Controls.MenuItem" /> modifications.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-344">Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="b9ee7-345">Élément utilisé pour afficher l’élément (item) spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-345">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="b9ee7-346">Élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-346">Specified item.</span></span></param>
        <summary><span data-ttu-id="b9ee7-347">Prépare l’élément spécifié pour afficher l’élément (item) spécifié.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-347">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-348">Préparation de l’élément peut impliquer l’application de styles, la définition de liaisons et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-348">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MenuItemRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MenuItemRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MenuItemRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MenuItemRole Role { System::Windows::Controls::MenuItemRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Controls.MenuItemRole" Usage="System.Windows.Controls.MenuItem.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MenuItemRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-349">Obtient une valeur qui indique le rôle d’un <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-349">Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <value><span data-ttu-id="b9ee7-350">Une des valeurs de <see cref="T:System.Windows.Controls.MenuItemRole" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-350">One of the <see cref="T:System.Windows.Controls.MenuItemRole" /> values.</span></span> <span data-ttu-id="b9ee7-351">La valeur par défaut est <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-351">The default is <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-352">La valeur de <xref:System.Windows.Controls.MenuItem.Role%2A> dépend de la relation à la <xref:System.Windows.Controls.Menu> et d’autres <xref:System.Windows.Controls.MenuItem> objets.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-352">The value of <xref:System.Windows.Controls.MenuItem.Role%2A> depends on the relationship to the <xref:System.Windows.Controls.Menu> and other <xref:System.Windows.Controls.MenuItem> objects.</span></span>  
  
<a name="dependencyPropertyInfo_Role"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-353">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-353">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-354">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-354">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.RoleProperty>|  
|<span data-ttu-id="b9ee7-355">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-355">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-356">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-356">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RoleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RoleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RoleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RoleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RoleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-357">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.Role" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-357">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SeparatorStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SeparatorStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeparatorStyleKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SeparatorStyleKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyleKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-358">Obtient la clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est un <see cref="T:System.Windows.Controls.Separator" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-358">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span></span></summary>
        <value><span data-ttu-id="b9ee7-359">La clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est un <see cref="T:System.Windows.Controls.Separator" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-359">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-360">Cette propriété permet de modifier le style d’un <xref:System.Windows.Controls.Separator> dans un menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-360">Use this property to change the style of a <xref:System.Windows.Controls.Separator> in a menu.</span></span>  
  
<a name="xamlAttributeUsage_SeparatorStyleKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9ee7-361">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="b9ee7-361">XAML Attribute Usage</span></span>  
 <span data-ttu-id="b9ee7-362"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="b9ee7-362"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-363">L’exemple suivant montre comment utiliser cette propriété pour style un <xref:System.Windows.Controls.Separator> dans un <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-363">The following example shows how to use this property to style a <xref:System.Windows.Controls.Separator> in a <xref:System.Windows.Controls.Menu>.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms749214(v=vs.90)"><span data-ttu-id="b9ee7-364">Style d’un séparateur utilisé comme un élément de Menu</span><span class="sxs-lookup"><span data-stu-id="b9ee7-364">Style a Separator Used as a Menu Item</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="menuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="b9ee7-365">Conteneur auquel le style sera appliqué.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-365">Container to which the style will be applied.</span></span></param>
        <param name="item"><span data-ttu-id="b9ee7-366">Élément auquel appartient le conteneur.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-366">Item to which the container belongs.</span></span></param>
        <summary><span data-ttu-id="b9ee7-367">Utilisé pour déterminer s’il faut appliquer un style au conteneur d’élément.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-367">Used to determine whether to apply a style to the item container.</span></span></summary>
        <returns><span data-ttu-id="b9ee7-368"><see langword="true" /> Si le <see cref="T:System.Windows.Controls.MenuItem" /> n’est pas un <see cref="T:System.Windows.Controls.Separator" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-368"><see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClick">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnClick { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpenOnClick : bool with get, set" Usage="System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-369">Obtient ou définit une valeur qui indique que le sous-menu dans lequel cet <see cref="T:System.Windows.Controls.MenuItem" /> se trouve ne doit pas fermer lorsque cet élément est activé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-369">Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</span></span></summary>
        <value><span data-ttu-id="b9ee7-370"><see langword="true" /> Si le sous-menu dans lequel cet <see cref="T:System.Windows.Controls.MenuItem" /> se trouve ne doit pas fermer lorsque cet élément est cliqué dessus ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-370"><see langword="true" /> if the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-371">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-371">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnClick"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-372">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-372">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-373">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-373">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>|  
|<span data-ttu-id="b9ee7-374">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-374">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-375">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-375">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-376">L’exemple suivant utilise le <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> propriété pour créer un élément dans un sous-menu ne ferme pas lorsque l’élément est activé.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-376">The following example uses the <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> property to create an item in a submenu that does not close when the item is clicked.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuStaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenustaysopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClickProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnClickProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnClickProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnClickProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnClickProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenOnClickProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-377">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-377">Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuClosed;" />
      <MemberSignature Language="F#" Value="member this.SubmenuClosed : System.Windows.RoutedEventHandler " Usage="member this.SubmenuClosed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-378">Se produit lorsque l’état de la <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> modifications apportées aux propriétés <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-378">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuClosed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b9ee7-379">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="b9ee7-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-380">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-380">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>|  
|<span data-ttu-id="b9ee7-381">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="b9ee7-381">Routing strategy</span></span>|<span data-ttu-id="b9ee7-382">Propagation</span><span class="sxs-lookup"><span data-stu-id="b9ee7-382">Bubbling</span></span>|  
|<span data-ttu-id="b9ee7-383">délégué</span><span class="sxs-lookup"><span data-stu-id="b9ee7-383">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-384">Les exemples suivants montrent les appeler et gérer le <xref:System.Windows.Controls.MenuItem.SubmenuClosed> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-384">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuClosed> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SubmenuClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-385">Identifie l'événement acheminé <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-385">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubmenuHeaderTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-386">Obtient la clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est l’en-tête d’un sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-386">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span></span></summary>
        <value><span data-ttu-id="b9ee7-387">La clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est l’en-tête d’un sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-387">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-388">Cette propriété permet de modifier le style d’un <xref:System.Windows.Controls.MenuItem> dont <xref:System.Windows.Controls.MenuItem.Role%2A> propriété est définie sur <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-388">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9ee7-389">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="b9ee7-389">XAML Attribute Usage</span></span>  
 <span data-ttu-id="b9ee7-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="b9ee7-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubmenuItemTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-391">Obtient la clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est un sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-391">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span></span></summary>
        <value><span data-ttu-id="b9ee7-392">La clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est un sous-menu.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-392">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-393">Cette propriété permet de modifier le style d’un <xref:System.Windows.Controls.MenuItem> dont <xref:System.Windows.Controls.MenuItem.Role%2A> propriété est définie sur <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-393">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9ee7-394">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="b9ee7-394">XAML Attribute Usage</span></span>  
 <span data-ttu-id="b9ee7-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="b9ee7-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuOpened;" />
      <MemberSignature Language="F#" Value="member this.SubmenuOpened : System.Windows.RoutedEventHandler " Usage="member this.SubmenuOpened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-396">Se produit lorsque l’état de la <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> modifications apportées aux propriétés <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-396">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuOpened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b9ee7-397">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="b9ee7-397">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-398">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-398">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>|  
|<span data-ttu-id="b9ee7-399">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="b9ee7-399">Routing strategy</span></span>|<span data-ttu-id="b9ee7-400">Propagation</span><span class="sxs-lookup"><span data-stu-id="b9ee7-400">Bubbling</span></span>|  
|<span data-ttu-id="b9ee7-401">délégué</span><span class="sxs-lookup"><span data-stu-id="b9ee7-401">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-402">Les exemples suivants montrent les appeler et gérer le <xref:System.Windows.Controls.MenuItem.SubmenuOpened> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-402">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuOpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SubmenuOpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-403">Identifie l'événement acheminé <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-403">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelHeaderTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-404">Obtient la clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est l’en-tête d’un menu de niveau supérieur.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-404">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span></span></summary>
        <value><span data-ttu-id="b9ee7-405">La clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsque le <see cref="T:System.Windows.Controls.MenuItem" /> est l’en-tête d’un menu de niveau supérieur.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-405">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-406">Cette propriété permet de modifier le style d’un <xref:System.Windows.Controls.MenuItem> dont <xref:System.Windows.Controls.MenuItem.Role%2A> propriété est définie sur <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-406">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9ee7-407">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="b9ee7-407">XAML Attribute Usage</span></span>  
 <span data-ttu-id="b9ee7-408"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="b9ee7-408"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelItemTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-409">Obtient la clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsqu’il se trouve un niveau supérieur <see cref="T:System.Windows.Controls.MenuItem" /> qui peut appeler des commandes.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-409">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span></span></summary>
        <value><span data-ttu-id="b9ee7-410">La clé de ressource d’un style appliqué à un <see cref="T:System.Windows.Controls.MenuItem" /> lorsqu’il se trouve un niveau supérieur <see cref="T:System.Windows.Controls.MenuItem" /> qui peut appeler des commandes.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-410">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-411">Cette propriété permet de modifier le style d’un <xref:System.Windows.Controls.MenuItem> dont <xref:System.Windows.Controls.MenuItem.Role%2A> propriété est définie sur <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-411">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9ee7-412">Utilisation d'attributs XAML</span><span class="sxs-lookup"><span data-stu-id="b9ee7-412">XAML Attribute Usage</span></span>  
 <span data-ttu-id="b9ee7-413"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="b9ee7-413"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unchecked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unchecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unchecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Unchecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unchecked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unchecked;" />
      <MemberSignature Language="F#" Value="member this.Unchecked : System.Windows.RoutedEventHandler " Usage="member this.Unchecked : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-414">Se produit lorsqu’un <see cref="T:System.Windows.Controls.MenuItem" /> est désactivée.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-414">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Unchecked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b9ee7-415">Informations sur les événements acheminés</span><span class="sxs-lookup"><span data-stu-id="b9ee7-415">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-416">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-416">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UncheckedEvent>|  
|<span data-ttu-id="b9ee7-417">Stratégie de routage</span><span class="sxs-lookup"><span data-stu-id="b9ee7-417">Routing strategy</span></span>|<span data-ttu-id="b9ee7-418">Propagation</span><span class="sxs-lookup"><span data-stu-id="b9ee7-418">Bubbling</span></span>|  
|<span data-ttu-id="b9ee7-419">délégué</span><span class="sxs-lookup"><span data-stu-id="b9ee7-419">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b9ee7-420">L’exemple suivant illustre la gestion du <xref:System.Windows.Controls.MenuItem.Unchecked> événement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-420">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Unchecked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UncheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UncheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UncheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UncheckedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable UncheckedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-421">Identifie l'événement acheminé <see cref="E:System.Windows.Controls.MenuItem.Unchecked" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-421">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesItemContainerTemplate : bool with get, set" Usage="System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-422">Obtient ou définit une valeur qui indique si le menu sélectionne différents conteneurs d’éléments, selon le type de l’élément dans la collection sous-jacente ou heuristique.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-422">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span></span></summary>
        <value><span data-ttu-id="b9ee7-423"><see langword="true" /> le menu sélectionne différents conteneurs d’éléments ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-423"><see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="b9ee7-424">La valeur par défaut enregistrée est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-424">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="b9ee7-425">Pour plus d’informations sur ce qui peut influencer la valeur, consultez [priorité de valeur de propriété de dépendance](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="b9ee7-425">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9ee7-426">Cette propriété est utile si vous souhaitez créer un menu en le liant à une collection.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-426">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="b9ee7-427">Le conteneur de l’élément est l’élément d’interface utilisateur qui affiche l’objet d’un regroupement.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-427">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="b9ee7-428">Si vous souhaitez lier à une collection pour créer un menu contenant <xref:System.Windows.Controls.MenuItem> objets et <xref:System.Windows.Controls.Separator> objets, définir le <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> propriété sur true et créer un <xref:System.Windows.Controls.ItemContainerTemplate> pour chaque type d’objet dans votre collection.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-428">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="b9ee7-429">Chaque <xref:System.Windows.Controls.ItemContainerTemplate> doit contenir un <xref:System.Windows.Controls.MenuItem> ou un <xref:System.Windows.Controls.Separator>.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-429">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9ee7-430">Informations sur les propriétés de dépendance</span><span class="sxs-lookup"><span data-stu-id="b9ee7-430">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9ee7-431">Champ d’identificateur</span><span class="sxs-lookup"><span data-stu-id="b9ee7-431">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="b9ee7-432">La valeur des propriétés de métadonnées `true`</span><span class="sxs-lookup"><span data-stu-id="b9ee7-432">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9ee7-433">None</span><span class="sxs-lookup"><span data-stu-id="b9ee7-433">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UsesItemContainerTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9ee7-434">Identifie la propriété de dépendance <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="b9ee7-434">Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>