<Type Name="Validation" FullName="System.Windows.Controls.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ec2fe1e0b5924fa1cc3491da2b72c4fd2366e50" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006635" /></Metadata><TypeSignature Language="C#" Value="public static class Validation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Class Validation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validation abstract sealed" />
  <TypeSignature Language="F#" Value="type Validation = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes et des propriétés jointes qui prennent en charge la validation des données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir une présentation détaillée du processus de validation, consultez « Validation des données » dans [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.Binding.ValidationRules" />
    <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
  </Docs>
  <Members>
    <Member MemberName="AddErrorHandler">
      <MemberSignature Language="C#" Value="public static void AddErrorHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddErrorHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Controls.ValidationErrorEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddErrorHandler (element As DependencyObject, handler As EventHandler(Of ValidationErrorEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddErrorHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Controls::ValidationErrorEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddErrorHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; -&gt; unit" Usage="System.Windows.Controls.Validation.AddErrorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Objet <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> auquel ajouter <paramref name="handler" />.</param>
        <param name="handler">Gestionnaire à ajouter.</param>
        <summary>Ajoute à l’objet spécifié un gestionnaire d’événements pour l’événement attaché <see cref="E:System.Windows.Controls.Validation.Error" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearInvalid">
      <MemberSignature Language="C#" Value="public static void ClearInvalid (System.Windows.Data.BindingExpressionBase bindingExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearInvalid(class System.Windows.Data.BindingExpressionBase bindingExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearInvalid (bindingExpression As BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearInvalid(System::Windows::Data::BindingExpressionBase ^ bindingExpression);" />
      <MemberSignature Language="F#" Value="static member ClearInvalid : System.Windows.Data.BindingExpressionBase -&gt; unit" Usage="System.Windows.Controls.Validation.ClearInvalid bindingExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingExpression" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="bindingExpression">Objet à rendre valide.</param>
        <summary>Supprime tous les objets <see cref="T:System.Windows.Controls.ValidationError" /> de l'objet <see cref="T:System.Windows.Data.BindingExpressionBase" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `bindingExpression` objet est peut-être non valide à partir d’un <xref:System.Windows.Controls.Validation.MarkInvalid%2A> appel ou une validation ayant échouée précédemment. L’objet est valide après cet appel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si <paramref name="bindingExpression" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Validation.Error" />
      <MemberSignature Language="VB.NET" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="F#" Value="see AddErrorHandler, and RemoveErrorHandler" Usage="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Se produit lorsque l'élément lié s'exécute dans une erreur de validation, mais uniquement pour les liaisons où <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> a la valeur <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modèle de liaison de données vous permet d’associer <xref:System.Windows.Data.Binding.ValidationRules%2A> avec votre <xref:System.Windows.Data.Binding> objet. La validation se produit pendant le transfert de valeur de liaison cible de liaison source avant que le convertisseur est appelé. La section suivante décrit le processus de validation :  
  
1.  Lorsqu’une valeur est transférée à partir de la propriété cible à la propriété source, le moteur de liaison de données supprime d’abord toute <xref:System.Windows.Controls.ValidationError> qui peut avoir été ajouté à la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> propriété jointe de l’élément lié. Elle vérifie ensuite s’il existe toute personnalisé <xref:System.Windows.Controls.ValidationRule>s défini pour cette <xref:System.Windows.Data.Binding>, auquel cas il appelle la <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode) sur chacun de la <xref:System.Windows.Controls.ValidationRule>s jusqu'à ce qu’une d’elles rencontre une erreur ou jusqu'à ce que toutes passent.  
  
2.  Une fois qu’il existe une règle personnalisée qui ne réussit pas, le moteur de liaison crée un <xref:System.Windows.Controls.ValidationError> de l’objet et l’ajoute à la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection de l’élément lié. Lorsque <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> n’est pas vide, le <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> a la valeur de propriété jointe de l’élément `true`. En outre, si le <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> propriété de la <xref:System.Windows.Data.Binding> a la valeur `true`, le moteur de liaison déclenche le <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> joint des événements sur l’élément.  
  
3.  Si toutes les règles passent, le moteur de liaison appelle ensuite le convertisseur, s’il en existe.  
  
4.  Si le convertisseur réussit, le moteur de liaison appelle la méthode setter de la propriété source.  
  
5.  Si la liaison a un <xref:System.Windows.Controls.ExceptionValidationRule> associé et une exception est levée pendant l’étape 4, le moteur de liaison vérifie s’il existe un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Vous avez la possibilité d’utiliser le <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> rappel à fournir un gestionnaire personnalisé pour gérer les exceptions. Si un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> n’est pas spécifié sur le <xref:System.Windows.Data.Binding>, le moteur de liaison crée un <xref:System.Windows.Controls.ValidationError> avec l’exception et l’ajoute à la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection de l’élément lié.  
  
 Notez également qu’un transfert de valeur valide dans les deux directions (cible vers source ou source à la cible) efface le <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> propriété jointe.  
  
 Pour plus d’informations, consultez « Validation des données » dans [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="routedEventInfo_Error"></a>   
## <a name="routed-event-information"></a>Informations sur les événements acheminés  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Validation.ErrorEvent>|  
|Stratégie de routage|Propagation|  
|délégué|<xref:System.EventHandler%601>, limité par <xref:System.Windows.Controls.ValidationErrorEventArgs>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ErrorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ErrorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ErrorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Validation.ErrorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie l’événement attaché <see cref="E:System.Windows.Controls.Validation.Error" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="see GetErrors" />
      <MemberSignature Language="ILAsm" Value="see GetErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.Errors" />
      <MemberSignature Language="VB.NET" Value="see GetErrors" />
      <MemberSignature Language="F#" Value="see GetErrors" Usage="see GetErrors" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient la collection de tous les objets <see cref="T:System.Windows.Controls.ValidationError" /> actifs sur l'élément lié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks  
 L’application ne peut pas modifier le contenu de cette collection. Consultez la section exemple pour obtenir un exemple montrant comment utiliser cette propriété jointe.  
  
 Le modèle de liaison de données WPF vous permet d’associer <xref:System.Windows.Data.Binding.ValidationRules%2A> avec votre <xref:System.Windows.Data.Binding> objet. La validation se produit pendant le transfert de valeur de liaison cible de liaison source avant que le convertisseur est appelé. La section suivante décrit le processus de validation :  
  
1.  Lorsqu’une valeur est transférée à partir de la propriété cible à la propriété source, le moteur de liaison de données supprime d’abord toute <xref:System.Windows.Controls.ValidationError> qui peut avoir été ajouté à la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> propriété jointe de l’élément lié. Elle vérifie ensuite s’il existe toute personnalisé <xref:System.Windows.Controls.ValidationRule>s défini pour cette <xref:System.Windows.Data.Binding>, auquel cas il appelle la <xref:System.Windows.Controls.ValidationRule.Validate%2A> (méthode) sur chacun de la <xref:System.Windows.Controls.ValidationRule>s jusqu'à ce qu’une d’elles rencontre une erreur ou jusqu'à ce que toutes passent.  
  
2.  Une fois qu’il existe une règle personnalisée qui ne réussit pas, le moteur de liaison crée un <xref:System.Windows.Controls.ValidationError> de l’objet et l’ajoute à la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection de l’élément lié. Lorsque <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> n’est pas vide, le <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> a la valeur de propriété jointe de l’élément `true`. En outre, si le <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> propriété de la <xref:System.Windows.Data.Binding> a la valeur `true`, le moteur de liaison déclenche le <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> joint des événements sur l’élément.  
  
3.  Si toutes les règles passent, le moteur de liaison appelle ensuite le convertisseur, s’il en existe.  
  
4.  Si le convertisseur réussit, le moteur de liaison appelle la méthode setter de la propriété source.  
  
5.  Si la liaison a un <xref:System.Windows.Controls.ExceptionValidationRule> associé et une exception est levée pendant l’étape 4, le moteur de liaison vérifie s’il existe un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Vous avez la possibilité d’utiliser le <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> rappel à fournir un gestionnaire personnalisé pour gérer les exceptions. Si un <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> n’est pas spécifié sur le <xref:System.Windows.Data.Binding>, le moteur de liaison crée un <xref:System.Windows.Controls.ValidationError> avec l’exception et l’ajoute à la <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection de l’élément lié.  
  
 Notez également qu’un transfert de valeur valide dans les deux directions (cible vers source ou source à la cible) efface le <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> propriété jointe.  
  
 Pour plus d’informations sur le comportement de cette propriété dans <xref:System.Windows.Data.MultiBinding> de scénarios, consultez <xref:System.Windows.Data.MultiBindingExpression.ValidationError%2A>.  
  
 Pour plus d’informations, consultez « Validation des données » dans [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="xamlTextUsage_Errors"></a>   
## <a name="xaml-text-usage"></a>Utilisation de texte XAML  
 Consultez la section Notes. Le <xref:System.Windows.Controls.Validation.Errors%2A> collection proprement dit n’est pas définissables par l’utilisateur, mais vous pouvez l’utiliser dans une définition de modèle de contrôle dans XAML.  
  
<a name="dependencyPropertyInfo_Errors"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Validation.ErrorsProperty>|  
|La valeur des propriétés de métadonnées `true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ErrorsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ErrorsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ErrorsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ErrorsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété jointe <see cref="P:System.Windows.Controls.Validation.Errors" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTemplate">
      <MemberSignature Language="C#" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="ILAsm" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ErrorTemplate" />
      <MemberSignature Language="VB.NET" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="F#" Value="see GetErrorTemplate, and SetErrorTemplate" Usage="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Controls.ControlTemplate" /> utilisé pour générer les commentaires de l'erreur de la validation sur la couche d'ornements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modèle de liaison de données vous permet d’associer <xref:System.Windows.Data.Binding.ValidationRules%2A> avec votre <xref:System.Windows.Data.Binding> objet. Si l’utilisateur entre une valeur non valide, vous souhaiterez peut-être fournir des commentaires sur l’erreur sur l’application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]. Une façon de fournir de tels commentaires consiste à définir le <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.ErrorTemplate%2A> propriété jointe sur personnalisé <xref:System.Windows.Controls.ControlTemplate>.  
  
 Pour obtenir une présentation détaillée de la validation, consultez la section de Validation des données de la [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="dependencyPropertyInfo_ErrorTemplate"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Validation.ErrorTemplateProperty>|  
|La valeur des propriétés de métadonnées `true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.AdornedElementPlaceholder" />
      </Docs>
    </Member>
    <Member MemberName="ErrorTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ErrorTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ErrorTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ErrorTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ErrorTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété jointe <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt; GetErrors (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;class System.Windows.Controls.ValidationError&gt; GetErrors(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetErrors (element As DependencyObject) As ReadOnlyObservableCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ GetErrors(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetErrors : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Controls.Validation.GetErrors element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Objet <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> où lire la valeur.</param>
        <summary>Obtient la valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.Errors" /> de l'élément spécifié.</summary>
        <returns><see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> d'objets <see cref="T:System.Windows.Controls.ValidationError" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si <paramref name="element" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetErrorTemplate">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ControlTemplate GetErrorTemplate (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ControlTemplate GetErrorTemplate(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetErrorTemplate (element As DependencyObject) As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Controls::ControlTemplate ^ GetErrorTemplate(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetErrorTemplate : System.Windows.DependencyObject -&gt; System.Windows.Controls.ControlTemplate" Usage="System.Windows.Controls.Validation.GetErrorTemplate element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Objet <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> où lire la valeur.</param>
        <summary>Obtient la valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> de l'élément spécifié.</summary>
        <returns><see cref="T:System.Windows.Controls.ControlTemplate" /> utilisé pour générer les commentaires de l'erreur de la validation sur la couche d'ornements.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si <paramref name="element" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHasError">
      <MemberSignature Language="C#" Value="public static bool GetHasError (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHasError(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHasError (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetHasError(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetHasError : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Controls.Validation.GetHasError element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Objet <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> où lire la valeur.</param>
        <summary>Obtient la valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.HasError" /> de l'élément spécifié.</summary>
        <returns>Valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.HasError" /> de l'élément spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si <paramref name="element" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValidationAdornerSite">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetValidationAdornerSite (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetValidationAdornerSite(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationAdornerSite (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetValidationAdornerSite(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetValidationAdornerSite : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.Validation.GetValidationAdornerSite element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Élément à partir duquel obtenir <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
        <summary>Obtient la valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> pour l'élément spécifié.</summary>
        <returns>Valeur de <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetValidationAdornerSiteFor (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetValidationAdornerSiteFor(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationAdornerSiteFor (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetValidationAdornerSiteFor(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetValidationAdornerSiteFor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.Validation.GetValidationAdornerSiteFor element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Élément à partir duquel obtenir <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
        <summary>Obtient la valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> pour l'élément spécifié.</summary>
        <returns>Valeur de <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasError">
      <MemberSignature Language="C#" Value="see GetHasError" />
      <MemberSignature Language="ILAsm" Value="see GetHasError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.HasError" />
      <MemberSignature Language="VB.NET" Value="see GetHasError" />
      <MemberSignature Language="F#" Value="see GetHasError" Usage="see GetHasError" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient une valeur qui indique si une liaison sur l’élément cible de la liaison présente une <see cref="T:System.Windows.Controls.ValidationError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks  
 Pour plus d’informations sur le comportement de cette propriété dans <xref:System.Windows.Data.MultiBinding> de scénarios, consultez <xref:System.Windows.Data.MultiBindingExpression.HasError%2A>.  
  
 Pour obtenir une présentation détaillée de la validation, consultez la section de Validation des données de la [vue d’ensemble de la liaison de données](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="dependencyPropertyInfo_HasError"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Validation.HasErrorProperty>|  
|La valeur des propriétés de métadonnées `true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidationRules" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="HasErrorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasErrorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasErrorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.HasErrorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasErrorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasErrorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasErrorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.HasErrorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété jointe <see cref="P:System.Windows.Controls.Validation.HasError" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkInvalid">
      <MemberSignature Language="C#" Value="public static void MarkInvalid (System.Windows.Data.BindingExpressionBase bindingExpression, System.Windows.Controls.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkInvalid(class System.Windows.Data.BindingExpressionBase bindingExpression, class System.Windows.Controls.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkInvalid(System::Windows::Data::BindingExpressionBase ^ bindingExpression, System::Windows::Controls::ValidationError ^ validationError);" />
      <MemberSignature Language="F#" Value="static member MarkInvalid : System.Windows.Data.BindingExpressionBase * System.Windows.Controls.ValidationError -&gt; unit" Usage="System.Windows.Controls.Validation.MarkInvalid (bindingExpression, validationError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingExpression" Type="System.Windows.Data.BindingExpressionBase" />
        <Parameter Name="validationError" Type="System.Windows.Controls.ValidationError" />
      </Parameters>
      <Docs>
        <param name="bindingExpression">Objet <see cref="T:System.Windows.Data.BindingExpression" /> à marquer comme non valide.</param>
        <param name="validationError">L'objet <see cref="T:System.Windows.Controls.ValidationError" /> à utiliser.</param>
        <summary>Marque l'objet <see cref="T:System.Windows.Data.BindingExpression" /> spécifié comme non valide avec l'objet <see cref="T:System.Windows.Controls.ValidationError" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Data.BindingExpression> objet reste non valide jusqu'à ce que <xref:System.Windows.Controls.Validation.ClearInvalid%2A> est appelée ou un autre transfert vers la source de liaison est validé avec succès.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si <paramref name="validationError" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveErrorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveErrorHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveErrorHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Controls.ValidationErrorEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveErrorHandler (element As DependencyObject, handler As EventHandler(Of ValidationErrorEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveErrorHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Controls::ValidationErrorEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveErrorHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; -&gt; unit" Usage="System.Windows.Controls.Validation.RemoveErrorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Objet <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> duquel supprimer <paramref name="handler" />.</param>
        <param name="handler">Gestionnaire à supprimer.</param>
        <summary>Ajoute un gestionnaire d’événements pour l’événement attaché <see cref="E:System.Windows.Controls.Validation.Error" /> à partir de l’objet spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorTemplate">
      <MemberSignature Language="C#" Value="public static void SetErrorTemplate (System.Windows.DependencyObject element, System.Windows.Controls.ControlTemplate value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetErrorTemplate(class System.Windows.DependencyObject element, class System.Windows.Controls.ControlTemplate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetErrorTemplate (element As DependencyObject, value As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetErrorTemplate(System::Windows::DependencyObject ^ element, System::Windows::Controls::ControlTemplate ^ value);" />
      <MemberSignature Language="F#" Value="static member SetErrorTemplate : System.Windows.DependencyObject * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="System.Windows.Controls.Validation.SetErrorTemplate (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="element">Objet <see cref="T:System.Windows.UIElement" /> ou <see cref="T:System.Windows.ContentElement" /> auquel affecter <paramref name="value" />.</param>
        <param name="value"><see cref="T:System.Windows.Controls.ControlTemplate" /> à utiliser pour générer les commentaires de l'erreur de la validation sur la couche d'ornements.</param>
        <summary>Définit la valeur de la propriété jointe <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> sur l’élément spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si <paramref name="element" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValidationAdornerSite">
      <MemberSignature Language="C#" Value="public static void SetValidationAdornerSite (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValidationAdornerSite(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValidationAdornerSite (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValidationAdornerSite(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValidationAdornerSite : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Controls.Validation.SetValidationAdornerSite (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Élément sur lequel définir <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
        <param name="value"><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> de l'élément spécifié.</param>
        <summary>Affecte à la propriété jointe <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> la valeur spécifiée sur l'élément spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="public static void SetValidationAdornerSiteFor (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValidationAdornerSiteFor(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValidationAdornerSiteFor (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValidationAdornerSiteFor(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValidationAdornerSiteFor : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Controls.Validation.SetValidationAdornerSiteFor (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Élément sur lequel définir <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
        <param name="value"><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> de l'élément spécifié.</param>
        <summary>Affecte à la propriété jointe <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> la valeur spécifiée sur l'élément spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSite">
      <MemberSignature Language="C#" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="ILAsm" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ValidationAdornerSite" />
      <MemberSignature Language="VB.NET" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="F#" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" Usage="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit l'élément qui semble indiquer qu'une erreur de validation s'est produite sur l'élément lié où cette propriété est définie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> et <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> jointe propriétés référencent mutuellement, et vous pouvez définir le des deux.  Par exemple, supposons qu’un <xref:System.Windows.Controls.Label> affiche les erreurs de validation qui se produisent sur une limite de données <xref:System.Windows.Controls.TextBox>.  Vous pouvez effectuer l’une des opérations suivantes pour établir cette relation :  
  
-   Définissez <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.TextBox> à la <xref:System.Windows.Controls.Label>.  
  
-   Définissez <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.Label> à la <xref:System.Windows.Controls.TextBox>.  
  
-   Lorsque vous définissez une des propriétés, l’autre propriété est définie à l’élément sur lequel vous définissez la propriété jointe ; indépendamment des options précédentes, vous choisissez, le <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.TextBox> est la <xref:System.Windows.Controls.Label> et le <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A> pour le <xref:System.Windows.Controls.Label> est le <xref:System.Windows.Controls.TextBox>.  
  
<a name="dependencyPropertyInfo_ValidationAdornerSite"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Validation.ValidationAdornerSiteProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
   
  
## Examples  
 L’exemple suivant utilise un <xref:System.Windows.Controls.Label> que le site d’ornement pour les erreurs de validation qui se produisent sur des éléments dans un <xref:System.Windows.Controls.ItemsControl>. L’exemple définit le <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> pour chaque conteneur d’éléments dans le <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> à l’étiquette.  L’exemple utilise le <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> propriété à obtenir le conteneur d’élément qui a l’erreur et lie le <xref:System.Windows.Controls.ContentControl.Content%2A> de la <xref:System.Windows.Controls.Label> au premier <xref:System.Windows.Controls.ValidationError> qui est signalé.  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="ILAsm" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />
      <MemberSignature Language="VB.NET" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="F#" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" Usage="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit l'élément pour lequel cet élément semble indiquer qu'une erreur s'est produite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> et <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> jointe propriétés référencent mutuellement, et vous pouvez définir le des deux.  Par exemple, supposons qu’un <xref:System.Windows.Controls.Label> affiche les erreurs de validation qui se produisent sur un lié aux données <xref:System.Windows.Controls.TextBox>.  Vous pouvez effectuer l’une des opérations suivantes pour établir cette relation :  
  
-   Définissez <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.TextBox> à la <xref:System.Windows.Controls.Label>.  
  
-   Définissez <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.Label> à la <xref:System.Windows.Controls.TextBox>.  
  
 Lorsque vous définissez une des propriétés, l’autre propriété est définie à l’élément sur lequel vous définissez la propriété jointe ; indépendamment des options précédentes, vous choisissez, le <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> pour le <xref:System.Windows.Controls.TextBox> est la <xref:System.Windows.Controls.Label> et le <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A> pour le <xref:System.Windows.Controls.Label> est le <xref:System.Windows.Controls.TextBox>.  
  
<a name="dependencyPropertyInfo_ValidationAdornerSiteFor"></a>   
## <a name="dependency-property-information"></a>Informations sur les propriétés de dépendance  
  
|||  
|-|-|  
|Champ d’identificateur|<xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty>|  
|La valeur des propriétés de métadonnées `true`|Aucun.|  
  
   
  
## Examples  
 L’exemple suivant utilise un <xref:System.Windows.Controls.Label> que le site d’ornement pour les erreurs de validation qui se produisent sur des éléments dans un <xref:System.Windows.Controls.ItemsControl>. L’exemple définit le <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> pour chaque conteneur d’éléments dans le <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> à l’étiquette.  L’exemple utilise le <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> propriété à obtenir le conteneur d’élément qui a l’erreur et lie le <xref:System.Windows.Controls.ContentControl.Content%2A> de la <xref:System.Windows.Controls.Label> au premier <xref:System.Windows.Controls.ValidationError> qui est signalé.  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteForProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ValidationAdornerSiteForProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ValidationAdornerSiteForProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValidationAdornerSiteForProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ValidationAdornerSiteForProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValidationAdornerSiteForProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ValidationAdornerSiteForProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété jointe <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ValidationAdornerSiteProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ValidationAdornerSiteProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValidationAdornerSiteProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ValidationAdornerSiteProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValidationAdornerSiteProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ValidationAdornerSiteProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifie la propriété jointe <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>