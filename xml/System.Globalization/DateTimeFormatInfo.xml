<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6dacaf716bd56b15663bdabbbbe60ceb3c6467a0" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014069" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des informations propres à une culture sur le format des valeurs de date et d'heure.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés de la <xref:System.Globalization.DateTimeFormatInfo> classe contiennent des informations spécifiques à la culture pour la mise en forme ou de l’analyse des valeurs de date et heure telles que les éléments suivants :  
  
-   Les modèles utilisés pour mettre en forme les valeurs de date.  
  
-   Les modèles utilisés pour mettre en forme des valeurs de temps.  
  
-   Les noms des jours de la semaine.  
  
-   Les noms des mois de l’année.  
  
-   Le matin. et heures. indicateurs utilisés dans les valeurs d’heure.  
  
-   Le calendrier dans lequel les dates sont exprimées.  
  
 Dans cette section :  
  
-   [Instanciation d’un objet DateTimeFormatInfo](#instantiating)  
  
    -   [Pour la Culture dite indifférente](#instantiating_Invariant)  
  
    -   [Pour une Culture spécifique](#instantiating_Specific)  
  
    -   [Pour une culture neutre](#instantiating_neutral)  
  
    -   [Pour la culture actuelle](#instantiating_Current)  
  
-   [DateTimeFormatInfo et dynamic data](#dynamic)  
  
-   [Mise en forme des dates et heures](#Formatting_dates_times)  
  
-   [Chaînes de format et les propriétés DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties)  
  
-   [Modification des propriétés DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Instanciation d’un objet DateTimeFormatInfo  
 Un <xref:System.Globalization.DateTimeFormatInfo> objet peut représenter les conventions de mise en forme de la culture dite indifférente, une culture spécifique, une culture neutre ou la culture actuelle. Cette section explique comment instancier chaque type de <xref:System.Globalization.DateTimeFormatInfo> objet.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Instanciation d’un objet DateTimeFormatInfo pour la culture dite indifférente  
 La culture dite indifférente représente une culture qui est indépendante de la culture. Il est basé sur la langue anglaise, mais pas sur n’importe quel pays/région de spécifique anglophone. Bien que les données des cultures spécifiques peuvent être dynamiques et peuvent changer pour refléter les nouvelles conventions culturelles ou des préférences de l’utilisateur, les données de la culture dite indifférente ne changent pas. Vous pouvez instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme de la culture dite indifférente comme suit :  
  
-   En récupérant la valeur de la <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule.  
  
-   En appelant sans paramètre <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> constructeur. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture/écriture.  
  
-   En récupérant la valeur de la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propriété à partir de la <xref:System.Globalization.CultureInfo> objet qui est retourné par la <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule.  
  
 L’exemple suivant utilise chacune de ces méthodes pour instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente la culture dite indifférente. Ensuite, il indique si l’objet est en lecture seule.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Instanciation d’un objet DateTimeFormatInfo pour une culture spécifique  
 Une culture spécifique représente un langage qui est lu dans un pays/une région particulière. Par exemple, en-US est une culture spécifique qui représente la langue anglaise, il est parlée aux États-Unis et fr-CA est une culture spécifique qui représente la langue anglaise parlée au Canada. Vous pouvez instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme d’une culture spécifique comme suit :  
  
-   En appelant le <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> méthode et la récupération de la valeur de retourné <xref:System.Globalization.CultureInfo> l’objet <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule.  
  
-   En passant la méthode statique <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> méthode un <xref:System.Globalization.CultureInfo> objet qui représente la culture dont <xref:System.Globalization.DateTimeFormatInfo> l’objet à récupérer. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture/écriture.  
  
-   En appelant la méthode statique <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> méthode et la récupération de la valeur de retourné <xref:System.Globalization.CultureInfo> l’objet <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture/écriture.  
  
-   En appelant le <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> classe constructeur et la récupération de la valeur de retourné <xref:System.Globalization.CultureInfo> l’objet <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture/écriture.  
  
 L’exemple suivant illustre chacune de ces façons d’instancier un <xref:System.Globalization.DateTimeFormatInfo> de l’objet et indique si l’objet résultant est en lecture seule.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Instanciation d’un objet DateTimeFormatInfo pour une culture neutre  
 Une culture neutre représente une culture ou un langage indépendant d’une pays/région ; Il est généralement le parent d’un ou plusieurs des cultures spécifiques. Par exemple, Fr est une culture neutre pour la langue Français et le parent de la culture fr-FR. Vous pouvez instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme d’une culture neutre de la même manière que vous créez un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme d’une culture spécifique. En outre, vous pouvez récupérer une culture neutre <xref:System.Globalization.DateTimeFormatInfo> objet en récupérant une culture neutre à partir d’une culture spécifique <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> propriété et la récupération de la <xref:System.Globalization.DateTimeFormatInfo> objet retourné par son <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété. À moins que la culture parente représente la culture dite indifférente, retournée <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture/écriture. L’exemple suivant illustre ces façons d’instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente une culture neutre.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  Dans les versions de .NET Framework 1.0 via [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], lors de la tentative de récupérer un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète les conventions de mise en forme d’une culture neutre lève un <xref:System.NotSupportedException> exception.  
  
 Toutefois, une culture neutre ne dispose pas des informations de mise en forme propres à la culture, car elle est indépendante d’une pays/une région spécifique. Au lieu de remplir le <xref:System.Globalization.DateTimeFormatInfo> de l’objet avec les valeurs génériques, le .NET Framework retourne un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète les conventions de mise en forme de spécifique à une culture qui est un enfant de la culture neutre. Par exemple, le <xref:System.Globalization.DateTimeFormatInfo> de l’objet pour la culture neutre en reflète les conventions de mise en forme de la culture en-US et le <xref:System.Globalization.DateTimeFormatInfo> de l’objet pour la culture fr reflète les conventions de mise en forme de la culture fr-FR.  
  
 Vous pouvez utiliser le code comme suit pour déterminer les conventions de mise en forme de la culture spécifique représente une culture neutre. L’exemple utilise la réflexion pour comparer les <xref:System.Globalization.DateTimeFormatInfo> propriétés d’une culture neutre avec les propriétés d’une culture enfant spécifique. Il considère deux calendriers d’équivalentes si elles sont du même type de calendrier, pour le calendrier grégorien calendriers et, si leur <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> propriétés ont des valeurs identiques.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Instanciation d’un objet DateTimeFormatInfo pour la culture actuelle  
 Vous pouvez instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme de la culture actuelle comme suit :  
  
-   En récupérant la valeur de la <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule.  
  
-   En récupérant la valeur de la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propriété à partir de la <xref:System.Globalization.CultureInfo> objet qui est retourné par la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propriété. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule.  
  
-   En appelant le <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> méthode avec un <xref:System.Globalization.CultureInfo> objet qui représente la culture actuelle. Retourné <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule.  
  
 L’exemple suivant utilise chacune de ces méthodes pour instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme de la culture actuelle. Ensuite, il indique si l’objet est en lecture seule.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Vous pouvez créer un accessible en écriture <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de la culture du thread actuel dans une des manières suivantes :  
  
-   En récupérant un <xref:System.Globalization.DateTimeFormatInfo> dans un des trois méthodes précédentes et de l’appel de l’objet le <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> méthode sur retourné <xref:System.Globalization.DateTimeFormatInfo> objet. Cette opération crée une copie de l’original <xref:System.Globalization.DateTimeFormatInfo> de l’objet, à ceci près que son <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> propriété est `false`.  
  
-   En appelant le <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> méthode pour créer un <xref:System.Globalization.CultureInfo> de l’objet qui représente la culture actuelle, puis en utilisant son <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété à récupérer le <xref:System.Globalization.DateTimeFormatInfo> objet.  
  
 L’exemple suivant illustre chaque méthode de l’instanciation d’une lecture/écriture <xref:System.Globalization.DateTimeFormatInfo> de l’objet et affiche la valeur de son <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> propriété.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 Dans Windows, l’utilisateur peut remplacer certaines de la <xref:System.Globalization.DateTimeFormatInfo> les valeurs de propriété utilisés dans la mise en forme et l’analyse des opérations à travers le **région et langue** application dans le panneau de configuration. Par exemple, un utilisateur dont la culture est anglais (États-Unis) peut choisir Afficher la durée pendant laquelle les valeurs de temps à l’aide d’une horloge de 24 heures (au format hh : mm :) au lieu de l’horloge de 12 heures par défaut (dans le format ss tt). Le <xref:System.Globalization.DateTimeFormatInfo> objets récupérés dans les méthodes abordées précédemment reflètent tous ces substitutions par l’utilisateur. Si ce n’est pas souhaitable, vous pouvez créer un <xref:System.Globalization.NumberFormatInfo> objet qui ne reflète pas l’utilisateur remplace (et est également en lecture/écriture au lieu d’en lecture seule) en appelant le <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> constructeur et en fournissant une valeur de `false` pour le `useUserOverride` argument. L’exemple suivant illustre cela pour un système dont la culture actuelle est anglais (États-Unis) et dont le modèle beaucoup de temps a été modifié à partir de la valeur par défaut de ss tt à HH : mm :.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo et dynamic data  
 Les données spécifiques à la culture pour la mise en forme des valeurs de date et d’heure fournies par le <xref:System.Globalization.DateTimeFormatInfo> classe est dynamique, comme des données culturelles fournies par le <xref:System.Globalization.CultureInfo> classe. N’effectuez pas d’hypothèses concernant la stabilité des valeurs pour <xref:System.Globalization.DateTimeFormatInfo> les objets qui sont associés avec particulier <xref:System.Globalization.CultureInfo> objets. Uniquement les données fournies par la culture dite indifférente et elle est associée <xref:System.Globalization.DateTimeFormatInfo> objet est stable. Autres données peuvent changer entre les sessions de l’application, ou même pendant l’exécution de votre application. Il existe quatre principales sources de modification :  
  
-   Mises à jour du système. Préférences culturelles, telles que le calendrier par défaut ou habituel formats de date et heure changent au fil du temps. Dans ce cas, mise à jour de Windows inclut des modifications apportées à la <xref:System.Globalization.DateTimeFormatInfo> valeur de propriété pour une culture particulière.  
  
-   Cultures de remplacement. Le <xref:System.Globalization.CultureAndRegionInfoBuilder> classe peut être utilisée pour remplacer les données d’une culture existante.  
  
-   Modifications en cascade aux valeurs de propriété. Un nombre de propriétés liées à la culture peut changer au moment de l’exécution, ce qui, à son tour, provoque <xref:System.Globalization.DateTimeFormatInfo> modification des données. Par exemple, la culture actuelle peut être modifiée par programme ou par l’utilisateur. Dans ce cas, le <xref:System.Globalization.DateTimeFormatInfo> objet retourné par la <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> la propriété devient un objet associé à la culture actuelle. De même, un calendrier de la culture peut changer, ce qui peut entraîner des modifications nombreuses <xref:System.Globalization.DateTimeFormatInfo> valeurs de propriété.  
  
-   Préférences de l’utilisateur. Les utilisateurs de votre application peuvent choisir de substituer certaines des valeurs associées à la culture système actuelle via les options régionales et linguistiques dans le panneau de configuration. Par exemple, les utilisateurs peuvent choisir Afficher la date dans un format différent. Si le <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> propriété est définie sur `true`, les propriétés de la <xref:System.Globalization.DateTimeFormatInfo> objet est également récupéré à partir des paramètres utilisateur. Si les paramètres utilisateur sont incompatibles avec la culture associée le <xref:System.Globalization.CultureInfo> objet (par exemple, si le calendrier sélectionné n’est pas un des calendriers indiqués par le <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> propriété), les résultats des méthodes et les valeurs des propriétés ne sont pas définis.  
  
 Pour éviter que les données incohérentes, toutes les propriétés substituables par l’utilisateur d’un <xref:System.Globalization.DateTimeFormatInfo> objet sont initialisées lorsque l’objet est créé. Il existe toujours un risque d’incohérence, étant donné que le processus de remplacement d’utilisateur ni de la création d’objets est atomique et les valeurs pertinentes peuvent changer pendant la création d’objets. Toutefois, cette situation doit être extrêmement rare.  
  
 Vous pouvez contrôler si les substitutions d’utilisateur sont reflétées dans <xref:System.Globalization.DateTimeFormatInfo> objets qui représentent la même culture que la culture du système. Le tableau suivant répertorie la manière dont un <xref:System.Globalization.DateTimeFormatInfo> objet peuvent être récupéré et indique si l’objet résultant reflète les substitutions d’utilisateur.  
  
|Source d’objet CultureInfo et DateTimeFormatInfo|Reflète les substitutions d’utilisateur|  
|---------------------------------------------------------|-----------------------------|  
|Propriété `CultureInfo.CurrentCulture.DateTimeFormat`|Oui|  
|Propriété <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>|Oui|  
|Méthode <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Oui|  
|Méthode <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Non|  
|Constructeur <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>|Oui|  
|Constructeur <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Valeur de `useUserOverride` paramètre|  
  
 Sauf s’il existe une bonne raison de procéder autrement, veillez à respecter les substitutions d’utilisateur lorsque vous utilisez le <xref:System.Globalization.DateTimeFormatInfo> objet dans les applications clientes à mettre en forme et d’analyser l’entrée utilisateur ou pour afficher des données. Pour les applications de serveur ou les applications sans assistance, vous ne devez pas. Toutefois, si vous utilisez le <xref:System.Globalization.DateTimeFormatInfo> objet soit explicitement ou implicitement, pour conserver les données de date et d’heure sous forme de chaîne, vous devez utiliser un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète les conventions de mise en forme de la culture dite indifférente, ou vous devez spécifier un chaîne que vous utilisez, quel que soit la culture de format de date et heure.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Mise en forme des dates et heures  
 Un <xref:System.Globalization.DateTimeFormatInfo> est utilisé implicitement ou explicitement dans toutes les date et l’heure de mise en forme d’opérations. Ceux-ci incluent des appels aux méthodes suivantes :  
  
-   Tous les date et l’heure de mise en forme de méthodes, telles que <xref:System.DateTime.ToString?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   La principale mise en forme composite (méthode), qui est <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Autres composite mise en forme de méthodes, telles que <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> et <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Tous les date et l’heure, effectuer des opérations de mise en forme utilisent un <xref:System.IFormatProvider> implémentation. Le <xref:System.IFormatProvider> interface inclut une méthode unique, <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Cette méthode de rappel est passée une <xref:System.Type> objet qui représente le type nécessaire pour fournir des informations de mise en forme. La méthode retourne une instance de ce type ou `null` si elle ne peut pas fournir une instance du type. Le .NET Framework inclut deux <xref:System.IFormatProvider> implémentations pour mettre en forme des dates et heures :  
  
-   Le <xref:System.Globalization.CultureInfo> (classe), qui représente une culture spécifique (ou une langue spécifique dans un pays/une région spécifique). Dans une date et heure de mise en forme d’opération, le <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> méthode retourne le <xref:System.Globalization.DateTimeFormatInfo> objet associé à son <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété.  
  
-   Le <xref:System.Globalization.DateTimeFormatInfo> (classe), qui fournit des informations sur les conventions de mise en forme de sa culture associée. Le <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> méthode retourne une instance d’elle-même.  
  
 Si un <xref:System.IFormatProvider> implémentation n’est pas fournie explicitement, à une méthode de mise en forme le <xref:System.Globalization.CultureInfo> objet retourné par la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propriété qui représente la culture du thread actuel est utilisée.  
  
 L’exemple suivant illustre la relation entre la <xref:System.IFormatProvider> interface et la <xref:System.Globalization.DateTimeFormatInfo> classe dans les opérations de mise en forme. Il définit un personnalisé <xref:System.IFormatProvider> implémentation dont <xref:System.IFormatProvider.GetFormat%2A> méthode affiche le type de l’objet demandé par l’opération de mise en forme. Si elle demande un <xref:System.Globalization.DateTimeFormatInfo> de l’objet, la méthode fournit le <xref:System.Globalization.DateTimeFormatInfo> objet pour la culture du thread actuel. Comme le résultat de l’exemple montre le <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> des demandes de méthode un <xref:System.Globalization.DateTimeFormatInfo> objet pour fournir des informations de mise en forme, tandis que le <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> des demandes de méthode <xref:System.Globalization.NumberFormatInfo> et <xref:System.Globalization.DateTimeFormatInfo> objets ainsi qu’une <xref:System.ICustomFormatter> mise en œuvre.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Chaînes de format et les propriétés DateTimeFormatInfo  
 Le <xref:System.Globalization.DateTimeFormatInfo> objet inclut trois types de propriétés qui sont utilisées dans les opérations avec des valeurs de date et l’heure de mise en forme :  
  
-   Propriétés relatives au calendrier. Propriétés, telles que <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, et <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, sont associées avec le calendrier utilisé par la culture, qui est défini par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété. Ces propriétés sont utilisées pour la date longue et formats d’heure.  
  
-   Propriétés qui produisent une chaîne de résultat de normes définies. Le <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, et <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> propriétés contiennent des chaînes de format personnalisées qui produisent des chaînes de résultat définis par les normes internationales. Ces propriétés sont en lecture seule et ne peut pas être modifiées.  
  
-   Propriétés qui définissent des chaînes de résultat de la culture. Certaines propriétés, telles que <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> et <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, contenir [chaînes de format personnalisées](~/docs/standard/base-types/custom-date-and-time-format-strings.md) qui spécifient le format de la chaîne de résultat. D’autres, tels que <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, et <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, définir des symboles de la culture ou les sous-chaînes qui peuvent être inclus dans une chaîne de résultat.  
  
 Le [chaînes de format de date et heure standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md), telles que « d », « D », « f » et « F », sont des alias qui correspondent aux particulier <xref:System.Globalization.DateTimeFormatInfo> propriétés du modèle de format. La plupart de la [chaînes de format de date et heure](~/docs/standard/base-types/custom-date-and-time-format-strings.md) associés à des chaînes ou les sous-chaînes qui insère d’une opération de mise en forme dans le flux de résultats. Le tableau suivant répertorie la date standard et personnalisée et spécificateurs de format d’heure et leur sont associées <xref:System.Globalization.DateTimeFormatInfo> propriétés. Pour plus d’informations sur l’utilisation de ces spécificateurs de format, consultez [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) et [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Notez que chaque chaîne de format standard correspond à un <xref:System.Globalization.DateTimeFormatInfo> propriété dont la valeur est une date personnalisée et la chaîne de format d’heure. Les spécificateurs individuels dans cette chaîne de format personnalisé correspondent à son tour les autres <xref:System.Globalization.DateTimeFormatInfo> propriétés. Le tableau répertorie uniquement les <xref:System.Globalization.DateTimeFormatInfo> propriétés dont les chaînes de format standard sont des alias et effectue pas les propriétés de liste sont accessibles par les chaînes de format personnalisées affectés à ces propriétés de l’alias. En outre, le tableau répertorie uniquement les spécificateurs de format personnalisé qui correspondent aux <xref:System.Globalization.DateTimeFormatInfo> propriétés.  
  
|Spécificateur de format|Propriétés associées|  
|----------------------|---------------------------|  
|« d » (date courte ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« D » (date longue ; la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« f » (total de date / court temps ; standard chaîne de format)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, pour définir le format du composant de date de la chaîne de résultat.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, pour définir le format du composant d’heure de la chaîne de résultat.|  
|« F » (total date / long temps ; la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, pour définir le format du composant de date de la chaîne de résultat.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, pour définir le format du composant d’heure de la chaîne de résultat.|  
|« g » (général date / heure courte ; la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, pour définir le format du composant de date de la chaîne de résultat.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, pour définir le format du composant d’heure de la chaîne de résultat.|  
|« G » (date générale / long temps ; standard chaîne de format)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, pour définir le format du composant de date de la chaîne de résultat.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, pour définir le format du composant d’heure de la chaîne de résultat.|  
|« M », « m » (mois/jour ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« O », « o » (aller-retour date/heure ; la chaîne de format standard)|Aucun.|  
|« R », « r » (RFC1123 ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, pour définir une chaîne de résultat qui est conforme à la norme RFC 1123. La propriété doit être en lecture seule.|  
|« s » (date/heure triable ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, pour définir une chaîne de résultat qui est conforme à la norme ISO 8601. La propriété doit être en lecture seule.|  
|« t » (heure courte ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« T » (beaucoup de temps ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« u » (date/heure triable universel ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, pour définir une chaîne de résultat qui est conforme à la norme ISO 8601 de temps universel coordonné. La propriété doit être en lecture seule.|  
|« U » (date/heure complet universel ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« Y », « y » (année mois ; de la chaîne de format standard)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, pour définir le format global de la chaîne de résultat.|  
|« ddd » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, pour inclure le nom abrégé du jour de la semaine dans la chaîne de résultat.|  
|« g », « gg » (spécificateur de format personnalisé)|Appelle le <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> méthode pour insérer le nom de l’ère dans la chaîne de résultat.|  
|« MMM » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, pour inclure le nom de mois abrégé dans la chaîne de résultat.|  
|« MMMM » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> ou <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, pour inclure le nom complet du mois dans la chaîne de résultat.|  
|« t » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> ou <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, pour inclure le premier caractère de l’indicateur AM/PM dans la chaîne de résultat.|  
|« tt » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> ou <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, pour inclure l’indicateur AM/PM complet dans la chaîne de résultat.|  
|« : » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, pour inclure le séparateur horaire dans la chaîne de résultat.|  
|« / » (spécificateur de format personnalisé)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, pour inclure le séparateur de date dans la chaîne de résultat.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Modification des propriétés DateTimeFormatInfo  
 Vous pouvez modifier la chaîne de résultat produite par les chaînes de format de date et d’heure en modifiant les propriétés associées d’accessible en écriture <xref:System.Globalization.DateTimeFormatInfo> objet. Pour déterminer si un <xref:System.Globalization.DateTimeFormatInfo> objet est accessible en écriture, utilisez le <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> propriété. Pour personnaliser un <xref:System.Globalization.DateTimeFormatInfo> objet de cette façon :  
  
1.  Créer une copie en lecture/écriture d’un <xref:System.Globalization.DateTimeFormatInfo> objet dont vous souhaitez modifier les conventions de mise en forme. (Consultez le [instanciation d’un objet DateTimeFormatInfo](#instantiating) section.)  
  
2.  Modifier les propriétés qui sont utilisées pour produire la chaîne de résultat souhaité. (Pour plus d’informations sur l’utilisation de méthodes mise en forme <xref:System.Globalization.DateTimeFormatInfo> propriétés pour définir les chaînes de résultat, consultez la section précédente, [chaînes de Format et propriétés DateTimeFormatInfo](#format-strings-and-datetimeformatinfo-properties).)  
  
3.  Utilisez personnalisé <xref:System.Globalization.DateTimeFormatInfo> de l’objet que vous avez créé en tant que le <xref:System.IFormatProvider> argument dans les appels aux méthodes de mise en forme.  
  
 Il existe deux autres façons de modifier le format d’une chaîne de résultat :  
  
-   Vous pouvez utiliser la <xref:System.Globalization.CultureAndRegionInfoBuilder> classe pour définir une culture personnalisée (cultures une culture qui a un nom unique et qui complètent existant) ou une culture de remplacement (celui qui est utilisée au lieu d’une culture spécifique). Vous pouvez enregistrer et accéder par programmation à cette culture comme n’importe quel <xref:System.Globalization.CultureInfo> objet pris en charge par le .NET Framework.  
  
-   Si la chaîne de résultat n’est pas dépendante de la culture et ne suit pas un format prédéfini, vous pouvez utiliser une date personnalisée et la chaîne de format d’heure. Par exemple, si vous sérialisez des données de date et d’heure au format aaaammjjhhmmss, vous pouvez générer la chaîne de résultat en passant la chaîne de format personnalisé pour le <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> (méthode), vous pouvez convertir la chaîne de résultat vers un <xref:System.DateTime> valeur en appelant le <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> (méthode).  
  
### <a name="changing-the-short-date-pattern"></a>Modification du modèle de date courte  
 L’exemple suivant modifie le format d’une chaîne de résultat produite par la chaîne de format standard « d » (date courte). Il modifie le texte associé <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété pour l’en-US ou de la culture anglais (États-Unis) à partir de sa valeur par défaut « J/aaaa » à « yyyy'-« MM »-« dd » et utilise la chaîne de format standard « d » pour afficher la date à la fois avant et après le <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété est modifié.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Modifier le caractère de séparateur de date  
 L’exemple suivant modifie le caractère de séparateur de date dans un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme de la culture fr-FR. L’exemple utilise la chaîne de format standard « g » pour afficher la date à la fois avant et après le <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> propriété est modifiée.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Modification des abréviations de noms de jours et le modèle de date longue  
 Dans certains cas, le modèle de date longue, qui affiche généralement le jour complet et le nom de mois, ainsi que le numéro du jour du mois et l’année, peut être trop long. L’exemple suivant réduit le modèle de date longue pour la culture en-US retourner une abréviation du nom de jour d’un ou deux chiffres suivie du nombre de jours, l’abréviation du nom du mois et l’année. Cela, cette en assignant des abréviations de noms de jours plus courtes pour le <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> de tableau et en modifiant la chaîne de format personnalisé assignée à la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété. Cela affecte les chaînes de résultat retournés par la « D » et les chaînes de format standard « f ».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 En règle générale, la modification apportée à la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété affecte également la <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriété, qui à son tour définit la chaîne de résultat retournée par la chaîne de format standard « F ». Pour conserver la date complète d’origine et le modèle d’heure, l’exemple réaffecte la chaîne de format personnalisée d’origine assignée à la <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriété après la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété est modifiée.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>La modification d’une horloge de 12 heures en une horloge de 24 heures  
 Pour nombreuses cultures dans le .NET Framework, l’heure est exprimée à l’aide d’une horloge de 12 heures et un indicateur AM/PM. L’exemple suivant définit un `ReplaceWith24HourClock` méthode qui remplace n’importe quel format d’heure qui utilise une horloge de 12 heures avec un format qui utilise une horloge de 24 heures.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 L’exemple utilise une expression régulière pour modifier la chaîne de format. Le modèle d’expression régulière `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` est défini comme suit :  
  
|Motif|Description|  
|-------------|-----------------|  
|`^`|Commencer la correspondance au début de la chaîne.|  
|`(?<openAMPM>\s*t+\s*)?`|Occurrence de mettre en correspondance zéro ou un espace blanc à zéro ou plusieurs caractères, suivi par la lettre « t », une ou plusieurs fois, suivi par zéro ou plusieurs caractères d’espace blanc. Ce groupe de capture est nommé `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Si le `openAMPM` groupe a une correspondance, correspond à la lettre « h » une ou plusieurs fois, suivie d’un ou plusieurs caractères qui ne sont ni « h » ni « t ». La correspondance se termine à la fin de la chaîne. Tous les caractères capturées après « h » est inclus dans un groupe de capture nommé `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Si le `openAMPM` groupe n’a pas de correspondance, correspond à la lettre « h » une ou plusieurs fois, suivies d’un ou plusieurs caractères qui ne sont ni « h » ni « t », suivie de zéro ou plusieurs caractères d’espace blanc. Enfin, correspond à une ou plusieurs occurrences de la lettre « t ». Tous les caractères capturées après « h » et avant des espaces blancs et le « t » sont inclus dans un groupe de capture nommé `nonHours`.|  
  
 Le `nonHours` groupe de capture contient la minute et éventuellement le deuxième d’une date personnalisée et de la chaîne de format d’heure, ainsi qu’avec des symboles de séparateur d’heure. Le modèle de remplacement `HH${nonHours}` ajoute au début de la sous-chaîne « HH » à ces éléments.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Affichage et modification de l’ère dans une date  
 L’exemple suivant ajoute le spécificateur de format personnalisé « g » pour le <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété d’un objet qui représente les conventions de mise en forme de la culture en-US. Cet ajout affecte les trois chaînes de format standard suivantes :  
  
-   La chaîne de format standard « D » (date longue), qui mappe directement à la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété.  
  
-   « f » (complète de date / de courte durée) chaîne de format standard, ce qui produit une chaîne de résultat qui concatène les sous-chaînes produites par le <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> et <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> propriétés.  
  
-   « F » (total de date / heure longue) chaîne de format standard, qui mappe directement à la <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriété. Étant donné que nous n’avons pas explicitement défini cette valeur de propriété, il est généré dynamiquement en concaténant le <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> et <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> propriétés.  
  
 L’exemple montre également comment modifier le nom de l’ère pour une culture dont le calendrier a une seule ère. Dans ce cas, la culture en-US utilise le calendrier grégorien, ce qui est représenté par un <xref:System.Globalization.GregorianCalendar> objet. Le <xref:System.Globalization.GregorianCalendar> classe prend en charge une seule ère, il nomme apr. J.C. (Anno Domini). L’exemple remplace le nom de l’ère (notre ère) (Ère chrétienne) en remplaçant le spécificateur de format personnalisé « g » dans la chaîne de format attribué à la <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriété avec une chaîne littérale. L’utilisation d’une chaîne littérale est nécessaire, car le nom de l’ère est généralement retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> méthode à partir des données privées dans les tables de la culture fournies par le .NET Framework ou le système d’exploitation Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Analyse des chaînes de date et d’heure  
 L’analyse consiste à convertir la représentation sous forme de chaîne d’une date et l’heure en un <xref:System.DateTime> ou <xref:System.DateTimeOffset> valeur. Ces deux types incluent les `Parse`, `TryParse`, `ParseExact`, et `TryParseExact` méthodes pour prendre en charge les opérations d’analyse. Le `Parse` et `TryParse` méthodes convertissent une chaîne qui peut avoir une variété de formats, tandis que `ParseExact` et `TryParseExact` requièrent que la chaîne ont un format défini ou formats. Si l’opération d’analyse échoue, `Parse` et `ParseExact` une exception, tandis que `TryParse` et `TryParseExact` retourner `false`.  
  
 Les méthodes d’analyse implicitement ou explicitement utilisent un <xref:System.Globalization.DateTimeStyles> valeur d’énumération pour déterminer les éléments de style (tels que des espaces blancs de début, interne ou de fin) peut être présent dans la chaîne à analyser et comment interpréter la chaîne analysée ou déterminer s’il manque éléments. Si vous ne fournissez pas un <xref:System.Globalization.DateTimeStyles> valeur lorsque vous appelez le `Parse` ou `TryParse` , la valeur par défaut est <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, qui est un style composite qui inclut le <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, et <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> indicateurs. Pour le `ParseExact` et `TryParseExact` méthodes, la valeur par défaut est <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; la chaîne d’entrée doit correspondre précisément à un particulier de date et heure de chaîne de format personnalisées.  
  
 Les méthodes d’analyse également implicitement ou explicitement utilisent un <xref:System.Globalization.DateTimeFormatInfo> objet qui définit les symboles spécifiques et les modèles qui peut se produire dans la chaîne à analyser. Si vous ne fournissez pas un <xref:System.Globalization.DateTimeFormatInfo> objet, le <xref:System.Globalization.DateTimeFormatInfo> pour la culture du thread actuel est utilisée par défaut de l’objet. Pour plus d’informations sur l’analyse de chaînes de date et heure, consultez les méthodes d’analyse individuels, tels que <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, et <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 L’exemple suivant illustre la nature de la culture de l’analyse chaînes de date et heure. Il essaie d’analyser deux chaînes de date en utilisant les conventions en-US, en-GB, fr-FR et les cultures fi-FI. La date est interprétée comme 8/18/2014, en-US culture lève un <xref:System.FormatException> exception dans les trois autres cultures car 18 est interprété comme le nombre de mois. 2/1/2015 est analysé comme le deuxième jour du premier mois de la culture en-US, mais comme le premier jour du deuxième mois dans les autres cultures.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 En général, les chaînes de date et l’heure sont analysées pour deux raisons :  
  
-   Pour convertir l’entrée d’utilisateur en une valeur de date et d’heure.  
  
-   Pour effectuer un aller-retour d’une valeur de date / heure ; Autrement dit, pour désérialiser une valeur de date et d’heure qui a été précédemment sérialisée sous forme de chaîne.  
  
 Les sections suivantes décrivent ces deux opérations de façon plus détaillée.  
  
### <a name="parsing-user-strings"></a>Analyse de chaînes utilisateur  
 Lorsque vous analysez les chaînes de date et d’heure d’entrée par l’utilisateur, vous devez toujours instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète les paramètres de culture de l’utilisateur, y compris l’utilisateur peut avoir apporté toutes les personnalisations. Sinon, l’objet de date et d’heure peut-être avoir des valeurs incorrectes. Pour plus d’informations sur la façon d’instancier un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète les personnalisations culturelles de l’utilisateur, voir la [DateTimeFormatInfo et dynamic data](#dynamic) section.  
  
 L’exemple suivant illustre la différence entre une opération d’analyse qui reflète les paramètres de culture d’utilisateur et l’autre pas. Dans ce cas, la culture par défaut du système est en-US, mais l’utilisateur a utilisé le panneau de configuration, **région et langue** pour modifier le modèle de date courte de sa valeur par défaut « J/aaaa » à « aa/MM/JJ ». Lorsque l’utilisateur entre une chaîne qui reflète les paramètres utilisateur, et la chaîne est analysée par un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète également les paramètres de l’utilisateur (substitutions), l’opération d’analyse retourne un résultat correct. Toutefois, lorsque la chaîne est analysée par un <xref:System.Globalization.DateTimeFormatInfo> objet qui reflète les paramètres de culture en-US standard, la méthode lève une exception analyse un <xref:System.FormatException> exception, car il interprète 14 comme le nombre de mois, pas les deux derniers chiffres de l’année.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Sérialiser et désérialiser des données de date et d’heure  
 Sérialiser les données de date et heure sont attendues pour effectuer un aller-retour ; Autrement dit, tous les sérialisées et désérialisées valeurs doivent être identiques. Si une valeur de date et d’heure représente un moment précis dans le temps, la valeur désérialisée doit représenter le même moment dans le temps, indépendamment de la culture ou le fuseau horaire du système sur lequel elle a été restaurée. Pour effectuer un aller-retour données de date et heure avec succès, vous devez utiliser les conventions de la culture dite indifférente, qui est retourné par la <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> propriété, pour générer et analyser les données. Les opérations de mise en forme et l’analyse ne doivent jamais reflètent les conventions de la culture par défaut. Si vous utilisez les paramètres de culture par défaut, la portabilité des données est strictement limitée ; Il peut être désérialisé avec succès uniquement sur un thread dont les paramètres de culture spécifiques sont identiques à celles du thread sur lequel il a été sérialisé. Dans certains cas, cela signifie que les données ne peut pas encore être correctement sérialisées et désérialisées sur le même système.  
  
 Si le composant d’heure d’une valeur de date et d’heure est important, il doit également être converti au format UTC et sérialisé à l’aide de la « o » ou « r » [chaîne de format standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Les données de temps peuvent être restaurées en appelant une méthode d’analyse et en lui passant la chaîne de format approprié avec la culture dite indifférente comme le `provider` argument.  
  
 L’exemple suivant illustre le processus de l’aller-retour d’une valeur de date et d’heure. Il sérialise une date et une heure sur un système qui observe des États-Unis Heure du Pacifique et dont la culture actuelle est en-US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Il désérialise les données sur un système situé dans le fuseau horaire de Bruxelles, Copenhague, Madrid et Paris et dont la culture actuelle est fr-FR. La date restaurée est neuf heures plus tard à la date d’origine, ce qui reflète l’ajustement de fuseau horaire à partir de huit heures après l’heure UTC à une heure avant l’heure UTC. La date d’origine et la date restaurée représentent le même moment dans le temps.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 L’exemple suivant utilise la réflexion pour obtenir les propriétés de la <xref:System.Globalization.DateTimeFormatInfo> objet pour la culture anglais (États-Unis). Il affiche la valeur des propriétés qui contiennent des chaînes de format personnalisé et utilise ces chaînes pour afficher les mises en forme des dates.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance accessible en écriture de la classe <see cref="T:System.Globalization.DateTimeFormatInfo" /> qui est indépendante de la culture (dite indifférente).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les informations de date / heure de la culture dite indifférente. Pour créer un <xref:System.Globalization.DateTimeFormatInfo> de l’objet pour une culture spécifique, créez un <xref:System.Globalization.CultureInfo> de l’objet pour cette culture et de récupérer le <xref:System.Globalization.DateTimeFormatInfo> objet retourné par son <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété.  
  
 Les propriétés de la <xref:System.Globalization.DateTimeFormatInfo> objet créé par ce constructeur peut être modifié. Toutefois, vous ne pouvez pas modifier le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété, étant donné que la culture dite indifférente prend en charge uniquement une version localisée du calendrier grégorien. Pour créer un <xref:System.Globalization.DateTimeFormatInfo> objet qui utilise un calendrier spécifique, vous devez instancier un <xref:System.Globalization.CultureInfo> objet qui prend en charge du calendrier et affecter le calendrier à la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété de la <xref:System.Globalization.DateTimeFormatInfo> objet retourné par la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> propriété .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau unidimensionnel de type <see cref="T:System.String" /> contenant les noms abrégés spécifiques de la culture des jours de la semaine.</summary>
        <value>Un tableau unidimensionnel de type <see cref="T:System.String" /> contenant les noms abrégés spécifiques à la culture des jours de la semaine. Le tableau pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contient « Sun », « Mon », « Tue », « Wed », « Thu », « Fri » et « Sat ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la définition de cette propriété, le tableau doit être unidimensionnel et doit comporter exactement sept éléments. Le premier élément (l’élément à l’index zéro) représente le premier jour de la semaine dans le calendrier défini par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété.  
  
 Si une chaîne de format personnalisée inclut le spécificateur de format « ddd », le <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> ou <xref:System.DateTimeOffset.ToString%2A> méthode inclut le membre approprié de le <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> tableau à la place de « ddd » dans la chaîne de résultat.  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété. Si le texte sélectionné <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> ne pas les noms de jours abrégé de support, le tableau contient les noms de jours complets.  
  
   
  
## Examples  
 L’exemple suivant crée une lecture/écriture <xref:System.Globalization.CultureInfo> objet qui représente la culture anglais (États-Unis) et affecte abrégé des noms de jours à son <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> propriété. Il utilise ensuite le spécificateur de format « ddd » dans un pour la représentation sous forme de chaîne des dates pour une semaine à compter du 28 mai 2014.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un tableau multidimensionnel ou qui a une longueur qui n’est pas exactement 7 est assigné à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau de chaînes des noms de mois abrégés associés à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <value>Tableau des noms de mois abrégés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans certaines langues, le nom d’un mois qui fait partie d’une date s’affiche dans le cas génitif. Par exemple, une date dans la culture de russe (Russie) ou le ru-RU se compose du numéro du jour et le nom du mois génitif, tels que 1 Января (1er janvier). Pour ces cultures, si une chaîne de format personnalisée inclut le spécificateur de format « MMM », le <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> ou <xref:System.DateTimeOffset.ToString%2A> méthode inclut le membre approprié de le <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> tableau à la place de « MMM » dans la chaîne de résultat.  
  
 Dans une opération ensembliste, le tableau doit être unidimensionnel avec exactement 13 éléments, car <xref:System.Globalization.Calendar> objets recevoir des calendriers de 13 mois. Pour les calendriers de 12 mois, le treizième élément doit être <xref:System.String.Empty?displayProperty=nameWithType>. Le premier élément (l’élément à l’index zéro) représente le premier mois de l’année définie par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété.  
  
 Si vous définissez la <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriété, vous devez également définir le <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant crée une lecture/écriture <xref:System.Globalization.CultureInfo> objet qui représente la culture anglais (États-Unis) et affecte abrégé des noms de mois génitif à son <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> et <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriétés. Il affiche ensuite la représentation sous forme de chaîne des dates qui incluent le nom de mois abrégé de chaque mois dans un calendrier de prise en charge de la culture.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dans une opération ensembliste, le tableau est multidimensionnel ou a une longueur qui n’est pas exactement 13.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, le tableau ou l’un des éléments du tableau a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Dans une opération ensembliste, l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau de chaînes unidimensionnel contenant les noms abrégés spécifiques à la culture des mois.</summary>
        <value>Tableau de chaînes unidimensionnel avec 13 éléments contenant les noms abrégés spécifiques à la culture des mois. Dans les calendriers à 12 mois, le 13e élément du tableau est une chaîne vide. Le tableau pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contient « Jan », « Feb », « Mar », « Apr », « May », « Jun », « Jul », « Aug », « Sep », « Oct », « Nov », « Dec » et « ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous définissez cette propriété, le tableau doit être unidimensionnel avec exactement 13 éléments. <xref:System.Globalization.Calendar> objets de prendre en compte les calendriers de 13 mois. Le premier élément (l’élément à l’index zéro) représente le premier mois de l’année définie par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété.  
  
 Si vous définissez la <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> propriété, vous devez également définir le <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriété. Le <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> et <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriétés sont utilisées pour mettre en forme les dates en utilisant les chaînes de format suivant :  
  
-   Une date et heure standard chaîne de format que l’alias de format personnalisé chaîne incluant le « MMM » spécificateur de format.  
  
-   Une date personnalisée et la chaîne de format de temps qui inclut le « MMM » spécificateur de format.  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété. Si le texte sélectionné <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> ne pas les noms de mois abrégé de support, le tableau contient les noms de mois complet.  
  
   
  
## Examples  
 L’exemple suivant crée une lecture/écriture <xref:System.Globalization.CultureInfo> objet qui représente la culture anglais (États-Unis) et affecte abrégé des noms de mois génitif à son <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> et <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> propriétés. Il affiche ensuite la représentation sous forme de chaîne des dates qui incluent le nom abrégé de chaque mois dans un calendrier de prise en charge de la culture.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un tableau multidimensionnel ou qui a une longueur qui n’est pas exactement 13 est assigné à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l‘indicateur de chaîne pour les heures du matin (avant midi).</summary>
        <value>Indicateur de chaîne pour les heures du matin. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est « AM ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> propriété est utilisée pour toutes les heures de 0:00:00 (minuit) à 11:59:59.999.  
  
 Si une chaîne de format personnalisée inclut le spécificateur de format « tt » et l’heure est avant midi, le <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> ou <xref:System.DateTimeOffset.ToString%2A> méthode inclut la valeur de la <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> propriété à la place de « tt » dans la chaîne de résultat. Si la chaîne de format personnalisée inclut le spécificateur de format personnalisé « t », seul le premier caractère de la <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> valeur de propriété est incluse. Vous devez utiliser « tt » pour les langues pour lesquelles il est nécessaire de maintenir la distinction entre matin et heures. Un exemple est le japonais, dans lequel le matin. et heures. indicateurs diffèrent dans le deuxième caractère au lieu du premier caractère.  
  
 Pour les cultures qui n’utilisent pas un matin. indicateur, cette propriété retourne une chaîne vide.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le calendrier à utiliser pour la culture actuelle.</summary>
        <value>Calendrier à utiliser pour la culture actuelle. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est un <see cref="T:System.Globalization.GregorianCalendar" /> objet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété accepte uniquement les calendriers qui sont valides pour la culture qui est associée le <xref:System.Globalization.DateTimeFormatInfo> objet. Le <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> propriété spécifie les calendriers qui peuvent être utilisés par une culture particulière, et le <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> propriété spécifie le calendrier par défaut pour la culture.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

Modification de la valeur de cette propriété affecte également les propriétés suivantes : <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , et <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Par exemple, si la culture du thread actuel est le japonaise, cette propriété accepte <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, ou <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>. Lorsque le <xref:System.Globalization.JapaneseCalendar> est utilisé, la valeur par défaut de date longue spécificateur est « gg y'\x5e74 ' \x6708 avait '\x65e5' ». Lorsque le <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, est utilisé, la valeur par défaut de date longue spécificateur est « yyyy'\x5e74 ' \x6708 avait '\x65e5' ».  
  
   
  
## Examples  
 L’exemple suivant définit un `ChangeCalendar` méthode qui modifie le calendrier actuel d’une culture à un calendrier spécifié, sauf si elle est déjà le calendrier actuel ou si elle n’est pas pris en charge par la culture. Le code qui appelle la méthode instancie un <xref:System.Globalization.CultureInfo> objet qui représente la culture arabe (Égypte) et tente d’abord modifier son calendrier pour le calendrier japonais. Étant donné que le calendrier japonais n’est pas pris en charge, la méthode rend ne pas modifier le calendrier de la culture. Toutefois, étant donné que l’um-al Qura calendrier est membre du <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> collection, la méthode y parvient rendant le calendrier actuel pour la culture ar-EG.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Un objet <see cref="T:System.Globalization.Calendar" />, qui n’est pas valide pour la culture actuelle, est assigné à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie la règle à utiliser pour déterminer la première semaine du calendrier de l'année.</summary>
        <value>Valeur qui détermine la première semaine du calendrier de l'année. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Une valeur <see cref="T:System.Globalization.CalendarWeekRule" /> non valide est affectée à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">Dans une opération ensembliste, l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel est en lecture seule.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie superficielle de <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>Nouvel objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> copié depuis l’élément <see cref="T:System.Globalization.DateTimeFormatInfo" /> d’origine.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le clone est accessible en écriture même si la version d’origine <xref:System.Globalization.DateTimeFormatInfo> objet est en lecture seule. Par conséquent, les propriétés du clone peuvent être modifiées avec des modèles définis par l’utilisateur.  
  
 Une copie superficielle d’un objet est une copie de l’objet uniquement. Si l’objet contient des références à d’autres objets, la copie superficielle ne crée pas de copie les objets référencés. Il fait référence aux objets d’origine à la place. En revanche, une copie complète d’un objet crée une copie de l’objet et une copie de tous les éléments référencés directement ou indirectement par cet objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> en lecture seule qui met en forme les valeurs en fonction de la culture actuelle.</summary>
        <value>Objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> en lecture seule basé sur l'objet <see cref="T:System.Globalization.CultureInfo" /> pour le thread actif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo> objet retourné par la <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriété reflète les substitutions d’utilisateur.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> propriété à récupérer un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme de la culture actuelle, qui dans ce cas est la culture en-US. Il affiche ensuite la chaîne de format et la chaîne de résultat pour les six propriétés de mise en forme.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui sépare les composants d'une date, c'est-à-dire l'année, le mois et le jour.</summary>
        <value>Chaîne qui sépare les composants d'une date, c'est-à-dire l'année, le mois et le jour. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est « / ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si une chaîne de format personnalisée inclut le spécificateur de format « / », le <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> méthode affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> à la place de « / » dans la chaîne de résultat.  
  
 Le <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> propriété définit la chaîne qui remplace le séparateur de date (« / » spécificateur de format de date et heure) dans une chaîne de résultat dans une opération de mise en forme. Il définit également la chaîne de séparateur de date dans une opération d’analyse.  
  
   
  
## Examples  
 L’exemple suivant instancie un <xref:System.Globalization.CultureInfo> objet pour la culture en-US, modifie son séparateur de date pour «- » et affiche une date à l’aide de la « d », « G » et les chaînes de format standard « g ».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau de chaînes unidimensionnel qui contient les noms complets spécifiques à la culture des jours de la semaine.</summary>
        <value>Tableau de chaînes unidimensionnel contenant les noms complets spécifiques à la culture des jours de la semaine. Le tableau pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contient « Dimanche » « Monday », « Mardi », « Wednesday », « Thursday », « Friday » et « Saturday ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la définition de cette propriété, le tableau doit être unidimensionnel et doit comporter exactement sept éléments. Le premier élément (l’élément à l’index zéro) représente le premier jour de la semaine dans le calendrier défini par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété.  
  
 Si une chaîne de format personnalisée inclut le spécificateur de format « dddd », le <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> méthode inclut la valeur d’approprié <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> membre à la place de « dddd » dans la chaîne de résultat.  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un tableau multidimensionnel ou qui a une longueur qui n’est pas exactement 7 est assigné à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le premier jour de la semaine.</summary>
        <value>Valeur d'énumération qui représente le premier jour de la semaine. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Une valeur <see cref="T:System.DayOfWeek" /> non valide est affectée à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur de date longue et une valeur d'heure longue.</summary>
        <value>Chaîne de format personnalisée pour une valeur de date longue et d'heure longue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chaîne de format standard « F » est un alias pour le <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriété. En d’autres termes, la chaîne de format personnalisé assignée à cette propriété définit le format de la chaîne de résultat pour la chaîne de format standard « F ». Pour plus d’informations, consultez [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 La valeur de la <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> propriété est générée dynamiquement en concaténant le <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> et <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> propriétés séparant par un espace. Cette affectation dynamique se produit dans les conditions suivantes :  
  
-   Si la valeur de propriété est récupérée avant qu’il a été défini explicitement.  
  
-   Lorsque la valeur de la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> les modifications de propriété.  
  
-   Lorsque la valeur de la <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> les modifications de propriété.  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Valeur <see cref="T:System.DayOfWeek" />.</param>
        <summary>Retourne le nom abrégé spécifique de la culture du jour de la semaine spécifié en fonction de la culture associée à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <returns>Nom abrégé spécifique de la culture du jour de la semaine représenté par <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la valeur par défaut est invariant <xref:System.Globalization.DateTimeFormatInfo> de l’objet, cette méthode retourne une chaîne à partir de la <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Valeur de retour|  
|-----------------|------------------|  
|Dimanche|« Sun »|  
|Le lundi|« Mois »|  
|Mardi|« Mardi »|  
|Le mercredi|« Wed »|  
|Jeudi|« Thu »|  
|Le vendredi|« Fri »|  
|Saturday|« Sat »|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> n’est pas une valeur de <see cref="T:System.DayOfWeek" /> valide.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Entier représentant l’ère.</param>
        <summary>Retourne une chaîne contenant le nom abrégé de l'ère spécifiée, si une abréviation existe.</summary>
        <returns>Chaîne contenant le nom abrégé de l'ère spécifiée, si une abréviation existe.  
  
ou 
Chaîne contenant le nom complet de l'ère spécifiée, s'il n'existe pas d'abréviation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de l’ère est le nom de qu'un calendrier utilise pour faire référence à une période de temps calculée à partir d’une virgule fixe ou un événement. Par exemple, APR. J.C. « » ou « (notre ère) » est l’ère actuelle dans le calendrier grégorien.  
  
 Les valeurs valides pour `era` sont répertoriées dans le <xref:System.Globalization.Calendar.Eras%2A> dérivé de la propriété de la classe appropriée <xref:System.Globalization.Calendar>. Par exemple : <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> affiche une liste des ères qui sont prises en charge par cette implémentation.  
  
 Dans la <xref:System.Globalization.JapaneseCalendar> classe, de l’ère abrégé nom est le premier caractère du nom complet de l’ère. Ce caractère est l’abréviation de l’alphabet Latin non-respect de la casse de caractère unique ou l’abréviation de Kanji caractère unique.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> ne représente pas une ère valide dans le calendrier spécifié dans la propriété <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Si <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> est la <see cref="T:System.Globalization.TaiwanCalendar" /> mais le <see cref="P:System.Threading.Thread.CurrentCulture" /> n’est pas « zh-TW », puis <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, et <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> retourne une chaîne vide (« »).</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Entier compris entre 1 et 13, représentant le nom du mois à récupérer.</param>
        <summary>Retourne le nom abrégé spécifique de la culture du mois spécifié en fonction de la culture associée à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <returns>Nom abrégé spécifique de la culture du mois représenté par <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la valeur par défaut est invariant <xref:System.Globalization.DateTimeFormatInfo> de l’objet, cette méthode retourne une chaîne à partir de la <xref:System.Globalization.GregorianCalendar> objet.  
  
|`month`|Valeur de retour|  
|-------------|------------------|  
|1|« Jan »|  
|2|« Feb »|  
|3|« Mar »|  
|4|« Apr »|  
|5|« May »|  
|6|« Jun »|  
|7|« Jul »|  
|8|« Aug »|  
|9|« Sep »|  
|10|« Oct »|  
|11|« Nov »|  
|12|« Dec »|  
|13|""|  
  
 <xref:System.Globalization.Calendar> objets peuvent prendre en charge les calendriers de 13 mois. Pour les calendriers de 12 mois, la chaîne vide est toujours retournée comme le nom du mois 13.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> est inférieur à 1 ou supérieur à 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne les modèles standard selon lesquels un format peut être appliqué aux valeurs de date et d’heure.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne tous les modèles standard selon lesquels un format peut être appliqué aux valeurs de date et d'heure.</summary>
        <returns>Tableau qui contient les modèles standard selon lesquels un format peut être appliqué aux valeurs de date et d'heure.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un tableau qui contient toutes les chaînes de format personnalisées qui correspondent aux chaînes de format standard. Consultez [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) pour obtenir la liste des chaînes de format standard.  
  
 Vous pouvez utiliser des chaînes de format personnalisé dans le tableau retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> méthode dans les opérations de mise en forme. Toutefois, si vous le faites, la représentation sous forme de chaîne d’une valeur de date et d’heure retournée dans cette opération de mise en forme ne peut pas toujours être analysée avec succès par le `Parse` et `TryParse` méthodes. Par conséquent, vous ne pouvez pas supposer que les chaînes de format personnalisé retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> méthode peut être utilisée pour effectuer un aller-retour valeurs de date et heure. L'exemple de code suivant illustre ce problème. Il récupère une <xref:System.Globalization.DateTimeFormatInfo> objet qui contient des informations de mise en forme pour la culture de l’Italie (italien). Elle passe chaque chaîne de format personnalisée dans le tableau retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> méthode à la <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> méthode pour créer la représentation sous forme de chaîne de date et heure. Cet exemple essaie ensuite d’analyser cette valeur en appelant le <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> (méthode). Comme le montre la sortie de l’exemple, certaines des chaînes de format personnalisé ne produisent pas une date et heure allers-retours de la valeur autrement.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Pour analyser la représentation sous forme de chaîne d’une date et une heure qui peut être exprimée dans un nombre de formats personnalisés prédéfinis, appelez une des méthodes suivantes :  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Les chaînes de format personnalisé dans le tableau retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> méthode varie selon le calendrier actuel de la culture pour laquelle le <xref:System.Globalization.DateTimeFormatInfo> objet fournit des informations de mise en forme. Si le calendrier est modifié, le tableau retourné par cette méthode change également.  
  
   
  
## Examples  
 L’exemple suivant affiche la date et les chaînes de format d’heure pour la culture dite indifférente, ainsi que la chaîne de résultat qui est générée lorsque que la chaîne de format est utilisée pour mettre en forme une date particulière.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 L’exemple instancie un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente la culture dite indifférente en appelant le <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> constructeur. Il peut également récupérer une <xref:System.Globalization.DateTimeFormatInfo> qui représente la culture dite indifférente à partir de la <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">Chaîne de format standard.</param>
        <summary>Retourne tous les modèles dans lesquels les valeurs de date et d’heure peuvent être mises en forme en utilisant la chaîne de format standard.</summary>
        <returns>Tableau contenant les modèles standard selon lesquels les valeurs de date et d’heure peuvent être appliquées aux valeurs en utilisant la chaîne de format spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne un tableau contenant les chaînes de format personnalisé qui correspondent à une chaîne de format standard particulier. Consultez [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) pour obtenir la liste des chaînes de format standard.  
  
 Vous pouvez utiliser des chaînes de format personnalisé dans le tableau retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> méthode dans les opérations de mise en forme. Toutefois, si vous le faites, la représentation sous forme de chaîne d’une valeur de date et d’heure retournée dans cette opération de mise en forme ne peut pas toujours être analysée avec succès par le `Parse` et `TryParse` méthodes. Par conséquent, vous ne pouvez pas supposer que les chaînes de format personnalisé retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> méthode peut être utilisée pour effectuer un aller-retour valeurs de date et heure. L'exemple de code suivant illustre ce problème. Il récupère une <xref:System.Globalization.DateTimeFormatInfo> objet qui contient des informations de mise en forme pour la culture de Russie (russe). Il appelle le <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> méthode pour chaque chaîne de format standard, puis passe chaque personnalisé format de chaîne dans le tableau retourné à la <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> méthode pour créer la représentation sous forme de chaîne de date et heure. Cet exemple essaie ensuite d’analyser cette valeur en appelant le <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> (méthode). Comme le montre la sortie de l’exemple, certaines des chaînes de format personnalisé ne produisent pas une date et heure allers-retours de la valeur autrement.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Pour analyser la représentation sous forme de chaîne d’une date et une heure qui peut être exprimée dans un nombre de formats personnalisés prédéfinis, appelez une des méthodes suivantes :  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Les chaînes de format personnalisé dans le tableau retourné par la <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> méthode varie selon le calendrier actuel de la culture pour laquelle le <xref:System.Globalization.DateTimeFormatInfo> objet fournit des informations de mise en forme. Si le calendrier est modifié, le tableau retourné par cette méthode change également.  
  
   
  
## Examples  
 L’exemple suivant affiche les modèles de date et heure pour le calendrier actuel.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="format" /> n’est pas une chaîne de format standard valide.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">Valeur <see cref="T:System.DayOfWeek" />.</param>
        <summary>Retourne le nom complet spécifique de la culture du jour de la semaine spécifié en fonction de la culture associée à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <returns>Nom complet spécifique de la culture du jour de la semaine représenté par <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la valeur par défaut est invariant <xref:System.Globalization.DateTimeFormatInfo> de l’objet, cette méthode retourne une chaîne à partir de la <xref:System.Globalization.GregorianCalendar> objet.  
  
|`dayofweek`|Valeur de retour|  
|-----------------|------------------|  
|Dimanche|« Dimanche »|  
|Le lundi|« Lundi »|  
|Mardi|« Tuesday »|  
|Le mercredi|« Mercredi »|  
|Jeudi|« Jeudi »|  
|Le vendredi|« Vendredi »|  
|Saturday|« Samedi »|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" /> n’est pas une valeur de <see cref="T:System.DayOfWeek" /> valide.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">Chaîne contenant le nom de l’ère.</param>
        <summary>Retourne l'entier représentant l'ère spécifiée.</summary>
        <returns>Entier représentant l’ère, si <paramref name="eraName" /> est valide ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de l’ère est le nom de qu'un calendrier utilise pour faire référence à une période de temps calculée à partir d’une virgule fixe ou un événement. Par exemple, APR. J.C. « » ou « (notre ère) » est l’ère actuelle dans le calendrier grégorien.  
  
 La comparaison avec `eraName` respecte la casse, par exemple, « APR. J.C. » est équivalente à « apr. j.c. ».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignore les signes de ponctuation dans les noms d’ères abrégés, uniquement si le <xref:System.Globalization.GregorianCalendar> est sélectionné dans <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> et la culture utilise « Apr. J.C. » comme nom d’ère, autrement dit, « (après Jésus-Christ) » équivaut à « AD ».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> Compare `eraName` avec le nom complet de l’ère retourné par <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> et avec le nom de l’ère abrégé retourné par <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 L’exemple suivant montre que <xref:System.Globalization.DateTimeFormatInfo> ignore la ponctuation dans le nom de l’ère, uniquement si le calendrier est grégorien et la culture utilise le nom de l’ère « Après J.-C. ».  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">Entier représentant l’ère.</param>
        <summary>Retourne la chaîne contenant le nom de l'ère spécifiée.</summary>
        <returns>Chaîne contenant le nom de l'ère.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de l’ère est le nom de qu'un calendrier utilise pour faire référence à une période de temps calculée à partir d’une virgule fixe ou un événement. Par exemple, APR. J.C. « » ou « (notre ère) » est l’ère actuelle dans le calendrier grégorien.  
  
 Les valeurs valides pour `era` sont répertoriées dans le <xref:System.Globalization.Calendar.Eras%2A> dérivé de la propriété de la classe appropriée <xref:System.Globalization.Calendar>. Par exemple : <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> affiche une liste des ères qui sont prises en charge par cette implémentation.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" /> ne représente pas une ère valide dans le calendrier spécifié dans la propriété <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />.</exception>
        <block subset="none" type="usage"><para>Si le calendrier est représenté par <see cref="T:System.Globalization.TaiwanCalendar" /> mais le <see cref="P:System.Threading.Thread.CurrentCulture" /> n’est pas « zh-TW », puis <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, et <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> retourne une chaîne vide ( » »).</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Type du service de mise en forme requis.</param>
        <summary>Retourne un objet du type spécifié qui fournit un service de mise en forme de date et heure.</summary>
        <returns>Objet actuel, si <paramref name="formatType" /> est le même que le type de l’élément <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Format(String, IFormatProvider)` méthode pris en charge par les types de base de données appelle cette méthode lorsque actuel <xref:System.Globalization.DateTimeFormatInfo> objet est passé en tant que le <xref:System.IFormatProvider> paramètre. Cette méthode implémente <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Élément <see cref="T:System.IFormatProvider" /> qui obtient l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
ou 
 <see langword="null" /> pour obtenir <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Retourne l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> associé à l’élément <see cref="T:System.IFormatProvider" /> spécifié.</summary>
        <returns>Objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> associé à l’élément <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode utilise la <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> méthode de `formatProvider` à l’aide un <xref:System.Globalization.DateTimeFormatInfo> de l’objet en tant que le `Type` paramètre. Si `formatProvider` est `null` ou si <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> retourne `null`, cette méthode retourne <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Votre application peut obtenir un <xref:System.Globalization.DateTimeFormatInfo> objet pour une culture spécifique en utilisant l’une des méthodes suivantes :  
  
-   La propriété <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.  
  
-   Le <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> (méthode), où `provider` est un <xref:System.Globalization.CultureInfo> objet.  
  
 Un <xref:System.Globalization.DateTimeFormatInfo> objet peut être créé uniquement pour la culture dite indifférente ou pour des cultures spécifiques, mais pas pour les cultures neutres.  
  
 Pour plus d’informations sur la culture dite indifférente, les cultures spécifiques et les cultures neutres, consultez la <xref:System.Globalization.CultureInfo> description de classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">Entier compris entre 1 et 13, représentant le nom du mois à récupérer.</param>
        <summary>Retourne le nom complet spécifique de la culture du mois spécifié en fonction de la culture associée à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <returns>Nom complet spécifique de la culture du mois représenté par <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour la valeur par défaut est invariant <xref:System.Globalization.DateTimeFormatInfo> de l’objet, cette méthode retourne une chaîne à partir de la <xref:System.Globalization.GregorianCalendar> objet.  
  
|`month`|Valeur de retour|  
|-------------|------------------|  
|1|« Janvier »|  
|2|« Février »|  
|3|« March »|  
|4|« Avril »|  
|5|« May »|  
|6|« Juin »|  
|7|« July »|  
|8|« August »|  
|9|« September »|  
|10|« October »|  
|11|« November »|  
|12|« December »|  
|13|""|  
  
 <xref:System.Globalization.Calendar> objets peuvent prendre en charge les calendriers de 13 mois. Pour les calendriers de 12 mois, la chaîne vide est toujours retournée comme le nom du mois 13.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" /> est inférieur à 1 ou supérieur à 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">Une des valeurs de <see cref="T:System.DayOfWeek" />.</param>
        <summary>Obtient le nom de jour abrégé le plus court pour un jour de la semaine spécifié associé à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <returns>Nom abrégé de la semaine qui correspond au paramètre <paramref name="dayOfWeek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre plusieurs méthodes et propriétés qui spécifient la date et modèles de format d’heure, nom du calendrier natif et le mois complets et abrégés et noms de jours.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayOfWeek" /> n’est pas une valeur dans l’énumération <see cref="T:System.DayOfWeek" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> en lecture seule par défaut qui est indépendant de la culture (invariant).</summary>
        <value>Objet en lecture seule indépendant de la culture (invariant).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété ne change pas, quelle que soit la culture actuelle. Pour cette raison de, la culture dite indifférente <xref:System.Globalization.DateTimeFormatInfo> objet peut être utilisé pour produire des résultats dans l’analyse et de mise en forme des opérations sur les données qui sont multiculturels cohérents, indépendant de la culture. Par exemple, si les données de date et heure de cultures multiples doit être rendu persistant sous forme de chaîne, il peut être mis en forme à l’aide de la <xref:System.Globalization.DateTimeFormatInfo> objet de la culture dite indifférente et enregistré. Il peut être analysée à l’aide de la culture dite indifférente <xref:System.Globalization.DateTimeFormatInfo> objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</summary>
        <value><see langword="true" /> Si le <see cref="T:System.Globalization.DateTimeFormatInfo" /> objet est en lecture seule ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur de date longue.</summary>
        <value>Chaîne de format personnalisée pour une valeur de date longue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par la mise en forme composite chaînes qui sont fournies à la chaîne de format standard « D ». L’exemple suivant illustre les relations entre les éléments suivants : la chaîne de format standard « D », le format personnalisé chaîne retournée par la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété et la représentation sous forme de spécifiques à la culture d’une date.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 Consultez [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) de spécificateurs de format personnalisé individuels qui peuvent être combinés pour construire des chaînes de format personnalisé « dddd, dd MMMM yyyy ».  
  
 Vous devez définir le séparateur de date dans le modèle de date longue une chaîne exacte au lieu d’utiliser l’espace réservé séparateur de date. Par exemple, pour obtenir le modèle MM-jj-aaaa, définir le modèle de date longue à « MM-jj-aaaa ».  
  
 La valeur de cette propriété peut changer si le calendrier utilisé par une culture change. Par exemple, l’exemple suivant montre comment la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété d’un <xref:System.Globalization.CultureInfo> objet qui représente la culture arabe (Syrie) change lorsque le <xref:System.Globalization.Calendar> objet utilisé par la culture change.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de la <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> propriété pour plusieurs cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur d'heure longue.</summary>
        <value>Modèle de format pour une valeur d’heure longue.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par mise en forme composite chaînes qui sont fournies à la chaîne de format standard « T ».  
  
 Nous vous recommandons de définir le séparateur d’heure dans le modèle de beaucoup de temps à une chaîne au lieu d’utiliser l’espace réservé séparateur de temps précise. Par exemple, pour obtenir le modèle h-mm-ss, définir le modèle de date longue à « h-mm-ss ».  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur de mois et de jour.</summary>
        <value>Chaîne de format personnalisée pour une valeur de mois et de jour.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par la mise en forme composite chaînes qui sont fournies le « m » et les chaînes de format standard « M ».  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
 Nous vous recommandons de définir le séparateur de date dans le modèle de mois et jour avec une chaîne exacte au lieu d’utiliser l’espace réservé séparateur de date. Par exemple, pour obtenir le modèle MM-JJ, définissez le critère de mois et jour de « MM-DD ».  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau de chaînes de noms de mois associés à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <value>Tableau de chaînes des noms de mois.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans certaines langues, le nom d’un mois qui fait partie d’une date s’affiche dans le cas génitif. Par exemple, une date dans le russe (Russie) ou « ru-RU », culture se compose du numéro du jour et le nom du mois génitif, tels que 1 Января.  
  
 Lorsque cette propriété est définie, le tableau doit être unidimensionnel et doit avoir exactement 13 éléments. <xref:System.Globalization.Calendar> objets de prendre en compte les calendriers de 13 mois. Le premier élément (l’élément à l’index zéro) représente le premier mois de l’année définie par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété. Si vous définissez la <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> propriété, vous devez également définir le <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant illustre plusieurs méthodes et propriétés qui spécifient la date et modèles de format d’heure, nom du calendrier natif et le mois complets et abrégés et noms de jours.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dans une opération ensembliste, le tableau est multidimensionnel ou a une longueur qui n’est pas exactement 13.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, le tableau ou l’un de ses éléments a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Dans une opération ensembliste, l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau unidimensionnel de type <see cref="T:System.String" /> contenant les noms complets spécifiques de la culture des mois.</summary>
        <value>Un tableau unidimensionnel de type <see cref="T:System.String" /> contenant les noms complets spécifiques à la culture des mois. Dans un calendrier à 12 mois, le 13e élément du tableau est une chaîne vide. Le tableau pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contient « Janvier », « February », « March », « April », « May », « June », « July », « August », « September », « October », « November », « December » et « ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque cette propriété est définie, le tableau doit être unidimensionnel et doit avoir exactement 13 éléments. <xref:System.Globalization.Calendar> objets de prendre en compte les calendriers de 13 mois. Le premier élément (l’élément à l’index zéro) représente le premier mois de l’année définie par le <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propriété.  
  
 Si vous définissez la <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> propriété, vous devez également définir le <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> propriété.  
  
 Si le modèle personnalisé inclut le modèle de format « MMMM », <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> à la place de « MMMM » dans le modèle de format.  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un tableau multidimensionnel ou qui a une longueur qui n’est pas exactement 13 est assigné à la propriété.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom natif du calendrier associé à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <value>Nom natif du calendrier utilisé dans la culture associée à l’actuel <see cref="T:System.Globalization.DateTimeFormatInfo" /> objet si ce nom est disponible, ou une chaîne vide (" ») si le nom du calendrier natif n’est pas disponible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre plusieurs méthodes et propriétés qui spécifient la date et modèles de format d’heure, nom du calendrier natif et le mois complets et abrégés et noms de jours.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Si <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> est la <see cref="T:System.Globalization.TaiwanCalendar" /> mais le <see cref="P:System.Threading.Thread.CurrentCulture" /> n’est pas « zh-TW », puis <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, et <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> retourne une chaîne vide (« »).</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le désignateur de chaîne pour les heures de l'après-midi.</summary>
        <value>Désignateur de chaîne pour les heures de l'après-midi. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est « PM ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> propriété est utilisée pour toutes les heures de 12:00:00 (midi) pour 23:59:59.999.  
  
 Si le modèle personnalisé inclut le modèle de format « tt » et l’heure est après midi, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> à la place de « tt » dans le modèle de format. Si le modèle personnalisé inclut le modèle de format « t », seul le premier caractère de <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> s’affiche. Votre application doit utiliser « tt » pour les langues pour lesquelles il est nécessaire de maintenir la distinction entre AM et PM. Un exemple est illustré par la langue japonaise, pour laquelle les indicateurs AM/PM se distinguent dans le deuxième caractère au lieu du premier.  
  
 Pour les cultures qui n’utilisent pas l’indicateur PM, cette propriété retourne une chaîne vide.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">L'objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> à inclure dans un wrapper.</param>
        <summary>Retourne un wrapper <see cref="T:System.Globalization.DateTimeFormatInfo" /> en lecture seule.</summary>
        <returns>Wrapper <see cref="T:System.Globalization.DateTimeFormatInfo" /> en lecture seule.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce wrapper empêche toute modification de `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la chaîne de format personnalisée pour une valeur d’heure qui est basée sur la spécification RFC (Request for Comments) 1123 (RFC) de l’IETF (Internet Engineering Task Force).</summary>
        <value>Chaîne de format personnalisée pour une valeur d'heure basée sur la spécification RFC 1123 de l'IETF.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par la mise en forme composite chaînes qui sont fournies les « r » et les chaînes de format standard « R ».  
  
 Le modèle RFC1123 reflète une norme définie, et la propriété est en lecture seule. Par conséquent, il est toujours le même, quelle que soit la culture. La chaîne de format personnalisée est "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'".  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de RFC1123Pattern pour plusieurs cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">Tableau de chaînes de format personnalisées.</param>
        <param name="format">La chaîne de format standard associée aux chaînes de format personnalisé spécifiés dans le <paramref name="patterns" /> paramètre.</param>
        <summary>Définit les chaînes de format personnalisé de date et d'heure qui correspondent à une chaîne de format standard spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> méthode définit les chaînes de format personnalisé qui correspondent à un particulier de date et heure de chaîne de format standard. Si un appel à une date et heure de mise en forme de méthode inclut la date standard et la chaîne de format de temps spécifié par `format`, la méthode utilise le premier élément dans le `patterns` tableau pour définir le format de la chaîne résultante.  
  
> [!WARNING]
>  Le `Parse` et `TryParse` méthodes ne pas entièrement itérer au sein de toutes les chaînes de `patterns` lors de l’analyse de la représentation sous forme de chaîne de date et heure. Si vous avez besoin d’une chaîne de date et heure pour avoir des formats particuliers dans une opération d’analyse, vous devez passer le tableau de formats valides pour le <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, ou <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> (méthode).  
  
 Vous pouvez définir des chaînes de format de temps et les chaînes de format personnalisées qui correspondent à la « d », « D », « t », « T » et « y » ou « Y » standard de date. Si la valeur de `format` est toute autre chaîne de format standard, le <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> méthode lève un <xref:System.ArgumentException>.  
  
 Si votre date personnalisée et les chaînes de format d’heure incluent des séparateurs de date, vous devez explicitement spécifier un séparateur de date au lieu d’utiliser la méthode d’analyse ou de mise en forme qui remplace le spécificateur de format personnalisé « / » avec un séparateur de date particulière. Par exemple, pour obtenir le modèle MM-jj-aaaa, utilisez le modèle « MM-jj-aaaa ».  
  
   
  
## Examples  
 L’exemple suivant instancie un <xref:System.Globalization.CultureInfo> de l’objet que représente le « en-US » (anglais - États-Unis) de culture et l’utilise pour analyser un tableau de chaînes de date et l’heure à l’aide de la chaîne de format standard « Y ». Il utilise ensuite la <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> méthode à associer une nouvelle chaîne de format personnalisé de la chaîne de format standard « Y », puis tente d’analyser le tableau de chaînes de date et d’heure. Sortie de l’exemple montre que la nouvelle chaîne de format personnalisé est utilisée dans l’analyse et les opérations de mise en forme.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="patterns" /> est <see langword="null" /> ou un tableau de longueur nulle.  
  
ou 
 <paramref name="format" /> n’est pas une chaîne de format standard valide ou est une chaîne de format standard dont les modèles ne peuvent pas être définis.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" /> a un élément de tableau dont la valeur est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Cet objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur de date courte.</summary>
        <value>Chaîne de format personnalisée pour une valeur de date courte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par la mise en forme composite chaînes qui sont fournies à la chaîne de format standard « d ».  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de la <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété et la valeur d’une date mise en forme à l’aide de la <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété pour plusieurs cultures.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 L’exemple suivant modifie le <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété d’un <xref:System.Globalization.DateTimeFormatInfo> objet qui représente les conventions de mise en forme de la culture anglais (États-Unis). Elle affiche également une valeur de date à deux reprises, tout d’abord pour refléter l’original <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> propriété, puis pour refléter la nouvelle valeur de propriété.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un tableau de chaînes des noms de jours abrégés uniques les plus courts associés à l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel.</summary>
        <value>Tableau de chaînes des noms de jours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant illustre plusieurs méthodes et propriétés qui spécifient la date et modèles de format d’heure, nom du calendrier natif et le mois complets et abrégés et noms de jours.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dans une opération ensembliste, le tableau n’a pas exactement sept éléments.</exception>
        <exception cref="T:System.ArgumentNullException">Dans une opération ensembliste, le tableau de valeur ou l’un des éléments du tableau de valeur est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Dans une opération ensembliste, l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> actuel est en lecture seule.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur d'heure courte.</summary>
        <value>Chaîne de format personnalisée pour une valeur d'heure courte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par mise en forme composite chaînes qui sont fournies à la chaîne de format standard « t ».  
  
 Nous vous recommandons de définir le séparateur d’heure dans le modèle d’heure courte pour une chaîne au lieu d’utiliser l’espace réservé séparateur de temps précise. Par exemple, pour obtenir le modèle h-mm-ss, définir le modèle d’heure courte de « h-mm-ss ».  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la chaîne de format personnalisée pour une valeur de date et d'heure pouvant être triée.</summary>
        <value>Chaîne de format personnalisée pour une valeur de date et d'heure pouvant être triée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par la mise en forme composite chaînes qui sont fournies à la chaîne de format standard « s ».  
  
 La chaîne de format retournée par le <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> propriété reflète une norme définie (ISO 8601), et la propriété est en lecture seule. Par conséquent, il est toujours le même, quelle que soit la culture. La chaîne de format personnalisée est "yyyy'-'MM'-'dd'T'HH':'mm':'ss".  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne qui sépare les composants de l'heure, c'est-à-dire l'heure, les minutes et les secondes.</summary>
        <value>Chaîne qui sépare les composants de l'heure. La valeur par défaut pour <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> est « : ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le modèle personnalisé inclut le modèle de format « : », <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> à la place de la « : » dans le modèle de format.  
  
 Le séparateur horaire est dérivé le <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> propriété. Nous vous recommandons de définissez le séparateur d’heure en bref ou long temps modèles à une chaîne au lieu d’utiliser l’espace réservé séparateur de temps précise. Par exemple, pour obtenir le modèle h-mm-ss, définir le modèle à « h-mm-ss ». Cette pratique vous permet également de définir des modèles tels que « h ' mm'm 'ss' » (3h 36m 12 s) qui incluent plusieurs types de séparateurs. Le <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> propriété définit la chaîne qui remplace le séparateur d’heure (« : » spécificateur de format de temps et de date personnalisée) dans une chaîne de résultat dans une opération de mise en forme. Il définit également la chaîne de séparateur d’heure dans une opération d’analyse.  
  
   
  
## Examples  
 L’exemple suivant instancie un <xref:System.Globalization.CultureInfo> objet pour la culture en-US, modifie son séparateur de date pour «. » et affiche une date à l’aide de la « t », « T », « F », « f », « G » et les chaînes de format standard « g ».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la chaîne de format personnalisée pour une chaîne de date et d’heure universelle pouvant être triée, comme défini par ISO 8601.</summary>
        <value>Chaîne de format personnalisée pour une chaîne de date et d'heure universelle pouvant être triée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> propriété définit le format des chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par mise en forme composite chaînes qui sont fournies à la chaîne de format standard « u ». Il peut être utilisé pour afficher des dates et heures dans un ordre pouvant être trié avec l’indicateur de temps universel « Z » à la fin. Le format est triable, car elle utilise des zéros non significatifs pour l’année, mois, jour, heure, minute et seconde. La chaîne de format personnalisé ("yyyy '-' MM'-' dd HH': 'mm' : 'ss ' z' ») est le même quel que soit le fournisseur de format ou de la culture.  
  
 La chaîne de format retournée par le <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> propriété reflète une norme définie, et la propriété est en lecture seule. Par conséquent, il est toujours le même, quelle que soit la culture. La chaîne de format personnalisée est "yyyy'-'MM'-'dd HH':'mm':'ss'Z'".  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de Format DateTime standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la chaîne de format personnalisée pour une valeur d'année et de mois.</summary>
        <value>Chaîne de format personnalisée pour une valeur d'année et de mois.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> propriété définit le format spécifiques à la culture de chaînes de date qui sont retournés par les appels à la <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> et <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> méthodes et par la mise en forme composite chaînes qui sont fournies les « y » et les chaînes de format standard « Y ».  
  
 Cette propriété est affectée si la valeur de la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> les modifications de propriété.  
  
 Nous vous recommandons de définir le séparateur de date dans le modèle année mois une chaîne exacte au lieu d’utiliser l’espace réservé séparateur de date. Par exemple, pour obtenir le modèle MM-AAAA, définir le modèle année mois à « MM-AAAA ».  
  
   
  
## Examples  
 L’exemple suivant affiche la valeur de <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> pour quelques cultures.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété est définie sur <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La propriété est définie et l’objet <see cref="T:System.Globalization.DateTimeFormatInfo" /> est en lecture seule.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Chaînes de format de date et d'heure standard</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Chaînes de format de date et d'heure personnalisées</related>
      </Docs>
    </Member>
  </Members>
</Type>