<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1b5104a2d1f92358f836502a4aa12bde6a4f35a" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65155769" /></Metadata><TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <TypeSignature Language="F#" Value="type PermissionSet = class&#xA;    interface ISecurityEncodable&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStackWalk&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc8f4-101">Représente une collection qui peut contenir de nombreux types d’autorisations différents.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-101">Represents a collection that can contain many different types of permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-102">Vous pouvez utiliser <xref:System.Security.PermissionSet> pour effectuer des opérations sur plusieurs autorisations différentes en tant que groupe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-103">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet> classe et des membres.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="dc8f4-104">pour les héritiers soient entièrement fiables ou dans un assembly est signé avec Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc8f4-105">Initialise une nouvelle instance de la classe <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.PermissionSet : System.Security.Permissions.PermissionState -&gt; System.Security.PermissionSet" Usage="new System.Security.PermissionSet state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="dc8f4-106">Une des valeurs d’énumération qui spécifie l’accès du jeu d’autorisations aux ressources.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-106">One of the enumeration values that specifies the permission set's access to resources.</span></span></param>
        <summary><span data-ttu-id="dc8f4-107">Initialise une nouvelle instance de la classe <see cref="T:System.Security.PermissionSet" /> avec le <see cref="T:System.Security.Permissions.PermissionState" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-108">Le `Unrestricted` état autorise toutes les autorisations qui implémentent le <xref:System.Security.Permissions.IUnrestrictedPermission> interface, tandis que `None` n’autorise aucune autorisation.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="dc8f4-109">Utilisez <xref:System.Security.PermissionSet.AddPermission%2A> sur vide <xref:System.Security.PermissionSet> pour définir le jeu de façon plus détaillée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-110">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.%23ctor%2A> constructeur pour créer une autorisation définie avec un état d’autorisation <xref:System.Security.Permissions.PermissionState.None>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="dc8f4-111">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc8f4-112">Le paramètre <paramref name="state" /> n’est pas une valeur <see cref="T:System.Security.Permissions.PermissionState" /> valide.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberSignature Language="F#" Value="new System.Security.PermissionSet : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="new System.Security.PermissionSet permSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet"><span data-ttu-id="dc8f4-113">Jeu duquel récupérer la valeur de la nouvelle classe <see cref="T:System.Security.PermissionSet" />, ou <see langword="null" /> pour créer une classe <see cref="T:System.Security.PermissionSet" /> vide.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="dc8f4-114">Initialise une nouvelle instance de la classe <see cref="T:System.Security.PermissionSet" /> avec des valeurs initiales provenant du paramètre <paramref name="permSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-115">La nouvelle <xref:System.Security.PermissionSet> contient des copies des autorisations contenues dans le texte spécifié <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc8f4-116">Cela équivaut à <xref:System.Security.PermissionSet.Copy%2A> lorsque le `permSet` paramètre n’est pas `null`.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.AddPermission perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="dc8f4-117">Autorisation à ajouter.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-117">The permission to add.</span></span></param>
        <summary><span data-ttu-id="dc8f4-118">Ajoute une autorisation spécifiée à l’élément <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-119">Union de l’autorisation ajoutée et de toute autorisation du même type qui existe déjà dans l’élément <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-120">Si une autorisation du même type que l’autorisation ajoutée déjà existe dans le <xref:System.Security.PermissionSet>, la nouvelle autorisation est l’union de l’objet d’autorisation existant et de l’objet d’autorisation spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="dc8f4-121">Par exemple, si une autorisation qui implémente <xref:System.Security.Permissions.IUnrestrictedPermission> est ajouté à un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, l’union qui en résulte est la version d’origine `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-122">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.AddPermission%2A> pour ajouter une autorisation à un jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="dc8f4-123">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-124">La méthode est appelée depuis un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="dc8f4-125">Lorsque vous héritez de <see cref="T:System.Security.PermissionSet" />, vous pouvez modifier le comportement de la <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> méthode en substituant le <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-125">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="abstract member AddPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.AddPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.AddPermissionImpl perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="dc8f4-126">Autorisation à ajouter.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-126">The permission to add.</span></span></param>
        <summary><span data-ttu-id="dc8f4-127">Ajoute une autorisation spécifiée à l’élément <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-128">Union de l’autorisation ajoutée et de toute autorisation du même type qui existe déjà dans l’élément <see cref="T:System.Security.PermissionSet" />, ou <see langword="null" /> si <paramref name="perm" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-129">Le <xref:System.Security.PermissionSet.AddPermissionImpl%2A> méthode est l’implémentation pour le <xref:System.Security.PermissionSet.AddPermission%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="dc8f4-130">Si une autorisation du même type que l’autorisation ajoutée déjà existe dans le <xref:System.Security.PermissionSet>, la nouvelle autorisation est l’union de l’objet d’autorisation existant et de l’objet d’autorisation spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="dc8f4-131">Par exemple, si une autorisation qui implémente <xref:System.Security.Permissions.IUnrestrictedPermission> est ajouté à un <xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>, l’union qui en résulte est la version d’origine `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-132">La méthode est appelée depuis un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit&#xA;override this.Assert : unit -&gt; unit" Usage="permissionSet.Assert " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-133">Déclare que le code appelant peut accéder à la ressource protégée par une demande d’autorisation via le code qui appelle cette méthode, même si les appelants situés plus haut dans la pile n’ont pas reçu l’autorisation d’accéder à la ressource.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="dc8f4-134">L’utilisation de <see cref="M:System.Security.PermissionSet.Assert" /> permet de créer des failles de sécurité.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-135">Ceci est la seule façon de déclarer plusieurs autorisations en même temps au sein d’un frame, car seul <xref:System.Security.PermissionSet.Assert%2A> peut être actif sur un frame.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="dc8f4-136"><xref:System.Security.PermissionSet.Assert%2A> n’est efficace pour les autorisations accordées.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="dc8f4-137">Appelez le <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> ou <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> méthode pour annuler un actif <xref:System.Security.PermissionSet.Assert%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dc8f4-138">Étant donné que l’appelant le <xref:System.Security.PermissionSet.Assert%2A> méthode supprime l’exigence que tout le code dans la chaîne d’appel doit être autorisé à accéder à la ressource spécifiée, il peut ouvrir des failles de sécurité si l’utilisation incorrecte ou inappropriée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="dc8f4-139">Par conséquent, il doit être utilisé avec précaution.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="dc8f4-140">L’instance <see cref="T:System.Security.PermissionSet" /> déclarée n’a pas été octroyée au code d’assertion.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span></span>  
  
<span data-ttu-id="dc8f4-141">ou</span><span class="sxs-lookup"><span data-stu-id="dc8f4-141">-or-</span></span> 
<span data-ttu-id="dc8f4-142">Il existe déjà un <see cref="M:System.Security.PermissionSet.Assert" /> actif pour l’image actuelle.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-142">There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span></span></exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md"><span data-ttu-id="dc8f4-143">Utilisation de la méthode Assert</span><span class="sxs-lookup"><span data-stu-id="dc8f4-143">Using the Assert Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberSignature Language="F#" Value="member this.ContainsNonCodeAccessPermissions : unit -&gt; bool" Usage="permissionSet.ContainsNonCodeAccessPermissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-144">Obtient une valeur indiquant si le <see cref="T:System.Security.PermissionSet" /> contient des autorisations qui ne sont pas dérivées de <see cref="T:System.Security.CodeAccessPermission" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-144">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-145"><see langword="true" /> Si le <see cref="T:System.Security.PermissionSet" /> contient des autorisations qui ne sont pas dérivées de <see cref="T:System.Security.CodeAccessPermission" />; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-145"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc8f4-146">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-146">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="dc8f4-147">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-147">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberSignature Language="F#" Value="static member ConvertPermissionSet : string * byte[] * string -&gt; byte[]" Usage="System.Security.PermissionSet.ConvertPermissionSet (inFormat, inData, outFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and shoud no longer be used.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat"><span data-ttu-id="dc8f4-148">Chaîne représentant un des formats d’encodage suivants : ASCII, Unicode ou binaire.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-148">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="dc8f4-149">Les valeurs possibles sont « XMLASCII » ou « XML », « XMLUNICODE » et « BINARY ».</span><span class="sxs-lookup"><span data-stu-id="dc8f4-149">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <param name="inData"><span data-ttu-id="dc8f4-150">Jeu d’autorisations encodé en XML.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-150">An XML-encoded permission set.</span></span></param>
        <param name="outFormat"><span data-ttu-id="dc8f4-151">Chaîne représentant un des formats d’encodage suivants : ASCII, Unicode ou binaire.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-151">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="dc8f4-152">Les valeurs possibles sont « XMLASCII » ou « XML », « XMLUNICODE » et « BINARY ».</span><span class="sxs-lookup"><span data-stu-id="dc8f4-152">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <summary><span data-ttu-id="dc8f4-153">Convertit un objet <see cref="T:System.Security.PermissionSet" /> encodé d’un format d’encodage XML vers un autre.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-153">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-154">Jeu d’autorisations chiffré selon le format de sortie spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-154">An encrypted permission set with the specified output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-155">N'utilisez pas cette méthode.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-155">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="dc8f4-156">Dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-156">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.PermissionSet&#xA;override this.Copy : unit -&gt; System.Security.PermissionSet" Usage="permissionSet.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-157">Crée une copie de l'objet <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-157">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-158">Copie de <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-158">A copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-159">Une copie d’un <xref:System.Security.PermissionSet> représente le même accès aux ressources que l’objet d’origine.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-159">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="dc8f4-160">Modifications apportées à la copie n’affectent pas le jeu d’autorisations d’origine.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-160">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-161">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.Copy%2A> méthode pour créer une copie d’un jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-161">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="dc8f4-162">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-162">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="permissionSet.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="dc8f4-163">Tableau destinataire de la copie.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-163">The target array to which to copy.</span></span></param>
        <param name="index"><span data-ttu-id="dc8f4-164">Position dans le tableau à laquelle doit commencer la copie (base zéro).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-164">The starting position in the array to begin copying (zero based).</span></span></param>
        <summary><span data-ttu-id="dc8f4-165">Copie les objets d’autorisation du jeu à l’emplacement indiqué dans un <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-165">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc8f4-166">Le paramètre <paramref name="array" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-166">The <paramref name="array" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc8f4-167">Le paramètre <paramref name="array" /> possède plusieurs dimensions.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-167">The <paramref name="array" /> parameter has more than one dimension.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="dc8f4-168">Le paramètre <paramref name="index" /> est en dehors de la plage du paramètre <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-168">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.PermissionSet.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc8f4-169">Obtient le nombre d’objets d’autorisation contenus dans le jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-169">Gets the number of permission objects contained in the permission set.</span></span></summary>
        <value><span data-ttu-id="dc8f4-170">Nombre d’objets d’autorisation contenus dans le <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-170">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-171">Dans le `None` ou `Unrestricted` état cela retourne la valeur zéro, car aucune instance d’objet réelle d’autorisation n’est utilisées.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-171">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-172">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.Count%2A> propriété à obtenir le nombre d’objets d’autorisation dans un jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-172">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="dc8f4-173">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-173">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit&#xA;override this.Demand : unit -&gt; unit" Usage="permissionSet.Demand " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-174">Force une <see cref="T:System.Security.SecurityException" /> au moment de l’exécution si les premiers appelants de la pile des appels n’ont pas reçu les autorisations spécifiées par l’instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-174">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-175">Utilisez <xref:System.Security.PermissionSet.Demand%2A> sur un <xref:System.Security.PermissionSet> pour vous assurer que tous les appelants ont toutes les autorisations dans le jeu avec une seule opération.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-175">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="dc8f4-176">Les autorisations du code qui appelle cette méthode ne sont pas examinées ; la vérification commence à partir de l’appelant immédiat de ce code et remonte la pile.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-176">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="dc8f4-177">La pile des appels est généralement représentée comme étant descendante, afin que plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-177">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="dc8f4-178"><xref:System.Security.PermissionSet.Demand%2A> réussit uniquement si aucune <xref:System.Security.SecurityException> est levée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-178"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="dc8f4-179">Si le <xref:System.Security.PermissionSet> contient des autorisations qui n’héritent pas de <xref:System.Security.CodeAccessPermission>, le `Demand` méthodes de ces autorisations sont également appelées.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-179">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-180">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.Demand%2A> méthode pour demander toutes les autorisations dans un jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-180">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="dc8f4-181">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-181">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="dc8f4-182">Un appelant de la chaîne d’appel ne dispose pas de l’autorisation requise.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-182">A caller in the call chain does not have the permission demanded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit&#xA;override this.Deny : unit -&gt; unit" Usage="permissionSet.Deny " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Deny is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-183">Entraîne l’échec de tout <see cref="M:System.Security.PermissionSet.Demand" /> qui passe par le code appelant pour une autorisation qui possède une intersection avec une autorisation d’un type contenu dans le <see cref="T:System.Security.PermissionSet" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-183">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-184">Cette méthode empêche les appelants plus hauts dans la pile des appels de l’accès à la ressource protégée via le code qui appelle cette méthode, même si les appelants ont reçu l’autorisation d’y accéder.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-184">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="dc8f4-185">La pile des appels est généralement représentée comme étant descendante, afin que plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-185">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="dc8f4-186"><xref:System.Security.PermissionSet.Deny%2A> peut limiter la responsabilité du programmeur ou éviter de failles de sécurité accidentelle, car elle contribue à empêcher la méthode qui appelle <xref:System.Security.PermissionSet.Deny%2A> soit utilisé pour accéder à la ressource protégée par l’autorisation refusée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-186"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="dc8f4-187">Si une méthode appelle <xref:System.Security.PermissionSet.Deny%2A> sur une autorisation et si un <xref:System.Security.PermissionSet.Demand%2A> pour cette autorisation est appelée par un appelant plus bas dans la pile des appels, cette vérification de sécurité échoue lorsqu’elle atteint le <xref:System.Security.PermissionSet.Deny%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-187">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="dc8f4-188"><xref:System.Security.PermissionSet.Deny%2A> est ignoré pour une autorisation qui n’est pas accordée, car une demande pour cette autorisation ne peut pas aboutir.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-188"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="dc8f4-189">Un appel précédent à <see cref="M:System.Security.PermissionSet.Deny" /> a déjà limité les autorisations pour le frame de pile actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-189">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="permissionSet.Equals o" FrameworkAlternate="netframework-1.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="permissionSet.Equals obj" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-2.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="dc8f4-190">Objet à comparer au <see cref="T:System.Security.PermissionSet" /> actif.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-190">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <param name="obj">To be added.</param>
        <summary><span data-ttu-id="dc8f4-191">Détermine si l’objet <see cref="T:System.Security.PermissionSet" /> ou <see cref="T:System.Security.NamedPermissionSet" /> spécifié est égal au <see cref="T:System.Security.PermissionSet" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-191">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-192"><see langword="true" /> si l'objet spécifié est égal à l'objet <see cref="T:System.Security.PermissionSet" /> actuel ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-192"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-193">L’égalité est déterminée par les autorisations contenues dans la jeu d’autorisations spécifié par `obj`.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-193">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="dc8f4-194">`obj` peut être un <xref:System.Security.PermissionSet> objet ou un <xref:System.Security.NamedPermissionSet> objet.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-194">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="dc8f4-195">Si `obj` est un <xref:System.Security.NamedPermissionSet>, le nom et la description sont ignorés.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-195">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="dc8f4-196">Pour plus d'informations, consultez <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-196">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="permissionSet.FromXml et" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et"><span data-ttu-id="dc8f4-197">Encodage XML à utiliser pour reconstruire l’objet de sécurité.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-197">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="dc8f4-198">Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-198">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc8f4-199">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.FromXml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-199">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="dc8f4-200">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-200">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc8f4-201">Le paramètre <paramref name="et" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-201">The <paramref name="et" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc8f4-202">Le paramètre <paramref name="et" /> n’est pas un élément d’autorisation valide.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-202">The <paramref name="et" /> parameter is not a valid permission element.</span></span>  
  
<span data-ttu-id="dc8f4-203">ou</span><span class="sxs-lookup"><span data-stu-id="dc8f4-203">-or-</span></span> 
<span data-ttu-id="dc8f4-204">Le numéro de version du paramètre <paramref name="et" /> n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-204">The <paramref name="et" /> parameter's version number is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="permissionSet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-205">Retourne un énumérateur pour les autorisations de l’ensemble.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-205">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-206">Objet énumérateur pour les autorisations de l’ensemble.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-206">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-207">Utiliser l’énumérateur en tant qu’index pour accéder aux objets d’autorisation individuelle dans le jeu.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-207">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-208">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.GetEnumerator%2A> méthode pour répertorier toutes les autorisations dans un jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-208">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="dc8f4-209">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-209">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="dc8f4-210">Lorsque vous héritez de <see cref="T:System.Security.PermissionSet" />, vous pouvez modifier le comportement de la <see cref="M:System.Security.PermissionSet.GetEnumerator" /> méthode en substituant le <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-210">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorImpl : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumeratorImpl : unit -&gt; System.Collections.IEnumerator" Usage="permissionSet.GetEnumeratorImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-211">Retourne un énumérateur pour les autorisations de l’ensemble.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-211">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-212">Objet énumérateur pour les autorisations de l’ensemble.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-212">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-213">Le <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> méthode est l’implémentation pour le <xref:System.Security.PermissionSet.GetEnumerator%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-213">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="permissionSet.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-214">Obtient un code de hachage pour l’objet <see cref="T:System.Security.PermissionSet" /> qui peut être utilisé dans des structures de données et des algorithmes de hachage, comme une table de hachage.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-214">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-215">Code de hachage pour l’objet <see cref="T:System.Security.PermissionSet" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-215">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-216">Le code de hachage de deux instances du même jeu d’autorisations peut-être différer, un code de hachage ne doit pas être utilisé pour comparer deux <xref:System.Security.PermissionSet> objets.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-216">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="member this.GetPermission : Type -&gt; System.Security.IPermission" Usage="permissionSet.GetPermission permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="dc8f4-217">Type de l’objet d’autorisation souhaité.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-217">The type of the desired permission object.</span></span></param>
        <summary><span data-ttu-id="dc8f4-218">Obtient un objet d’autorisation du type spécifié, s’il existe dans le jeu.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-218">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-219">Copie de l’objet d’autorisation du type spécifié par le paramètre <paramref name="permClass" /> contenu dans le <see cref="T:System.Security.PermissionSet" />, ou <see langword="null" /> s’il n’en n’existe aucune.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-219">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-220">La méthode retourne `null` pour un `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-220">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="dc8f4-221">Bien qu’un `Unrestricted` <xref:System.Security.PermissionSet> efficacement contient toutes les autorisations, il n’a pas de toutes les instances réelles à retourner.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-221">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="dc8f4-222">Lorsque vous héritez de <see cref="T:System.Security.PermissionSet" />, vous pouvez modifier le comportement de la <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> méthode en substituant le <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-222">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="abstract member GetPermissionImpl : Type -&gt; System.Security.IPermission&#xA;override this.GetPermissionImpl : Type -&gt; System.Security.IPermission" Usage="permissionSet.GetPermissionImpl permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="dc8f4-223">Type de l’objet d’autorisation.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-223">The type of the permission object.</span></span></param>
        <summary><span data-ttu-id="dc8f4-224">Obtient un objet d’autorisation du type spécifié, s’il existe dans le jeu.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-224">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-225">Une copie de l’objet d’autorisation, du type spécifié par le paramètre <paramref name="permClass" />, contenu dans le <see cref="T:System.Security.PermissionSet" />, ou <see langword="null" /> s’il n’en n’existe aucun.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-225">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-226">Le <xref:System.Security.PermissionSet.GetPermissionImpl%2A> méthode est l’implémentation pour le <xref:System.Security.PermissionSet.GetPermission%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-226">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="dc8f4-227">La méthode retourne `null` pour un `Unrestricted` <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-227">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="dc8f4-228">Bien qu’un `Unrestricted` <xref:System.Security.PermissionSet> efficacement contient toutes les autorisations, il n’a pas de toutes les instances réelles à retourner.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-228">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="permissionSet.Intersect other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="dc8f4-229">Jeu d’autorisations à croiser avec le <see cref="T:System.Security.PermissionSet" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-229">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="dc8f4-230">Crée et retourne un un jeu d’autorisations qui est l’intersection entre le <see cref="T:System.Security.PermissionSet" /> actuel et le <see cref="T:System.Security.PermissionSet" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-230">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-231">Jeu d’autorisations qui représente l’intersection entre le <see cref="T:System.Security.PermissionSet" /> actuel et la cible spécifiée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-231">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span></span> <span data-ttu-id="dc8f4-232">Cet objet est <see langword="null" /> si l’intersection est vide.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-232">This object is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-233">L’intersection de deux jeux d’autorisations est un jeu d’autorisations qui décrit l’ensemble des opérations qu’elles décrivent en commun.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-233">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="dc8f4-234">Plus précisément, elle représente les autorisations minimales telles que toute demande passant les deux autorisations définit également passes leur intersection.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-234">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="dc8f4-235">Pour chaque type d’autorisation qui est présente dans les deux jeux, les deux instances de ces autorisations sont mis en correspondance à l’aide de l’autorisation `Intersect` méthode ; l’autorisation qui en résulte est incluse dans le résultat <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-235">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="dc8f4-236">Types d’autorisation qui existent uniquement dans l’un des deux jeux sont exclus du jeu résultant.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-236">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-237">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.Intersect%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-237">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="dc8f4-238">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-238">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : unit -&gt; bool" Usage="permissionSet.IsEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-239">Obtient une valeur indiquant si le <see cref="T:System.Security.PermissionSet" /> est vide.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-239">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-240"><see langword="true" /> si le <see cref="T:System.Security.PermissionSet" /> est vide ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-240"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-241">Un <xref:System.Security.PermissionSet> peut être vide et néanmoins contenir des instances d’autorisations si ces autorisations sont dans un état complètement restreint.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-241">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="dc8f4-242">Les autorisations sont en état totalement restreint si leurs `IsSubsetOf` méthodes retournent `true` lorsque `null` est passé en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-242">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.PermissionSet.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc8f4-243">Obtient une valeur indiquant si la collection est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-243">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="dc8f4-244">Toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-244">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-245">Un <xref:System.Security.PermissionSet> ne peuvent pas être en lecture seule, cette propriété est toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-245">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-246">L’exemple de code suivant montre la valeur retournée par la <xref:System.Security.PermissionSet.IsReadOnly%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-246">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="dc8f4-247">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-247">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberSignature Language="F#" Value="member this.IsSubsetOf : System.Security.PermissionSet -&gt; bool" Usage="permissionSet.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="dc8f4-248">Jeu d’autorisations à tester pour la relation de sous-ensemble.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-248">The permission set to test for the subset relationship.</span></span> <span data-ttu-id="dc8f4-249">Ce doit être un <see cref="T:System.Security.PermissionSet" /> ou un <see cref="T:System.Security.NamedPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-249">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="dc8f4-250">Détermine si le <see cref="T:System.Security.PermissionSet" /> en cours est un sous-ensemble du <see cref="T:System.Security.PermissionSet" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-250">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-251"><see langword="true" /> si le <see cref="T:System.Security.PermissionSet" /> actuel est une partie du paramètre <paramref name="target" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-251"><see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-252">Un <xref:System.Security.PermissionSet> est un sous-ensemble de la cible <xref:System.Security.PermissionSet> si toutes les demandes qui aboutissent pour le <xref:System.Security.PermissionSet> aboutissent également pour la cible.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-252">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="dc8f4-253">Autrement dit, la cible contient au moins les autorisations contenues dans le sous-ensemble.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-253">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-254">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.IsSubsetOf%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-254">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="dc8f4-255">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-255">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Security.PermissionSet.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc8f4-256">Obtient une valeur indiquant si la collection est garantie thread-safe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-256">Gets a value indicating whether the collection is guaranteed to be thread safe.</span></span></summary>
        <value><span data-ttu-id="dc8f4-257">Toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-257">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-258"><xref:System.Security.PermissionSet> ne gère pas automatiquement sécurité des threads, par conséquent, cette propriété est toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-258"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="dc8f4-259">Cette méthode est requise pour prendre en charge <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-259">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-260">L’exemple de code suivant montre la valeur retournée par la <xref:System.Security.PermissionSet.IsSynchronized%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-260">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="dc8f4-261">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-261">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="member this.IsUnrestricted : unit -&gt; bool" Usage="permissionSet.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-262">Détermine si <see cref="T:System.Security.PermissionSet" /> a la valeur <see langword="Unrestricted" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-262">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-263"><see langword="true" /> si <see cref="T:System.Security.PermissionSet" /> a la valeur <see langword="Unrestricted" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-263"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-264">Un `Unrestricted` <xref:System.Security.PermissionSet> efficacement contient toutes les autorisations qui implémentent le <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-264">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-265">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.IsUnrestricted%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-265">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="dc8f4-266">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-266">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit&#xA;override this.PermitOnly : unit -&gt; unit" Usage="permissionSet.PermitOnly " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-267">Provoque l’échec d’un <see cref="M:System.Security.PermissionSet.Demand" /> qui passe par le code appelant pour tout <see cref="T:System.Security.PermissionSet" /> qui n’est pas une partie du <see cref="T:System.Security.PermissionSet" /> actif.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-267">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-268"><xref:System.Security.PermissionSet.PermitOnly%2A> est similaire à <xref:System.Security.PermissionSet.Deny%2A>, car les deux font échouent lorsqu’ils réussirait autrement des parcours de pile.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-268"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="dc8f4-269">La différence est que <xref:System.Security.PermissionSet.Deny%2A> spécifie les autorisations que le parcours de pile à échouer, mais <xref:System.Security.PermissionSet.PermitOnly%2A> spécifie les seules autorisations qui ne provoquent pas l’échec du parcours de pile.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-269">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="dc8f4-270">Appelez cette méthode pour vous assurer que votre code peut être utilisé pour accéder uniquement aux ressources spécifiées.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-270">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="dc8f4-271"><xref:System.Security.PermissionSet.PermitOnly%2A> est ignoré pour une autorisation refusée, car une demande pour cette autorisation ne peut pas aboutir.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-271"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="dc8f4-272">Toutefois, si le code plus bas dans l’appel de la pile ultérieurement appels <xref:System.Security.PermissionSet.Demand%2A> pour cette autorisation, un <xref:System.Security.SecurityException> est levée lorsque le parcours de pile atteint le code qui a tenté d’appeler <xref:System.Security.PermissionSet.PermitOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-272">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="dc8f4-273">Il s’agit, car le code qui a appelé <xref:System.Security.PermissionSet.PermitOnly%2A> n’a pas reçu l’autorisation, même s’il a appelé <xref:System.Security.PermissionSet.PermitOnly%2A> pour cette autorisation.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-273">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="dc8f4-274">La pile des appels est généralement représentée comme étant descendante, afin que plus haut dans la pile des appels de méthodes appelle des méthodes inférieur dans la pile des appels.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-274">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="member this.RemovePermission : Type -&gt; System.Security.IPermission" Usage="permissionSet.RemovePermission permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="dc8f4-275">Type d’autorisation à supprimer.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-275">The type of permission to delete.</span></span></param>
        <summary><span data-ttu-id="dc8f4-276">Supprime du jeu une autorisation d’un certain type.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-276">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-277">Autorisation supprimée du jeu.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-277">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc8f4-278">Vous ne pouvez pas supprimer des autorisations d’un jeu d’autorisations illimitées.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-278">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="dc8f4-279">L’autorisation définie demeure non restreint une fois que vous tentez de supprimer l’autorisation, et une exception n’est pas levée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-279">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="dc8f4-280">Le code c# suivant tente de supprimer le <xref:System.Security.Permissions.FileIOPermission> à partir de la `FullTrust` de jeu d’autorisations, mais l’autorisation n’est pas supprimée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-280">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-281">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.RemovePermission%2A> méthode pour supprimer un <xref:System.Security.Permissions.FileIOPermission> à partir d’une autorisation définie.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-281">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="dc8f4-282">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-282">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-283">La méthode est appelée depuis un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-283">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="dc8f4-284">Lorsque vous héritez de <see cref="T:System.Security.PermissionSet" />, vous pouvez modifier le comportement de la <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> méthode en substituant le <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-284">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberSignature Language="F#" Value="abstract member RemovePermissionImpl : Type -&gt; System.Security.IPermission&#xA;override this.RemovePermissionImpl : Type -&gt; System.Security.IPermission" Usage="permissionSet.RemovePermissionImpl permClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="dc8f4-285">Type de l’autorisation à supprimer.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-285">The type of the permission to remove.</span></span></param>
        <summary><span data-ttu-id="dc8f4-286">Supprime du jeu une autorisation d’un certain type.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-286">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-287">Autorisation supprimée du jeu.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-287">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-288">Le <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> méthode est l’implémentation pour le <xref:System.Security.PermissionSet.RemovePermission%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-288">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc8f4-289">Vous ne pouvez pas supprimer des autorisations d’un jeu d’autorisations illimitées.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-289">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="dc8f4-290">L’autorisation définie demeure non restreint une fois que vous tentez de supprimer l’autorisation, et une exception n’est pas levée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-290">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-291">La méthode est appelée depuis un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-291">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberSignature Language="F#" Value="static member RevertAssert : unit -&gt; unit" Usage="System.Security.PermissionSet.RevertAssert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-292">Entraîne la suppression définitive de tout <see cref="M:System.Security.CodeAccessPermission.Assert" /> antérieur pour le frame actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-292">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-293">S’il existe aucune <xref:System.Security.CodeAccessPermission.Assert%2A> pour le frame actuel, un <xref:System.ExecutionEngineException> est levée.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-293">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-294">Il n’existe pas d’<see cref="M:System.Security.CodeAccessPermission.Assert" /> antérieur pour le frame actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-294">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="member this.SetPermission : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.SetPermission perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="dc8f4-295">Autorisation à définir.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-295">The permission to set.</span></span></param>
        <summary><span data-ttu-id="dc8f4-296">Définit une autorisation sur <see cref="T:System.Security.PermissionSet" />, en remplaçant toute autorisation existante du même type.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-296">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-297">Autorisation définie.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-297">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-298">Cette méthode supprime tout objet d’autorisation existant du même type à partir de la <xref:System.Security.PermissionSet> et le remplace par le `perm` paramètre.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-298">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="dc8f4-299">Si une autorisation qui implémente <xref:System.Security.Permissions.IUnrestrictedPermission> est définie sur une <xref:System.Security.PermissionSet> c'est-à-dire <xref:System.Security.Permissions.PermissionState.Unrestricted>, résultant <xref:System.Security.PermissionSet> n’est plus `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-299">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-300">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.SetPermission%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-300">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="dc8f4-301">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-301">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-302">La méthode est appelée depuis un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-302">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="dc8f4-303">Lorsque vous héritez de <see cref="T:System.Security.PermissionSet" />, vous pouvez modifier le comportement de la <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> méthode en substituant le <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-303">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberSignature Language="F#" Value="abstract member SetPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.SetPermissionImpl : System.Security.IPermission -&gt; System.Security.IPermission" Usage="permissionSet.SetPermissionImpl perm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="dc8f4-304">Autorisation à définir.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-304">The permission to set.</span></span></param>
        <summary><span data-ttu-id="dc8f4-305">Définit une autorisation sur <see cref="T:System.Security.PermissionSet" />, en remplaçant toute autorisation existante du même type.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-305">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-306">Autorisation définie.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-306">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-307">Le <xref:System.Security.PermissionSet.SetPermissionImpl%2A> méthode est l’implémentation pour le <xref:System.Security.PermissionSet.SetPermission%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-307">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="dc8f4-308">Cette méthode supprime tout objet d’autorisation existant du même type à partir de la <xref:System.Security.PermissionSet> et le remplace par le `perm` paramètre.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-308">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="dc8f4-309">Si une autorisation qui implémente <xref:System.Security.Permissions.IUnrestrictedPermission> est définie sur une <xref:System.Security.PermissionSet> c'est-à-dire <xref:System.Security.Permissions.PermissionState.Unrestricted>, résultant <xref:System.Security.PermissionSet> n’est plus `Unrestricted`.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-309">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc8f4-310">La méthode est appelée depuis un <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-310">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Security.PermissionSet.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc8f4-311">Obtient l’objet racine de la collection actuelle.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-311">Gets the root object of the current collection.</span></span></summary>
        <value><span data-ttu-id="dc8f4-312">Objet racine de la collection actuelle.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-312">The root object of the current collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-313">Cette méthode est requise pour prendre en charge <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-313">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-314">L’exemple de code suivant illustre l’utilisation de <xref:System.Security.PermissionSet.SyncRoot%2A> propriété pour obtenir l’objet racine de la collection actuelle.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-314">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="dc8f4-315">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-315">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="dc8f4-316">Objet qui a initié le rappel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-316">The object that initiated the callback.</span></span> <span data-ttu-id="dc8f4-317">La fonctionnalité pour ce paramètre n'est pas implémentée actuellement.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-317">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="dc8f4-318">S'exécute une fois que le graphique d'objets est complètement désérialisé.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-318">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="permissionSet.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-319">Retourne une représentation sous forme de chaîne de <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-319">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-320">Représentation de <see cref="T:System.Security.PermissionSet" />.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-320">A representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-321">La représentation sous forme de chaîne est utile lors du débogage pour afficher l’état d’un <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-321">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-322">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.ToString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-322">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="dc8f4-323">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-323">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="permissionSet.ToXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc8f4-324">Crée un codage XML de l’objet de sécurité et de son état actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-324">Creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-325">Encodage XML de l’objet de sécurité, y compris les informations d’état éventuelles.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-325">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc8f4-326">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.ToXml%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-326">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="dc8f4-327">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-327">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Security.PermissionSet -&gt; System.Security.PermissionSet" Usage="permissionSet.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="dc8f4-328">Autorisation définie pour former l’union avec le <see cref="T:System.Security.PermissionSet" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-328">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="dc8f4-329">Crée un <see cref="T:System.Security.PermissionSet" /> qui est l’union du <see cref="T:System.Security.PermissionSet" /> actuel et du <see cref="T:System.Security.PermissionSet" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-329">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="dc8f4-330">Nouveau jeu d’autorisations qui représente l’union entre le <see cref="T:System.Security.PermissionSet" /> actuel et le <see cref="T:System.Security.PermissionSet" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-330">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc8f4-331">Le résultat d’un appel à <xref:System.Security.PermissionSet.Union%2A> est un <xref:System.Security.PermissionSet> qui représente toutes les opérations représentées par les <xref:System.Security.PermissionSet> , ainsi que toutes les opérations représentées par le <xref:System.Security.PermissionSet>.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-331">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="dc8f4-332">Si l’ensemble est `Unrestricted`, est l’union `Unrestricted` ainsi.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-332">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc8f4-333">L’exemple de code suivant illustre l’utilisation de la <xref:System.Security.PermissionSet.Union%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="dc8f4-333">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="dc8f4-334">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Security.PermissionSet> classe.</span><span class="sxs-lookup"><span data-stu-id="dc8f4-334">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>