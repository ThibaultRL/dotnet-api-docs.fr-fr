<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3619962a6e80c25e328becdf9edd22f9ce005d08" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65135826" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une propriété, des événements et des méthodes pour interagir avec le réseau auquel l’ordinateur est connecté.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Network` objet.  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Vérification du statut de connexion|[Guide pratique pour Vérification du statut de connexion](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le fichier de destination existe déjà, le `DownloadFile` méthode ne remplace pas le fichier existant. Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> méthode pour indiquer qu’il faut écraser les fichiers existants, à fournir des informations d’identification de l’utilisateur, ou spécifier une valeur de délai d’attente spécifique.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le fichier de destination existe déjà, le `DownloadFile` méthode ne remplace pas le fichier existant. Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> méthode pour indiquer qu’il faut écraser les fichiers existants, à fournir des informations d’identification de l’utilisateur, ou spécifier une valeur de délai d’attente spécifique. `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="userName">Nom d’utilisateur à authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="password">Mot de passe pour s’authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le fichier de destination existe déjà, le `DownloadFile` méthode ne remplace pas le fichier existant. Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> méthode pour lui demander de remplacer les fichiers existants ou de spécifier une valeur de délai d’attente spécifique.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="userName">Nom d’utilisateur à authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="password">Mot de passe pour s’authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le fichier de destination existe déjà, le `DownloadFile` méthode ne remplace pas le fichier existant. Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> méthode pour lui demander de remplacer les fichiers existants ou de spécifier une valeur de délai d’attente spécifique.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> ou <see cref="T:System.Uri" />. Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName"><see langword="String" />. Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="networkCredentials"><see cref="T:System.Net.ICredentials" />. Informations d’identification à fournir.</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’attente, en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="overwrite"><see langword="True" /> Pour remplacer les fichiers existants ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue s’affiche pour indiquer la progression de l’opération ; la boîte de dialogue contient un **Annuler** bouton qui peut être utilisé pour annuler l’opération. La boîte de dialogue modale n’est pas et par conséquent ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans le texte spécifié `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="userName">Nom d’utilisateur à authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="password">Mot de passe pour s’authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout"><see cref="T:System.Int32" />. Intervalle de délai d’attente, en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="overwrite"><see langword="True" /> Pour remplacer les fichiers existants ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue s’affiche pour indiquer la progression de l’opération ; la boîte de dialogue contient un **Annuler** bouton qui peut être utilisé pour annuler l’opération. La boîte de dialogue modale n’est pas et par conséquent ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans le texte spécifié `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="networkCredentials">Informations d’identification à fournir.</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’attente, en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="overwrite"><see langword="True" /> Pour remplacer les fichiers existants ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="onUserCancel">Spécifie le comportement lorsque l’utilisateur clique sur **Annuler** ou **Non** dans la boîte de dialogue qui s’affiche après l’affectation de la valeur <paramref name="showUI" /> à <see langword="True" />. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue s’affiche pour indiquer la progression de l’opération ; la boîte de dialogue contient un **Annuler** bouton qui peut être utilisé pour annuler l’opération. La boîte de dialogue modale n’est pas et par conséquent ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans le texte spécifié `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="userName">Nom d’utilisateur à authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="password">Mot de passe pour s’authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’attente, en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="overwrite"><see langword="True" /> Pour remplacer les fichiers existants ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue s’affiche pour indiquer la progression de l’opération ; la boîte de dialogue contient un **Annuler** bouton qui peut être utilisé pour annuler l’opération. La boîte de dialogue modale n’est pas et par conséquent ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans le texte spécifié `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="userName">Nom d’utilisateur à authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="password">Mot de passe pour s’authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’attente, en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="overwrite"><see langword="True" /> Pour remplacer les fichiers existants ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="onUserCancel">Spécifie le comportement lorsque l’utilisateur clique sur **Annuler** ou **Aucun** dans la boîte de dialogue qui s’affiche suite à l’affectation de la valeur <see langword="True" /> à <c>ShowUI</c>. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue s’affiche pour indiquer la progression de l’opération ; la boîte de dialogue contient un **Annuler** bouton qui peut être utilisé pour annuler l’opération. La boîte de dialogue modale n’est pas et par conséquent ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans le texte spécifié `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Chemin d’accès du fichier à télécharger, y compris le fichier nom et adresse d’hôte.</param>
        <param name="destinationFileName">Nom de fichier et chemin d’accès du fichier téléchargé.</param>
        <param name="userName">Nom d’utilisateur à authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="password">Mot de passe pour s’authentifier. Valeur par défaut est une chaîne vide, « ».</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’attente, en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="overwrite"><see langword="True" /> Pour remplacer les fichiers existants ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="onUserCancel">Spécifie le comportement lorsque l’utilisateur clique sur **Annuler** ou **Aucun** dans la boîte de dialogue qui s’affiche suite à l’affectation de la valeur <see langword="True" /> à <c>ShowUI</c>. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Télécharge le fichier distant spécifié et l’enregistre à l’emplacement spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue s’affiche pour indiquer la progression de l’opération ; la boîte de dialogue contient un **Annuler** bouton qui peut être utilisé pour annuler l’opération. La boîte de dialogue modale n’est pas et par conséquent ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans le texte spécifié `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `DownloadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le `DownloadFile` (méthode) n’envoie pas d’en-têtes HTTP facultatifs. Certains serveurs peuvent retourner 500 (erreur interne du serveur) si l’en-tête d’agent utilisateur facultatif est manquant. Pour envoyer des en-têtes facultatifs, vous devez construire une demande à l’aide de la <xref:System.Net.WebClient> classe.  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.DownloadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Télécharger un fichier|[Guide pratique pour télécharger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Cet exemple télécharge le fichier `WineList.txt` de `http://www.cohowinery.com/downloads` et l’enregistre à `C:\Documents and Settings\All Users\Documents`, en spécifiant un intervalle de délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> se termine par une barre oblique de fin.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si un ordinateur est connecté à un réseau.</summary>
        <value><see langword="True" /> Si l’ordinateur est connecté à un réseau ; sinon <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` Retourne toujours `False` lorsqu’elle est appelée à partir d’un `Click Once` application ou si l’utilisateur n’a pas <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Network.IsAvailable` propriété.  
  
|À|Voir|  
|-|-|  
|Vérifier si un ordinateur est connecté à un réseau|[Guide pratique pour Vérification du statut de connexion](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Cet exemple vérifie l’état de la propriété et le signale.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la disponibilité du réseau évolue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une application déclenche le `NetworkAvailabilityChanged` événement chaque fois que la disponibilité du réseau change. Vous pouvez utiliser la <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> propriété de la `e` pour obtenir le nouvel état de la connexion réseau. Pour obtenir l’état actuel de la connexion réseau, utilisez le <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> propriété.  
  
 Dans une application Windows Forms, cet événement est déclenché sur le thread principal de l’application avec les autres événements d’interface utilisateur. Ainsi, le Gestionnaire d’événements accéder directement à l’interface utilisateur d’application. Toutefois, si l’application est occupée à gérer un autre événement de l’interface utilisateur lorsque cet événement est déclenché, cet événement ne peut pas être traité tant que l’autre gestionnaire d’événements se termine ou appelle la <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> (méthode).  
  
 Vous ne pouvez pas utiliser le `Handles` instruction pour gérer le `NetworkAvailabilityChanged` événement ; vous devez utiliser le `AddHandler` instruction.  
  
 Dans les applications Windows Forms, le `MyApplication` objet expose un `NetworkAvailabilityChanged` événement qui fournit les mêmes fonctionnalités que cet événement, mais vous pouvez le gérer avec la `Handles` instruction.  
  
> [!NOTE]
>  De nombreux concentrateurs réseau fournissent une connexion réseau, même si le concentrateur est déconnecté d’un réseau plus large. Par conséquent, pour les connexions filaires, cet événement indique une modification de la connexion entre l’ordinateur et un concentrateur.  
  
> [!NOTE]
>  Le `NetworkAvailabilityChanged` événement n’est pas déclenché par les applications qui s’exécutent sur Windows 95 et Windows 98 ou par les applications qui sont exécutées sur Windows 2000 par un utilisateur non administrateur. Si votre application peut s’exécuter sur ces plateformes, utilisez le <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> propriété.  
  
   
  
## Examples  
 Cet exemple utilise le `My.Computer.Network.NetworkAvailabilityChanged` événement à mettre à jour de l’interface utilisateur d’un formulaire ou contrôle.  
  
 Ce code doit pour se trouver dans un formulaire ou un contrôle qui a un <xref:System.Windows.Forms.Label> nommé `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Interroge le serveur spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">L’URL, nom de l’ordinateur ou numéro IP du serveur à la commande ping.</param>
        <summary>Interroge le serveur spécifié.</summary>
        <returns><see langword="True" /> si l'opération a réussi ; sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Ping` méthode n’est pas une méthode de prévention de défaillance pour déterminer la disponibilité d’un ordinateur distant : le port ping sur l’ordinateur cible peut être désactivé ou la demande ping peut être bloquée par un pare-feu ou un routeur.  
  
 L’adresse passée à la `Ping` méthode doit être DNS peut être résolue et ne peut pas être précédée par « http:// ».  
  
   
  
## Examples  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` retourne de la méthode `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Remplacez `"198.01.01.01"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` méthode retournée `True` et spécifie un intervalle de délai de 1000 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Remplacez `"www.cohowinery.com"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n’est disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL n’est pas valide.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Contrôle les droits d’établissement ou d’acceptation des connexions sur une adresse de transport. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Contrôle l’accès à un composant de compteur de performances Windows NT. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Contrôle l’accès aux informations réseau et les statistiques de trafic pour l’ordinateur local. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">L’URI du serveur à la commande ping.</param>
        <summary>Interroge le serveur spécifié.</summary>
        <returns><see langword="True" /> si l'opération a réussi ; sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Ping` méthode n’est pas une méthode de prévention de défaillance pour déterminer la disponibilité d’un ordinateur distant : le port ping sur l’ordinateur cible peut être désactivé ou la demande ping peut être bloquée par un pare-feu ou un routeur.  
  
 L’adresse passée à la `Ping` méthode doit être DNS peut être résolue et ne peut pas être précédée par « http:// ».  
  
   
  
## Examples  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` retourne de la méthode `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Remplacez `"198.01.01.01"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` méthode retournée `True` et spécifie un intervalle de délai de 1000 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Remplacez `"www.cohowinery.com"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n’est disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL n’est pas valide.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Contrôle les droits d’établissement ou d’acceptation des connexions sur une adresse de transport. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Contrôle l’accès à un composant de compteur de performances Windows NT. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Contrôle l’accès aux informations réseau et les statistiques de trafic pour l’ordinateur local. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">L’URL, nom de l’ordinateur ou numéro IP du serveur à la commande ping.</param>
        <param name="timeout">Seuil de temps en millisecondes pour contacter la destination. La valeur par défaut est 500.</param>
        <summary>Interroge le serveur spécifié.</summary>
        <returns><see langword="True" /> si l'opération a réussi ; sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Ping` méthode n’est pas une méthode de prévention de défaillance pour déterminer la disponibilité d’un ordinateur distant : le port ping sur l’ordinateur cible peut être désactivé ou la demande ping peut être bloquée par un pare-feu ou un routeur.  
  
 L’adresse passée à la `Ping` méthode doit être DNS peut être résolue et ne peut pas être précédée par « http:// ».  
  
   
  
## Examples  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` retourne de la méthode `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Remplacez `"198.01.01.01"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` méthode retournée `True` et spécifie un intervalle de délai de 1000 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Remplacez `"www.cohowinery.com"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n’est disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL n’est pas valide.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Contrôle les droits d’établissement ou d’acceptation des connexions sur une adresse de transport. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Contrôle l’accès à un composant de compteur de performances Windows NT. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Contrôle l’accès aux informations réseau et les statistiques de trafic pour l’ordinateur local. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">L’URI du serveur à la commande ping.</param>
        <param name="timeout">Seuil de temps en millisecondes pour contacter la destination. La valeur par défaut est 500.</param>
        <summary>Interroge le serveur spécifié.</summary>
        <returns><see langword="True" /> si l'opération a réussi ; sinon <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Ping` méthode n’est pas une méthode de prévention de défaillance pour déterminer la disponibilité d’un ordinateur distant : le port ping sur l’ordinateur cible peut être désactivé ou la demande ping peut être bloquée par un pare-feu ou un routeur.  
  
 L’adresse passée à la `Ping` méthode doit être DNS peut être résolue et ne peut pas être précédée par « http:// ».  
  
   
  
## Examples  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` retourne de la méthode `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Remplacez `"198.01.01.01"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 Cet exemple signale ou non peut être exécutée sur le serveur en déterminant si le `Ping` méthode retournée `True` et spécifie un intervalle de délai de 1000 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Remplacez `"www.cohowinery.com"` avec le nom d’ordinateur, l’URL ou adresse IP du serveur à la commande ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n’est disponible.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL n’est pas valide.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Décrit un ensemble d’autorisations de sécurité appliquées au code. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Contrôle les droits d’établissement ou d’acceptation des connexions sur une adresse de transport. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Contrôle l’accès à un composant de compteur de performances Windows NT. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Contrôle l’accès aux informations réseau et les statistiques de trafic pour l’ordinateur local. Énumération associée : <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> méthode pour fournir des informations d’identification de l’utilisateur ou spécifier une valeur de délai d’attente spécifique.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le chemin d’accès du fichier source n’est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> méthode pour fournir des informations d’identification de l’utilisateur ou spécifier une valeur de délai d’attente spécifique.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le chemin d’accès du fichier source n’est pas valide.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="userName">Nom d’utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="password">Mot de passe pour s’authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> méthode pour spécifier une valeur de délai d’attente spécifique.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="userName">Nom d’utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="password">Mot de passe pour s’authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser une des autres surcharges de la <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> méthode pour spécifier une valeur de délai d’attente spécifique.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d’expiration par défaut (100 secondes).</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="networkCredentials">Informations d’identification pour l’authentification.</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’expiration en millisecondes. Valeur par défaut est 100 secondes.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue affiche la progression de l’opération et inclut un **Annuler** bouton l’utilisateur peut cliquer pour annuler l’opération. La boîte de dialogue n’étant pas modale, elle ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans l’intervalle spécifié dans `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="userName">Nom d’utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="password">Mot de passe pour s’authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’expiration en millisecondes. Valeur par défaut est 100 secondes.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue affiche la progression de l’opération et inclut un **Annuler** bouton l’utilisateur peut cliquer pour annuler l’opération. La boîte de dialogue n’étant pas modale, elle ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans l’intervalle spécifié dans `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="networkCredentials">Informations d’identification pour l’authentification.</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’expiration en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="onUserCancel">Action à prendre lorsque l’utilisateur clique sur **Annuler**. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue affiche la progression de l’opération et inclut un **Annuler** bouton l’utilisateur peut cliquer pour annuler l’opération. La boîte de dialogue n’étant pas modale, elle ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans l’intervalle spécifié dans `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="userName">Nom d’utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="password">Mot de passe pour s’authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="showUI"><see langword="True" /> Pour afficher la progression de l’opération ; sinon <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’expiration en millisecondes. Valeur par défaut est 100 secondes.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue affiche la progression de l’opération et inclut un **Annuler** bouton l’utilisateur peut cliquer pour annuler l’opération. La boîte de dialogue n’étant pas modale, elle ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans l’intervalle spécifié dans `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="userName">Nom d’utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="password">Mot de passe pour s’authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="showUI">Indique s’il faut ou non afficher la progression de l’opération. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’expiration en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="onUserCancel">Action à prendre lorsque l’utilisateur clique sur **Annuler**. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue affiche la progression de l’opération et inclut un **Annuler** bouton l’utilisateur peut cliquer pour annuler l’opération. La boîte de dialogue n’étant pas modale, elle ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans l’intervalle spécifié dans `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Chemin d’accès et nom du fichier à télécharger.</param>
        <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
        <param name="userName">Nom d’utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="password">Mot de passe pour s’authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
        <param name="showUI">Indique s’il faut ou non afficher la progression de l’opération. La valeur par défaut est <see langword="False" />.</param>
        <param name="connectionTimeout">Intervalle de délai d’expiration en millisecondes. Valeur par défaut est 100 secondes.</param>
        <param name="onUserCancel">Action à prendre lorsque l’utilisateur clique sur **Annuler**. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Envoie le fichier spécifié à l’adresse de l’hôte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `showUI` a la valeur `True`, une boîte de dialogue affiche la progression de l’opération et inclut un **Annuler** bouton l’utilisateur peut cliquer pour annuler l’opération. La boîte de dialogue n’étant pas modale, elle ne bloque pas l’entrée utilisateur et les autres fenêtres dans le programme.  
  
 Si le serveur ne répond pas dans l’intervalle spécifié dans `connectionTimeout`, l’opération est annulée et une exception est levée.  
  
 `My.Computer.Network.UploadFile` sorties des informations de traçage lorsque vous activez le traçage réseau dans votre application. Pour plus d’informations, consultez [le traçage réseau de l’activation](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Le protocole FTP envoie des informations, y compris les mots de passe en texte brut et ne doit pas être utilisé pour transmettre des informations sensibles.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Network.UploadFile` (méthode).  
  
|À|Voir|  
|-|-|  
|Charger un fichier|[Guide pratique pour charger un fichier](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Cet exemple télécharge le fichier `Order.txt` à `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Cet exemple charge le fichier `Order.txt` sur `http://www.cohowinery.com/uploads` sans fournir de nom d’utilisateur ou de mot de passe, affiche la progression du chargement, et présente un délai d’attente de 500 millisecondes.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> n’inclut pas un nom de fichier.</exception>
        <exception cref="T:System.Security.SecurityException">Utilisateur ne dispose pas des autorisations nécessaires pour effectuer une opération de réseau.</exception>
        <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le texte spécifié <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">La demande est refusée par le serveur web cible.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Contrôle la possibilité d’accéder aux fichiers et dossiers. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Contrôle les autorisations relatives aux interfaces utilisateur et au Presse-papiers. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Contrôle les droits d’accès aux ressources HTTP Internet. Énumération associée : <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Procédure : télécharger un fichier en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Procédure : analyser des chemins d’accès dans Visual Basic</related>
      </Docs>
    </Member>
  </Members>
</Type>