<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ac639919ee79ffda2953f4722c072b9004a5075" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65155892" /></Metadata><TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une propriété et une méthode permettant d’accéder aux ports série de l’ordinateur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports` objet fournit un point d’entrée simple pour accéder à la [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] classe du port série, <xref:System.IO.Ports.SerialPort>.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Ports` objet.  
  
|À|Voir|  
|-|-|  
|Utiliser un modem attaché à un port série|[Guide pratique pour passer des appels avec des modems attachés aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Envoyer une chaîne à un port série|[Guide pratique pour envoyer des chaînes aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recevoir des chaînes à partir d’un port série|[Guide pratique pour recevoir des chaînes provenant des ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|Afficher les ports séries disponibles|[Guide pratique pour afficher les ports série disponibles](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d'informations, voir [Procédure : Envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procédure : passer des appels avec des modems attachés aux ports série dans Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procédure : envoyer des chaînes aux ports série en Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procédure : recevoir des chaînes provenant des ports série en Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Procédure : afficher les ports série disponibles en Visual Basic</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée et ouvre un <see cref="T:System.IO.Ports.SerialPort" /> objet.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatoire. Nom du port à ouvrir.</param>
        <summary>Crée et ouvre un <see cref="T:System.IO.Ports.SerialPort" /> objet.</summary>
        <returns>Une ouverture <see cref="T:System.IO.Ports.SerialPort" /> objet, configuré avec les arguments fournis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports.OpenSerialPort` méthode crée et ouvre un <xref:System.IO.Ports.SerialPort> objet. Les arguments de la `OpenSerialPort` méthode déterminent les paramètres de la <xref:System.IO.Ports.SerialPort> objet.  
  
 Votre code doit fermer le <xref:System.IO.Ports.SerialPort> de l’objet lorsqu’il est terminé à l’aide de l’objet. Vous pouvez utiliser la <xref:System.IO.Ports.SerialPort.Close%2A> méthode pour fermer l’objet explicitement ou `Using` instruction à fermer implicitement. Consultez l’exemple dans cette rubrique pour plus d’informations.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Ports.OpenSerialPort` (méthode).  
  
|À|Voir|  
|-|-|  
|Utiliser un modem attaché à un port série|[Guide pratique pour passer des appels avec des modems attachés aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Envoyer une chaîne au port série|[Guide pratique pour envoyer des chaînes aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recevoir des chaînes à partir d’un port série|[Guide pratique pour recevoir des chaînes provenant des ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d'informations, voir [Procédure : Envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procédure : passer des appels avec des modems attachés aux ports série dans Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procédure : envoyer des chaînes aux ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procédure : recevoir des chaînes provenant des ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using, instruction (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatoire. Nom du port à ouvrir.</param>
        <param name="baudRate"><see langword="Integer" />. Débit en bauds du port.</param>
        <summary>Crée et ouvre un <see cref="T:System.IO.Ports.SerialPort" /> objet.</summary>
        <returns>Une ouverture <see cref="T:System.IO.Ports.SerialPort" /> objet, configuré avec les arguments fournis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports.OpenSerialPort` méthode crée et ouvre un <xref:System.IO.Ports.SerialPort> objet. Les arguments de la `OpenSerialPort` méthode déterminent les paramètres de la <xref:System.IO.Ports.SerialPort> objet.  
  
 Votre code doit fermer le <xref:System.IO.Ports.SerialPort> de l’objet lorsqu’il est terminé à l’aide de l’objet. Vous pouvez utiliser la <xref:System.IO.Ports.SerialPort.Close%2A> méthode pour fermer l’objet explicitement ou `Using` instruction à fermer implicitement. Consultez l’exemple dans cette rubrique pour plus d’informations.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Ports.OpenSerialPort` (méthode).  
  
|À|Voir|  
|-|-|  
|Utiliser un modem attaché à un port série|[Guide pratique pour passer des appels avec des modems attachés aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Envoyer une chaîne au port série|[Guide pratique pour envoyer des chaînes aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recevoir des chaînes à partir d’un port série|[Guide pratique pour recevoir des chaînes provenant des ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d'informations, voir [Procédure : Envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> est inférieur ou égal à zéro.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procédure : passer des appels avec des modems attachés aux ports série dans Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procédure : envoyer des chaînes aux ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procédure : recevoir des chaînes provenant des ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using, instruction (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatoire. Nom du port à ouvrir.</param>
        <param name="baudRate"><see langword="Integer" />. Débit en bauds du port.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Parité du port.</param>
        <summary>Crée et ouvre un <see cref="T:System.IO.Ports.SerialPort" /> objet.</summary>
        <returns>Une ouverture <see cref="T:System.IO.Ports.SerialPort" /> objet, configuré avec les arguments fournis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports.OpenSerialPort` méthode crée et ouvre un <xref:System.IO.Ports.SerialPort> objet. Les arguments de la `OpenSerialPort` méthode déterminent les paramètres de la <xref:System.IO.Ports.SerialPort> objet.  
  
 Votre code doit fermer le <xref:System.IO.Ports.SerialPort> de l’objet lorsqu’il est terminé à l’aide de l’objet. Vous pouvez utiliser la <xref:System.IO.Ports.SerialPort.Close%2A> méthode pour fermer l’objet explicitement ou `Using` instruction à fermer implicitement. Consultez l’exemple dans cette rubrique pour plus d’informations.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Ports.OpenSerialPort` (méthode).  
  
|À|Voir|  
|-|-|  
|Utiliser un modem attaché à un port série|[Guide pratique pour passer des appels avec des modems attachés aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Envoyer une chaîne au port série|[Guide pratique pour envoyer des chaînes aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recevoir des chaînes à partir d’un port série|[Guide pratique pour recevoir des chaînes provenant des ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d'informations, voir [Procédure : Envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> ne fait pas partie de la <see cref="T:System.IO.Ports.Parity" /> valeurs d’énumération.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procédure : passer des appels avec des modems attachés aux ports série dans Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procédure : envoyer des chaînes aux ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procédure : recevoir des chaînes provenant des ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using, instruction (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataBits" Type="System.Int32" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatoire. Nom du port à ouvrir.</param>
        <param name="baudRate"><see langword="Integer" />. Débit en bauds du port.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Parité du port.</param>
        <param name="dataBits"><see langword="Integer" />. Paramètre de bit de données du port.</param>
        <summary>Crée et ouvre un <see cref="T:System.IO.Ports.SerialPort" /> objet.</summary>
        <returns>Une ouverture <see cref="T:System.IO.Ports.SerialPort" /> objet, configuré avec les arguments fournis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports.OpenSerialPort` méthode crée et ouvre un <xref:System.IO.Ports.SerialPort> objet. Les arguments de la `OpenSerialPort` méthode déterminent les paramètres de la <xref:System.IO.Ports.SerialPort> objet.  
  
 Votre code doit fermer le <xref:System.IO.Ports.SerialPort> de l’objet lorsqu’il est terminé à l’aide de l’objet. Vous pouvez utiliser la <xref:System.IO.Ports.SerialPort.Close%2A> méthode pour fermer l’objet explicitement ou `Using` instruction à fermer implicitement. Consultez l’exemple dans cette rubrique pour plus d’informations.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Ports.OpenSerialPort` (méthode).  
  
|À|Voir|  
|-|-|  
|Utiliser un modem attaché à un port série|[Guide pratique pour passer des appels avec des modems attachés aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Envoyer une chaîne au port série|[Guide pratique pour envoyer des chaînes aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recevoir des chaînes à partir d’un port série|[Guide pratique pour recevoir des chaînes provenant des ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d'informations, voir [Procédure : Envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" /> ne fait pas partie de la <see cref="T:System.IO.Ports.Parity" /> valeurs d’énumération.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procédure : passer des appels avec des modems attachés aux ports série dans Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procédure : envoyer des chaînes aux ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procédure : recevoir des chaînes provenant des ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using, instruction (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="baudRate" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataBits" Type="System.Int32" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Obligatoire. Nom du port à ouvrir.</param>
        <param name="baudRate"><see langword="Integer" />. Débit en bauds du port.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Parité du port.</param>
        <param name="dataBits"><see langword="Integer" />. Paramètre de bit de données du port.</param>
        <param name="stopBits"><see cref="T:System.IO.Ports.StopBits" />. Paramètre de bit d’arrêt du port.</param>
        <summary>Crée et ouvre un <see cref="T:System.IO.Ports.SerialPort" /> objet.</summary>
        <returns>Une ouverture <see cref="T:System.IO.Ports.SerialPort" /> objet, configuré avec les arguments fournis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports.OpenSerialPort` méthode crée et ouvre un <xref:System.IO.Ports.SerialPort> objet. Les arguments de la `OpenSerialPort` méthode déterminent les paramètres de la <xref:System.IO.Ports.SerialPort> objet.  
  
 Votre code doit fermer le <xref:System.IO.Ports.SerialPort> de l’objet lorsqu’il est terminé à l’aide de l’objet. Vous pouvez utiliser la <xref:System.IO.Ports.SerialPort.Close%2A> méthode pour fermer l’objet explicitement ou `Using` instruction à fermer implicitement. Consultez l’exemple dans cette rubrique pour plus d’informations.  
  
 Le tableau suivant répertorie des exemples de tâches impliquant la `My.Computer.Ports.OpenSerialPort` (méthode).  
  
|À|Voir|  
|-|-|  
|Utiliser un modem attaché à un port série|[Guide pratique pour passer des appels avec des modems attachés aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Envoyer une chaîne au port série|[Guide pratique pour envoyer des chaînes aux ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Recevoir des chaînes à partir d’un port série|[Guide pratique pour recevoir des chaînes provenant des ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple explique comment envoyer des chaînes à l’ordinateur `COM1` port série.  
  
 Le bloc `Using` permet à l’application de fermer le port série, même si cela génère une exception. Tout le code qui manipule le port série doit apparaître dans ce bloc, ou dans un `Try...Catch...Finally` bloc avec un appel à utiliser le <xref:System.IO.Ports.SerialPort.Close%2A> (méthode).  
  
 La méthode <xref:System.IO.Ports.SerialPort.WriteLine%2A> envoie les données au port série.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Pour plus d'informations, voir [Procédure : Envoyer des chaînes aux Ports série](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="stopBits" /> ne fait pas partie de la <see cref="T:System.IO.Ports.StopBits" /> valeurs d’énumération.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Procédure : passer des appels avec des modems attachés aux ports série dans Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Procédure : envoyer des chaînes aux ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Procédure : recevoir des chaînes provenant des ports série en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using, instruction (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection des noms des ports série sur l’ordinateur.</summary>
        <value>Collection des noms des ports série sur l’ordinateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `My.Computer.Ports.SerialPortNames` propriété obtient une collection des noms des ports série sur l’ordinateur.  
  
> [!NOTE]
>  Les noms de port retournés par `My.Computer.Ports.SerialPortNames` peuvent ne pas être corrects sur Windows 98. Pour éviter les erreurs d’application, utilisez la gestion des exceptions, comme les instructions `Try...Catch...Finally` et `Using`, lorsque vous utilisez les noms de ports pour ouvrir des ports.  
  
 Le tableau suivant répertorie un exemple de tâche impliquant la `My.Computer.Ports.SerialPortNames` propriété.  
  
|À|Voir|  
|-|-|  
|Afficher les ports séries disponibles|[Guide pratique pour afficher les ports série disponibles](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilité par Type de projet  
  
|Type de projet|Disponible|  
|-|-|  
|Application Windows|**Oui**|  
|Bibliothèque de classes|**Oui**|  
|Application console|**Oui**|  
|Bibliothèque de contrôles Windows|**Oui**|  
|Bibliothèque de contrôles Web|Non|  
|Service Windows|**Oui**|  
|Site web|Non|  
  
   
  
## Examples  
 Cet exemple exécute une boucle sur toutes les chaînes retournées par la propriété `My.Computer.Ports.SerialPortNames`. Ces chaînes correspondent aux noms des ports série disponibles sur l’ordinateur.  
  
 En règle générale, un utilisateur sélectionne le port série que l’application doit utiliser dans la liste des ports disponibles. Dans cet exemple, les noms de port série sont stockés dans un contrôle <xref:System.Windows.Forms.ListBox>. Pour plus d’informations, consultez [ListBox Control](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 Cet exemple nécessite :  
  
-   une référence à l'espace de noms <xref:System?displayProperty=nameWithType>.  
  
-   Votre formulaire doit avoir un contrôle <xref:System.Windows.Forms.ListBox> nommé `ListBox1`.  
  
 Pour plus d'informations, voir [Procédure : afficher les ports série disponibles](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objets (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Procédure : afficher les ports série disponibles en Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">Try...Catch...Finally, instruction (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using, instruction (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>